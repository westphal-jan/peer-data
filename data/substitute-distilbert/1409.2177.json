{"id": "1409.2177", "review": {"conference": "NIPS", "VERSION": "v1", "DATE_OF_SUBMISSION": "7-Sep-2014", "title": "The Large Margin Mechanism for Differentially Private Maximization", "abstract": "a basic problem in the design of wealth - preserving algorithms is the private maximization problem : the goal is finally pick someone item from a universe that ( approximately ) maximizes a data - dependent function, all under the constraint of differential privacy. this problem has been used providing a sub - routine in many measure - preserving algorithms particularly genetics and machine - learning.", "histories": [["v1", "Sun, 7 Sep 2014 23:51:00 GMT  (22kb)", "http://arxiv.org/abs/1409.2177v1", null]], "reviews": [], "SUBJECTS": "cs.LG cs.DS cs.IT math.IT math.ST stat.TH", "authors": ["kamalika chaudhuri", "daniel j hsu", "shuang song"], "accepted": true, "id": "1409.2177"}, "pdf": {"name": "1409.2177.pdf", "metadata": {"source": "CRF", "title": "The Large Margin Mechanism for Differentially Private Maximization", "authors": ["Kamalika Chaudhuri", "Daniel Hsu", "Shuang Song"], "emails": ["kamalika@cs.ucsd.edu,", "djhsu@cs.columbia.edu,", "shs037@eng.ucsd.edu"], "sections": [{"heading": null, "text": "ar X\niv :1\n40 9.\n21 77\nv1 [\ncs .L\nG ]\n7 S\nPrevious algorithms for this problem are either range-dependent\u2014i.e., their utility diminishes with the size of the universe\u2014or only apply to very restricted function classes. This work provides the first general-purpose, range-independent algorithm for private maximization that guarantees approximate differential privacy. Its applicability is demonstrated on two fundamental tasks in data mining and machine learning."}, {"heading": "1 Introduction", "text": "Differential privacy [17] is a cryptographically-motivated definition of privacy that has recently gained significant attention in the data mining and machine learning communities. An algorithm for processing sensitive data enforces differential privacy by ensuring that the likelihood of any outcome does not change by much when a single individual\u2019s private data changes. Privacy is typically guaranteed by adding noise either to the sensitive data, or to the output of an algorithm that processes the sensitive data. For many machine learning tasks, this leads to a corresponding degradation in accuracy or utility. Thus a central challenge in differentially private learning is to design algorithms with better tradeoffs between privacy and utility for a wide variety of statistics and machine learning tasks.\nIn this paper, we study the private maximization problem, a fundamental problem that arises while designing privacy-preserving algorithms for a number of statistical and machine learning applications. We are given a sensitive dataset D \u2286 Xn comprised of records from n individuals. We are also given a datadependent objective function f : U \u00d7Xn \u2192 R, where U is a universe of K items to choose from, and f(i, \u00b7) is (1/n)-Lipschitz for all i \u2208 U . That is, |f(i,D\u2032)\u2212f(i,D\u2032\u2032)| \u2264 1/n for all i and for any D\u2032, D\u2032\u2032 \u2208 Xn differing in just one individual\u2019s entry. Always selecting an item that exactly maximizes f(\u00b7, D) is generally non-private, so the goal is to select, in a differentially private manner, an item i \u2208 U with as high an objective f(i,D) as possible. This is a very general algorithmic problem that arises in many applications, include private PAC learning [25] (choosing the most accurate classifier), private decision tree induction [21] (choosing the most informative split), private frequent itemset mining [5] (choosing the most frequent itemset), private validation [12] (choosing the best tuning parameter), and private multiple hypothesis testing [32] (choosing the most likely hypothesis).\nE-mail: kamalika@cs.ucsd.edu, djhsu@cs.columbia.edu, shs037@eng.ucsd.edu\nThe most common algorithms for this problem are the exponential mechanism [28], and a computationally efficient alternative from [5], which we call the max-of-Laplaces mechanism. These algorithms are general\u2014 they do not require any additional conditions on f to succeed\u2014and hence have been widely applied. However, a major limitation of both algorithms is that their utility suffers from an explicit range-dependence: the utility deteriorates with increasing universe size. The range-dependence persists even when there is a single clear maximizer of f(\u00b7, D), or a few near maximizers, and even when the maximizer remains the same after changing the entries of a large number of individuals in the data. Getting around range-dependence has therefore been a goal for designing algorithms for this problem.\nThis problem has also been addressed by recent algorithms of [3, 31], who provide algorithms that are range-independent and satisfy approximate differential privacy, a relaxed version of differential privacy. However, none of these algorithms is general; they explicitly fail unless additional special conditions on f hold. For example, the algorithm from [31] provides a range-independent result only when there is a single clear maximizer i\u2217 such that f(i\u2217, D) is greater than the second highest value by some margin; the algorithm from [3] also has restrictive conditions that limit its applicability (see Section 2.2). Thus, a challenge is to develop a private maximization algorithm that is both range-independent and free of additional conditions; this is necessary to ensure that an algorithm is widely applicable and provides good utility when the universe size is large.\nIn this work, we provide the first such general purpose range-independent private maximization algorithm. Our algorithm is based on two key insights. The first is that private maximization is easier when there is a small set of near maximizing items j \u2208 U for which f(j,D) is close to the maximum value maxi\u2208U f(i,D). A plausible algorithm based on this insight is to first find a set of near maximizers, and then run the exponential mechanism on this set. However, finding this set directly in a differentially private manner is very challenging. Our second insight is that only the number \u2113 of near maximizers needs to be found in a differentially private manner \u2013 a task that is considerably easier. Provided there is a margin between the maximum value and the (\u2113 + 1)-th maximum value of f(i,D), running the exponential mechanism on the items with the top \u2113 values of f(i,D) results in approximate differential privacy as well as good utility.\nOur algorithm, which we call the large margin mechanism, automatically exploits large margins when they exist to simultaneously (i) satisfy approximate differential privacy (Theorem 2), as well as (ii) provide a utility guarantee that depends (logarithmically) only on the number of near maximizers, rather than the universe size (Theorem 3). We complement our algorithm with a lower bound, showing that the utility of any approximate differentially private algorithm must deteriorate with the number of near maximizers (Theorem 1). A consequence of our lower bound is that range-independence cannot be achieved with pure differential privacy (Proposition 1), which justifies our relaxation to approximate differential privacy.\nFinally, we show the applicability of our algorithm to two problems from data mining and machine learning: frequent itemset mining and private PAC learning. For the first problem, an application of our method gives the first algorithm for frequent itemset mining that simultaneously guarantees approximate differential privacy and utility independent of the itemset universe size. For the second problem, our algorithm achieves tight sample complexity bounds for private PAC learning analogous to the shell bounds of [26] for non-private learning."}, {"heading": "2 Background", "text": "This section reviews differential privacy and introduces the private maximization problem."}, {"heading": "2.1 Definitions of Differential Privacy and Private Maximization", "text": "For the rest of the paper, we consider randomized algorithms A : Xn \u2192 \u2206(S) that take as input datasets D \u2208 Xn comprised of records from n individuals, and output values in a range S. Two datasets D,D\u2032 \u2208 Xn are said to be neighbors if they differ in a single individual\u2019s entry. A function \u03c6 : Xn \u2192 R is L-Lipschitz if |\u03c6(D) \u2212 \u03c6(D\u2032)| \u2264 L for all neighbors D,D\u2032 \u2208 Xn.\nThe following definitions of (approximate) differential privacy are from [17] and [20].\nDefinition 1 (Differential Privacy). A randomized algorithmA : Xn \u2192 \u2206(S) is said to be (\u03b1, \u03b4)-approximate differentially private if, for all neighbors D,D\u2032 \u2208 Xn and all S \u2286 S,\nPr(A(D) \u2208 S) \u2264 e\u03b1 Pr(A(D\u2032) \u2208 S) + \u03b4.\nThe algorithm A is \u03b1-differentially private if it is (\u03b1, 0)-approximate differentially private.\nSmaller values of the privacy parameters \u03b1 > 0 and \u03b4 \u2208 [0, 1] imply stronger guarantees of privacy.\nDefinition 2 (Private Maximization). In the private maximization problem, a sensitive dataset D \u2286 Xn comprised of records from n individuals is given as input; there is also a universe U := {1, . . . ,K} of K items, and a function f : U \u00d7Xn \u2192 R such that f(i, \u00b7) is (1/n)-Lipschitz for all i \u2208 U . The goal is to return an item i \u2208 U such that f(i,D) is as large as possible while satisfying (approximate) differential privacy.\nAlways returning the exact maximizer of f(\u00b7, D) is non-private, as changing a single individuals\u2019 private values can potentially change the maximizer. Our goal is to design a randomized algorithm that outputs an approximate maximizer with high probability. (We loosely refer to the expected f(\u00b7, D) value of the chosen item as the utility of the algorithm.)\nNote that this problem is different from private release of the maximum value of f(\u00b7, D); a solution for the latter is easily obtained by adding Laplace noise with standard deviation O(1/(\u03b1n)) to maxi\u2208U f(i,D) [17]. Privately returning a nearly maximizing item itself is much more challenging.\nPrivate maximization is a core problem in the design of differentially private algorithms, and arises in numerous statistical and machine learning tasks. The examples of frequent itemset mining and PAC learning are discussed in Sections 4.1 and 4.2."}, {"heading": "2.2 Previous Algorithms for Private Maximization", "text": "The standard algorithm for private maximization is the exponential mechanism [28]. Given a privacy parameter \u03b1 > 0, the exponential mechanism randomly draws an item i \u2208 U with probability pi \u221d en\u03b1f(i,D)/2; this guarantees \u03b1-differential privacy. While the exponential mechanism is widely used because of its generality, a major limitation is its range-dependence\u2014i.e., its utility diminishes with the universe size K. To be more precise, consider the following example where X := U = [K] and\nf(i,D) := 1\nn |{j \u2208 [n] : Dj \u2265 i}| (1)\n(where Dj is the j-th entry in the dataset D). When D = (1, 1, . . . , 1), there is a clear maximizer i \u2217 = 1, which only changes when the entries of at least n/2 individuals in D change. It stands to reason that any algorithm should report i = 1 in this case with high probability. However, the exponential mechanism outputs i = 1 only with probability en\u03b1/2/(K \u2212 1 + en\u03b1/2), which is small unless n = \u2126(log(K)/\u03b1). This implies that the utility of the exponential mechanism deteriorates with K.\nAnother general purpose algorithm is the max-of-Laplaces mechanism from [5]. Unfortunately, this algorithm is also range-dependent. Indeed, our first observation is that all \u03b1-differentially private algorithms that succeed on a wide class of private maximization problems share this same drawback.\nProposition 1 (Lower bound for differential privacy). Let A be any \u03b1-differentially private algorithm for private maximization, \u03b1 \u2208 (0, 1), and n \u2265 2. There exists a domain X , a function f : U \u00d7Xn \u2192 R such that f(i, \u00b7) is (1/n)-Lipschitz for all i \u2208 U , and a dataset D \u2208 Xn such that:\nPr ( f(A(D), D) > max\ni\u2208U f(i,D)\u2212 log\nK\u22121 2\n\u03b1n\n) < 1\n2 .\nWe remark that results similar to Proposition 1 have appeared in [2, 7, 10, 11, 23]; we simply re-frame those results here in the context of private maximization.\nProposition 1 implies that in order to remove range-dependence, we need to relax the privacy notion. We consider a relaxation of the privacy constraint to (\u03b1, \u03b4)-approximate differential privacy with \u03b4 > 0.\nThe approximate differentially private algorithm from [31] applies in the case where there is a single clear maximizer whose value is much larger than that of the rest. This algorithm adds Laplace noise with standard deviation O(1/(\u03b1n)) to the difference between the largest and the second-largest values of f(\u00b7, D), and outputs the maximizer if this noisy difference is larger than O(log(1/\u03b4)/(\u03b1n)); otherwise, it outputs Fail. Although this solution has high utility for the example in (1) with D = (1, 1, . . . , 1), it fails even when there is a single additional item j \u2208 U with f(j,D) close to the maximum value; for instance, D = (2, 2, . . . , 2).\n[3] provides an approximate differentially private algorithm that applies when f satisfies a condition called \u2113-bounded growth. This condition entails the following: first, for any i \u2208 U , adding a single individual to any dataset D can either keep f(i,D) constant, or increase it by 1/n; and second, f(i,D) can only increase in this case for at most \u2113 items i \u2208 U . The utility of this algorithm depends only on log \u2113, rather than logK. In contrast, our algorithm does not require the first condition. Furthermore, to ensure that our algorithm only depends on log \u2113, it suffices that there only be \u2264\u2113 near maximizers, which is substantially less restrictive than the \u2113-bounded growth condition.\nAs mentioned earlier, we avoid range-dependence with an algorithm that finds and optimizes over near maximizers of f(\u00b7, D). We next specify what we mean by near maximizers using a notion of margin."}, {"heading": "3 The Large Margin Mechanism", "text": "We now our new algorithm for private maximization, called the large margin mechanism, along with its privacy and utility guarantees."}, {"heading": "3.1 Margins", "text": "We first introduce the notion of margin on which our algorithm is based. Given an instance of the private maximization problem and a positive integer \u2113 \u2208 N, let f (\u2113)(D) denote the \u2113-th highest value of f(\u00b7, D). We adopt the convention that f (K+1)(D) = \u2212\u221e.\nCondition 1 ((\u2113, \u03b3)-margin condition). For any \u2113 \u2208 N and \u03b3 > 0, we say a dataset D \u2208 Xn satisfies the (\u2113, \u03b3)-margin condition if f (\u2113+1)(D) < f (1)(D)\u2212 \u03b3 (i.e., there are at most \u2113 items within \u03b3 of the top item according to f(\u00b7, D)).1\nBy convention, every dataset satisfies the (K, \u03b3)-margin condition. Intuitively, a (\u2113, \u03b3)-margin condition with a relatively large \u03b3 implies that there are \u2264\u2113 near maximizers, so the private maximization problem is easier when D satisfies an (\u2113, \u03b3)-margin condition with small \u2113.\nHow large should \u03b3 be for a given \u2113? The following lower bound suggests that in order to have n = O(log(\u2113)/\u03b1), we need \u03b3 to be roughly log(\u2113)/(\u03b1n).\nTheorem 1 (Lower bound for approximate differential privacy). Fix any \u03b1 \u2208 (0, 1), \u2113 > 1, and \u03b4 \u2208 [0, (1 \u2212 exp(\u2212\u03b1))/(2(\u2113 \u2212 1))]; and assume n \u2265 2. Let A be any (\u03b1, \u03b4)-approximate differentially private algorithm, and \u03b3 := min{1/2, log((\u2113 \u2212 1)/2)/(n\u03b1)}. There exists a domain X , a function f : U \u00d7 Xn \u2192 R such that f(i, \u00b7) is (1/n)-Lipschitz for all i \u2208 U , and a dataset D \u2208 Xn such that:\n1. D satisfies the (\u2113, \u03b3)-margin condition. 2. Pr ( f(A(D), D) > f (1)(D)\u2212 \u03b3 ) < 1\n2 .\n1Our notion of margins here is different from the usual notion of margins from statistical learning that underlies linear prediction methods like support vector machines and boosting. In fact, our notion is more closely related to the shell decomposition bounds of [26], which we discuss in Section 4.2.\nAlgorithm 1 The large margin mechanism lmm(\u03b1, \u03b4,D) input Privacy parameters \u03b1 > 0 and \u03b4 \u2208 (0, 1), database D \u2208 Xn. output Item I \u2208 U . 1: For each r = 1, 2, . . . ,K, let\nt(r) := 6\nn\n( 1 + ln(3r/\u03b4)\n\u03b1\n) = O ( 1\nn +\n1\nn\u03b1 log\nr\n\u03b4\n) ,\nT (r) := 3\nn\u03b1 ln\n3\n2\u03b4 +\n6\nn\u03b1 ln\n3 \u03b4 + 12 n\u03b1 ln 3r(r + 1) \u03b4 + t(r) = O\n( 1\nn +\n1\nn\u03b1 log\nr\n\u03b4\n) .\n2: Draw Z \u223c Lap(3/\u03b1). 3: Let m := f (1)(D) + Z/n. {Estimate of max value.} 4: Draw G \u223c Lap(6/\u03b1) and Z1, Z2, . . . , ZK\u22121 iid\u223c Lap(12/\u03b1). 5: Let \u2113 := 1. {Adaptively determine value \u2113 such that D satisfies (\u2113, t(\u2113))-margin condition.} 6: while \u2113 < K do 7: if m\u2212 f (\u2113+1)(D) > (Z\u2113 +G)/n+ T (\u2113) then 8: Break out of while-loop with current value of \u2113. 9: else\n10: Let \u2113 := \u2113+ 1. 11: end if 12: end while 13: Let U\u2113 be the set of \u2113 items in U with highest f(i,D) value (ties broken arbitrarily). 14: Draw I \u223c p where pi \u221d 1{i \u2208 U\u2113} exp(n\u03b1f(i,D)/6). {Exponential mechanism on top \u2113 items.} 15: return I.\nA consequence of Theorem 1 is that complete range-independence for all (1/n)-Lipschitz functions f is not possible, even with approximate differential privacy. For instance, if D satisfies an (\u2113,\u2126(log(\u2113)/(\u03b1n)))margin condition only when \u2113 = \u2126(K), then nmust be \u2126(log(K)/\u03b1) in order for an approximate differentially private algorithm to be useful."}, {"heading": "3.2 Algorithm", "text": "The lower bound in Theorem 1 suggests the following algorithm. First, privately determine a pair (\u2113, \u03b3), with \u2113 is as small as possible and \u03b3 = \u2126(log(\u2113)/(\u03b1n)), such that D satisfies the (\u2113, \u03b3)-margin condition. Then, run the exponential mechanism on the set U\u2113 \u2286 U of items with the \u2113 highest f(\u00b7, D) values. This sounds rather natural and simple, but a knee-jerk reaction to this approach is that the set U\u2113 itself depends on the sensitive dataset D, and it may have high sensitivity in the sense that membership of many items in U\u2113 can change when a single individual\u2019s private value is changed. Thus differentially private computation of U\u2113 appears challenging.\nIt turns out we do not need to guarantee the privacy of the set U\u2113, but rather just of a valid (\u2113, \u03b3) pair. This is essentially because when D satisfies the (\u2113, \u03b3)-margin condition, the probability that the exponential mechanism picks an item i that occurs in U\u2113 when the sensitive dataset is D but not in U\u2113 when the sensitive dataset is its neighbor D\u2032 is very small.\nMoreover, we can find such a valid (\u2113, \u03b3) pair using a differentially private search procedure based on the sparse vector technique [22]. Combining these ideas gives a general (and adaptive) algorithm whose loss of utility due to privacy is only O(log(\u2113/\u03b4)/\u03b1n) when the dataset satisfies a (\u2113, O(log(\u2113/\u03b4)/(\u03b1n))-margin condition. We call this general algorithm the large margin mechanism (Algorithm 1), or lmm for short."}, {"heading": "3.3 Privacy and Utility Guarantees", "text": "We first show that lmm satisfies approximate differential privacy.\nTheorem 2 (Privacy guarantee). lmm(\u03b1, \u03b4, \u00b7) satisfies (\u03b1, \u03b4)-approximate differential privacy.\nThe proof of Theorem 2 is in Appendix A. The following theorem, proved in Appendix B, provides a guarantee on the utility of lmm.\nTheorem 3 (Utility guarantee). Pick any \u03b7 \u2208 (0, 1). Suppose D \u2208 Xn satisfies the (\u2113\u2217, \u03b3\u2217)-margin condition with\n\u03b3\u2217 = 21\nn\u03b1 ln\n3 \u03b7 + T (\u2113 \u2217).\nThen with probability at least 1\u2212 \u03b7, I := lmm(\u03b1, \u03b4,D) satisfies\nf(I,D) \u2265 f (1)(D)\u2212 6 ln(2\u2113 \u2217/\u03b7)\nn\u03b1 .\n(Above, T (\u2113 \u2217) is as defined in Algorithm 1.)\nRemark 1. Fix some \u03b1, \u03b4 \u2208 (0, 1). Theorem 3 states that if the dataset D satisfies the (\u2113\u2217, \u03b3\u2217)-margin condition, for some positive integer \u2113\u2217 and \u03b3\u2217 = C log(\u2113\u2217/\u03b4)/(n\u03b1) for some universal constant C > 0, then the value f(I,D) of the item I returned by lmm is within O(log(\u2113\u2217)/(n\u03b1)) of the maximum, with high probability. There is no explicit dependence on the cardinality K of the universe U ."}, {"heading": "4 Illustrative Applications", "text": "We now describe applications of lmm to problems from data mining and machine learning."}, {"heading": "4.1 Private Frequent Itemset Mining", "text": "Frequent Itemset Mining (FIM) is the following popular data mining problem: given the purchase lists of users (say, for an online grocery store), the goal is to find the sets of items that are purchased together most often. The work of [5] provides the first differentially private algorithms for FIM. However, as these algorithms rely on the exponential mechanism and the max-of-Laplaces mechanism, their utilities degrade with the total number of possible itemsets. Subsequent algorithms exploit other properties of itemsets or avoid directly finding the most frequent itemset [8, 15, 27, 34].\nLet I be the set of items that can be purchased, and let B be the maximum length of an user\u2019s purchase list. Let U \u2286 2I be the family of itemsets of interest. For simplicity, we let U := ( I r ) \u2014i.e., all itemsets of size r\u2014and consider the problem of picking the itemset with the (approximately) highest frequency. This is a private maximization problem where D is the users\u2019 lists of purchased items, and f(i,D) is the fraction of users who purchase an itemset i \u2208 U . Let fmax be the highest frequency of an itemset in D. Let L be the total number of itemsets with non-zero frequency, so L \u2264 n ( B r ) , which is \u226a |I|r whenever B \u226a |I|. Applying lmm gives the following guarantee.\nCorollary 1. Suppose we use lmm(\u03b1, \u03b4, \u00b7) on the FIM problem above. Then there exists a constant C > 0 such that the following holds. If fmax \u2265 C \u00b7 log(L/\u03b4)/(n\u03b1), then with probability \u2265 1 \u2212 \u03b4, the frequency of the itemset Ilmm output by lmm is\nf(Ilmm, D) \u2265 fmax \u2212O ( log(L/\u03b4)\nn\u03b1\n) .\nIn contrast, the itemset IEM returned by the exponential mechanism is only guaranteed to satisfy\nf(IEM, D) \u2265 fmax \u2212O ( r log(|I|/\u03b4)\nn\u03b1\n) ,\nwhich is significantly worse than Corollary 1 whenever L \u226a |I|r (as is typically the case). Second, to ensure differential privacy by running the exponential mechanism, one needs a priori knowledge of the set U (and thus the universe of items I) independently of the observed data; otherwise the process will not be end-toend differentially private. In contrast, our algorithm does not need to know I in order to provide end-to-end differential privacy. Finally, unlike [31], our algorithm does not require a gap between the top two itemset frequencies."}, {"heading": "4.2 Private PAC Learning", "text": "We now consider private PAC learning with a finite hypothesis class H with bounded VC dimension d [25]. Here, the dataset D consists of n labeled training examples drawn iid from a fixed distribution. The error err(h) of a hypothesis h \u2208 H is the probability that it misclassifies a random example drawn from the same distribution. The goal is to return a hypothesis h \u2208 H with error as low as possible. A standard procedure that has been well-studied in the literature simply returns the minimizer h\u0302 \u2208 H of the empirical error e\u0302rr(h,D) computed on the training data D, but this does not guarantee (approximate) differential privacy. The work of [25] instead uses the exponential mechanism to select a hypothesis hEM \u2208 H. With probability \u2265 1\u2212 \u03b40,\nerr(hEM) \u2264 min h\u2208H err(h) +O\n(\u221a d log(n/\u03b40)\nn + log |H|+ log(1/\u03b40) \u03b1n\n) . (2)\nThe dependence on log |H| is improved to d log |\u03a3| by [7] when the data entries come from a finite set \u03a3. The subsequent work of [4] introduces the notion of representation dimension, and shows how it relates to differentially private learning in the discrete and finite case, and [3] provides improved convergence bounds with approximate differential privacy that exploit the structure of some specific hypothesis classes. For the case of infinite hypothesis classes and continuous data distributions, [10] shows that distribution-free private PAC learning is not generally possible, but distribution-dependent learning can be achieved under certain conditions.\nWe provide a sample complexity bound of a rather different character compared to previous work. Our bound only relies on uniform convergence properties of H, and can be significantly tighter than the bounds from [25] when the number of hypotheses with error close to minh\u2208H err(h) is small. Indeed, the bounds are a private analogue of the shell bounds of [26], which characterize the structure of the hypothesis class as a function of the properties of a decomposition based on hypotheses\u2019 error rates. In many situation, these bounds are significantly tighter than those that do not involve the error distributions.\nFollowing [26], we divide the hypothesis class H into R = O( \u221a\nn/(d logn)) shells; the t-th shell H(t) is defined by\nH(t) := { h \u2208 H : err(h) \u2264 min\nh\u2032\u2208H err(h\u2032) + C0t\n\u221a d log(n/\u03b40)\nn\n} .\nAbove, C0 > 0 is the constant from uniform convergence bounds\u2014i.e., C0 is the smallest c > 0 such that for all h \u2208 H, with probability \u2265 1 \u2212 \u03b40, we have |e\u0302rr(h,D) \u2212 err(h)| \u2264 c \u221a d log(n/\u03b40)/n. Observe that H(t+ 1) \u2286 H(t); and moreover, with probability \u2265 1 \u2212 \u03b40, all h \u2208 H(t) have e\u0302rr(h,D) \u2264 minh\u2032\u2208H err(h\u2032) + C0 \u00b7 (t+ 1) \u221a d log(n/\u03b40)/n.\nLet t\u2217(n) as the smallest integer t \u2208 N such that log(|H(t+ 1)|) + log(1/\u03b4)\nt \u2264 C0\u03b1\n\u221a dn logn\nC\nwhere C > 0 is the constant from Remark 1. Then, with probability \u2265 1\u2212\u03b40, the dataset D with f = 1\u2212 e\u0302rr satisfies the (\u2113, \u03b3)-margin condition, with \u2113 = |H(t\u2217(n)+1)| and \u03b3 = C log(|H(t\u2217(n)+1)|/\u03b4)/(\u03b1n). Therefore, we have the following guarantee for applying lmm to this problem.\nCorollary 2. Suppose we use lmm(\u03b1, \u03b4, \u00b7) on the learning problem above (with U = H and f = 1 \u2212 e\u0302rr). Then, with probability \u2265 1\u2212 \u03b40 \u2212 \u03b4, the hypothesis hlmm returned by lmm satisfies\nerr(hlmm) \u2264 min h\u2208H err(h) +O\n(\u221a d log(n/\u03b40)\nn + log(|H(t\u2217(n) + 1)|/\u03b4) \u03b1n\n) .\nThe dependence on log |H| from (2) is replaced here by log(|H(t\u2217(n)+1)|/\u03b4), which can be vastly smaller, as discussed in [26]."}, {"heading": "5 Additional Related Work", "text": "There has been a large amount of work on differential privacy for a wide range of statistical and machine learning tasks over the last decade [1, 6, 13, 21, 24, 30, 33]; for overviews, see [18] and [29]. In particular, algorithms for the private maximization problem (and variants) have been used as subroutines in many applications; examples include PAC learning [25], principle component analysis [14], performance validation [12], and multiple hypothesis testing [32].\nA separation between pure and approximate differential privacy has been shown in several previous works [3, 19, 31]. The first approximate differentially private algorithm that achieves a separation is the Propose-Test-Release (PTR) framework [19]. Given a function, PTR determines an upper bound on its local sensitivity at the input dataset through a search procedure; noise proportional to this upper bound is then added to the actual function value. We note that the PTR framework does not directly apply to our setting as the sensitivity is not generally defined for a discrete universe.\nIn the context of private PAC learning, the work of [3] gives the first separation between pure and approximate differential privacy. In addition to using the algorithm from [31], they devise two additional algorithmic techniques: a concave maximization procedure for learning intervals, and an algorithm for the private maximization problem under the \u2113-bounded growth condition discussed in Section 2.2. The first algorithm is specific to their problem and does not appear to apply to general private maximization problems. The second algorithm has a sample complexity bound of n = O(log(\u2113)/\u03b1) when the function f satisfies the \u2113-bounded growth condition.\nLower bounds for approximate differential privacy have been shown by [7, 9, 11, 16], and the proof of our Theorem 1 borrows some techniques from [11]."}, {"heading": "6 Conclusion and Future Work", "text": "In this paper, we have presented the first general and range-independent algorithm for approximate differentially private maximization. The algorithm automatically adapts to the available large margin properties of the sensitive dataset, and reverts to worst-case guarantees when such properties are lacking. We have illustrated the applicability of the algorithm in two fundamental problems from data mining and machine learning; in future work, we plan to study other applications where range-independence is a substantial boon.\nAcknowledgments. We thank an anonymous reviewer for suggesting the simpler variant of lmm based on the exponential mechanism. (The original version of lmm used a max of truncated exponentials mechanism, which gives the same guarantees up to constant factors.) This work was supported in part by the NIH under U54 HL108460 and the NSF under IIS 1253942."}, {"heading": "A Privacy Analysis", "text": "In this section, we present the proof of Theorem 2. We rely on composition results for approximate differential privacy to analyze the three parts of Algorithm 1:\n\u2022 Differential privacy of releasing m after Step 3.\n\u2022 Differential privacy of releasing \u2113 after Step 12.\n\u2022 Approximate differential privacy of releasing I after Step 15.\nWe make this explicit by encapsulating these parts in Algorithm 2 (M), Algorithm 3 (S), and Algorithm 4 (A), so we can write Algorithm 1 as follows (after the definitions of T (r) and t(r)):\n1. m := M(\u03b1/3, D).\n2. \u2113 := S(\u03b1/3,m, T (1), T (2), . . . , T (K\u22121), D).\n3. I := A(\u03b1/3, \u2113,D).\nA.1 max Estimation\nThe first part of Algorithm 1 is a standard application of the Laplace mechanism; it is detailed in Algorithm 2.\nLemma 1 ([17]). M(\u03b1, \u00b7) is \u03b1-differentially private.\nLemma 2. With probability at least 1\u2212 \u03b4,\nM(\u03b1,D) \u2264 f (1)(D) + 1 n\u03b1 ln 1 2\u03b4 .\nProof. This follows from the tail properties of the Laplace distribution.\nA.2 Certifying the Margin Condition\nThe second part of Algorithm 1 is an application of the \u201csparse vector technique\u201d to certify the margin condition; it is detailed in Algorithm 3.\nLemma 3. For any m, \u03b81, \u03b82, . . . , \u03b8K\u22121 \u2208 R, S(\u03b1,m, \u03b81, \u03b82, . . . , \u03b8K\u22121, \u00b7) is \u03b1-differentially private.\nProof. This is an application of the sparse vector technique from [22] that halts as soon as the first \u201cquery\u201d is answered positively. We give the privacy analysis for completeness. For clarity, we suppress the dependence of S on all inputs except D, and define F (r+1) := m\u2212f (r+1)\u2212\u03b8r, which inherits the (1/n)-Lipschitz property from f (r+1).\nPick any neighboring datasets D and D\u2032, and pick any \u2113 \u2208 {1, 2, . . . ,K}. We use the notation Pr|G(\u00b7) for conditional probabilities where the value of G is fixed, so Pr(\u00b7) = E(Pr|G(\u00b7)), where the expectation is taken with respect to G. Observe that\nPr|G(S(D) = \u2113) = Pr|G(S(D) \u2264 \u2113|S(D) > \u2113\u2212 1) \u2113\u22121\u220f\nr=1\nPr|G(S(D) > r|S(D) > r \u2212 1). (3)\nFrom the definition of S and F (r+1),\nPr|G(S(D) > r|S(D) > r \u2212 1) = Pr|G ( F (r+1)(D) \u2264 Zr +G\nn\n) \u2200r \u2208 {1, 2, . . . , \u2113\u2212 1},\nand\nPr|G(S(D) \u2264 \u2113|S(D) > \u2113\u2212 1) = Pr|G ( F (\u2113+1)(D) > Z\u2113 +G\nn\n) .\nWrite Z1:\u2113\u22121 := (Z1, Z2, . . . , Z\u2113\u22121), and define for any g \u2208 R,\nZg(D) := { z \u2208 R\u2113\u22121 : F (r+1)(D) \u2264 zr + g\nn \u2200r \u2208 {1, 2, . . . , \u2113\u2212 1}\n} ,\nso that\n\u2113\u22121\u220f\nr=1\nPr|G(S(D) > r|S(D) > r \u2212 1) = \u2113\u22121\u220f\nr=1\nPr|G\n( F (r+1)(D) \u2264 Zr +G\nn\n)\n= Pr|G (Z1:\u2113\u22121 \u2208 ZG(D)) .\nHence, substituting into (3), we have\nPr|G(S(D) = \u2113) = Pr|G\n( F (\u2113+1)(D) > Z\u2113 +G\nn\n) Pr|G(Z1:\u2113\u22121 \u2208 ZG(D)).\nLetting p denote the density of G, we have the following chain of inequalities:\nPr(S(D) = \u2113) = E(Pr|G(S(D) = \u2113))\n=\n\u222b \u221e\n\u2212\u221e\nPr|G\n( F (\u2113+1)(D) > Z\u2113 + g\nn\n) Pr|G(Z1:\u2113\u22121 \u2208 Zg(D))p(g)dg\n\u2264 exp(\u03b1/2) \u222b \u221e\n\u2212\u221e\nPr|G\n( F (\u2113+1)(D) > Z\u2113 + g\nn\n) Pr|G(Z1:\u2113\u22121 \u2208 Zg(D))p(g + 1)dg (4)\n= exp(\u03b1/2)\n\u222b \u221e\n\u2212\u221e\nPr|G\n( F (\u2113+1)(D) >\nZ\u2113 + g \u2212 1 n\n) Pr|G(Z1:\u2113\u22121 \u2208 Zg\u22121(D))p(g)dg\n\u2264 exp(\u03b1/2) \u222b \u221e\n\u2212\u221e\nPr|G\n( F (\u2113+1)(D) >\nZ\u2113 + g \u2212 1 n\n) Pr|G(Z1:\u2113\u22121 \u2208 Zg(D\u2032))p(g)dg (5)\n\u2264 exp(\u03b1) \u222b \u221e\n\u2212\u221e\nPr|G\n( F (\u2113+1)(D\u2032) > Z\u2113 + g\nn\n) Pr|G(Z1:\u2113\u22121 \u2208 Zg(D\u2032))p(g)dg (6)\n= exp(\u03b1) Pr(S(D\u2032) = \u2113).\nTo prove (4), we use the fact p(g) \u2264 exp(\u03b1/2)p(g + 1) since p is the Laplace density with scale parameter \u03b1/2. To prove (5), observe that for all r \u2208 {1, 2, . . . , \u2113\u2212 1}, the (1/n)-Lipschitz property of F (r+1) implies\nF (r+1)(D) \u2264 Zr + g \u2212 1 n =\u21d2 F (r+1)(D\u2032) \u2264 Zr + g n .\nThis, in turn, implies Zg\u22121(D) \u2286 Zg(D\u2032), so (5) follows. To prove (6), we use the following. Observe that\nF (\u2113+1)(D) > Z\u2113 + g \u2212 1 n =\u21d2 F (\u2113+1)(D\u2032) > Z\u2113 + g \u2212 2 n\nby the (1/n)-Lipschitz property of F (\u2113+1). Therefore\nPr|G\n( F (\u2113+1)(D) >\nZ\u2113 + g \u2212 1 n\n) \u2264 Pr|G ( F (\u2113+1)(D\u2032) >\nZ\u2113 + g \u2212 2 n\n)\n\u2264 exp(\u03b1/2)Pr|G ( F (\u2113+1)(D\u2032) > Z\u2113 + g\nn\n)\nwhere we use the fact that Z\u2113 \u223c Lap(\u03b1/4) for the last step, so (6) follows.\nLemma 4. With probability at least 1\u2212 \u03b4, if S(\u03b1,m, \u03b81, \u03b82, . . . , \u03b8K\u22121, D) = r then\nm\u2212 f (r+1)(D) > \u03b8r \u2212 2\nn\u03b1 ln\n1 \u03b4 \u2212 4 n\u03b1 ln r(r + 1) \u03b4 .\nProof. Using the tail bound for the Laplace distribution,\nPr ( G < \u2212 2\n\u03b1 ln\n1\n\u03b4\n) \u2264 \u03b4\n2\nand\nPr ( Zr < \u2212 4\n\u03b1 ln\nr(r + 1)\n\u03b4\n) \u2264 \u03b4\n2r(r + 1)\nfor each r \u2208 {1, 2, . . . ,K \u2212 1}. Therefore, by a union bound, with probability at least 1\u2212 \u03b4,\nG \u2265 \u2212 2 \u03b1 ln 1 \u03b4 and Zr \u2265 \u2212 4 \u03b1 ln r(r + 1) \u03b4 \u2200r \u2208 {1, 2, . . . ,K \u2212 1}.\nThe claim follows.\nAlgorithm 4 A(\u03b1, \u2113,D) input Privacy parameter \u03b1 > 0, number of items \u2113 > 0, database D \u2208 Xn. output Item I \u2208 U . 1: Let U\u2113 be the set of \u2113 items in U with highest f(i,D) value, ties broken arbitrarily. 2: Draw I \u223c p where pi \u221d 1{i \u2208 U\u2113} exp(n\u03b1f(i,D)/2). 3: return I.\nA.3 Restricted Exponential Mechanism\nThe third part of Algorithm 1 uses the exponential mechanism on the top \u2113 items to select one of these items; it is detailed in Algorithm 4.\nLemma 5. Assume D satisfies the (\u2113, \u03b3)-margin condition with\n\u03b3 \u2265 2 n\n( 1 + ln(\u2113/\u03b2)\n\u03b1\n) .\nThen for any neighbor D\u2032 \u2208 Xn of D, and any S \u2286 U ,\nPr(A(\u03b1,D) \u2208 S) \u2264 exp(\u03b1) \u00b7 Pr(A(\u03b1,D\u2032) \u2208 S) + \u03b2.\nProof. For any r \u2208 {1, 2, . . . ,K} and dataset D\u0303 \u2208 Xn, let HD\u0303 \u2286 U denote the r items of highest f(\u00b7, D\u0303) value (ties broken arbitrarily). (In Algorithm 4, we have U\u2113 = HD.) It suffices to show that\nPr(A(\u03b1, \u2113,D\u2032) = i) \u2264 max {Pr(A(\u03b1, \u2113,D) = i) exp(\u03b1), \u03b2/\u2113} , \u2200i \u2208 HD\u2032 .\nThis is because Pr(A(\u03b1, \u2113,D\u2032) /\u2208 HD\u2032) = 0 and |HD\u2032 | = \u2113. Fix any i \u2208 HD\u2032 . Because f(j, \u00b7) is (1/n)-Lipschitz for every j \u2208 U , so is f (r)(\u00b7) for every r \u2208 [K]. Therefore \u2113\u2211\nr=1\nexp (n\u03b1\n2 f (r)(D\u2032)\n) \u2265 \u2113\u2211\nr=1\nexp (n\u03b1\n2 f (r)(D)\n) exp(\u2212\u03b1/2).\nAlso by the (1/n)-Lipschitz property,\nexp (n\u03b1\n2 f(i,D\u2032)\n) \u2264 exp (n\u03b1 2 f(i,D) ) exp(\u03b1/2).\nTherefore, combining the two displayed equations above gives\nPr(A(\u03b1, \u2113,D\u2032) = i) = exp\n( n\u03b1 2 f(i,D \u2032) )\n\u2211\u2113 r=1 exp ( n\u03b1 2 f (r)(D\u2032) ) \u2264\nexp ( n\u03b1 2 f(i,D) ) \u2211\u2113\nr=1 exp ( n\u03b1 2 f (r)(D) ) exp(\u03b1). (7)\nIf i \u2208 HD, then (7) reads Pr(A(\u03b1, \u2113,D\u2032) = i) \u2264 Pr(A(\u03b1, \u2113,D) = i) exp(\u03b1).\nIf i /\u2208 HD, then the assumption that D satisfies the (\u2113, \u03b3)-margin condition implies\nf(i,D) \u2264 f (1)(D)\u2212 \u03b3;\nso combining the above inequality with (7), as well as the assumption \u03b3 \u2265 (2/n)(1 + ln(\u2113/\u03b2)/\u03b1), gives\nPr(A(\u03b1, \u2113,D\u2032) = i) \u2264 exp ( n\u03b1 2 ( f (1)(D)\u2212 \u03b3 ))\nexp ( n\u03b1 2 f (1)(D) ) exp(\u03b1) \u2264 \u03b2/\u2113.\nA.4 Privacy of Algorithm 1\nFor clarity, we suppress the privacy parameter inputs to the algorithms. By standard composition results for differential privacy [17], Lemma 1, and Lemma 3, the release ofM(D) and S(M(D), D) is (2\u03b1/3)-differentially private. Define the shorthand MS(D) := (M(D), S(M(D), D)), and let \u00b5D denote the corresponding probability measure over the range of MS(D).\nFor a dataset D \u2208 Xn, let VD be set of (m\u0303, \u2113\u0303) pairs (i.e., possible outputs of MS) such that\nm\u0303 \u2264 f (1)(D) + 3 n\u03b1 ln 3 2\u03b4 and m\u0303\u2212 f (\u2113\u0303+1)(D) > T (\u2113\u0303) \u2212 12 n\u03b1 ln 3\u2113\u0303(\u2113\u0303+ 1) \u03b4 \u2212 6 n\u03b1 ln 3 \u03b4 .\nIf (m, \u2113) \u2208 VD, then the values of T (\u2113) and t(\u2113) certify that D satisfies the (\u2113, t(\u2113))-margin condition. Lemma 2 and Lemma 4 imply that\n\u00b5D(VD) \u2265 1\u2212 2\u03b4\n3 .\nAlso, observe that if \u03b2 := \u03b4 exp(\u22122\u03b1/3)/3, then\nt(\u2113) = 2\nn\n( 1 + ln(\u2113/\u03b2)\n\u03b1/3\n) .\nTherefore, for any neighbor D\u2032 \u2208 Xn of D, and any S \u2286 U ,\nPr(lmm(D) \u2208 S) = \u222b Pr(A(\u2113,D) \u2208 S |MS(D) = (m, \u2113))d\u00b5D\n\u2264 \u222b\nVD\nPr(A(\u2113,D) \u2208 S |MS(D) = (m, \u2113))d\u00b5D + 2\u03b4\n3\n\u2264 \u222b\nVD\n( e\u03b1/3 Pr(A(\u2113,D\u2032) \u2208 S |MS(D) = (m, \u2113)) + \u03b2 ) e2\u03b1/3d\u00b5D\u2032 + 2\u03b4\n3\n=\n\u222b\nVD\n( e\u03b1/3 Pr(A(\u2113,D\u2032) \u2208 S |MS(D\u2032) = (m, \u2113)) + \u03b4e \u22122\u03b1/3\n3\n) e2\u03b1/3d\u00b5D\u2032 + 2\u03b4\n3\n\u2264 \u222b ( e\u03b1/3 Pr(A(\u2113,D\u2032) \u2208 S |MS(D\u2032) = (m, \u2113)) + \u03b4e \u22122\u03b1/3\n3\n) e2\u03b1/3d\u00b5D\u2032 + 2\u03b4\n3\n= e\u03b1 Pr(lmm(D\u2032) \u2208 S) + \u03b4.\nAbove, the second inequality follows from Lemma 5 and the (2\u03b1/3)-differential privacy of MS."}, {"heading": "B Utility Analysis", "text": "Proof of Theorem 3. Using tail bounds for the Laplace distribution, it follows that with probability at least 1\u2212 \u03b7/2,\nZ \u2265 \u2212 3 \u03b1 ln 3 \u03b7 , G \u2264 6 \u03b1 ln 3 \u03b7 , Z\u2113\u2217 \u2264 12 \u03b1 ln 3 \u03b7 .\nIn this event, the assumption that D satisfies the (\u2113\u2217, \u03b3\u2217)-margin condition implies that\n( f (1)(D) + Z/n ) \u2212 f (\u2113\u2217+1)(D) > (Z\u2113\u2217 +G)/n+ T (\u2113 \u2217),\nso the while-loop terminates with \u2113 \u2264 \u2113\u2217. Also, the probability distribution p in Step 14 of Algorithm 1 assigns probability mass at most \u03b7/2 to the set of items i with\nf(i,D) \u2264 f (1)(D)\u2212 6 ln(2\u2113/\u03b7) n\u03b1 .\nTherefore, by a union bound, the item I returned by Algorithm 1 satisfies\nf(I,D) > f (1)(D)\u2212 6 ln(2\u2113 \u2217/\u03b7)\nn\u03b1\nwith probability at least 1\u2212 \u03b7."}, {"heading": "C Proofs of Lower Bounds", "text": "Proof of Theorem 1. We construct the private maximization problem as follows. Let the domain X := 2U (subsets of items), and define f : U \u00d7 Xn \u2192 R by\nf(i,D) := 1\nn\nn\u2211\ns=1\n1{i \u2208 Ds}.\nIn other words, the function f(i, \u00b7) is the fraction of entries containing i. It is easy to see that f(i, \u00b7) is (1/n)-Lipschitz for all i \u2208 U .\nLet m := min{n/2, log((\u2113\u2212 1)/2)/\u03b1}. We define a collection of \u2113 datasets D1, D2, . . . , D\u2113 \u2208 Xn with the following properties:\n1. For each i, the first n/2 entries of Di are equal to [\u2113] := {1, 2, . . . , \u2113}, the next n/2\u2212m are equal of Di are equal to \u2205, and the last m entries of Di are equal to {i}. Therefore\nf(j,Di) =   \n0 if j /\u2208 [\u2113], 1 2 if j \u2208 [\u2113] \\ {i}, 1 2 + m n if j = i,\nso f(i,Di) = f (1)(Di) and Di satisfies the (\u2113,m/n)-margin condition.\n2. For each i 6= j, the datasets Di and Dj differ only in (the last) m entries.\nLet A be (\u03b1, \u03b4)-approximate differentially private. Assume for sake of contradiction that\nPr ( f(A(Di), Di) > f (1)(Di)\u2212 m\nn\n) \u2265 1\n2\nfor all i \u2208 [\u2113]. Since only i satisfies f(i,Di) > f (1)(Di)\u2212m/n, this is the same as Pr(A(Di) = i) \u2265 1/2 for all i \u2208 [\u2113]. This then implies the following chain of inequalities leading to a contradiction:\n1 2 > Pr(A(Di) 6= i)\n\u2265 \u2211\nj\u2208[\u2113]\\{i}\nPr(A(Di) = j)\n\u2265 \u2211\nj\u2208[\u2113]\\{i}\ne\u2212\u03b1m Pr(A(Dj) = j)\u2212 \u03b4 1\u2212 e\u2212\u03b1\n\u2265 (\u2113 \u2212 1) ( e\u2212\u03b1m\n2 \u2212 \u03b4 1\u2212 e\u2212\u03b1 ) \u2265 1 2 .\nThe first inequality above is by assumption; the third inequality follows from Lemma 6; the fourth inequality again uses the assumption; and the final inequality follows by the definition of m and the condition on \u03b4. Since a contradiction is reached, there must exist some i \u2208 [\u2113] such that Pr(f(A(Di), Di) > f (1)(Di)\u2212m/n) < 1/2.\nLemma 6 ([11]). Let D and D\u2032 be any two datasets that differ in at most k entries, and let A be any (\u03b1, \u03b4)-approximate differentially private algorithm with range S. Then, for any S \u2286 S,\nPr(A(D) \u2208 S) \u2265 e\u2212k\u03b1 Pr(A(D\u2032) \u2208 S)\u2212 \u03b4 1\u2212 e\u2212\u03b1 ."}], "references": [{"title": "Private empirical risk minimization, revisited", "author": ["Raef Bassily", "Adam Smith", "Abhradeep Thakurta"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2014}, {"title": "Bounds on the sample complexity for private learning and private data release", "author": ["Amos Beimel", "Shiva Prasad Kasiviswanathan", "Kobbi Nissim"], "venue": "In Theory of Cryptography,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2010}, {"title": "Private learning and sanitization: Pure vs. approximate differential privacy", "author": ["Amos Beimel", "Kobbi Nissim", "Uri Stemmer"], "venue": "In RANDOM,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2013}, {"title": "Characterizing the sample complexity of private learners", "author": ["Amos Beimel", "Kobbi Nissim", "Uri Stemmer"], "venue": "In ITCS,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2013}, {"title": "Discovering frequent patterns in sensitive data", "author": ["Raghav Bhaskar", "Srivatsan Laxman", "Adam Smith", "Abhradeep Thakurta"], "venue": "In KDD,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2010}, {"title": "Practical privacy: the SuLQ framework", "author": ["A. Blum", "C. Dwork", "F. McSherry", "K. Nissim"], "venue": "In PODS,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2005}, {"title": "A learning theory approach to noninteractive database privacy", "author": ["Avrim Blum", "Katrina Ligett", "Aaron Roth"], "venue": "Journal of the ACM,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2013}, {"title": "Mining frequent patterns with differential privacy", "author": ["Luca Bonomi", "Li Xiong"], "venue": "Proceedings of the VLDB Endowment,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2013}, {"title": "Fingerprinting codes and the price of approximate differential privacy", "author": ["Mark Bun", "Jonathan Ullman", "Salil Vadhan"], "venue": "In STOC,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2014}, {"title": "Sample complexity bounds for differentially private learning", "author": ["Kamalika Chaudhuri", "Daniel Hsu"], "venue": "In COLT,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2011}, {"title": "Convergence rates for differentially private statistical estimation", "author": ["Kamalika Chaudhuri", "Daniel Hsu"], "venue": "In ICML,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2012}, {"title": "A stability-based validation procedure for differentially private machine learning", "author": ["Kamalika Chaudhuri", "Staal A Vinterbo"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2013}, {"title": "Differentially private empirical risk minimization", "author": ["Kamalika Chaudhuri", "Claire Monteleoni", "Anand D. Sarwate"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2011}, {"title": "Near-optimal differentially private principal components", "author": ["Kamalika Chaudhuri", "Anand D. Sarwate", "Kaushik Sinha"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2012}, {"title": "Publishing set-valued data via differential privacy", "author": ["Rui Chen", "Noman Mohammed", "Benjamin CM Fung", "Bipin C Desai", "Li Xiong"], "venue": "In VLDB,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2011}, {"title": "Lower bounds in differential privacy", "author": ["Anindya De"], "venue": "In Ronald Cramer, editor, Theory of Cryptography,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2012}, {"title": "Calibrating noise to sensitivity in private data analysis", "author": ["C. Dwork", "F. McSherry", "K. Nissim", "A. Smith"], "venue": "In Theory of Cryptography,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2006}, {"title": "Differential privacy: A survey of results", "author": ["Cynthia Dwork"], "venue": "In Theory and Applications of Models of Computation,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2008}, {"title": "Differential privacy and robust statistics", "author": ["Cynthia Dwork", "Jing Lei"], "venue": "In Proceedings of the 41st annual ACM symposium on Theory of computing,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2009}, {"title": "Our data, ourselves: Privacy via distributed noise generation", "author": ["Cynthia Dwork", "Krishnaram Kenthapadi", "Frank McSherry", "Ilya Mironov", "Moni Naor"], "venue": "In Advances in Cryptology-EUROCRYPT", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2006}, {"title": "Data mining with differential privacy", "author": ["A. Friedman", "A. Schuster"], "venue": "In KDD,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2010}, {"title": "A multiplicative weights mechanism for privacy-preserving data analysis", "author": ["Moritz Hardt", "Guy N Rothblum"], "venue": "In FOCS,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2010}, {"title": "On the geometry of differential privacy", "author": ["Moritz Hardt", "Kunal Talwar"], "venue": "In Proceedings of the 42nd ACM symposium on Theory of computing,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2010}, {"title": "Differentially private online learning", "author": ["Prateek Jain", "Pravesh Kothari", "Abhradeep Thakurta"], "venue": "In COLT,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2012}, {"title": "What can we learn privately", "author": ["Shiva Prasad Kasiviswanathan", "Homin K Lee", "Kobbi Nissim", "Sofya Raskhodnikova", "Adam Smith"], "venue": "SIAM Journal on Computing,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2011}, {"title": "Computable shell decomposition bounds", "author": ["John Langford", "David McAllester"], "venue": "J. Mach. Learn. Res.,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2004}, {"title": "Privbasis: frequent itemset mining with differential privacy", "author": ["Ninghui Li", "Wahbeh Qardaji", "Dong Su", "Jianneng Cao"], "venue": "In VLDB,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2012}, {"title": "Mechanism design via differential privacy", "author": ["Frank McSherry", "Kunal Talwar"], "venue": "In FOCS,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2007}, {"title": "Signal processing and machine learning with differential privacy: Algorithms and challenges for continuous data", "author": ["A.D. Sarwate", "K. Chaudhuri"], "venue": "Signal Processing Magazine, IEEE,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2013}, {"title": "Privacy-preserving statistical estimation with optimal convergence rates", "author": ["Adam Smith"], "venue": "In STOC,", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2011}, {"title": "Differentially private feature selection via stability arguments, and the robustness of the lasso", "author": ["Adam Smith", "Abhradeep Thakurta"], "venue": "In COLT,", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2013}, {"title": "Privacy-preserving data sharing for genome-wide association studies", "author": ["Caroline Uhler", "Aleksandra B. Slavkovic", "Stephen E. Fienberg"], "venue": null, "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2012}, {"title": "A statistical framework for differential privacy", "author": ["Larry Wasserman", "Shuheng Zhou"], "venue": "Journal of the American Statistical Association,", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 2010}], "referenceMentions": [{"referenceID": 16, "context": "Differential privacy [17] is a cryptographically-motivated definition of privacy that has recently gained significant attention in the data mining and machine learning communities.", "startOffset": 21, "endOffset": 25}, {"referenceID": 24, "context": "This is a very general algorithmic problem that arises in many applications, include private PAC learning [25] (choosing the most accurate classifier), private decision tree induction [21] (choosing the most informative split), private frequent itemset mining [5] (choosing the most frequent itemset), private validation [12] (choosing the best tuning parameter), and private multiple hypothesis testing [32] (choosing the most likely hypothesis).", "startOffset": 106, "endOffset": 110}, {"referenceID": 20, "context": "This is a very general algorithmic problem that arises in many applications, include private PAC learning [25] (choosing the most accurate classifier), private decision tree induction [21] (choosing the most informative split), private frequent itemset mining [5] (choosing the most frequent itemset), private validation [12] (choosing the best tuning parameter), and private multiple hypothesis testing [32] (choosing the most likely hypothesis).", "startOffset": 184, "endOffset": 188}, {"referenceID": 4, "context": "This is a very general algorithmic problem that arises in many applications, include private PAC learning [25] (choosing the most accurate classifier), private decision tree induction [21] (choosing the most informative split), private frequent itemset mining [5] (choosing the most frequent itemset), private validation [12] (choosing the best tuning parameter), and private multiple hypothesis testing [32] (choosing the most likely hypothesis).", "startOffset": 260, "endOffset": 263}, {"referenceID": 11, "context": "This is a very general algorithmic problem that arises in many applications, include private PAC learning [25] (choosing the most accurate classifier), private decision tree induction [21] (choosing the most informative split), private frequent itemset mining [5] (choosing the most frequent itemset), private validation [12] (choosing the best tuning parameter), and private multiple hypothesis testing [32] (choosing the most likely hypothesis).", "startOffset": 321, "endOffset": 325}, {"referenceID": 31, "context": "This is a very general algorithmic problem that arises in many applications, include private PAC learning [25] (choosing the most accurate classifier), private decision tree induction [21] (choosing the most informative split), private frequent itemset mining [5] (choosing the most frequent itemset), private validation [12] (choosing the best tuning parameter), and private multiple hypothesis testing [32] (choosing the most likely hypothesis).", "startOffset": 404, "endOffset": 408}, {"referenceID": 27, "context": "The most common algorithms for this problem are the exponential mechanism [28], and a computationally efficient alternative from [5], which we call the max-of-Laplaces mechanism.", "startOffset": 74, "endOffset": 78}, {"referenceID": 4, "context": "The most common algorithms for this problem are the exponential mechanism [28], and a computationally efficient alternative from [5], which we call the max-of-Laplaces mechanism.", "startOffset": 129, "endOffset": 132}, {"referenceID": 2, "context": "This problem has also been addressed by recent algorithms of [3, 31], who provide algorithms that are range-independent and satisfy approximate differential privacy, a relaxed version of differential privacy.", "startOffset": 61, "endOffset": 68}, {"referenceID": 30, "context": "This problem has also been addressed by recent algorithms of [3, 31], who provide algorithms that are range-independent and satisfy approximate differential privacy, a relaxed version of differential privacy.", "startOffset": 61, "endOffset": 68}, {"referenceID": 30, "context": "For example, the algorithm from [31] provides a range-independent result only when there is a single clear maximizer i such that f(i, D) is greater than the second highest value by some margin; the algorithm from [3] also has restrictive conditions that limit its applicability (see Section 2.", "startOffset": 32, "endOffset": 36}, {"referenceID": 2, "context": "For example, the algorithm from [31] provides a range-independent result only when there is a single clear maximizer i such that f(i, D) is greater than the second highest value by some margin; the algorithm from [3] also has restrictive conditions that limit its applicability (see Section 2.", "startOffset": 213, "endOffset": 216}, {"referenceID": 25, "context": "For the second problem, our algorithm achieves tight sample complexity bounds for private PAC learning analogous to the shell bounds of [26] for non-private learning.", "startOffset": 136, "endOffset": 140}, {"referenceID": 16, "context": "The following definitions of (approximate) differential privacy are from [17] and [20].", "startOffset": 73, "endOffset": 77}, {"referenceID": 19, "context": "The following definitions of (approximate) differential privacy are from [17] and [20].", "startOffset": 82, "endOffset": 86}, {"referenceID": 0, "context": "Smaller values of the privacy parameters \u03b1 > 0 and \u03b4 \u2208 [0, 1] imply stronger guarantees of privacy.", "startOffset": 55, "endOffset": 61}, {"referenceID": 16, "context": ") Note that this problem is different from private release of the maximum value of f(\u00b7, D); a solution for the latter is easily obtained by adding Laplace noise with standard deviation O(1/(\u03b1n)) to maxi\u2208U f(i,D) [17].", "startOffset": 212, "endOffset": 216}, {"referenceID": 27, "context": "2 Previous Algorithms for Private Maximization The standard algorithm for private maximization is the exponential mechanism [28].", "startOffset": 124, "endOffset": 128}, {"referenceID": 4, "context": "Another general purpose algorithm is the max-of-Laplaces mechanism from [5].", "startOffset": 72, "endOffset": 75}, {"referenceID": 1, "context": "We remark that results similar to Proposition 1 have appeared in [2, 7, 10, 11, 23]; we simply re-frame those results here in the context of private maximization.", "startOffset": 65, "endOffset": 83}, {"referenceID": 6, "context": "We remark that results similar to Proposition 1 have appeared in [2, 7, 10, 11, 23]; we simply re-frame those results here in the context of private maximization.", "startOffset": 65, "endOffset": 83}, {"referenceID": 9, "context": "We remark that results similar to Proposition 1 have appeared in [2, 7, 10, 11, 23]; we simply re-frame those results here in the context of private maximization.", "startOffset": 65, "endOffset": 83}, {"referenceID": 10, "context": "We remark that results similar to Proposition 1 have appeared in [2, 7, 10, 11, 23]; we simply re-frame those results here in the context of private maximization.", "startOffset": 65, "endOffset": 83}, {"referenceID": 22, "context": "We remark that results similar to Proposition 1 have appeared in [2, 7, 10, 11, 23]; we simply re-frame those results here in the context of private maximization.", "startOffset": 65, "endOffset": 83}, {"referenceID": 30, "context": "The approximate differentially private algorithm from [31] applies in the case where there is a single clear maximizer whose value is much larger than that of the rest.", "startOffset": 54, "endOffset": 58}, {"referenceID": 2, "context": "[3] provides an approximate differentially private algorithm that applies when f satisfies a condition called l-bounded growth.", "startOffset": 0, "endOffset": 3}, {"referenceID": 25, "context": "In fact, our notion is more closely related to the shell decomposition bounds of [26], which we discuss in Section 4.", "startOffset": 81, "endOffset": 85}, {"referenceID": 21, "context": "Moreover, we can find such a valid (l, \u03b3) pair using a differentially private search procedure based on the sparse vector technique [22].", "startOffset": 132, "endOffset": 136}, {"referenceID": 4, "context": "The work of [5] provides the first differentially private algorithms for FIM.", "startOffset": 12, "endOffset": 15}, {"referenceID": 7, "context": "Subsequent algorithms exploit other properties of itemsets or avoid directly finding the most frequent itemset [8, 15, 27, 34].", "startOffset": 111, "endOffset": 126}, {"referenceID": 14, "context": "Subsequent algorithms exploit other properties of itemsets or avoid directly finding the most frequent itemset [8, 15, 27, 34].", "startOffset": 111, "endOffset": 126}, {"referenceID": 26, "context": "Subsequent algorithms exploit other properties of itemsets or avoid directly finding the most frequent itemset [8, 15, 27, 34].", "startOffset": 111, "endOffset": 126}, {"referenceID": 30, "context": "Finally, unlike [31], our algorithm does not require a gap between the top two itemset frequencies.", "startOffset": 16, "endOffset": 20}, {"referenceID": 24, "context": "2 Private PAC Learning We now consider private PAC learning with a finite hypothesis class H with bounded VC dimension d [25].", "startOffset": 121, "endOffset": 125}, {"referenceID": 24, "context": "The work of [25] instead uses the exponential mechanism to select a hypothesis hEM \u2208 H.", "startOffset": 12, "endOffset": 16}, {"referenceID": 6, "context": "The dependence on log |H| is improved to d log |\u03a3| by [7] when the data entries come from a finite set \u03a3.", "startOffset": 54, "endOffset": 57}, {"referenceID": 3, "context": "The subsequent work of [4] introduces the notion of representation dimension, and shows how it relates to differentially private learning in the discrete and finite case, and [3] provides improved convergence bounds with approximate differential privacy that exploit the structure of some specific hypothesis classes.", "startOffset": 23, "endOffset": 26}, {"referenceID": 2, "context": "The subsequent work of [4] introduces the notion of representation dimension, and shows how it relates to differentially private learning in the discrete and finite case, and [3] provides improved convergence bounds with approximate differential privacy that exploit the structure of some specific hypothesis classes.", "startOffset": 175, "endOffset": 178}, {"referenceID": 9, "context": "For the case of infinite hypothesis classes and continuous data distributions, [10] shows that distribution-free private PAC learning is not generally possible, but distribution-dependent learning can be achieved under certain conditions.", "startOffset": 79, "endOffset": 83}, {"referenceID": 24, "context": "Our bound only relies on uniform convergence properties of H, and can be significantly tighter than the bounds from [25] when the number of hypotheses with error close to minh\u2208H err(h) is small.", "startOffset": 116, "endOffset": 120}, {"referenceID": 25, "context": "Indeed, the bounds are a private analogue of the shell bounds of [26], which characterize the structure of the hypothesis class as a function of the properties of a decomposition based on hypotheses\u2019 error rates.", "startOffset": 65, "endOffset": 69}, {"referenceID": 25, "context": "Following [26], we divide the hypothesis class H into R = O( \u221a n/(d logn)) shells; the t-th shell H(t) is defined by H(t) := { h \u2208 H : err(h) \u2264 min h\u2208H err(h) + C0t \u221a d log(n/\u03b40) n } .", "startOffset": 10, "endOffset": 14}, {"referenceID": 25, "context": "The dependence on log |H| from (2) is replaced here by log(|H(t\u2217(n)+1)|/\u03b4), which can be vastly smaller, as discussed in [26].", "startOffset": 121, "endOffset": 125}, {"referenceID": 0, "context": "There has been a large amount of work on differential privacy for a wide range of statistical and machine learning tasks over the last decade [1, 6, 13, 21, 24, 30, 33]; for overviews, see [18] and [29].", "startOffset": 142, "endOffset": 168}, {"referenceID": 5, "context": "There has been a large amount of work on differential privacy for a wide range of statistical and machine learning tasks over the last decade [1, 6, 13, 21, 24, 30, 33]; for overviews, see [18] and [29].", "startOffset": 142, "endOffset": 168}, {"referenceID": 12, "context": "There has been a large amount of work on differential privacy for a wide range of statistical and machine learning tasks over the last decade [1, 6, 13, 21, 24, 30, 33]; for overviews, see [18] and [29].", "startOffset": 142, "endOffset": 168}, {"referenceID": 20, "context": "There has been a large amount of work on differential privacy for a wide range of statistical and machine learning tasks over the last decade [1, 6, 13, 21, 24, 30, 33]; for overviews, see [18] and [29].", "startOffset": 142, "endOffset": 168}, {"referenceID": 23, "context": "There has been a large amount of work on differential privacy for a wide range of statistical and machine learning tasks over the last decade [1, 6, 13, 21, 24, 30, 33]; for overviews, see [18] and [29].", "startOffset": 142, "endOffset": 168}, {"referenceID": 29, "context": "There has been a large amount of work on differential privacy for a wide range of statistical and machine learning tasks over the last decade [1, 6, 13, 21, 24, 30, 33]; for overviews, see [18] and [29].", "startOffset": 142, "endOffset": 168}, {"referenceID": 32, "context": "There has been a large amount of work on differential privacy for a wide range of statistical and machine learning tasks over the last decade [1, 6, 13, 21, 24, 30, 33]; for overviews, see [18] and [29].", "startOffset": 142, "endOffset": 168}, {"referenceID": 17, "context": "There has been a large amount of work on differential privacy for a wide range of statistical and machine learning tasks over the last decade [1, 6, 13, 21, 24, 30, 33]; for overviews, see [18] and [29].", "startOffset": 189, "endOffset": 193}, {"referenceID": 28, "context": "There has been a large amount of work on differential privacy for a wide range of statistical and machine learning tasks over the last decade [1, 6, 13, 21, 24, 30, 33]; for overviews, see [18] and [29].", "startOffset": 198, "endOffset": 202}, {"referenceID": 24, "context": "In particular, algorithms for the private maximization problem (and variants) have been used as subroutines in many applications; examples include PAC learning [25], principle component analysis [14], performance validation [12], and multiple hypothesis testing [32].", "startOffset": 160, "endOffset": 164}, {"referenceID": 13, "context": "In particular, algorithms for the private maximization problem (and variants) have been used as subroutines in many applications; examples include PAC learning [25], principle component analysis [14], performance validation [12], and multiple hypothesis testing [32].", "startOffset": 195, "endOffset": 199}, {"referenceID": 11, "context": "In particular, algorithms for the private maximization problem (and variants) have been used as subroutines in many applications; examples include PAC learning [25], principle component analysis [14], performance validation [12], and multiple hypothesis testing [32].", "startOffset": 224, "endOffset": 228}, {"referenceID": 31, "context": "In particular, algorithms for the private maximization problem (and variants) have been used as subroutines in many applications; examples include PAC learning [25], principle component analysis [14], performance validation [12], and multiple hypothesis testing [32].", "startOffset": 262, "endOffset": 266}, {"referenceID": 2, "context": "A separation between pure and approximate differential privacy has been shown in several previous works [3, 19, 31].", "startOffset": 104, "endOffset": 115}, {"referenceID": 18, "context": "A separation between pure and approximate differential privacy has been shown in several previous works [3, 19, 31].", "startOffset": 104, "endOffset": 115}, {"referenceID": 30, "context": "A separation between pure and approximate differential privacy has been shown in several previous works [3, 19, 31].", "startOffset": 104, "endOffset": 115}, {"referenceID": 18, "context": "The first approximate differentially private algorithm that achieves a separation is the Propose-Test-Release (PTR) framework [19].", "startOffset": 126, "endOffset": 130}, {"referenceID": 2, "context": "In the context of private PAC learning, the work of [3] gives the first separation between pure and approximate differential privacy.", "startOffset": 52, "endOffset": 55}, {"referenceID": 30, "context": "In addition to using the algorithm from [31], they devise two additional algorithmic techniques: a concave maximization procedure for learning intervals, and an algorithm for the private maximization problem under the l-bounded growth condition discussed in Section 2.", "startOffset": 40, "endOffset": 44}, {"referenceID": 6, "context": "Lower bounds for approximate differential privacy have been shown by [7, 9, 11, 16], and the proof of our Theorem 1 borrows some techniques from [11].", "startOffset": 69, "endOffset": 83}, {"referenceID": 8, "context": "Lower bounds for approximate differential privacy have been shown by [7, 9, 11, 16], and the proof of our Theorem 1 borrows some techniques from [11].", "startOffset": 69, "endOffset": 83}, {"referenceID": 10, "context": "Lower bounds for approximate differential privacy have been shown by [7, 9, 11, 16], and the proof of our Theorem 1 borrows some techniques from [11].", "startOffset": 69, "endOffset": 83}, {"referenceID": 15, "context": "Lower bounds for approximate differential privacy have been shown by [7, 9, 11, 16], and the proof of our Theorem 1 borrows some techniques from [11].", "startOffset": 69, "endOffset": 83}, {"referenceID": 10, "context": "Lower bounds for approximate differential privacy have been shown by [7, 9, 11, 16], and the proof of our Theorem 1 borrows some techniques from [11].", "startOffset": 145, "endOffset": 149}, {"referenceID": 0, "context": "[1] Raef Bassily, Adam Smith, and Abhradeep Thakurta.", "startOffset": 0, "endOffset": 3}, {"referenceID": 1, "context": "[2] Amos Beimel, Shiva Prasad Kasiviswanathan, and Kobbi Nissim.", "startOffset": 0, "endOffset": 3}, {"referenceID": 2, "context": "[3] Amos Beimel, Kobbi Nissim, and Uri Stemmer.", "startOffset": 0, "endOffset": 3}, {"referenceID": 3, "context": "[4] Amos Beimel, Kobbi Nissim, and Uri Stemmer.", "startOffset": 0, "endOffset": 3}, {"referenceID": 4, "context": "[5] Raghav Bhaskar, Srivatsan Laxman, Adam Smith, and Abhradeep Thakurta.", "startOffset": 0, "endOffset": 3}, {"referenceID": 5, "context": "[6] A.", "startOffset": 0, "endOffset": 3}, {"referenceID": 6, "context": "[7] Avrim Blum, Katrina Ligett, and Aaron Roth.", "startOffset": 0, "endOffset": 3}, {"referenceID": 7, "context": "[8] Luca Bonomi and Li Xiong.", "startOffset": 0, "endOffset": 3}, {"referenceID": 8, "context": "[9] Mark Bun, Jonathan Ullman, and Salil Vadhan.", "startOffset": 0, "endOffset": 3}, {"referenceID": 9, "context": "[10] Kamalika Chaudhuri and Daniel Hsu.", "startOffset": 0, "endOffset": 4}, {"referenceID": 10, "context": "[11] Kamalika Chaudhuri and Daniel Hsu.", "startOffset": 0, "endOffset": 4}, {"referenceID": 11, "context": "[12] Kamalika Chaudhuri and Staal A Vinterbo.", "startOffset": 0, "endOffset": 4}, {"referenceID": 12, "context": "[13] Kamalika Chaudhuri, Claire Monteleoni, and Anand D.", "startOffset": 0, "endOffset": 4}, {"referenceID": 13, "context": "[14] Kamalika Chaudhuri, Anand D.", "startOffset": 0, "endOffset": 4}, {"referenceID": 14, "context": "[15] Rui Chen, Noman Mohammed, Benjamin CM Fung, Bipin C Desai, and Li Xiong.", "startOffset": 0, "endOffset": 4}, {"referenceID": 15, "context": "[16] Anindya De.", "startOffset": 0, "endOffset": 4}, {"referenceID": 16, "context": "[17] C.", "startOffset": 0, "endOffset": 4}, {"referenceID": 17, "context": "[18] Cynthia Dwork.", "startOffset": 0, "endOffset": 4}, {"referenceID": 18, "context": "[19] Cynthia Dwork and Jing Lei.", "startOffset": 0, "endOffset": 4}, {"referenceID": 19, "context": "[20] Cynthia Dwork, Krishnaram Kenthapadi, Frank McSherry, Ilya Mironov, and Moni Naor.", "startOffset": 0, "endOffset": 4}, {"referenceID": 20, "context": "[21] A.", "startOffset": 0, "endOffset": 4}, {"referenceID": 21, "context": "[22] Moritz Hardt and Guy N Rothblum.", "startOffset": 0, "endOffset": 4}, {"referenceID": 22, "context": "[23] Moritz Hardt and Kunal Talwar.", "startOffset": 0, "endOffset": 4}, {"referenceID": 23, "context": "[24] Prateek Jain, Pravesh Kothari, and Abhradeep Thakurta.", "startOffset": 0, "endOffset": 4}, {"referenceID": 24, "context": "[25] Shiva Prasad Kasiviswanathan, Homin K Lee, Kobbi Nissim, Sofya Raskhodnikova, and Adam Smith.", "startOffset": 0, "endOffset": 4}, {"referenceID": 25, "context": "[26] John Langford and David McAllester.", "startOffset": 0, "endOffset": 4}, {"referenceID": 26, "context": "[27] Ninghui Li, Wahbeh Qardaji, Dong Su, and Jianneng Cao.", "startOffset": 0, "endOffset": 4}, {"referenceID": 27, "context": "[28] Frank McSherry and Kunal Talwar.", "startOffset": 0, "endOffset": 4}, {"referenceID": 28, "context": "[29] A.", "startOffset": 0, "endOffset": 4}, {"referenceID": 29, "context": "[30] Adam Smith.", "startOffset": 0, "endOffset": 4}, {"referenceID": 30, "context": "[31] Adam Smith and Abhradeep Thakurta.", "startOffset": 0, "endOffset": 4}, {"referenceID": 31, "context": "[32] Caroline Uhler, Aleksandra B.", "startOffset": 0, "endOffset": 4}, {"referenceID": 32, "context": "[33] Larry Wasserman and Shuheng Zhou.", "startOffset": 0, "endOffset": 4}, {"referenceID": 16, "context": "Lemma 1 ([17]).", "startOffset": 9, "endOffset": 13}, {"referenceID": 21, "context": "This is an application of the sparse vector technique from [22] that halts as soon as the first \u201cquery\u201d is answered positively.", "startOffset": 59, "endOffset": 63}, {"referenceID": 16, "context": "By standard composition results for differential privacy [17], Lemma 1, and Lemma 3, the release ofM(D) and S(M(D), D) is (2\u03b1/3)-differentially private.", "startOffset": 57, "endOffset": 61}, {"referenceID": 10, "context": "Lemma 6 ([11]).", "startOffset": 9, "endOffset": 13}], "year": 2014, "abstractText": "A basic problem in the design of privacy-preserving algorithms is the private maximization problem: the goal is to pick an item from a universe that (approximately) maximizes a data-dependent function, all under the constraint of differential privacy. This problem has been used as a sub-routine in many privacy-preserving algorithms for statistics and machine-learning. Previous algorithms for this problem are either range-dependent\u2014i.e., their utility diminishes with the size of the universe\u2014or only apply to very restricted function classes. This work provides the first general-purpose, range-independent algorithm for private maximization that guarantees approximate differential privacy. Its applicability is demonstrated on two fundamental tasks in data mining and machine learning.", "creator": "LaTeX with hyperref package"}}}