{"id": "1412.6623", "review": {"conference": "iclr", "VERSION": "v1", "DATE_OF_SUBMISSION": "20-Dec-2014", "title": "Word Representations via Gaussian Embedding", "abstract": "current work in lexical distributed representations maps each word to a point vector in low - dimensional space. mapping instead to a density provides many interesting advantages, including better capturing uncertainty about a representation and its specification, expressing shape more naturally than dot graph or cosine similarity, and enabling even recent parameterization incorporating decision boundaries. this paper advocates for density - based distributed embeddings today presents a method for learning representations over the presence of gaussian distributions. we investigate structures on various word embedding benchmarks, investigate the ability of these embeddings such model entailment and other asymmetric relationships, and explore novel properties of the concepts.", "histories": [["v1", "Sat, 20 Dec 2014 07:42:40 GMT  (316kb,D)", "http://arxiv.org/abs/1412.6623v1", "12 pages, in submission to ICLR 2015"], ["v2", "Tue, 10 Mar 2015 14:24:28 GMT  (183kb,D)", "http://arxiv.org/abs/1412.6623v2", "12 pages, in submission to ICLR 2015"], ["v3", "Thu, 23 Apr 2015 18:19:11 GMT  (183kb,D)", "http://arxiv.org/abs/1412.6623v3", "12 pages, published as conference paper at ICLR 2015"], ["v4", "Fri, 1 May 2015 10:14:58 GMT  (184kb,D)", "http://arxiv.org/abs/1412.6623v4", "12 pages, published as conference paper at ICLR 2015"]], "COMMENTS": "12 pages, in submission to ICLR 2015", "reviews": [], "SUBJECTS": "cs.CL cs.LG", "authors": ["luke vilnis", "rew mccallum"], "accepted": true, "id": "1412.6623"}, "pdf": {"name": "1412.6623.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["GAUSSIAN EMBEDDING", "Luke Vilnis", "Andrew McCallum"], "emails": ["luke@cs.umass.edu,", "mccallum@cs.umass.edu"], "sections": [{"heading": "1 INTRODUCTION", "text": "In recent years there has been a surge of interest in learning compact distributed representations or embeddings for many machine learning tasks, including collaborative filtering (Koren et al., 2009), image retrieval (Weston et al., 2011), relation extraction (Riedel et al., 2013), word semantics and language modeling (Bengio et al., 2006; Mnih & Hinton, 2008; Mikolov et al., 2013), and many others. In these approaches input objects (such as images, relations or words) are mapped to dense vectors having lower-dimensionality than the cardinality of the inputs, with the goal that the geometry of his low-dimensional latent embedded space be smooth with respect to some measure of similarity in the target domain. That is, objects associated with similar targets should be mapped to nearby points in the embedded space.\nWhile this approach has proven powerful, representing an object as a single point in space carries some important limitations. An embedded vector representing a point estimate does not naturally express uncertainty about the target concepts with which the input may be associated. Point vectors are typically compared by dot products, cosine-distance or Euclean distance, none of which provide for asymmetric comparisons between objects (as is necessary to represent inclusion or entailment). Relationships between points are normally measured by distances required to obey the triangle inequality.\nThis paper advocates moving beyond vector point representations to potential functions (Aizerman et al., 1964), or continuous densities in latent space. In particular we explore Gaussian function embeddings (currently with diagonal covariance), in which both means and variances are learned from data. Gaussians innately represent uncertainty, and provide a distance function per object. KLdivergence between Gaussian distributions is straightforward to calculate, naturally asymmetric, and has a geometric interpretation as an inclusion between families of ellipses.\nThere is a long line of previous work in mapping data cases to probability distributions, perhaps the most famous being radial basis functions (RBFs), used both in the kernel and neural network literature. We draw inspiration from this work to propose novel word embedding algorithms that embed words directly as Gaussian distributional potential functions in an infinite dimensional function space. This allows us to map word types not only to vectors but to soft regions in space, modeling uncertainty, inclusion, and entailment, as well as providing a rich geometry of the latent space.\nar X\niv :1\n41 2.\n66 23\nv1 [\ncs .C\nL ]\n2 0\nD ec\n2 01\n4\nFigure 1: Learned diagonal variances for each word, with the first letter of each word indicating the position of its mean, and projected onto generalized eigenvectors between the mixture means and variance of query word Bach. Here we might infer that Bach was a famous classical composer.\nAfter discussing related work and presenting our algorithms below we explore properties of our algorithms with multiple qualitative and quantitative evaluation on several real and synthetic datasets. We show that concept containment and specificity matches common intuition on examples concerning people, genres, foods, and others. We compare our embeddings to Skip-Gram on seven standard word similarity tasks, and evaluate the ability of our method to learn unsupervised lexical entailment. We also demonstrate that our training method also supports new styles of supervised training that explicitly incorporate asymmetry into the objective."}, {"heading": "2 RELATED WORK", "text": "This paper builds on a long line of work on both distributed and distributional semantic word vectors, including distributional semantics, neural language models, count-based language models, and, more broadly, the field of representation learning.\nRelated work in probabilistic matrix factorization (Mnih & Salakhutdinov, 2007) embeds rows and columns as Gaussians, and some forms of this do provide each row and column with its own variance (Salakhutdinov & Mnih, 2008). Given the parallels between embedding models and matrix factorization (Deerwester et al., 1990; Riedel et al., 2013; Levy & Goldberg, 2014), this is relevant to our approach. However, these Bayesian methods apply Bayes\u2019 rule to observed data to infer the latent distributions, whereas our model works directly in the space of probability distributions and discriminatively trains them. This allows us to go beyond the Bayesian approach and use arbitrary (and even asymmetric) training criteria, and is more similar to methods that learn kernels (Lanckriet et al., 2004) or function-valued neural networks such as mixture density networks (Bishop, 1994).\nOther work in multiplicative tensor factorization for word embeddings (Kiros et al., 2014) and metric learning (Xing et al., 2002) learns some combinations of representations, clusters, and a distance metric jointly; however, it does not effectively learn a distance function per item. Fitting Gaussian mixture models on embeddings has been done in order to apply Fisher kernels to entire documents (Clinchant & Perronnin, 2013b;a). Preliminary concurrent work from Kiyoshiyo et al. (2014) describes a significantly different model similar to Bayesian matrix factorization, using a probabilistic Gaussian graphical model to define a distribution over pairs of words, and they lack quantitative experiments or evaluation.\nIn linguistic semantics, work on the distributional inclusion hypothesis (Geffet & Dagan, 2005), uses traditional count-based vectors to define regions in vector space (Erk, 2009) such that subordinate concepts are included in these regions. In fact, one strength of our proposed work is that we extend these intuitively appealing ideas (as well as the ability to use a variety of asymmetric distances between vectors) to the dense, low-dimensional distributed vectors that are now gaining popularity."}, {"heading": "3 BACKGROUND", "text": "Our goal is to map every word typew in some dictionaryD and context word type c in a dictionary C to a Gaussian distribution over a latent embedding space, such that linguistic properties of the words\nare captured by properties of and relationships between the distributions. For precision, we call an element of the dictionary a word type, and a particular observed token in some context a word token. This is analogous to the class vs. instance distinction in object-oriented programming.\nIn unsupervised learning of word vectors, we observe a sequence of word tokens {t(w)i} for each type w, and their contexts (sets of nearby word tokens), {c(w)i}. The goal is to map each word type w and context word type c to a vector, such that types that appear in similar contexts have similar vectors. When it is unambiguous, we also use the variables w and c to denote the vectors associated to that given word type or context word type.\nAn energy function (LeCun et al., 2006) is a function E\u03b8(x, y) that scores pairs of inputs x and outputs y, parametrized by \u03b8. The goal of energy-based learning is to train the parameters of the energy function to score observed positive input-output pairs higher (or lower, depending on sign conventions) than negative pairs. This is accomplished by means of a loss function L which defines which pairs are positive and negative according to some supervision, and provides gradients on the parameters given the predictions of the energy function.\nIn prediction-based (energy-based) word embedding models, the parameters \u03b8 correspond to our learned word representations, and the x and y input-output pairs correspond to word tokens and their contexts. These contexts can be either positive (observed) or negative (often randomly sampled). In the word2vec Skip-Gram (Mikolov et al., 2013) word embedding model, the energy function takes the form of a dot product between the vectors of an observed word and an observed contextw>c. The loss function is a binary logistic regression classifier that treats the score of a word and its observed context as the score of a positive example, and the score of a word and a randomly sampled context as the score of a negative example.\nBackpropagating (Rumelhart et al., 1986) this loss to the word vectors trains them to be predictive of their contexts, achieving the desired effect (words in similar contexts have similar vectors). In recent work, word2vec has been shown to be equivalent to factoring certain types of weighted pointwise mutual information matrices (Levy & Goldberg, 2014).\nIn our work, we use a slightly different loss function than Skip-Gram word2vec embeddings. Our energy functions take on a more limited range of values than do vector dot products, and their dynamic ranges depend in complex ways on the parameters. Therefore, we had difficulty using the word2vec loss that treats scores of positive and negative pairs as positive and negative examples to a binary classifier, since this relies on the ability to push up on the energy surface in an absolute, rather than relative, manner. To avoid the problem of absolute energies, we train with a ranking-based loss. We chose a max-margin ranking objective, similar to that used in Rank-SVM (Joachims, 2002) or Wsabie (Weston et al., 2011), which pushes scores of positive pairs above negatives by a margin:\nLm(w, cp, cn) = max(0,m\u2212 E(w, cp) + E(w, cn)) In this terminology, the contribution of our work is a pair of energy functions for training Gaussian distributions to represent word types."}, {"heading": "4 WARMUP: EMPIRICAL COVARIANCES", "text": "Given a pre-trained set of word embeddings trained from contexts, there is a simple way to construct variances using the empirical variance of a word type\u2019s set of context vectors.\nFor a word w with N word vector sets {c(w)i} representing the words found in its contexts, and window size W , the empirical variance is\n\u03a3w = 1\nNW N\u2211 i W\u2211 j (c(w)ij \u2212 w)(c(w)ij \u2212 w)>\nThis is an estimator for the covariance of a distribution assuming that the mean is fixed at w. In practice, it is also necessary to add a small ridge term \u03b4 > 0 to the diagonal of the matrix to regularize and avoid numerical problems when inverting.\nHowever, in Section 6.2 we note that the distributions learned by this empirical estimator do not possess properties that we would want from Gaussian distributional embeddings, such as unsupervised entailment represented as inclusion between ellipsoids. By discriminatively embedding our\npredictive vectors in the space of Gaussian distributions, we can improve this performance. Our models can learn certain forms of entailment during unsupervised training, as discussed in Section 6.2 and exemplified in Figure 1."}, {"heading": "5 ENERGY-BASED LEARNING OF GAUSSIANS", "text": "As discussed in Section 3, our architecture learns Gaussian distributional embeddings to predict words in context given the current word, and ranks these over negatively sampled words. We present two energy functions to train these embeddings."}, {"heading": "5.1 SYMMETRIC SIMILARITY: EXPECTED LIKELIHOOD OR PROBABILITY PRODUCT KERNEL", "text": "While the dot product between two means of independent Gaussians is a perfectly valid measure of similarity (it is the expected dot product), it does not incorporate the covariances and would not enable us to gain any benefit from our probabilistic model.\nThe most logical next choice for a symmetric similarity function would be to take the inner product between the distributions themselves. Recall that for two (well-behaved) functions f, g \u2208 Rn \u2192 R, a standard choice of inner product is \u222b\nx\u2208Rn f(x)g(x)dx\ni.e. the continuous version of \u2211 i figi = \u3008f, g\u3009 for discrete vectors f and g.\nThis idea seems very natural, and indeed has appeared before - the idea of mapping data casesw into probability distributions (often over their contexts), and comparing them via integrals has a history under the name of the expected likelihood or probability product kernel (Jebara et al., 2004).\nFor Gaussians, the inner product is defined as\nE(Pi, Pj) = \u222b x\u2208Rn N (x;\u00b5i,\u03a3i)N (x;\u00b5j ,\u03a3j)dx = N (0;\u00b5i \u2212 \u00b5j ,\u03a3i + \u03a3j)\nThe proof of this identity follows from simple calculus. This is a consequence of the broader fact that the convolution of two Gaussian random variables is another Gaussian, and is sometimes called the reproducing property (Kay, 2013).\nSince we aim to discriminatively train the weights of the energy function, and it is always positive, we work not with this quantity directly, but with its logarithm. This has two motivations: firstly, we plan to use ranking loss, and ratios of densities and likelihoods are much more commonly worked with than differences - differences in probabilities are less interpretable than an odds ratio. Secondly, it is easier numerically, as otherwise the quantities can get exponentially small and harder to deal with.\nThe logarithm of the energy (in d dimensions) is\nlogN (0;\u00b5i\u2212\u00b5j ,\u03a3i+\u03a3j) = \u2212 1\n2 log det(\u03a3i+\u03a3j)\u2212\n1 2 (\u00b5i\u2212\u00b5j)>(\u03a3i+\u03a3j)\u22121(\u00b5i\u2212\u00b5j)\u2212 d 2 log(2\u03c0).\nRecalling that the gradient of the log determinant is \u2202\u2202A log detA = A \u22121, and the gradient\n\u2202 \u2202Ax >A\u22121y = \u2212A\u2212>xy>A\u2212> (Petersen, 2006) we can take the gradient of this energy function with respect to the means \u00b5 and covariances \u03a3:\n\u2202E(Pi, Pj) \u2202\u00b5i = \u2212\u2202E(Pi, Pj) \u2202\u00b5j = \u2206ij , \u2202E(Pi, Pj) \u2202\u03a3i = \u2202E(Pi, Pj) \u2202\u03a3j = \u22121 2 (\u2206ij\u2206 > ij \u2212 (\u03a3i + \u03a3j)\u22121)\nwhere \u2206ij = (\u03a3i + \u03a3j)\u22121(\u00b5i \u2212 \u00b5j)\nFor diagonal and spherical covariances, these matrix inverses are trivial to compute, and even in the full-matrix case can be solved very efficiently for the small dimensionality common in embedding models. If the matrices have a low-rank plus diagonal structure, they can be computed and stored even more efficiently using the matrix inversion lemma.\nThis log-energy has an intuitive geometric interpretation as a similarity measure. Gaussians are measured as close to one another based on the distance between their means, as measured through the Mahalanobis distance defined by their joint inverse covariance. Recalling that log detA+ const. is equivalent to the log-volume of the ellipse spanned by the principle components of A, we can interpret this other term of the energy as a regularizer that prevents us from decreasing the distance by only increasing joint variance. This combination pushes the means together while encouraging them to have more concentrated, sharply peaked distributions in order to have high energy."}, {"heading": "5.2 ASYMMETRIC SIMILARITY: KL DIVERGENCE", "text": "Training vectors through KL-divergence to encode their context distributions, or even to incorporate more explicit directional supervision re: entailment from a knowledge base or WordNet, is also a sensible objective choice. We optimize the following energy function (which has a similarly tractable closed form solution for Gaussians):\nE(Pi, Pj) = DKL(Nj ||Ni) = \u222b x\u2208Rn N (x;\u00b5i,\u03a3i) log N (x;\u00b5j ,\u03a3j) N (x;\u00b5i,\u03a3i) dx\n= 1\n2 (tr(\u03a3\u22121i \u03a3j) + (\u00b5i \u2212 \u00b5j) >\u03a3\u22121i (\u00b5i \u2212 \u00b5j)\u2212 d\u2212 log det(\u03a3j) det(\u03a3i) )\nKL divergence is a natural energy function for representing entailment between concepts - a low KL divergence from x to y indicates that we can encode y easily as x, implying that y entails x. This can be more intuitively visualized and interpreted as a soft form of inclusion between the level sets of ellipsoids generated by the two Gaussians - if there is a relatively high expected log-likelihood ratio (negative KL), then most of the mass of y lies inside x.\nJust as in the previous case, we can compute the gradients for this energy function in closed form.\n\u2202E(Pi, Pj) \u2202\u00b5i = \u2212\u2202E(Pi, Pj) \u2202\u00b5j = \u2206\u2032ij\n\u2202E(Pi, Pj)\n\u2202\u03a3i =\n1 2 (\u03a3\u22121i \u03a3j\u03a3 \u22121 i + \u2206 \u2032 ij\u2206 \u2032> ij + \u03a3 \u22121 i )\n\u2202E(Pi, Pj)\n\u2202\u03a3j =\n1 2 (\u03a3\u22121i \u2212 \u03a3 \u22121 j )\nwhere \u2206\u2032ij = \u03a3 \u22121 i (\u00b5i \u2212 \u00b5j)\nusing the fact that \u2202\u2202A tr(X >A\u22121Y ) = \u2212(A\u22121Y X>A\u22121)> and \u2202\u2202A tr(XA) = X > (Petersen, 2006)."}, {"heading": "5.3 UNCERTAINTY OF INNER PRODUCTS", "text": "Another benefit of embedding objects as probability distributions is that we can look at the distribution of dot products between vectors drawn from two Gaussian representations. This distribution is not itself a one-dimensional Gaussian, but it has a finite mean and variance with a simple structure in the case where the two Gaussians are assumed independent (Brown & Rutemiller, 1977). For the distribution P (z = x>y), we have\n\u00b5z = \u00b5 > x \u00b5y \u03a3z = \u00b5 > x \u03a3x\u00b5x + \u00b5 > y \u03a3y\u00b5y + tr(\u03a3x\u03a3y)\nthis means we can find e.g. a lower or upper bound on the dot products of random samples from these distributions, that should hold some given percent of the time. Parametrizing this energy by some number of standard deviations c, we can also get a range for the dot product as:\n\u00b5>x \u00b5y \u00b1 c \u221a \u00b5>x \u03a3x\u00b5x + \u00b5 > y \u03a3y\u00b5y + tr(\u03a3x\u03a3y)\nWe can choose c in a principled using an (incorrect) Gaussian approximation, or more general concentration bounds such as Chebyshev\u2019s inequality."}, {"heading": "5.4 LEARNING", "text": "To learn our model, we need to pick an energy function (EL or KL), a loss function (max-margin), and a set of positive and negative training pairs. As the landscape is highly nonconvex, it is also helpful to add some regularization.\nWe regularize the means and covariances differently, since they are different types of geometric objects. The means should not be allowed to grow too large, so we can add a simple hard constraint to the `2 norm: \u2016\u00b5i\u20162 \u2264 C, \u2200i However, the covariance matrices need to be kept positive definite as well as reasonably sized. This is achieved by adding a hard constraint that the eigenvalues \u03bbi lie within the hypercube [m,M ]d for constants m and M . mI \u227a \u03a3i \u227aMI, \u2200i For diagonal covariances, this simply involves either applying the min or max function to each element of the diagonal to keep it within the hypercube, \u03a3ii \u2190 max(m,min(M,\u03a3ii)). Controlling the bottom eigenvalues of the covariance is especially important when training with expected likelihood, since the energy function includes a log det term that can give very high scores to small covariances, dominating the rest of the energy.\nWe optimize the parameters using AdaGrad (Duchi et al., 2011) and stochastic gradients in small minibatches containing 20 sentences worth of tokens and contexts."}, {"heading": "6 EVALUATION", "text": "We evaluate the representation learning algorithms on several qualitative and quantitative tasks, including modeling asymmetric and linguistic relationships, uncertainty, and word similarity. All Gaussian experiments are conducted with 50-dimensional vectors, with diagonal variances except where noted otherwise. Unsupervised embeddings are learned on the concatenated ukWaC and WaCkypedia corpora (Baroni et al., 2009), consisting of about 3 billion tokens. This matches the experimental setup used by Baroni et al. (2012), aside from leaving out the small British National Corpus, which is not publicly available and contains only 100 million tokens. All word types that appear less than 100 times in the training set are dropped, leaving a vocabulary of approximately 280 thousand word types.\nWhen training word2vec Skip-Gram embeddings for baselines, we follow the above training setup (50 dimensional embeddings), using our own implementation of word2vec to change as little as possible between the two models, only the loss function. We train both models with one pass over the data, using separate embeddings for the input and output contexts, 1 negative sample per positive example, and the same subsampling procedure as in the word2vec paper (Mikolov et al., 2013). The only other difference between the two training regimes is that we use a smaller `2 regularization constraint when using the word2vec loss function, which improves performance vs. the diagonal Gaussian model which does better with \u201cspikier\u201d mean embeddings with larger norms (see the comment in Section 6.4). The original word2vec implementation uses no `2 constraint, but we saw better performance when including it in our training setup."}, {"heading": "6.1 SPECIFICITY AND UNCERTAINTY OF EMBEDDINGS", "text": "In Figure 2, we examine some of the 100 nearest neighbors of several query words as we sort from largest to smallest variance, as measured by determinant of the covariance matrix, using diagonal Gaussian embeddings. Note that more specific words, such as joviality and electroclash have smaller variance, while polysemous words or those denoting broader concepts have larger variances, such as mix, mind, and graph. This is not merely an artifact of higher frequency words getting more variance - when sorting by those words whose rank by frequency and rank by variance are most dissimilar, we see that genres with names like chillout, avant, and shoegaze overindex their variance compared to how frequent they are, since they appear in different contexts. Similarly, common emotion words like sadness and sincerity have less variance than their frequency would predict, since they have fairly fixed meanings. Another emotion word, coldness, is an uncommon word with a large variance due to its polysemy."}, {"heading": "6.2 ENTAILMENT", "text": "As can be seen qualitatively in Figure 1, our embeddings can learn some forms of unsupervised entailment directly from the source data. We evaluate quantitatively on the Entailment dataset of Baroni et al. (2012). Our setup is essentially the same as theirs but uses slightly less data, as mentioned in the beginning of this section. We evaluate with Average Precision and best F1 score. We include the best F1 score (by picking the optimal threshold at test) because this is used by Baroni et al. (2012), but we believe AP is better to demonstrate the correlation of various asymmetric and symmetric measures with the entailment data.\nIn Figure 3, we compare variances learned jointly during embedding training by using the expected likelihood objective, with empirical variances gathered from contexts on pre-trained word2vec-style embeddings. We compare both diagonal (D) and spherical (S) variances, using both cosine similarity between means, and KL divergence. Baseline asymmetric measurements, such as the difference between the sizes of the two embeddings, did worse than the cosine. We see that KL divergence between the entailed and entailing word does not give good performance for the empirical variances, but beats the count-based balAPinc measure when used with learned variances.\nFor the baseline empirical model to achieve reasonable performance when using KL divergence, we regularized the covariance matrices, as the unregularized matrices had very small entries. We regularized the empirical covariance by adding a small ridge \u03b4 to the diagonal, which was tuned to maximize performance, to give the largest possible advantage to the baseline model. Interestingly, the empirical variances do worse with KL than the symmetric cosine similarity when predicting entailment. This appears to be because the empirically learned variances are so small that the choice is between either leaving them small, making it very difficult to have one Gaussian located \u201cinside\u201d another Gaussian, or regularizing so much that their discriminative power is washed out. Additionally, when examining the empirical variances, we noted that common words like \u201csuch,\u201d which receive very large variances in our learned model, have much smaller empirical variances relative to rarer words. A possible explanation is that the contrastive objective forces variances of commonly sam-\npled words to spread out to avoid loss, while the empirical variance sees only \u201cpositive examples\u201d and has no penalty for being close to many contexts at once.\nWhile these results indicate that we can do as well or better at unsupervised entailment than previous distributional semantic measures, we would like to move beyond purely unsupervised learning. Although certain forms of entailment can be learned in an unsupervised manner from distributional data, many entailing relationships are not present in the training text in the form of lexical substitutions that reflect the is-a relationship. For example, one might see phrases such as \u201clook at that bird,\u201d \u201clook at that eagle,\u201d \u201clook at that dog,\u201d but rarely \u201clook at that mammal.\u201d One appealing aspect of our models versus count-based ones is that they can be directly discriminatively trained to embed hierarchies."}, {"heading": "6.3 DIRECTLY LEARNING ASYMMETRIC RELATIONSHIPS", "text": "In Figure 4, we see the results of directly embedding simple tree hierarchies as Gaussians. We embed nodes as Gaussians with diagonal variances in two-dimensional space using gradient descent on the KL divergence between parents and children. We create a Gaussian for each node in the tree, and randomly initialize means. Negative contexts come from randomly sampled nodes that are neither ancestors nor descendents, while positive contexts come from ancestors or descendents using the appropriate directional KL divergence. Our training process captures the hierarchical relationships, although leaf-level siblings are not differentiated from each other by this objective function. This is because out of all the negative examples that a leaf node can receive, only one will push it away from its sibling node."}, {"heading": "6.4 WORD SIMILARITY BENCHMARKS", "text": "We evaluate the embeddings on seven different standard word similarity benchmarks (Rubenstein & Goodenough, 1965; Szumlanski et al., 2013; Hill et al., 2014; Miller & Charles, 1991; Bruni et al., 2014; Yang & Powers, 2006; Finkelstein et al., 2001). A comparison to all of the state of the art word-embedding numbers for different dimensionalities as in (Baroni et al., 2014) is out of the scope of this evaluation. However, we note that the overall performance of our 50-dimensional embeddings matches or beats reported numbers on these datasets for the 80-dimensional Skip-Gram vectors at wordvectors.org (Faruqui & Dyer, 2014), as well as our own Skip-Gram implementation. Note that the numbers are not directly comparable since we use a much older version of Wikipedia (circa 2009) in our WaCkypedia dataset, but this should not give us an edge.\nWhile it is good to sanity-check that our embedding algorithms can achieve standard measures of distributional quality, these experiments also let us compare the different types of variances (spherical and diagonal). We also compare against Skip-Gram embeddings with 100 latent dimensions, since our diagonal variances have 50 extra parameters.\nWe see that the embeddings with spherical covariances have an overall slight edge on the embeddings with diagonal covariances in this case, in a reversal from the entailment experiments. This could be due to the diagonal variance matrices making the embeddings more axis-aligned, making\nit harder to learn all the similarities and reducing model capacity. To test this theory, we plotted the absolute values of components of spherical and diagonal variance mean vectors on a q-q plot and noted a significant off-diagonal shift, indicating that diagonal variance embedding mean vectors have \u201cspikier\u201d distributions of components, indicating more axis-alignment.\nWe also see that the distributions with diagonal variances benefit more from including the variance in the comparison (d) than the spherical variances. Generally, the data sets in which the cosine between distributions (d) outperforms cosine between means (m) are similar for both spherical and diagonal covariances. Using the cosine between distributions never helped when using empirical variances, so we do not include those numbers."}, {"heading": "7 CONCLUSION AND FUTURE WORK", "text": "In this work we introduced a method to embed word types into the space of Gaussian distributions, and learn the embeddings directly in that space. This allows us to represent words not as low-dimensional vectors, but as densities over a latent space, directly representing notions of uncertainty and enabling a richer geometry in our embedded space. We demonstrated the effectiveness of these embeddings on a linguistic task requiring asymmetric comparisons, as well as standard word similarity benchmarks, learning of synthetic hierarchies, and several qualitative examinations.\nIn future work, we hope to move beyond spherical or diagonal covariances and into combinations of low rank and diagonal matrices. Efficient updates and scalable learning is still possible due to the Sherman-Woodbury-Morrison formula. Additionally, going beyond diagonal covariances will enable us to keep our semantics from being axis-aligned, which will increase model capacity and expressivity. We also hope to move past stochastic gradient descent and warm starting and be able to learn the Gaussian representations robustly in one pass from scratch by using e.g. proximal or block coordinate descent methods. Improved optimization strategies will also be helpful on the highly nonconvex problem of training supervised hierarchies with KL divergence.\nRepresenting words and concepts as different types of distributions (including other elliptic distributions such as the Student\u2019s t) is an exciting direction \u2013 Gaussians concentrate their density on a thin spherical ellipsoidal shell, which can lead to counterintuitive behavior in high dimensions. Combining ideas from kernel methods and manifold learning with deep learning and linguistic representation learning is an exciting frontier.\nIn other domains, we want to extend the use of potential function representations to other tasks requiring embeddings, such as relational learning with the universal schema (Riedel et al., 2013). We hope to leverage the asymmetric measures, probabilistic interpretation, and flexible training criteria of our model to tackle tasks involving similarity-in-context, comparison of sentences and paragraphs, and more general common sense reasoning."}], "references": [{"title": "Theoretical foundations of the potential function method in pattern recognition learning", "author": ["M.A. Aizerman", "E.A. Braverman", "L. Rozonoer"], "venue": "In Automation and Remote Control,,", "citeRegEx": "Aizerman et al\\.,? \\Q1964\\E", "shortCiteRegEx": "Aizerman et al\\.", "year": 1964}, {"title": "The wacky wide web: a collection of very large linguistically processed web-crawled corpora", "author": ["Baroni", "Marco", "Bernardini", "Silvia", "Ferraresi", "Adriano", "Zanchetta", "Eros"], "venue": "Language resources and evaluation,", "citeRegEx": "Baroni et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Baroni et al\\.", "year": 2009}, {"title": "Entailment above the word level in distributional semantics", "author": ["Baroni", "Marco", "Bernardi", "Raffaella", "Do", "Ngoc-Quynh", "Shan", "Chung-chieh"], "venue": "In Proceedings of the 13th Conference of the European Chapter of the Association for Computational Linguistics,", "citeRegEx": "Baroni et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Baroni et al\\.", "year": 2012}, {"title": "Don\u2019t count, predict! a systematic comparison of context-counting vs. context-predicting semantic vectors", "author": ["Baroni", "Marco", "Dinu", "Georgiana", "Kruszewski", "Germ\u00e1n"], "venue": "In Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers),", "citeRegEx": "Baroni et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Baroni et al\\.", "year": 2014}, {"title": "Neural probabilistic language models", "author": ["Bengio", "Yoshua", "Schwenk", "Holger", "Sen\u00e9cal", "Jean-S\u00e9bastien", "Morin", "Fr\u00e9deric", "Gauvain", "JeanLuc"], "venue": "In Innovations in Machine Learning,", "citeRegEx": "Bengio et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Bengio et al\\.", "year": 2006}, {"title": "Means and variances of stochastic vector products with applications to random linear models", "author": ["Brown", "Gerald G", "Rutemiller", "Herbert C"], "venue": "Management Science,", "citeRegEx": "Brown et al\\.,? \\Q1977\\E", "shortCiteRegEx": "Brown et al\\.", "year": 1977}, {"title": "Textual similarity with a bag-of-embedded-words model", "author": ["Clinchant", "St\u00e9phane", "Perronnin", "Florent"], "venue": "In Proceedings of the 2013 Conference on the Theory of Information Retrieval,", "citeRegEx": "Clinchant et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Clinchant et al\\.", "year": 2013}, {"title": "Aggregating continuous word embeddings for information retrieval", "author": ["Clinchant", "St\u00e9phane", "Perronnin", "Florent"], "venue": "ACL", "citeRegEx": "Clinchant et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Clinchant et al\\.", "year": 2013}, {"title": "Indexing by latent semantic analysis", "author": ["S. Deerwester", "S.T. Dumais", "G.W. Furnas", "T.K. Landauer", "R.A. Harshman"], "venue": "Journal of the American Society for Information Science", "citeRegEx": "Deerwester et al\\.,? \\Q1990\\E", "shortCiteRegEx": "Deerwester et al\\.", "year": 1990}, {"title": "Adaptive subgradient methods for online learning and stochastic optimization", "author": ["Duchi", "John", "Hazan", "Elad", "Singer", "Yoram"], "venue": "The Journal of Machine Learning Research,", "citeRegEx": "Duchi et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Duchi et al\\.", "year": 2011}, {"title": "Representing words as regions in vector space", "author": ["Erk", "Katrin"], "venue": "In Proceedings of the Thirteenth Conference on Computational Natural Language Learning,", "citeRegEx": "Erk and Katrin.,? \\Q2009\\E", "shortCiteRegEx": "Erk and Katrin.", "year": 2009}, {"title": "Community evaluation and exchange of word vectors at wordvectors.org", "author": ["Faruqui", "Manaal", "Dyer", "Chris"], "venue": "In Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics: System Demonstrations,", "citeRegEx": "Faruqui et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Faruqui et al\\.", "year": 2014}, {"title": "Placing search in context: The concept revisited", "author": ["Finkelstein", "Lev", "Gabrilovich", "Evgeniy", "Matias", "Yossi", "Rivlin", "Ehud", "Solan", "Zach", "Wolfman", "Gadi", "Ruppin", "Eytan"], "venue": "In Proceedings of the 10th international conference on World Wide Web,", "citeRegEx": "Finkelstein et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Finkelstein et al\\.", "year": 2001}, {"title": "The distributional inclusion hypotheses and lexical entailment", "author": ["Geffet", "Maayan", "Dagan", "Ido"], "venue": "In Proceedings of the 43rd Annual Meeting on Association for Computational Linguistics,", "citeRegEx": "Geffet et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Geffet et al\\.", "year": 2005}, {"title": "Simlex-999: Evaluating semantic models with (genuine) similarity estimation", "author": ["Hill", "Felix", "Reichart", "Roi", "Korhonen", "Anna"], "venue": "arXiv preprint arXiv:1408.3456,", "citeRegEx": "Hill et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Hill et al\\.", "year": 2014}, {"title": "Probability product kernels", "author": ["Jebara", "Tony", "Kondor", "Risi", "Howard", "Andrew"], "venue": "The Journal of Machine Learning Research,", "citeRegEx": "Jebara et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Jebara et al\\.", "year": 2004}, {"title": "Optimizing search engines using clickthrough data", "author": ["Joachims", "Thorsten"], "venue": "In Proceedings of the eighth ACM SIGKDD international conference on Knowledge discovery and data mining,", "citeRegEx": "Joachims and Thorsten.,? \\Q2002\\E", "shortCiteRegEx": "Joachims and Thorsten.", "year": 2002}, {"title": "Fundamentals of Statistical Signal Processing, Volume III: Practical Algorithm Development", "author": ["S.M. Kay"], "venue": "Fundamentals of Statistical Signal Processing. Prentice-Hall PTR,", "citeRegEx": "Kay,? \\Q2013\\E", "shortCiteRegEx": "Kay", "year": 2013}, {"title": "A multiplicative model for learning distributed text-based attribute representations", "author": ["Kiros", "Ryan", "Zemel", "Richard", "Salakhutdinov", "Ruslan R"], "venue": "In NIPS,", "citeRegEx": "Kiros et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Kiros et al\\.", "year": 2014}, {"title": "Distribution representation of the meaning of words and phrases by a gaussian distribution", "author": ["Kiyoshiyo", "Shimaoka", "Masayasu", "Muraoka", "Futo", "Yamamoto", "Watanabe", "Yotaro", "Okazaki", "Naoaki", "Inui", "Kentaro"], "venue": "In Language Processing Society 20th Annual Conference (In Japanese),", "citeRegEx": "Kiyoshiyo et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Kiyoshiyo et al\\.", "year": 2014}, {"title": "Matrix factorization techniques for recommender systems", "author": ["Koren", "Yehuda", "Bell", "Robert", "Volinsky", "Chris"], "venue": null, "citeRegEx": "Koren et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Koren et al\\.", "year": 2009}, {"title": "Learning the kernel matrix with semidefinite programming", "author": ["Lanckriet", "Gert RG", "Cristianini", "Nello", "Bartlett", "Peter", "Ghaoui", "Laurent El", "Jordan", "Michael I"], "venue": "The Journal of Machine Learning Research,", "citeRegEx": "Lanckriet et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Lanckriet et al\\.", "year": 2004}, {"title": "Neural word embedding as implicit matrix factorization", "author": ["Levy", "Omer", "Goldberg", "Yoav"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Levy et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Levy et al\\.", "year": 2014}, {"title": "Distributed representations of words and phrases and their compositionality", "author": ["Mikolov", "Tomas", "Sutskever", "Ilya", "Chen", "Kai", "Corrado", "Greg S", "Dean", "Jeff"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Mikolov et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2013}, {"title": "Contextual correlates of semantic similarity", "author": ["Miller", "George A", "Charles", "Walter G"], "venue": "Language and cognitive processes,", "citeRegEx": "Miller et al\\.,? \\Q1991\\E", "shortCiteRegEx": "Miller et al\\.", "year": 1991}, {"title": "A scalable hierarchical distributed language model", "author": ["Mnih", "Andriy", "Hinton", "Geoffrey E"], "venue": "In Advances in neural information processing systems,", "citeRegEx": "Mnih et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Mnih et al\\.", "year": 2008}, {"title": "Probabilistic matrix factorization", "author": ["Mnih", "Andriy", "Salakhutdinov", "Ruslan"], "venue": "In Advances in neural information processing systems,", "citeRegEx": "Mnih et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Mnih et al\\.", "year": 2007}, {"title": "The matrix cookbook", "author": ["Petersen", "Kaare Brandt"], "venue": null, "citeRegEx": "Petersen and Brandt.,? \\Q2006\\E", "shortCiteRegEx": "Petersen and Brandt.", "year": 2006}, {"title": "Relation extraction with matrix factorization and universal schemas", "author": ["Riedel", "Sebastian", "Yao", "Limin", "McCallum", "Andrew", "Marlin", "Benjamin M"], "venue": null, "citeRegEx": "Riedel et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Riedel et al\\.", "year": 2013}, {"title": "Contextual correlates of synonymy", "author": ["Rubenstein", "Herbert", "Goodenough", "John B"], "venue": "Commun. ACM,", "citeRegEx": "Rubenstein et al\\.,? \\Q1965\\E", "shortCiteRegEx": "Rubenstein et al\\.", "year": 1965}, {"title": "Learning representations by back-propagating", "author": ["D.E. Rumelhart", "G.E. Hintont", "R.J. Williams"], "venue": "errors. Nature,", "citeRegEx": "Rumelhart et al\\.,? \\Q1986\\E", "shortCiteRegEx": "Rumelhart et al\\.", "year": 1986}, {"title": "Bayesian probabilistic matrix factorization using markov chain monte carlo", "author": ["Salakhutdinov", "Ruslan", "Mnih", "Andriy"], "venue": "In Proceedings of the 25th international conference on Machine learning,", "citeRegEx": "Salakhutdinov et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Salakhutdinov et al\\.", "year": 2008}, {"title": "A new set of norms for semantic relatedness measures", "author": ["Szumlanski", "Sean R", "Gomez", "Fernando", "Sims", "Valerie K"], "venue": "In ACL,", "citeRegEx": "Szumlanski et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Szumlanski et al\\.", "year": 2013}, {"title": "Wsabie: Scaling up to large vocabulary image annotation", "author": ["Weston", "Jason", "Bengio", "Samy", "Usunier", "Nicolas"], "venue": "In IJCAI,", "citeRegEx": "Weston et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Weston et al\\.", "year": 2011}, {"title": "Distance metric learning with application to clustering with side-information", "author": ["Xing", "Eric P", "Jordan", "Michael I", "Russell", "Stuart", "Ng", "Andrew Y"], "venue": "In Advances in neural information processing systems,", "citeRegEx": "Xing et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Xing et al\\.", "year": 2002}, {"title": "Verb similarity on the taxonomy of wordnet", "author": ["Yang", "Dongqiang", "Powers", "David M. W"], "venue": "In In the 3rd International WordNet Conference (GWC-06), Jeju Island, Korea,", "citeRegEx": "Yang et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Yang et al\\.", "year": 2006}], "referenceMentions": [{"referenceID": 20, "context": "In recent years there has been a surge of interest in learning compact distributed representations or embeddings for many machine learning tasks, including collaborative filtering (Koren et al., 2009), image retrieval (Weston et al.", "startOffset": 180, "endOffset": 200}, {"referenceID": 33, "context": ", 2009), image retrieval (Weston et al., 2011), relation extraction (Riedel et al.", "startOffset": 25, "endOffset": 46}, {"referenceID": 28, "context": ", 2011), relation extraction (Riedel et al., 2013), word semantics and language modeling (Bengio et al.", "startOffset": 29, "endOffset": 50}, {"referenceID": 4, "context": ", 2013), word semantics and language modeling (Bengio et al., 2006; Mnih & Hinton, 2008; Mikolov et al., 2013), and many others.", "startOffset": 46, "endOffset": 110}, {"referenceID": 23, "context": ", 2013), word semantics and language modeling (Bengio et al., 2006; Mnih & Hinton, 2008; Mikolov et al., 2013), and many others.", "startOffset": 46, "endOffset": 110}, {"referenceID": 0, "context": "This paper advocates moving beyond vector point representations to potential functions (Aizerman et al., 1964), or continuous densities in latent space.", "startOffset": 87, "endOffset": 110}, {"referenceID": 8, "context": "Given the parallels between embedding models and matrix factorization (Deerwester et al., 1990; Riedel et al., 2013; Levy & Goldberg, 2014), this is relevant to our approach.", "startOffset": 70, "endOffset": 139}, {"referenceID": 28, "context": "Given the parallels between embedding models and matrix factorization (Deerwester et al., 1990; Riedel et al., 2013; Levy & Goldberg, 2014), this is relevant to our approach.", "startOffset": 70, "endOffset": 139}, {"referenceID": 21, "context": "This allows us to go beyond the Bayesian approach and use arbitrary (and even asymmetric) training criteria, and is more similar to methods that learn kernels (Lanckriet et al., 2004) or function-valued neural networks such as mixture density networks (Bishop, 1994).", "startOffset": 159, "endOffset": 183}, {"referenceID": 18, "context": "Other work in multiplicative tensor factorization for word embeddings (Kiros et al., 2014) and metric learning (Xing et al.", "startOffset": 70, "endOffset": 90}, {"referenceID": 34, "context": ", 2014) and metric learning (Xing et al., 2002) learns some combinations of representations, clusters, and a distance metric jointly; however, it does not effectively learn a distance function per item.", "startOffset": 28, "endOffset": 47}, {"referenceID": 8, "context": "Given the parallels between embedding models and matrix factorization (Deerwester et al., 1990; Riedel et al., 2013; Levy & Goldberg, 2014), this is relevant to our approach. However, these Bayesian methods apply Bayes\u2019 rule to observed data to infer the latent distributions, whereas our model works directly in the space of probability distributions and discriminatively trains them. This allows us to go beyond the Bayesian approach and use arbitrary (and even asymmetric) training criteria, and is more similar to methods that learn kernels (Lanckriet et al., 2004) or function-valued neural networks such as mixture density networks (Bishop, 1994). Other work in multiplicative tensor factorization for word embeddings (Kiros et al., 2014) and metric learning (Xing et al., 2002) learns some combinations of representations, clusters, and a distance metric jointly; however, it does not effectively learn a distance function per item. Fitting Gaussian mixture models on embeddings has been done in order to apply Fisher kernels to entire documents (Clinchant & Perronnin, 2013b;a). Preliminary concurrent work from Kiyoshiyo et al. (2014) describes a significantly different model similar to Bayesian matrix factorization, using a probabilistic Gaussian graphical model to define a distribution over pairs of words, and they lack quantitative experiments or evaluation.", "startOffset": 71, "endOffset": 1144}, {"referenceID": 23, "context": "In the word2vec Skip-Gram (Mikolov et al., 2013) word embedding model, the energy function takes the form of a dot product between the vectors of an observed word and an observed contextw>c.", "startOffset": 26, "endOffset": 48}, {"referenceID": 30, "context": "Backpropagating (Rumelhart et al., 1986) this loss to the word vectors trains them to be predictive of their contexts, achieving the desired effect (words in similar contexts have similar vectors).", "startOffset": 16, "endOffset": 40}, {"referenceID": 33, "context": "We chose a max-margin ranking objective, similar to that used in Rank-SVM (Joachims, 2002) or Wsabie (Weston et al., 2011), which pushes scores of positive pairs above negatives by a margin: Lm(w, cp, cn) = max(0,m\u2212 E(w, cp) + E(w, cn)) In this terminology, the contribution of our work is a pair of energy functions for training Gaussian distributions to represent word types.", "startOffset": 101, "endOffset": 122}, {"referenceID": 15, "context": "This idea seems very natural, and indeed has appeared before - the idea of mapping data casesw into probability distributions (often over their contexts), and comparing them via integrals has a history under the name of the expected likelihood or probability product kernel (Jebara et al., 2004).", "startOffset": 274, "endOffset": 295}, {"referenceID": 17, "context": "This is a consequence of the broader fact that the convolution of two Gaussian random variables is another Gaussian, and is sometimes called the reproducing property (Kay, 2013).", "startOffset": 166, "endOffset": 177}, {"referenceID": 9, "context": "We optimize the parameters using AdaGrad (Duchi et al., 2011) and stochastic gradients in small minibatches containing 20 sentences worth of tokens and contexts.", "startOffset": 41, "endOffset": 61}, {"referenceID": 1, "context": "Unsupervised embeddings are learned on the concatenated ukWaC and WaCkypedia corpora (Baroni et al., 2009), consisting of about 3 billion tokens.", "startOffset": 85, "endOffset": 106}, {"referenceID": 23, "context": "We train both models with one pass over the data, using separate embeddings for the input and output contexts, 1 negative sample per positive example, and the same subsampling procedure as in the word2vec paper (Mikolov et al., 2013).", "startOffset": 211, "endOffset": 233}, {"referenceID": 1, "context": "Unsupervised embeddings are learned on the concatenated ukWaC and WaCkypedia corpora (Baroni et al., 2009), consisting of about 3 billion tokens. This matches the experimental setup used by Baroni et al. (2012), aside from leaving out the small British National Corpus, which is not publicly available and contains only 100 million tokens.", "startOffset": 86, "endOffset": 211}, {"referenceID": 1, "context": "Model Test Similarity Best F1 AP Baroni et al. (2012) E balAPinc 75.", "startOffset": 33, "endOffset": 54}, {"referenceID": 1, "context": "E is the dataset of Baroni et al. (2012). Measures of similarity are symmetric (cosine between means) and asymmetric (KL) divergence for Gaussians.", "startOffset": 20, "endOffset": 41}, {"referenceID": 1, "context": "We evaluate quantitatively on the Entailment dataset of Baroni et al. (2012). Our setup is essentially the same as theirs but uses slightly less data, as mentioned in the beginning of this section.", "startOffset": 56, "endOffset": 77}, {"referenceID": 1, "context": "We evaluate quantitatively on the Entailment dataset of Baroni et al. (2012). Our setup is essentially the same as theirs but uses slightly less data, as mentioned in the beginning of this section. We evaluate with Average Precision and best F1 score. We include the best F1 score (by picking the optimal threshold at test) because this is used by Baroni et al. (2012), but we believe AP is better to demonstrate the correlation of various asymmetric and symmetric measures with the entailment data.", "startOffset": 56, "endOffset": 369}, {"referenceID": 32, "context": "We evaluate the embeddings on seven different standard word similarity benchmarks (Rubenstein & Goodenough, 1965; Szumlanski et al., 2013; Hill et al., 2014; Miller & Charles, 1991; Bruni et al., 2014; Yang & Powers, 2006; Finkelstein et al., 2001).", "startOffset": 82, "endOffset": 248}, {"referenceID": 14, "context": "We evaluate the embeddings on seven different standard word similarity benchmarks (Rubenstein & Goodenough, 1965; Szumlanski et al., 2013; Hill et al., 2014; Miller & Charles, 1991; Bruni et al., 2014; Yang & Powers, 2006; Finkelstein et al., 2001).", "startOffset": 82, "endOffset": 248}, {"referenceID": 12, "context": "We evaluate the embeddings on seven different standard word similarity benchmarks (Rubenstein & Goodenough, 1965; Szumlanski et al., 2013; Hill et al., 2014; Miller & Charles, 1991; Bruni et al., 2014; Yang & Powers, 2006; Finkelstein et al., 2001).", "startOffset": 82, "endOffset": 248}, {"referenceID": 3, "context": "A comparison to all of the state of the art word-embedding numbers for different dimensionalities as in (Baroni et al., 2014) is out of the scope of this evaluation.", "startOffset": 104, "endOffset": 125}, {"referenceID": 28, "context": "In other domains, we want to extend the use of potential function representations to other tasks requiring embeddings, such as relational learning with the universal schema (Riedel et al., 2013).", "startOffset": 173, "endOffset": 194}], "year": 2017, "abstractText": "Current work in lexical distributed representations maps each word to a point vector in low-dimensional space. Mapping instead to a density provides many interesting advantages, including better capturing uncertainty about a representation and its relationships, expressing asymmetries more naturally than dot product or cosine similarity, and enabling more expressive parameterization of decision boundaries. This paper advocates for density-based distributed embeddings and presents a method for learning representations in the space of Gaussian distributions. We compare performance on various word embedding benchmarks, investigate the ability of these embeddings to model entailment and other asymmetric relationships, and explore novel properties of the representation.", "creator": "LaTeX with hyperref package"}}}