{"id": "1412.6649", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "20-Dec-2014", "title": "Qualitative shape representation based on the qualitative relative direction and distance calculus eOPRAm", "abstract": "this document serves as a brief modeling report, detailing the processes used to represent and reconstruct spherical polygons using qualitative boundary descriptions, as defined by the nonlinear qualitative spatial calculus.", "histories": [["v1", "Sat, 20 Dec 2014 12:51:24 GMT  (14kb,D)", "http://arxiv.org/abs/1412.6649v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.GR", "authors": ["christopher h dorr", "reinhard moratz"], "accepted": false, "id": "1412.6649"}, "pdf": {"name": "1412.6649.pdf", "metadata": {"source": "CRF", "title": "Qualitative shape representation based on the qualitative relative direction and distance calculus eOPRAm", "authors": ["Christopher H. Dorr", "Reinhard Moratz"], "emails": [], "sections": [{"heading": "1 Overview", "text": "Qualitative spatial reasoning (QSR) abstracts metrical details of the physical world and enables computers to make predictions about spatial relations even when precise quantitative information is unavailable [3]. From a practical viewpoint qsr is an abstraction that summarizes similar quantitative states into one qualitative characterization. A complementary view from the cognitive perspective is that the qualitative method compares features within the object domain rather than by measuring them in terms of some artificial external scale [4]. This is the reason why qualitative descriptions are quite natural for humans.\nThe two main directions in QSR are topological reasoning about regions [17], [19], [20] and positional reasoning about point configurations, like reasoning about orientation and distance [4], [2], [22], [8].\nThere is also some work about using positional reasoning to describe the qualitative shape of 2D regions. These approaches represent qualitative shape by listing the relative positions of the adjacent vertices of polygons enumerating the outline of the polygon [5]. However, this work only makes very limited use of concepts of qualitative distance. Based on the recent work by Moratz and Wallgru\u0308en [15] there is a candidate for a finer resolution positional QSR calculus called eOPRAm which is suited to describe outlines of polygons on different levels of granularity.\nWhat is the motivation for using qualitative shape descriptions? Qualitative shape descriptions can implicitly act as a schema for measuring the similarity of shapes, which has the potential to be cognitively adequate. Then, shapes which are similar to each other would also be similar for a pattern recognition algorithm. There is substantial work in pattern recognition and computer vision dealing with shape similarity. Here with our approach to qualitative shape descriptions and shape similarity, the focus is on achieving a similarity which can be tested in human test subject empirical research to map to human intuitions about shape similarity. Such experiments became a standard tool in QSR [9].\nar X\niv :1\n41 2.\n66 49\nv1 [\ncs .A\nI] 2\n0 D\nTo enable these experiments the qualitative shape representation must be somehow reversable. That means it must be possible to take the qualitative shape representation and generate prototypical specific shapes that match the abstract description. In previous work about QSR-based shape description it was only possible to take shapes and generate the abstract qsr-based description out it. It was not possible to take a qsr-based shape description and let an automatic algorithm generate a sample shape matching this descrption. Our work described in this report is the very first qsr-based shape description capable of generating prototypical shapes base on the abstract qsr-based representation.\nIn the following report, we discuss the steps taken to reconstruct simple polylgons using eOPRAm descriptions. For our purposes, polygons are defined as a simple closed polylines, or a non self-intersecting chain of points existing in the Cartesian plane R2. Inputs are converted into qualitative eOPRAm descriptions, which are then reconstructed as polygons through a combination of state-space searching and constraint propagation.\nThis report does not cover the process of creating the simplified input polylines. In short, noisy input polylines are simplified via the dce method presented in [1,10].\nWe show that given an appropriate level of granularity, the eOPRAm calculus can be used to represent and reconstruct similar approximations of simple polygons.\nResults presented in this report are produced by a small set of Python programs developed to perform the deconstruction and reconstruction tasks. Roughly, the deconstruction and reconstruction is a three-step process:\n\u2022 compute the vertex-pairwise eOPRAm direction and distance descriptions of the input polyline;\n\u2022 perform an initial reconstruction by simply \u201ctracing\u201d the qualitative hull description;\n\u2022 refine the results of 1 via a greedy search.\nThe remainder of this report is structured as follows: in Section 2, we begin with a brief primer on the eOPRAm calculus, followed by a discussion on the details of generating qualitative descriptions from input polylines. In Section 3 we outline both the initial reconstruction and the subsequent refinement prodecures. In Section 4 we present some sample results. Lastly, in Section 5we offer some discussion on existing and future work."}, {"heading": "2 Generating Qualitative Descriptions", "text": "The goal of this section is to describe the process of generating an eOPRAm qualitative representation from simple polyline data. First, a brief primer on the eOPRAm calculus itself.\n2.1 The eOPRAm Spatial Calculus The eOPRAm calculus [15] exists as an extension of the OPRAm calculus [13,16]. Under OPRAm, points objects are augmented with a local reference direction to create \u201coriented points,\u201d or o-points. Using these local reference directions, along with a series of binary relations, one can express the notion of relative direction between sets of o-points. The OPRAm calculus also includes a granularity parameter m, which defines the resolution of these relative directions by partitioning the plane into 4m sectors.\nThe eOPRAm calculus extends the OPRAm calculus by adding the concept of relative distance to o-points, yielding eo-points. As with directions, local reference distances are attached to points enabling the comparison of relative distances. Similar to qualitative directions, qualitative spatial distances are defined by partitioning the plane into 2m sections, representing distances from 0 (none, overlapping) to same (equal), to far or infinity.\n2.2 eOPRAm Descriptions of Polygons Qualitative eOPRAm descriptions of polygons are comprised of three primary components: a granularity measure m, a pairwise set of qualitative directions, and a set of qualitative distances.\nThe first component, m, defines the granularity of our representation. Although eOPRAm supports the use of different granularity measures for direction and distance, here we use one value for both measures. Once the value of m is specified, it is used to create the pairwise qualitative direction matrix and to transform edge lengths into qualitative distances."}, {"heading": "2.2.1 Qualitative Directions", "text": "To compute the pairwise qualitative direction matrix, one must first find the quantitative counter-clockwise turn angles between each pair of connected edges, or ordered triple of vertices. Given two edges v1 and v2 sharing a common vertex, the positive (counter-clockwise) turn angle \u03b2 is defined as:\n\u03b2 = arctan2 (vy2 ,vx2)\u2212 arctan2 (vy1 ,vx1)\n\u03b2 = { \u03b2 if \u03b2 \u2265 0 \u03b2 + 2\u03c0 if \u03b2 < 0\n(1)\nAn outline of the process used to create all possible connected point triples and compute their turn angles is presented below.\nAlgorithm 1 Generating Pairwise Turn Angles\nInput: Simple polygon of n vertices, p0 through pn\u22121\nO \u2190 empty n\u00d7 n matrix for i\u2190 0, . . . , n\u2212 1 do\nfor j \u2190 0, . . . , n\u2212 1 do if i 6= j then\nprev \u2190 i\u2212 1\nif i = 0 then . if we are at the first vertex prev \u2190 n\u2212 1 . then set prev to the last vertex end if\nv1 \u2190 pi \u2212 pprev v2 \u2190 pj \u2212 pi\nO [i, j]\u2190 PositiveTurnAngleBetween(v1,v2)\nend if end for\nend for return O . return populated turn matrix\nOutput: O, a n\u00d7 n matrix of positive counter-clockwise turn angles\nAfter all turn angles are computed, the next step is to convert them into relative directions. This is done simply by dividing each turn angle (reference direction) by the angular resolution specified by the eOPRAm granularity measure m. The\nangular resolution of a given eOPRAm representation is obtained by dividing the set of possible directions (0\u2212 2\u03c0 radians) into 4m partitions.\neOPRAm angular resolution = 2\u03c0/4m = \u03c0/2m (2)\nturn angle \u03b8 as eOPRAm direction = \u03b8/ (\u03c0/2m) = (\u03b8 \u00d7 2m) /\u03c0 (3)\neOPRAm direction i as turn angle = i\u00d7 angular resolution (4)\nFor example, given m = 2, a reference direction of \u03c0 2 translates to an eOPRA2 direction partition of ( \u03c0 2 \u00d7 4 ) /\u03c0 = 2. When the result of eq. 3 is not an exact integer, the direction partition is assigned as follows: if the integer part i of the result is even, the angle is assigned to partition i+ 1. If the integer part is odd, the angle is assigned to partition i.\neOPRAm direction interval i = { bic+ 1 if bic is even bic if bic is odd\n(5)"}, {"heading": "2.2.2 Qualitative Distances", "text": "The next step in creating our qualitative eOPRAm description is to translate the absolute distances between adjacent vertices into qualitative reference distances. As with directions, eOPRAm reference distances are computed by partitioning a plane into 2m sections, and assigning quantitative values a qualitative representation. Qualitative distances are computed by comparing each edge\u2019s length with the previous edge\u2019s length as a \u201ccontrol\u201d length. Under eOPRAm, a control length \u03b4 is used to turn a series of distance ratios into a series of qualitative distances.\nThe sequence of distance ratios is defined by the granularity parameter m such that there are 2m partitions: the first half of these ratios represent distances \u2264 \u03b4 marked at even intervals of 0, 1\nm , 2 m , . . . , m\u22121 m , 1. The second half of the ratios repre-\nsent distances > \u03b4, and are reciprocals of the first half (reversed): m m\u22121 , m m\u22122 , . . . ,m. For example, given m = 4, these ratios would be ( 0, 1\n4 , 1 2 , 3 4 , 1, 4 3 , 2, 4\n) . Given these\nratios, reference distances are calculated by multiplying each of the ratios by a control length to create quantitative distance markers.\nIn our implementation, the qualitative distance ratios are created once given m, and applied over each edge of the input polygon. Using the previous edge as a control length \u03b4, each distance ratio is turned into a quantitative distance. Once the pair of distances which bound the current edge length is identified, a qualitative distance is assigned as the average of the two bounding distances. For simplicity, we currently start this process by assigning the first edge\u2019s length to that of the input polygon\u2019s first edge.\nUnlike with the directions, this is not done pairwise, but instead only for the distances which represent the edges of the input polygon.\nAlgorithm 2 Generating Qualitatve Distances\nInput: List of n quantitative edge lengths E0, . . . , En\u22121 from input polygon, list of qualitative distance ratios D\nQ\u2190 empty list to hold qualitative distances Q0 \u2190 E0 . first edge length used as initial control length\nfor i\u2190 0, . . . , n\u2212 1 do control\u2190 Qi target\u2190 Ei+1 Qi+1 \u2190 EdgeLengthToQSD(D, control, target) end for\nreturn Q . return list of qualtitative distances\nOutput: Q, a list of n qualitative edge lengths\nIn the algorithm above, each consecutive pair of edges is used to convert an input edge length to a qualitative distance by comparing a target edge length to a series of qualitative distances generated by multiplying each distance ratio by some control distance. Given a control length \u03b4, a target length t to be converted to a qualitative distance, and a set of qualitative distance ratios D, the process computing the qualitative distance goes like:\nAlgorithm 3 Converting Edge Lengths to Qualitative Distances\nInput: List of n qualitative distance ratios D, a control length \u03b4, and a target length t to be converted\nprocedure EdgeLengthToQSD(D, \u03b4, t)\nM \u2190 D \u00d7 \u03b4 . multiply distance ratios by \u03b4\nfor i\u2190 0, . . . , n\u2212 1 do\nlower \u2190Mi upper \u2190Mi+1\nif lower \u2264 t < upper then return (upper + lower) /2\nend if end for\nend procedure\nAt this point, we have completed generating qualitative descriptions of both the angles between vertices and the lengths of connected edges, and can proceed with the tasks involved in reconstruction."}, {"heading": "3 Initial Reconstruction and Refinement", "text": "The first step in the reconstruction process is to simply \u201ctrace\u201d the hull of the eOPRAm descriptions generated in 2.2.1 and 2.2.2. To start, we turn the hull list of eOPRAm direction intervals from eq. 3 back into turn angles (by multiplying each value by the angular resolution, eq. 4), and use the qualitative distances generated in Algorithm 2 as edge lengths to place the vertices. This process gives us a rough representation which we will further refine in the next stages."}, {"heading": "3.1 Initial Reconstruction", "text": "In the current implementation, the input polyline\u2019s initial xy0 (p0) is used to help orient and anchor our reconstructed polyline. Tracing the eOPRAm hull is performed like:\nAlgorithm 4 Tracing the Qualitative Hull of an n-sided Polygon\nT \u2190 list of n eOPRAm directions converted back to angles D \u2190 list of n eOPRAm qualitative edge lengths P \u2190 empty list to hold reconstructed points\nP0 \u2190 input polygon\u2019s p0 . use input polygon\u2019s p0 as our p0\nfor i\u2190 0, . . . , n do pi+1 \u2190 nextXY(pi, Di, Ti) end for\nreturn P . return list P of points generated by nextXY\nThe nextXY method simply returns the next x, y coordinates using the standard vector equations of:\nxn+1 = xn + (distance \u2217 cos \u03b8) yn+1 = yn + (distance \u2217 sin \u03b8)\n(6)\nOnce completed, the process returns a sequence of points representing our first attempt at reconstructing the input polygon. Given an input polygon with n points, our initial reconstruction will have n+ 1 points: this is because our reconstructed polygon has two points representing p0. The first of these points is the p0 from the input polygon, and the second is the pn (the last coordinate) we generated when tracing the hull. In a perfect world, these two values would be identical at this stage, however we often need to adjust the initial reconstruction such that we can achieve closure and remove the duplicate point.\nTo this extent, we begin the refinement process by creating qualitative descriptors of our initial reconstructed polygon just as we did with the original input polygon. This allows us to guide the refinement process by comparing our reconstructions with the input shape via comparing qualitative descriptors. Mainly, we look to the pairwise eOPRAm direction matrices as measures of similarity."}, {"heading": "3.2 Refinement", "text": "In most cases, the initial reconstruction will produce a polyline which is not closed, and which only matches the qualitative hull descriptors. The goal of the refinement stage is two-fold:\n\u2022 achieve closure and\n\u2022 minimize the difference between the initial polyline\u2019s pairwise eOPRAm direction matrix and the reconstructed polyline\u2019s pairwise eOPRAm direction matrix.\nThe refinement process operates by recursively generating and selecting valid \u201csuccessor polylines,\u201d with the two goals above in mind. Successor polylines are created by applying a set of four adjustments to each vertex of the reconstructed polyline (minus the endpoints). These adjustments are:\n\u2022 extend outgoing edge length\n\u2022 contract outgoing edge length\n\u2022 increase turn angle, and\n\u2022 decrease turn angle.\nSuccessor polylines are only passed on to the next steps if: the resulting polyline does not increase either the closure gap or the eOPRAm direction matrix difference. These checks ensures that only \u201cgood\u201d (closer to closure) and \u201clegal\u201d successors (those which do not break any existing matches between eOPRAm direction matrices) are returned.\nUsing the initial reconstructed polyline, its closure gap, and its pairwise eOPRAm direction matrix difference from the initial shape as a baseline, the refinement begins by returning all possible valid polylines which are \u201cone step,\u201d or one adjustment away from the current state.\nWhen complete, the method returns a list of valid successor polylines, sorted by their closure gap. The \u201cbest\u201d of these valid successors (as measured by minimizing the closure gap and eOPRAm direction matrix difference) is then used to repeat the process. The generateSuccessors method is outlined below.\nAlgorithm 5 Generating Successor Polylines Input: initial reconstruction s0, goal polyline eOPRAm direction matrix goal\n\u22060 \u2190 diff(s0, goal) . initial eOPRAm matrix difference gap0 \u2190 ClosureGap(s0) . initial closure gap S \u2190 empty list to hold successors Svalid \u2190 empty list to hold valid successors\nfor i\u2190 1, 2, . . . , n\u2212 1 do for adjustment, mutator in adjustments, mutators do\nSi \u2190 mutator(pi, adjustment). perform adjustment at vertex pi end for\nend for\nfor i\u2190 0, 1, . . . , n\u2212 1 do if diff(Si, goal) < \u22060 then\n\u22060 \u2190 diff(Si, goal) Svalidi \u2190 Si\nend if end for\nreturn Svalid . return list of valid successor polylines\nOutput: list of valid successors \u201cone-step\u201d away from s0\nInitially, the angular and distance adjustments are fairly coarse. This allows for large or otherwise obvious adjustments to be made as soon as possible. However, if the algorithm determines that either:\n\u2022 there are no valid \u201csuccessors\u201d that improve the polyline, or\n\u2022 the differences are no longer moving towards 0, it will decrease the magnitude of the adjustments.\nThe largest angular adjustment is programmatically determined by the eOPRAm granularity m (one-quarter of the angular resolution), and the minimum angular adjustment is arbitrarily set to 1/20th of the initial adjustment. Given the nature of the edge length mutator, the distance adjustments are defined slightly differently (as percent of current length), but effectively range from from currentLength\u00d7 2.0 to currentLength\u00d7 0.5.\nA rough outline of the refinement process as a whole is given below.\nAlgorithm 6 Refining Successor Polylines\nInput: successor polyline q0, input polyline p0\n\u22060 \u2190diff(q0, p0) . initial eOPRAm matrix difference gap0 \u2190 ClosureGap(q0) . initial closure gap S \u2190Successors(q0, p0) . sorted successor polylines\nloop gapcurrent =ClosureGap(S0) if gapcurrent \u2264 minimum appreciable gap then\nbreak . gap is negligible, break end if if gapcurrent \u2265 gap0 then\nif scores not improving then break . no improvements left end if if adjust factor < 20 then\nadjust factor + = 1 . try increasing adjustment resolution end if\nend if\ngap0 \u2190 gapcurrent . otherwise we have a better gap S \u2190Successors(S0, p0) . so use best state to get more successors\nend loop\nThe refinement process will stop when either:\n\u2022 the closure gap becomes negligible, or\n\u2022 the score stops moving even after changing the adjustment resolution n times.\nAs this stage, the algorithm will try to \u201csnap\u201d the polyline shut by setting the endpoint vertices as equal (as long as doing so does not change any qualitative relations). Snapped or not, the refinement process then returns the final state."}, {"heading": "4 Preliminary Results", "text": "A number of sample polylines with a vertex count ranging from 6 to 15 have been tested with the presented processes. Given an eOPRAm granularity of m = 8, all of the sample polylines can successfully be translated to eOPRA8 qualitative\ndescriptions, and reassembled back into approximately similar polylines which achieve both closure and 0-difference eOPRA8 direction hull descriptions, with near-0 eOPRA8 pairwise direction matrix differences. While the refimenent process arbitrarily permits up to 100 iterations and up to 20 adjustment refinements, most of the samples tested reach closure well before those limits.\nFollowing are three sample results, using input polylines with 7, 9, and 10 vertices. Three shapes are shown for each sample input polyline: from left to right, the input polyline, the initial reconstruction, and the final adjusted polyline. In all of the cases below, the input and final polylines have identical eOPRA8 hull direction descriptions."}, {"heading": "5 Conclusion and Outlook", "text": "We have developed a qualitative shape description schema based on the qualitative relative direction and distance calculus eOPRAm. With this new method, we implicitly have a schema for similarity of shapes which has the potential to be cognitively adequate. To enable tests for this cognitive adequacy, the qualitative shape representation must be reversible. With our approach, we can take the qualitative shape representation and generate prototypical specific shapes that match the abstract description. Our work as described in this report is the very first QSR-based shape description capable of generating prototypical shapes based on\nthe abstract qsr-based representation. Results presented in this report are produced by a small set of Python programs developed to perform the deconstruction and reconstruction tasks.\nFuture work includes performing empirical studies with human test subjects to test the cognitive adequacy of our new qualitative shape representation. We also will investigate the application of our shape representation to the formalization of affordances. Affordances are the perceived potential function of everyday objects like chairs, desks, stairs, tables etc. These affordances can assist in the task of object categorization based on 3D shape information [6, 7, 11,12,14,18,21]."}, {"heading": "Acknowledgement", "text": "The authors would like to thank Jan Oliver Wallgru\u0308n for helpful discussions related to the topic of this paper. Our work was supported by the National Science Foundation under Grant No. CDI-1028895."}], "references": [{"title": "Schematizing maps: Simplification of geographic shape by discrete curve evolution", "author": ["Thomas Barkowsky", "Longin Jan Latecki", "Kai-Florian Richter"], "venue": "In Spatial Cognition II,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2000}, {"title": "Qualitative representation of positional information", "author": ["Eliseo Clementini", "Paolino Di Felice", "Daniel Hern\u00e1ndez"], "venue": "Artificial intelligence,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1997}, {"title": "Qualitative spatial representation and reasoning techniques", "author": ["Anthony G Cohn"], "venue": "Advances in Artificial Intelligence,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1997}, {"title": "Using orientation information for qualitative spatial reasoning. In Theories and methods of spatio-temporal reasoning in geographic space, pages 162\u2013178", "author": ["Christian Freksa"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1992}, {"title": "Tripartite line tracks", "author": ["Bj\u00f6rn Gottfried"], "venue": "In International Conference on Computer Vision and Graphics,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2002}, {"title": "Cognitive modelling of vision and speech understanding", "author": ["Bernd Hildebrandt", "Reinhard Moratz", "Gert Rickheit", "Gerhard Sagerer"], "venue": "Advances in psychology,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1999}, {"title": "A topological calculus for cartographic entities. In Spatial Cognition II, pages 225\u2013238", "author": ["Amar Isli", "Lled\u00f3 Museros Cabedo", "Thomas Barkowsky", "Reinhard Moratz"], "venue": null, "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2000}, {"title": "Qualitative spatial representation and reasoning: algebraic models for relative position", "author": ["Amar Isli", "Reinhard Moratz"], "venue": "Univ., Bibliothek des Fachbereichs Informatik,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1999}, {"title": "The egenhofer\u2013cohn hypothesis or, topological relativity? In Cognitive and Linguistic Aspects of Geographic Space, pages 195\u2013215", "author": ["Alexander Klippel", "Rui Li", "Jinlong Yang", "Frank Hardisty", "Sen Xu"], "venue": null, "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2013}, {"title": "Polygon evolution by vertex deletion. In Scale-Space Theories in Computer Vision, pages 398\u2013409", "author": ["Longin Jan Latecki", "Rolf Lak\u00e4mper"], "venue": null, "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1999}, {"title": "Controlling multiple neural nets with semantic networks", "author": ["R Moratz", "Stefan Posch", "Gerhard Sagerer"], "venue": "Proceedings 16. DAGM-Symposium,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1994}, {"title": "Visuelle objekterkennung als kognitive simulation", "author": ["Reinhard Moratz"], "venue": "Dissertationen zur ku\u0308nstlichen Intelligenz; Bd", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1997}, {"title": "Representing relative direction as a binary relation of oriented points", "author": ["Reinhard Moratz"], "venue": "In ECAI,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2006}, {"title": "Affordance-based human-robot interaction", "author": ["Reinhard Moratz", "Thora Tenbrink"], "venue": null, "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2008}, {"title": "Spatial reasoning with augmented points: Extending cardinal directions with local distances", "author": ["Reinhard Moratz", "Jan Oliver Wallgr\u00fcn"], "venue": "Journal of Spatial Information Science,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2014}, {"title": "Qualitative reasoning about relative direction of oriented points", "author": ["Till Mossakowski", "Reinhard Moratz"], "venue": "Artificial Intelligence,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2012}, {"title": "A spatial logic based on regions and connection", "author": ["David A Randell", "Zhan Cui", "Anthony G Cohn"], "venue": "KR, 92:165\u2013176,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1992}, {"title": "A functional model for affordance-based agents", "author": ["Martin Raubal", "Reinhard Moratz"], "venue": null, "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2008}, {"title": "On the complexity of qualitative spatial reasoning: A maximal tractable fragment of the region connection calculus", "author": ["Jochen Renz", "Bernhard Nebel"], "venue": "Artificial Intelligence,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 1999}, {"title": "Integration of imperfect spatial information", "author": ["Michael F Worboys", "Eliseo Clementini"], "venue": "Journal of Visual Languages & Computing,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2001}, {"title": "Automatic object recognition within an office environment", "author": ["Michael Wunstel", "Reinhard Moratz"], "venue": "In Computer and Robot Vision,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2004}, {"title": "Qualitative spatial reasoning using orientation, distance, and path knowledge", "author": ["Kai Zimmermann", "Christian Freksa"], "venue": "Applied Intelligence,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 1996}], "referenceMentions": [{"referenceID": 2, "context": "Qualitative spatial reasoning (QSR) abstracts metrical details of the physical world and enables computers to make predictions about spatial relations even when precise quantitative information is unavailable [3].", "startOffset": 209, "endOffset": 212}, {"referenceID": 3, "context": "A complementary view from the cognitive perspective is that the qualitative method compares features within the object domain rather than by measuring them in terms of some artificial external scale [4].", "startOffset": 199, "endOffset": 202}, {"referenceID": 16, "context": "The two main directions in QSR are topological reasoning about regions [17], [19], [20] and positional reasoning about point configurations, like reasoning about orientation and distance [4], [2], [22], [8].", "startOffset": 71, "endOffset": 75}, {"referenceID": 18, "context": "The two main directions in QSR are topological reasoning about regions [17], [19], [20] and positional reasoning about point configurations, like reasoning about orientation and distance [4], [2], [22], [8].", "startOffset": 77, "endOffset": 81}, {"referenceID": 19, "context": "The two main directions in QSR are topological reasoning about regions [17], [19], [20] and positional reasoning about point configurations, like reasoning about orientation and distance [4], [2], [22], [8].", "startOffset": 83, "endOffset": 87}, {"referenceID": 3, "context": "The two main directions in QSR are topological reasoning about regions [17], [19], [20] and positional reasoning about point configurations, like reasoning about orientation and distance [4], [2], [22], [8].", "startOffset": 187, "endOffset": 190}, {"referenceID": 1, "context": "The two main directions in QSR are topological reasoning about regions [17], [19], [20] and positional reasoning about point configurations, like reasoning about orientation and distance [4], [2], [22], [8].", "startOffset": 192, "endOffset": 195}, {"referenceID": 21, "context": "The two main directions in QSR are topological reasoning about regions [17], [19], [20] and positional reasoning about point configurations, like reasoning about orientation and distance [4], [2], [22], [8].", "startOffset": 197, "endOffset": 201}, {"referenceID": 7, "context": "The two main directions in QSR are topological reasoning about regions [17], [19], [20] and positional reasoning about point configurations, like reasoning about orientation and distance [4], [2], [22], [8].", "startOffset": 203, "endOffset": 206}, {"referenceID": 4, "context": "These approaches represent qualitative shape by listing the relative positions of the adjacent vertices of polygons enumerating the outline of the polygon [5].", "startOffset": 155, "endOffset": 158}, {"referenceID": 14, "context": "Based on the recent work by Moratz and Wallgr\u00fcen [15] there is a candidate for a finer resolution positional QSR calculus called eOPRAm which is suited to describe outlines of polygons on different levels of granularity.", "startOffset": 49, "endOffset": 53}, {"referenceID": 8, "context": "Such experiments became a standard tool in QSR [9].", "startOffset": 47, "endOffset": 50}, {"referenceID": 0, "context": "In short, noisy input polylines are simplified via the dce method presented in [1,10].", "startOffset": 79, "endOffset": 85}, {"referenceID": 9, "context": "In short, noisy input polylines are simplified via the dce method presented in [1,10].", "startOffset": 79, "endOffset": 85}, {"referenceID": 14, "context": "The eOPRAm calculus [15] exists as an extension of the OPRAm calculus [13,16].", "startOffset": 20, "endOffset": 24}, {"referenceID": 12, "context": "The eOPRAm calculus [15] exists as an extension of the OPRAm calculus [13,16].", "startOffset": 70, "endOffset": 77}, {"referenceID": 15, "context": "The eOPRAm calculus [15] exists as an extension of the OPRAm calculus [13,16].", "startOffset": 70, "endOffset": 77}, {"referenceID": 5, "context": "These affordances can assist in the task of object categorization based on 3D shape information [6, 7, 11,12,14,18,21].", "startOffset": 96, "endOffset": 118}, {"referenceID": 6, "context": "These affordances can assist in the task of object categorization based on 3D shape information [6, 7, 11,12,14,18,21].", "startOffset": 96, "endOffset": 118}, {"referenceID": 10, "context": "These affordances can assist in the task of object categorization based on 3D shape information [6, 7, 11,12,14,18,21].", "startOffset": 96, "endOffset": 118}, {"referenceID": 11, "context": "These affordances can assist in the task of object categorization based on 3D shape information [6, 7, 11,12,14,18,21].", "startOffset": 96, "endOffset": 118}, {"referenceID": 13, "context": "These affordances can assist in the task of object categorization based on 3D shape information [6, 7, 11,12,14,18,21].", "startOffset": 96, "endOffset": 118}, {"referenceID": 17, "context": "These affordances can assist in the task of object categorization based on 3D shape information [6, 7, 11,12,14,18,21].", "startOffset": 96, "endOffset": 118}, {"referenceID": 20, "context": "These affordances can assist in the task of object categorization based on 3D shape information [6, 7, 11,12,14,18,21].", "startOffset": 96, "endOffset": 118}], "year": 2014, "abstractText": "This document serves as a brief technical report, detailing the processes used to represent and reconstruct simplified polygons using qualitative spatial descriptions, as defined by the eOPRAm qualitative spatial calculus.", "creator": "LaTeX with hyperref package"}}}