{"id": "1502.05838", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "20-Feb-2015", "title": "Automated Reasoning for Robot Ethics", "abstract": "deontic logic is a very actively researched branch of mathematical programming and philosophy. various kinds of deontic logics are considered for different application domains like argumentation theory, legal biology, and acts in multi - agent systems. in my paper, we show how standard procedure logic can be used as model ethical codes for multi - economic systems. furthermore we show how hyper, using high performance theorem prover, can be implemented to prove properties of these ethical codes.", "histories": [["v1", "Fri, 20 Feb 2015 11:38:58 GMT  (8kb)", "http://arxiv.org/abs/1502.05838v1", "arXiv admin note: substantial text overlap witharXiv:1411.4823"]], "COMMENTS": "arXiv admin note: substantial text overlap witharXiv:1411.4823", "reviews": [], "SUBJECTS": "cs.AI cs.LO", "authors": ["ulrich furbach", "claudia schon", "frieder stolzenburg"], "accepted": false, "id": "1502.05838"}, "pdf": {"name": "1502.05838.pdf", "metadata": {"source": "CRF", "title": null, "authors": [], "emails": ["uli@uni-koblenz.de", "schon@uni-koblenz.de", "fstolzenburg@hs-harz.de"], "sections": [{"heading": null, "text": "ar X\niv :1\n50 2.\n05 83\n8v 1\n[ cs\n.A I]\n2 0\nFe b\n20 15"}, {"heading": "1 Introduction", "text": "Deontic logic is a very well researched branch of mathematical logic and philosophy. Various kinds of deontic logics are considered for different application domains like argumentation theory, legal reasoning, and acts in multi-agent systems [8].\nThis paper applies automated reasoning in standard deontic logic (SDL) to a problem in multi-agent systems. For this, we follow the example from [5] where reasoning with ethical codes is presented. Instead of implementing a reasoning system for deontic logic directly, we rely on the first order reasoning system Hyper [14], which uses the hypertableau calculus from [3]. This has the advantage that reasoning in deontic logic can be embedded easily into other applications for which Hyper is already an inference system (e.g. the LogAnswer system [6]).\nSDL corresponds to the modal logic K with a seriality axiom. Due to the fact that modal logic K is (more or less) a notational variant of description logic ALC, deontic logic can be translated into it [7]. Since Hyper offers a decision procedure for various description logics, it can be employed for reasoning in SDL.\nIn Section 2 we shortly depict the reasoning framework, and in Section 3 we show how to model our small example. This hopefully documents the applicability of reasoning with SDL in multi-agent systems."}, {"heading": "2 Automated Reasoning for Standard Deontic Logic", "text": "Standard deontic logic (SDL) is obtained from the well-known modal logic K by adding the seriality axiom D: P \u2192 \u2666P . In this logic, the -operator is\n\u22c6 This is a short version of [7]. It is supported by the DFG grants FU 263/15-1 and STO 421/5-1 \u2019Ratiolog\u2019.\n2 interpreted as \u2018it is obligatory that\u2019 and the \u2666 as \u2018it is permitted that\u2019. The \u2666-operator can be defined by \u2666P \u2261 \u00ac \u00acP . The seriality axiom in SDL states that, if a formula has to hold in all reachable worlds, then there exists such a world. With the deontic reading of and \u2666 this means: Whenever the formula P ought to be, then there exists a world where it holds. In consequence, there is always a world, which is ideal in the sense that all the norms formulated by \u2018the ought to be\u2019-operator hold.\nDeontic logic is the logic of choice when formalizing knowledge about norms like the representation of legal knowledge or ethical codes for agents. However, there are only few automated theorem provers specially dedicated for deontic logic and used by deontic logicians (see [1,2]). Nonetheless, numerous approaches to translate modal logics into (decidable fragments of) first-order predicate logics are stated in the literature. A nice overview including many relevant references is given in [12].\nIn this paper, we use the first order predicate logic theorem prover Hyper [14] to handle SDL knowledge bases. By using the well-known translation of modal logic into description logic [11] (called \u03d5 in the sequel) and the fact that Hyper offers a decision procedure for the description logic SHIQ [4], we are able to process SDL efficiently. In the following, SDL is translated into ALC, which is a subset of SHIQ.\nTransformation from SDL into ALC\nFor a normative system consisting of the set of deontic logic formulae N = {F1, . . . , Fn}, the translation \u03d5 is defined as the conjunctive combination of the translation of all deontic logic formulae in N :\n\u03d5(N ) = \u03d5(F1) \u2293 . . . \u2293 \u03d5(Fn)\nNote that \u03d5(N ) does not yet contain the translation of the seriality axiom. As shown in [9], the seriality axiom can be translated into the TBox\nT = {\u22a4 \u2291 \u2203r.\u22a4}\nwith r the atomic role introduced by the mapping \u03d5. For our application, the result of the translation of a normative systemN and the seriality axiom is an ALC knowledge base \u03a6(N ) = (T ,A), where the TBox T consists of the translation of the seriality axiom and the ABox A = {(\u03d5(N ))(a)} for a new individual a. In description logics, performing a satisfiability test of a concept C w.r.t. a TBox is usually done by adding a new individual a together with the ABox assertion C(a). For the sake of simplicity, we do this construction already during the transformation of \u03a6 by adding (\u03d5(N ))(a) to the ABox.\nAn advantage of the translation of deontic logic formulae into an ALC knowledge base is the existence of a TBox in ALC. This makes it possible to add further axioms to the TBox. For example we can add certain norms that we want to be satisfied in all reachable worlds into the TBox.\n3"}, {"heading": "Reasoning Tasks", "text": "With the help of Hyper, we can solve the following interesting reasoning tasks:\nConsistency checking of normative systems: In practice, normative systems can be very large. Therefore it is not easy to see, if a given normative system is consistent. The Hyper theorem prover can be used to check consistency of a normative system N .\nEvaluation of normative systems: Given several normative systems, we use Hyper to find out for which normative system a desired outcome is guaranteed."}, {"heading": "3 An Example from Multi-agent Systems", "text": "In multi-agent systems, there is a challenging area of research, namely the formalization of \u2018robot ethics\u2019. It aims at defining formal rules for the behavior of agents and to prove certain properties. As an example consider Asimov\u2019s laws, which aim at regulating the relation between robots and humans. In [5], the authors depict a small example of two surgery robots obeying ethical codes concerning their work. These codes are expressed by means of MADL, which is an extension of standard deontic logic with two operators. In [10], an axiomatization of MADL is given. Further it is asserted, that MADL is not essentially different from standard deontic logic. This is why we use SDL to model the example."}, {"heading": "Formalization in SDL", "text": "In our example, there are two robots ag1 and ag2 in a hospital. For the sake of simplicity, each robot can perform one specific action: ag1 can terminate a person\u2019s life support and ag2 can delay the delivery of pain medication. In [5], four different ethical codes J , J \u22c6, O and O\u22c6 are considered:\n\u2013 \u201cIf ethical code J holds, then robot ag1 ought to take care that life support is terminated.\u201d This is formalized as:\nJ \u2192 act(ag1 , term)\n\u2013 \u201cIf ethical code J \u22c6 holds, then code J holds, and robot ag2 ought to take care that the delivery of pain medication is delayed.\u201d This is formalized as:\nJ \u22c6 \u2192 J \u2227 J \u22c6 \u2192 act(ag2 , delay)\n\u2013 \u201cIf ethical code O holds, then robot ag2 ought to take care that delivery of pain medication is not delayed.\u201d This is formalized as:\nO \u2192 \u00acact(ag2 , delay)\n4 \u2013 \u201cIf ethical code O\u22c6 holds, then code O holds, and robot ag1 ought to take care that life support is not terminated.\u201d This is formalized as:\nO\u22c6 \u2192 O \u2227O\u22c6 \u2192 \u00acact(ag1 , term)\nFurther we give a slightly modified version of the evaluation of the acts of the robots, as stated in [5], where (+!!) denotes the most and (\u2212!!) the least desired outcome. Note that terms like (+!!) are just propositional atomic formulae here.\nact(ag1 , term) \u2227 act(ag2 , delay) \u2192 (\u2212!!) (1)\nact(ag1 , term) \u2227 \u00acact(ag2 , delay) \u2192 (\u2212!) (2)\n\u00acact(ag1 , term) \u2227 act(ag2 , delay) \u2192 (\u2212) (3)\n\u00acact(ag1 , term) \u2227 \u00acact(ag2 , delay) \u2192 (+!!) (4)\nThese formulae evaluate the outcome of the robots\u2019 actions. It makes sense to assume, that this evaluation is effective in all reachable worlds. This is why we add formulae stating that formulae (1)\u2013(4) hold in all reachable worlds. For example, for (1) we add:\n(act(ag1 , term) \u2227 act(ag2 , delay) \u2192 (\u2212!!)) (5)\nSince our example does not include nested modal operators, the formulae of the form (5) are sufficient to spread the evaluation formulae to all reachable worlds. The normative system N formalizing this example consists of the formalization of the four ethical codes and the formulae for the evaluation of the robots actions."}, {"heading": "Reduction to a Satisfiability Test", "text": "A possible query would be to ask if the most desirable outcome (+!!) will come to pass if ethical code O\u22c6 is operative. This query can be translated into a satisfiability test. If N \u2227 O\u22c6 \u2227 \u2666\u00ac(+!!) is unsatisfiable, then ethical code O\u22c6 ensures outcome (+!!). Hyper can be used for this satisfiability test. We obtain the desired result namely that (only) ethical code O\u22c6 leads to the most desirable behavior (+!!)."}, {"heading": "Experiment", "text": "We formalized this example and tested it with the Hyper theorem prover as described above. Since all formalizations are available in ALC, we used the description logic reasoner Pellet [13] to compare the performance with Hyper. It took Pellet 2.548 seconds and Hyper 2.596 seconds to show the unsatisfiability.\nAdditional experiments can be found in [7]. For the examples we considered, the runtimes of Pellet and Hyper are comparable. Further investigation and comparison with other modal and/or description logic reasoning tools is required and subject of future work.\n5"}, {"heading": "4 Conclusion", "text": "In this paper, we illustrated with the help of an example how to use standard deontic logic to model ethical codes for multi-agent systems. For normative systems described with deontic logic, there is a translation into description logic concepts. These concepts can be checked automatically by automated theorem provers. We used the Hyper theorem prover to prove that a specified desired outcome is guaranteed, if a certain ethical code is operative."}], "references": [{"title": "KED: A deontic theorem prover", "author": ["A. Artosi", "P. Cattabriga", "G. Governatori"], "venue": "In On Legal Application of Logic Programming,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1994}, {"title": "A modal defeasible reasoner of deontic logic for the semantic web", "author": ["N. Bassiliades", "E. Kontopoulos", "G. Governatori", "G. Antoniou"], "venue": "Int. J. Semant. Web Inf. Syst.,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2011}, {"title": "Hyper tableaux", "author": ["P. Baumgartner", "U. Furbach", "I. Niemel\u00e4"], "venue": "editors, JELIA,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1996}, {"title": "System description: E-KRHyper 1.4 - extensions for unique names and description logic", "author": ["M. Bender", "B. Pelzer", "C. Schon"], "venue": "editor, CADE-24,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2013}, {"title": "Toward a general logicist methodology for engineering ethically correct robots", "author": ["S. Bringsjord", "K. Arkoudas", "P. Bello"], "venue": "IEEE Intelligent Systems,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2006}, {"title": "An application of automated reasoning in natural language question answering", "author": ["U. Furbach", "I. Gl\u00f6ckner", "B. Pelzer"], "venue": "AI Commun.,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2010}, {"title": "Automated reasoning in deontic logic", "author": ["U. Furbach", "C. Schon", "F. Stolzenburg"], "venue": "MIWAI", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2014}, {"title": "Agency and Deontic Logic", "author": ["J.F. Horty"], "venue": null, "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2001}, {"title": "Description logics of context", "author": ["S. Klarman", "V. Guti\u00e9rrez-Basulto"], "venue": "Journal of Logic and Computation,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2013}, {"title": "Utilitarian deontic logic", "author": ["Y. Murakami"], "venue": "In in \u2018Proceedings of the Fifth International Conference on Advances in Modal Logic (AiML", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2004}, {"title": "A correspondence theory for terminological logics: Preliminary report", "author": ["K. Schild"], "venue": "In In Proc. of IJCAI-91,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1991}, {"title": "First-order resolution methods for modal logics", "author": ["R.A. Schmidt", "U. Hustadt"], "venue": "Programming Logics \u2013 Essays in Memory of Harald Ganzinger,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2013}, {"title": "Pellet: A practical OWL-DL reasoner", "author": ["E. Sirin", "B. Parsia", "B.C. Grau", "A. Kalyanpur", "Y. Katz"], "venue": "Web Semantics: Science, Services and Agents on the World Wide Web,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2007}, {"title": "System description: E-KRHyper", "author": ["C. Wernhard", "B. Pelzer"], "venue": "editor, CADE-21,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2007}], "referenceMentions": [{"referenceID": 7, "context": "Various kinds of deontic logics are considered for different application domains like argumentation theory, legal reasoning, and acts in multi-agent systems [8].", "startOffset": 157, "endOffset": 160}, {"referenceID": 4, "context": "For this, we follow the example from [5] where reasoning with ethical codes is presented.", "startOffset": 37, "endOffset": 40}, {"referenceID": 13, "context": "Instead of implementing a reasoning system for deontic logic directly, we rely on the first order reasoning system Hyper [14], which uses the hypertableau calculus from [3].", "startOffset": 121, "endOffset": 125}, {"referenceID": 2, "context": "Instead of implementing a reasoning system for deontic logic directly, we rely on the first order reasoning system Hyper [14], which uses the hypertableau calculus from [3].", "startOffset": 169, "endOffset": 172}, {"referenceID": 5, "context": "the LogAnswer system [6]).", "startOffset": 21, "endOffset": 24}, {"referenceID": 6, "context": "Due to the fact that modal logic K is (more or less) a notational variant of description logic ALC, deontic logic can be translated into it [7].", "startOffset": 140, "endOffset": 143}, {"referenceID": 6, "context": "In this logic, the -operator is \u22c6 This is a short version of [7].", "startOffset": 61, "endOffset": 64}, {"referenceID": 0, "context": "However, there are only few automated theorem provers specially dedicated for deontic logic and used by deontic logicians (see [1,2]).", "startOffset": 127, "endOffset": 132}, {"referenceID": 1, "context": "However, there are only few automated theorem provers specially dedicated for deontic logic and used by deontic logicians (see [1,2]).", "startOffset": 127, "endOffset": 132}, {"referenceID": 11, "context": "A nice overview including many relevant references is given in [12].", "startOffset": 63, "endOffset": 67}, {"referenceID": 13, "context": "In this paper, we use the first order predicate logic theorem prover Hyper [14] to handle SDL knowledge bases.", "startOffset": 75, "endOffset": 79}, {"referenceID": 10, "context": "By using the well-known translation of modal logic into description logic [11] (called \u03c6 in the sequel) and the fact that Hyper offers a decision procedure for the description logic SHIQ [4], we are able to process SDL efficiently.", "startOffset": 74, "endOffset": 78}, {"referenceID": 3, "context": "By using the well-known translation of modal logic into description logic [11] (called \u03c6 in the sequel) and the fact that Hyper offers a decision procedure for the description logic SHIQ [4], we are able to process SDL efficiently.", "startOffset": 187, "endOffset": 190}, {"referenceID": 8, "context": "As shown in [9], the seriality axiom can be translated into the TBox", "startOffset": 12, "endOffset": 15}, {"referenceID": 4, "context": "In [5], the authors depict a small example of two surgery robots obeying ethical codes concerning their work.", "startOffset": 3, "endOffset": 6}, {"referenceID": 9, "context": "In [10], an axiomatization of MADL is given.", "startOffset": 3, "endOffset": 7}, {"referenceID": 4, "context": "In [5], four different ethical codes J , J \u22c6, O and O\u22c6 are considered:", "startOffset": 3, "endOffset": 6}, {"referenceID": 4, "context": "O\u22c6 \u2192 O \u2227O\u22c6 \u2192 \u00acact(ag1 , term) Further we give a slightly modified version of the evaluation of the acts of the robots, as stated in [5], where (+!!) denotes the most and (\u2212!!) the least desired outcome.", "startOffset": 132, "endOffset": 135}, {"referenceID": 12, "context": "Since all formalizations are available in ALC, we used the description logic reasoner Pellet [13] to compare the performance with Hyper.", "startOffset": 93, "endOffset": 97}, {"referenceID": 6, "context": "Additional experiments can be found in [7].", "startOffset": 39, "endOffset": 42}], "year": 2015, "abstractText": "Deontic logic is a very well researched branch of mathematical logic and philosophy. Various kinds of deontic logics are considered for different application domains like argumentation theory, legal reasoning, and acts in multi-agent systems. In this paper, we show how standard deontic logic can be used to model ethical codes for multi-agent systems. Furthermore we show how Hyper, a high performance theorem prover, can be used to prove properties of these ethical codes.", "creator": "LaTeX with hyperref package"}}}