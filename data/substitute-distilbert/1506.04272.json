{"id": "1506.04272", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "13-Jun-2015", "title": "Attacker and Defender Counting Approach for Abstract Argumentation", "abstract": "in dung's abstract argumentation, arguments are either acceptable or unacceptable, defining a chosen notion of acceptability. this gives a coarse way. compare arguments. in this paper, we propose one counting approach for a more lesson - gained assessment to arguments by referencing the number of their respective attackers and defenders based on binary graph and argument game. an argument is more acceptable if the proponent puts along more number of defenders for it less the opponent puts forward less number of attackers of it. we show that our counting comprehension has two like - behaved properties : normalization and convergence. then, we create another counting semantics based on this model, and investigate some general properties of the semantics.", "histories": [["v1", "Sat, 13 Jun 2015 14:24:51 GMT  (49kb,D)", "https://arxiv.org/abs/1506.04272v1", "7 pages, 2 figures;conference CogSci 2015"]], "COMMENTS": "7 pages, 2 figures;conference CogSci 2015", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["fuan pu", "jian luo", "yulai zhang", "guiming luo"], "accepted": false, "id": "1506.04272"}, "pdf": {"name": "1506.04272.pdf", "metadata": {"source": "CRF", "title": "Attacker and Defender Counting Approach for Abstract Argumentation1", "authors": ["Fuan Pu", "Jian Luo", "Yulai Zhang", "Guiming Luo"], "emails": ["pfa12@mails.tsinghua.edu.cn,", "j-luo10@mails.tsinghua.edu.cn,", "zhangyl08@mails.tsinghua.edu.cn,", "gluo@mail.tsinghua.edu.cn"], "sections": [{"heading": "Introduction", "text": "Argumentation is an important cognitive process for dealing with conflicting knowledge based on the construction and evaluation of interacting arguments [1]. It has been applied in various domains and applications such as decision making and e-participation. The most popularly used framework to talk about general issues of argumentation is that of Dung\u2019s abstract argumentation [2], which consists of a set of arguments and a binary relation that represents the conflicting arguments. A number of argumentation semantics for abstract argumentation frameworks have been proposed that highlight different aspects of argumentation [3], such as admissible sets, preferred extension, and grounded extension. However, these semantics provide a rather rough way to evaluate arguments and may result in some undesired results [4]. A common case is that a semantics may give an empty answer. Conversely, several answers may be provided, with nothing to distinguish between them.\nIn order to overcome these difficulties, there is a trend towards considering and exploring the possibility of discriminating between arguments by employing a larger number of categories or continuous numerical scales [5\u20139]. One of the main advantages of these works is that it allows for a more fine-grained assessment on arguments than is provided by the traditional extensions-based approaches. We aim at following these works by evaluating the strength of arguments on a scale of numerical values from 0 to 1 so as to finely compare and rank arguments from the most acceptable to the weakest one(s). This fits well with recent interest in quantitative measures for the ranking analysis of argumentation [10, 11].\nIn this paper, our fundamental idea used to formalise argument strength is essentially the same as those found in abstract argumentation theory: argument x is more acceptable\n1This work was supported by the Funds NSFC 61171121.\nthan argument y iff x has a better defence (for it) and a lower attack (against it). In order to assess the strength of arguments in an argumentation framework, we will consider their evaluation procedures as dialogue games [12], where two fictitious agents\u2014one PRO (the proponent) and the other OPP (the opponent)\u2014take part in. A dialogue game begin with PRO putting forward an initial argument, and then PRO and OPP take turns in a sequence of moves called a dispute, in which each agent makes an argument that attacks its counterpart\u2019s last move. In general, the counterpart can try a different line of attack and create a new dispute. This leads to a dispute tree structure that represents the dialogue game. Nodes in a dispute tree are labelled by arguments and are assigned the status of defender node and attacker node of the root argument, depending upon the argument at that node is made by the proponent or by the opponent, or depending upon whether the walk length between the current node and the root node is even or odd. We claim that an argument is more acceptable if PRO puts forward more number of defender nodes for it and OPP puts forward less number of attacker nodes against it. We will thus introduce a graded approach to assess the strength of each argument based on its dispute tree by counting its defender nodes and attacker nodes.\nThe rest of this paper is organized as follows. In Section 2 we briefly recall some background on Dung\u2019s abstract argumentation and argument game. We present the attacker and defender counting semantics in Section 3. Some properties of the semantics are investigated in Section 4. Section 5 discusses related work and concludes."}, {"heading": "Preliminaries", "text": ""}, {"heading": "Abstract argumentation framework", "text": "We consider the basic concepts and insights of Dung\u2019s abstract argumentation framework, in which both arguments and attacks are assumed to be abstract entities [2].\nDefinition 1 (Argumentation framework) An argumentation framework (or AF, in short) is a pair AF = \u3008X ,R\u3009 where X is a set of arguments and R \u2286 X \u00d7 X is a binary relation called attack relation. For two arguments x, y \u2208 X , (x, y) \u2208 R or xRy means that x attacks y.\nWe denote by R\u2212(x) (respectively, R+(x)) the subset of X containing those arguments that attack (respectively, are attacked by) the argument x \u2208 X , extending this notation in the natural way to sets of arguments, so that for S \u2286 X , R\u2212(S) , {x \u2208 X : \u2203y \u2208 S such that xRy} and R+(S) , {x \u2208 X : \u2203y \u2208 S such that yRx}.\nTo define the solutions of an AF, we mean selecting a set of arguments that satisfy some acceptable criteria. Dung\nar X\niv :1\n50 6.\n04 27\n2v 1\n[ cs\n.A I]\n1 3\nJu n\n20 15\npresents several of these properties, called extensions or semantics, which produce zero, one, or several sets of accepted arguments. These semantics are based on two important concepts: conflict-freeness and defence.\nDefinition 2 (Conflict-free, Defense) Let AF = \u3008X ,R\u3009 be an argumentation framework, let S \u2286 X and x \u2208 X . \u2022 S is conflict-free iff @x, y \u2208 S such that xRy. \u2022 S defends argument x iff \u2200y \u2208 X if yRx then \u2203z \u2208 S such\nthat zRy. It is also said that argument x is acceptable with respect to S.\nUsing the notions of conflict-freeness and defence, we can define a number of argumentation semantics, each embodying a particular rationality criterion.\nDefinition 3 (Acceptability semantics) Let S \u2286 X be conflict-free, and let F : 2X 7\u2192 2X be a function such that F(S) , {x \u2208 X : S defends x}. \u2022 S is admissible iff S \u2286 F(S). \u2022 S is a preferred extension iff it is a maximal (w.r.t \u2286) ad-\nmissible set. \u2022 S is a stable extension iff it attacks all arguments in X\\S. \u2022 S is a complete extension iff S = F(S). \u2022 S is a grounded extension iff it is the minimal (w.r.t \u2286)\ncomplete extension.\nExample 1 Consider an AF = \u3008X ,R\u3009, described in Figure 1a, in which X = {x1, x2, x3, x4} and R = {(x2, x1), (x3, x2), (x2, x3), (x3, x3), (x4, x2)}. For this example, AF has three admissible sets: \u2205, {x4} and {x1, x4}. {x1, x4} is the only preferred extension of AF, and it is also complete and grounded. AF has no stable extension.\nArgument graph and argument game An argumentation framework can be represented as a digraph, called argument graph, in which vertices are arguments and directed arcs characterise attack relations between arguments.\nDefinition 4 Let G be the argument graph associated to the argumentation framework \u3008X ,R\u3009: \u2022 A walk from x to y is a sequence of arguments S = \u3008x\u20320, x\u20321, \u00b7 \u00b7 \u00b7 , x\u2032m\u3009 such that x\u20320 = x, x\u2032m = y and x\u2032t\u22121Rx\u2032t for all t \u2208 {1, 2, \u00b7 \u00b7 \u00b7 ,m}. The length of this walk, denoted by `S , is the number of edges used in the walk. We denote the set of all walks from x to y of length ` by S(x, y, `).\n\u2022 A cycle is a walk S = \u2329 x\u20320, x \u2032 1, \u00b7 \u00b7 \u00b7 , x\u2032m\u22121, x\u20320 \u232a . A cycle is\nan elementary cycle iff for any i, j \u2208 {1, 2, \u00b7 \u00b7 \u00b7 ,m \u2212 1} such that if i 6= j then x\u2032i 6= x\u2032j . \u2022 G is acyclic iff there are no cycles in G. In this paper, we assess the strengths of arguments based on abstract argument games without regard to the specific internal structure of the arguments [12]. These games typically assume the presence of two fictitious agents, PRO (for \u201cproponent\u201d) and OPP (for \u201copponent\u201d). Each game start with PRO asserting an initial argument to be tested. OPP\nand PRO then take turns in moving arguments that successively attack each other\u2019s last move. A sequence of moves in which each agent moves against its counterpart\u2019s last move is referred to as a dispute. Generally, however, an agent can backtrack to a counterpart\u2019s previous move and initiate a new dispute. Thus, the data structure of an argument game can be represented by an argument graph\u2019s induced dispute tree, in which each branch from root to leaf is a dispute:\nDefinition 5 (Dispute tree) Let AF = \u3008X ,R\u3009 be an argumentation framework, and let x \u2208 X . The dispute tree induced by x in AF is a tree T of arguments, such that the root of T is x, and for any y, z \u2208 X , y is a child of z in T iff yRz.\nNodes in a dispute tree are labelled by arguments and are assigned the status of defender node or attacker node of the root argument, depending upon whether the walk length from the current node to the root node is even or odd, or depending upon whether the argument at that node is made by PRO or by OPP. Consider two agents arguing the argumentation framework shown in Figure 1a, and the dispute tree induced by x1 is shown Figure 1b. Note that this dispute tree is infinite, since both agents are able to repeat counterarguments due to the presence of cycles in the argument graph. In this dispute tree, the blue solid nodes, put forward by PRO, are defender nodes of x1, whereas, the red dotted nodes, made by OPP, are attacker nodes of x1. Each node is also assigned a superscript, which denotes the length of the move sequence from the current node to the root node. Obviously, if a node has a even-numbered superscript then it is a defender node, otherwise it is an attacker node. Note that the root node is also a defender node of x1 since each argument has a walk with length 0 to itself.\nIn this paper, we define the argument within a defender (respectively, attacker) node is a defender (respectively, attacker) of the argument within the root node. An argument x is a defender or an attacker of argument y depending on the length of the walk between them. Now, let us define attacker and defender based on argument graph:\nDefinition 6 (Attacker and Defender) Let \u3008X ,R\u3009 be an AF, and G be its argument graph. Let arguments x, y \u2208 X .\n\u2022 x is an attacker of y if there exists a walk S from x to y such that `S = 2t+ 1 with t = 0, 1, 2, \u00b7 \u00b7 \u00b7 . Then, x is said to be a `S -length attacker of y. \u2022 x is an defender of y if there exists a walk S from x to y such that `S = 2t with t = 0, 1, 2, \u00b7 \u00b7 \u00b7 . Then, we call x is said to be a `S -length defender of y.\nNote that an defender can also be a attacker (e.g., an defender node and an attacker node are labelled by the same argument). In the same way, two defenders can be the same argument (e.g., two different lengths of defender nodes are labelled by the same argument) and the same thing may occur for the attackers. In [5], the authors distinguish attackers (respectively, defenders) by direct and indirect. In this paper, instead, we distinguish them by different walk and walk length. Accordingly, if there exists m number of `-length walks from argument x to argument y, i.e. |S(x, y, `)| = m, then we consider that x is the m number of different `-length attackers or defenders of y.\nExample 2 Consider the argumentation graph depicted in Figure 1. It can be easily see that there are two elementary cycles \u3008x2, x3, x2\u3009 and \u3008x3, x3\u3009. Since S(x2, x1, 1) = {\u3008x2, x1\u3009} and S(x2, x1, 3) = {\u3008x2, x3, x2, x1\u3009}, thus x2 is a 1-length and 3-length attacker of x1 (corresponding to the attacker nodes x(1)2 and x (3) 2 in the dispute tree). Note that x2 is also a defender of x1 due to the 4-length walk \u3008x2, x3, x3, x2, x1\u3009 (corresponding to the defender node x (4) 2 ). There exist two walks from x3 to x1 of length 4, i.e., S(x3, x1, 4) = {\u3008x3, x3, x3, x2, x1\u3009 , \u3008x3, x2, x3, x2, x1\u3009} (corresponding to two defender nodes x(4)3 ), thus x3 is two different 4-length defenders of x1."}, {"heading": "Attacker and Defender Counting Semantics", "text": "In classical abstract argumentation, arguments are either acceptable or unacceptable, given a chosen notion of acceptability. This gives a rather coarse way to compare arguments. In this paper, we intend to provide a more fine-grained evaluation of arguments based on the graph structure of the argument system. Our basic starting point is that argument x is more acceptable than argument y iff PRO makes more defenders for x and OPP makes less attackers against x.\nTowards such an idea, our approach is to count the number of all attackers and defenders for each argument. The less the attackers and the more defenders an argument has, the more acceptable the argument. In this approach, the main constraint is that we must be able to identify all attackers and defenders for each argument. This is quite easy in the case of argument graphs without cycles. In this section, we will introduce first a matrix approach to record and track all attackers and defenders of different lengths for every argument regardless of whether the argument graph is acyclic or cyclic. Then, counting models are established to assess the strengths of arguments, and a counting semantics is defined. The properties of this semantics are studied in the next section."}, {"heading": "Finding attackers and defenders", "text": "In this subsection, we will use a series of matrices to memorise the number of all walks with different lengths between any two arguments, and will present a matrix product approach to compute these matrices.\nLet AF = \u3008X ,R\u3009 be an argumentation framework with X = {x1, x2, \u00b7 \u00b7 \u00b7 , xn}. We use a n\u00d7 n matrix A(`) = [a(`)ij ] to memorise the number of `-length walks between any pair of arguments, which is defined as\na (`) ij = |S(xj , xi, `)|\nIntuitively, A(0) = I where I is the identity matrix. Now let us define another n\u00d7nmatrix A = [aij ], called attack matrix, where entry aij is 1 iff xjRxi; otherwise 0. Obviously, A is the transpose of the adjacency matrix of the attack graph of AF. Then, it is easy to see that A(1) = A, and further we have the following result:\nLemma 1 A(`) = A` for each ` = 0, 1, 2, \u00b7 \u00b7 \u00b7 . This lemma is common in graph theory. We introduce it here since it provides us a way to represent and compute the number of all walks with different lengths between any two arguments. It implies that by this approach we can find all attackers or defenders of various lengths of an argument. From now on, we will use A` to substitute for A(`) for brevity.\nProposition 1 Let G be the argument graph of AF = \u3008X ,R\u3009 and its attack matrix be A. [P1] If there exists a cycle in AF, then for any positive integer ` it holds that A` 6= 0. 2 [P2] If G is acyclic, then there exists a positive integer r such\nthat A` 6= 0 for any positive integer ` \u2264 r, and A` = 0 for any integer ` \u2265 r + 1. Moreover, r is the length of the longest walk in G.\nThis proposition reveals that if the attack graph of an argumentation framework is acyclic, the attackers and defenders of each argument is finite; otherwise, an argument in a cyclic graph may have infinite attackers and defenders.\nThe counting models for argumentation framework Now, we will concern on establishing the counting model for the evaluation of arguments.\nThe simple counting model The basic idea behind the simple counting model is: for each argument x, for each walk length `, to count the number of `-attackers or `-defenders for x. We positively count all defenders and negatively count all attackers. This is easy to understand since an argument is always weakened by its attackers and is \u201creinstated\u201d by its defenders. Therefore, in any case, the greater the number computed, the more acceptable the argument x.\nCycles in argument graphs are expensive as the attackers and defenders of an argument may be infinite. Here we firstly consider the approach to count attackers and defenders under\n2A matrix M 6= 0 means that there exists some entry in M is non-zero. On the contrary, M = 0 means that all entries in M are zeros.\na given maximum walk length, denoted by k, which will be used in order to capture finite attackers and defenders. Let AF = \u3008X ,R\u3009 with X = {x1, x2, \u00b7 \u00b7 \u00b7 , xn} and let v be the n-dimensional column vector over X . Given the maximum walk length k, we define the simple counting model as\nv(k) = k\u2211 `=0 (\u22121)`A`e (1)\nwhere e is the column vector consisting of all ones. Note that here (\u22121)` encodes the consideration of positively and negatively counting since (\u22121)` is \u22121 for odd ` and 1 for even `. The item A`e means counting the number of all `- length attackers or defenders of each argument. As k goes to \u221e, then v(k) is the evaluation on arguments.\nHowever, there are two problems with this simple counting model. The first is that for an attack graph with cycles, when k goes to \u221e, then some arguments may have infinite number of attackers and defenders, which may cause v(k) go to \u221e. Considering the attack graph in Figure 1a, for example, there are 3.54 \u00d7 1020 different walks from x3 to x2 of length 100. As the representation and processing of the infinite case is difficult, the simple counting model is not conducive to comparison and practical application. For example, if the counting values of two arguments are both infinite, we can not compare them.\nThe second problem is that the simple counting model does not distinguish different lengths of attackers and defenders. Different lengths of attackers or defenders of an argument may have different effects on the argument. The simple model just simply counting them together and does not consider which is more important and which is less important. In this paper, shorter attackers and defenders are preferred, which can effectively drive the agents to make only relevant moves, and thus we assume that a shorter attacker (respectively, defender) of an argument has more effect than a longer one on the argument [13]. More concretely, considering the move sequence x(4)3 \u2192 x (3) 3 \u2192 x (2) 3 \u2192 x (1) 2 \u2192 x (0) 1 in Figure 1b, where x(0)1 , x (2) 3 and x (4) 3 are three defender nodes of x1, and x (1) 2 and x (3) 3 are two attacker nodes of x1. Here, we consider x(0)1 has more (defence) effect than x (2) 3 on x1 since x (2) 3 has a longer walk to x1. Similar viewpoint gives that x (2) 3 has more (defence) effect than x (4) 5 on x1, and that x (1) 2 has more (attack) effect than x(3)3 on x1.\nThe improved counting model To remedy these two problems, we firstly define a normalization factor, which can ensure that the argument strength scale is bounded, and secondly we define a damping factor on walk length, which allows a more refined treatment on different length of attacker and defenders. Then, we write the improved counting model as\nv(k) = k\u2211 `=0 (\u22121)`\u03b1`A\u0303`e (2)\nin which \u03b1 \u2208 (0, 1) is the damping factor and A\u0303 is the normalized attack matrix defined as A\u0303 = A/N where the scalar\nN is the normalization factor. Now, we can see that the damping factor \u03b1 provides a graded treatment of attackers and defenders of various lengths since the longer the walk length `, the smaller the \u03b1`.\nTo ensure bounded v(k), the underlying principle to select the normalization factor N should satisfy the spectral radius of A\u0303 no more than 1 [14, Chapter. 5]. In this paper, we select N as the matrix infinite norm of A, defined for A by\nN = \u2016A\u2016\u221e = max 1\u2264i\u2264n n\u2211 j=1 |aij |\nsince it provides two well-behaved properties as follows:\nTheorem 1 (Normalization) For any non-negative integer k, the improved counting model v(k) defined in Equation 2 is such that 0 \u2264 v(k) \u2264 e. For any argumentation system, the improved counting model can range the strength value of each argument into the interval [0, 1], as it uses a dynamic normalization factor N , in other words, the norm of an attack matrix used here represents the \u201csize\u201d of its corresponding argumentation framework. With this normalization property, all arguments can be easily compared. We must note that here the strength values of arguments are relative and not the real number of their attackers and defenders, hence, they do not make sense when they are not compared with each other.\nAnother property is called convergence, which states that as k goes to\u221e, the improve counting model will converge. Theorem 2 (Convergence) The sequence {v(k)}\u221ek=0 defined by Equation 2 necessarily converges.\nThe proof this theorem needs to consider two cases, i.e., attack graph G contains cycle(s) or not. We can prove that for both cases, the improved counting model always converges to a unique solution."}, {"heading": "The counting semantics for AF", "text": "We now define the attacker and defender counting semantics for an argumentation framework as the limit of {v(k)}\u221ek=0. Definition 7 Let AF = \u3008X ,R\u3009 be an argumentation framework with X = {x1, x2, \u00b7 \u00b7 \u00b7 , xn}. The attacker and defender counting semantics for such AF is, for all arguments X ,\nv = lim k\u2192\u221e\nv(k)\nThe strength value of each argument xi is denoted as v(xi).\nTo obtain this counting semantics, one basic idea is to compute v(0),v(1), \u00b7 \u00b7 \u00b7 until either v(k) = v(k\u22121) or the approximation is considered adequate. If directly utilizing Equation 2, this may incur prohibitively expensive computational cost since for each k we need to recompute all attackers and defenders for every argument. By Equation 2, however, we can easily derive the following iteration approach: v(k) = e\u2212 \u03b1A\u0303v(k\u22121) (3) Then, the next valuation can be computed by the outputs of the previous iteration. With the initial valuation v(0) = e, we can approximate the unique solution by iteration. This iterative approach is done by using Algorithm 1. On line 2\nwe substitute A\u0302 for \u03b1A\u0303 to reduce the calculation, and on line 6 the change \u03b4 is computed. In line 7 the iteration terminates when the change \u03b4 is under a given tolerance . It can be proved that the convergence speed of this iteration algorithm is linear and no more than \u03b1.\nAlgorithm 1: An Iteration Approach for Attacker and Defender Counting Semantics\nInput: \u03b1: damping factor; A: attack matrix; : prescribed tolerance;\nOutput: v(k): the approximate counting semantics 1 k \u2190\u2212 0; v(0) \u2190\u2212 e; 2 A\u0302\u2190\u2212 \u03b1A/\u2016A\u2016\u221e; 3 repeat 4 k \u2190\u2212 k + 1; 5 v(k) \u2190\u2212 e\u2212 A\u0302 \u00b7 v(k\u22121); 6 \u03b4 = \u2016v(k) \u2212 v(k\u22121)\u2016; 7 until \u03b4 6 ; 8 return v(k);\nExample 3 Consider again the argumentation framework in Example 1. Let \u03b1 = 0.98 and = 10\u22123. Then, the valuation sequence of the attacker and defender counting model, calculated by Algorithm 1, is shown in Figure 2. The valuation sequence reflects how the strength value of each argument changes with various maximum walk length k. After finitely many iterations, the valuation sequence gradually tends to be stable and converges to the approximative counting semantics v = [0.89, 0.22, 0.60, 1.00]T within a tolerable range."}, {"heading": "Some Properties of Counting Semantics", "text": "In this section, we will give some general properties about the attacker and defender counting semantics."}, {"heading": "Abstraction", "text": "The first fundamental property is called abstraction, which corresponds to the fact that the counting semantics only depends on the attack relation between arguments while it is thoroughly independent of any characteristic of arguments at the underlying language level [10]. Formally, this property corresponds to the fact that argumentation frameworks which are isomorphic have the \u201csame\u201d (modulo the isomorphism) counting semantics, as stated by the following definitions: Definition 8 (Isomorphism) Two argumentation frameworks AF1 = \u3008X1,R1\u3009 and AF2 = \u3008X2,R2\u3009 are isomorphic iff there exists a bijective function \u03c4 : X1 7\u2192 X2 such that for any x, y \u2208 X1, xR1y iff \u03c4(x)R2 \u03c4(y). Theorem 3 Let vAF1\u03b1 and vAF2\u03b1 be the attacker and defender counting semantics of AF1 and AF2 respectively, under a given damping factor \u03b1. For any isomorphism \u03c4 from AF1 to AF2 and for any x \u2208 X1, it holds that vAF1\u03b1 (x) = vAF2\u03b1 (\u03c4(x)). With this result, we have the following corollary about the argumentation framework whose argument graph is an elementary cycle: Corollary 1 If the argument graph G of an AF = \u3008X ,R\u3009 is an elementary cycle, then for any arguments x, y \u2208 X , we have v\u03b1(x) = v\u03b1(y).\nWe have stated that the strength values of arguments are relative and do not make sense when they are not compared with each other. Actually, in most applications, we merely concern the ranking (ordering) over arguments induced by the counting semantics. Given the damping factor \u03b1, the ranking \u03b1 on the set of arguments X derived from the counting semantics v\u03b1 is defined by: for any x, y \u2208 X , x \u03b1 y iff v\u03b1(x) \u2265 v\u03b1(y). Intuitively, \u03b1 is total (i.e., \u2200x, y \u2208 X , x \u03b1 y or y \u03b1 x) and transitive (i.e., \u2200x, y, z \u2208 X , if x \u03b1 y and y \u03b1 z, then x \u03b1 z). Note that here x \u03b1 y means that argument x is at least as acceptable as argument y w.r.t. \u03b1. Formally, we define x '\u03b1 y if and only if x \u03b1 y and y \u03b1 x, which means x and y are equally acceptable w.r.t. \u03b1. Moreover, x \u03b1 y, meaning x is strictly more acceptable than y w.r.t. \u03b1, if and only if x \u03b1 y but not y \u03b1 x.\nCorollary 2 Assume AF1 = \u3008X1,R1\u3009 and AF2 = \u3008X2,R2\u3009 be isomorphic w.r.t. \u03c4 , for a given damping factor \u03b1, then we have \u2200x, y \u2208 X1, x AF1\u03b1 y iff \u03c4(x) AF2\u03b1 \u03c4(y).\nActually, this corollary is equivalent to Theorem 3, and states that two isomorphic argument graphs give rise to two equivalent rankings on arguments."}, {"heading": "Damping-independent ranking", "text": "Different damping factor \u03b1 may affect the results of the counting semantics, and thus may give the different ranking on arguments. More specifically, for an argumentation framework \u3008X ,R\u3009, for two different damping factors \u03b1 and \u03b1\u2032, and for two arguments x, y \u2208 X , the counting semantics v\u03b1 may give that v\u03b1(x) \u2265 v\u03b1(y), i.e. x \u03b1 y, while the semantics v\u03b1\u2032 may give the opposite result v\u03b1\u2032(y) \u2265 v\u03b1\u2032(x), i.e.\ny \u03b1\u2032 x. To investigate how different \u03b1 influence the ranking on arguments is a quite complex thing, and we will discuss it in our future works. In this paper, we mainly concern on the properties which always hold for any damping factor \u03b1.\nProposition 2 Let xi, xj \u2208 X . For any damping factor \u03b1 \u2208 (0, 1), the ranking \u03b1 induced by the counting semantics v\u03b1 satisfies: [P1] IfR\u2212(xi) = \u2205 andR\u2212(xj) 6= \u2205, then xi \u03b1 xj . [P2] IfR\u2212(xi) = R\u2212(xj), then xi '\u03b1 xj , [P3] IfR\u2212(xi) \u2282 R\u2212(xj), then xi \u03b1 xj .\nProperty [P1] states that non-attacked arguments are always the most acceptable and attacked arguments always have non-maximal valuation. This property is common in many proposals [5,6,11]. Property [P2] shows that two arguments with the same 1-length attackers always have the same valuation (and thus are always equally acceptable). Property [P3] reveals that an argument xi, whose 1-length attackers pertain to the set of 1-length attackers of argument xj , is always more acceptable than xj . Using these properties, we can easily identify some rankings between arguments regardless of the damping factor \u03b1.\nExample 4 Consider again the argument graph shown in Figure 1a where R\u2212(x1) = {x2}, R\u2212(x2) = {x3, x4}, R\u2212(x3) = {x2, x3} and R\u2212(x4) = \u2205. Obviously, x4 has the highest rank; x1 x3 since R\u2212(x1) \u2282 R\u2212(x3). Then, we have the rankings: x4 x1 x3 and x4 x2.\nOne strong result generalizes Proposition 2 in two ways: first it considers arbitrary number of 1-length attackers and second, it considers various strengths of arguments. This involves a relation that compares sets of arguments, i.e. set comparison: Let v\u03b1 be a ranking on set X of arguments with respect to \u03b1 and let S1, S2 \u2286 X , S1 v\u03b1 S2 iff there is an injective mapping \u03bb from S1 to S2 such that for all x \u2208 S1, \u03bb(x) \u03b1 x. Obviously, if S1 v\u03b1 S2, there must be |S1| \u2264 |S2| and for any x \u2208 S1, there exists an argument y in S2 such that y \u03b1 x. Theorem 4 Let v\u03b1 be an attacker and defender counting semantics w.r.t the damping factor \u03b1. For any xi, xj \u2208 X , if R\u2212(xi) v\u03b1 R\u2212(xj), then it holds that xi \u03b1 xj . This theorem tells us that argument xi is at least as acceptable as argument xj , when the 1-length attackers of xj at least as numerous and well-ranked as those of xi. The relation of set comparison between S1 and S2 is strong, denoted by S1 <\u03b1 S2, iff it satisfies two conditions: (1) S1 v\u03b1 S2; (2) |S1| < |S2| or for some x \u2208 S1 such that \u03bb(x) \u03b1 x and \u03bb(x) 6'\u03b1 x. Then, we have the strong version of Theorem 4: Theorem 5 Let v\u03b1 be a counting semantics w.r.t the damping factor \u03b1. For any xi, xj \u2208 X , ifR\u2212(xi) <\u03b1 R\u2212(xj), then it holds that xi \u03b1 xj . Example 4 (Continued) Now, let us compare arguments x2 and x3. Intuitively, |R\u2212(x2)| = |R\u2212(x3)|. We define the injective mapping \u03bb from R\u2212(x3) to R\u2212(x2) as: \u03bb(x3|R\u2212(x3)) = x3|R\u2212(x2) and \u03bb(x2|R\u2212(x3)) = x4|R\u2212(x2),\nwhere x|S means the element x in set S. Based on the previous rankings: x3|R\u2212(x2) ' x3|R\u2212(x3) and x4|R\u2212(x2) x2|R\u2212(x3), we have R\u2212(x3) < R\u2212(x2), and by Theorem 5, we have x3 x2. Then, we can conclude the ranking on all arguments in Figure 1a: x4 x1 x3 x2, which are consistent with the results in Example 3."}, {"heading": "Related Work and Conclusion", "text": "This paper mainly focuses on evaluating arguments by assigning a strength to each argument. In this regard, there exists numerous works [5\u20138, 11], etc. However the most related works may be the gradual approach in [5] and the equational approach in [8] since both these two approaches and our counting approach can be seen as interaction-based approaches, i.e., evaluating arguments based on the graph structure of the argumentation framework. Our model can be seen as a linear model and has significant computational advantages.\nIn the short term, future work mainly aim to the following aspects. First, the damping factor plays an important role in our counting semantics. How the damping factor influences the results and how to decide it are two urgent problems. Second, argumentation has become social activities by Web 2.0 in our daily life 3. How to extend our work to evaluate arguments in social context is another research point."}], "references": [{"title": "On the acceptability of arguments and its fundamental role in nonmonotonic reasoning, logic programming and n-person games", "author": ["P.M. Dung"], "venue": "Journal of Artificial Intelligence, vol. 77, no. 2, pp. 321\u2013357, Sep. 1995.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1995}, {"title": "An introduction to argumentation semantics", "author": ["P. Baroni", "M. Caminada", "M. Giacomin"], "venue": "The Knowledge Engineering Review, vol. 26, pp. 365\u2013410, 12 2011.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2011}, {"title": "Argumentation in artificial intelligence", "author": ["T.J. Bench-Capon", "P.E. Dunne"], "venue": "Artificial intelligence, vol. 171, no. 10, pp. 619\u2013641, 2007.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2007}, {"title": "Graduality in argumentation", "author": ["C. Cayrol", "M.-C. Lagasquie-Schiex"], "venue": "Journal Artificial Intelligence Research (JAIR), vol. 23, pp. 245\u2013297, 2005.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2005}, {"title": "A game-theoretic measure of argument strength for abstract argumentation", "author": ["P.-A. Matt", "F. Toni"], "venue": "Logics in Artificial Intelligence. Springer, 2008, pp. 285\u2013297.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2008}, {"title": "Social abstract argumentation", "author": ["J. Leite", "J. Martins"], "venue": "Proceedings of the Twenty-Second international joint conference on Artificial Intelligence-Volume Volume Three. AAAI Press, 2011, pp. 2287\u20132292.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2011}, {"title": "Equational approach to argumentation networks", "author": ["D.M. Gabbay"], "venue": "Argument & Computation, vol. 3, no. 2-3, pp. 87\u2013142, 2012.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2012}, {"title": "The added value of argumentation", "author": ["S. Modgil", "F. Toni", "F. Bex", "I. Bratko", "C.I. Ches\u00f1evar", "W. Dvo\u0159\u00e1k", "M.A. Falappa", "X. Fan", "S.A. Gaggl", "A.J. Garc\u0131\u0301a"], "venue": "Agreement Technologies. Springer, 2013, pp. 357\u2013403.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2013}, {"title": "Ranking-based semantics for argumentation frameworks", "author": ["L. Amgoud", "J. Ben-Naim"], "venue": "Scalable Uncertainty Management. Springer, 2013, pp. 134\u2013147.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2013}, {"title": "Argument ranking with categoriser function", "author": ["F. Pu", "J. Luo", "Y. Zhang", "G. Luo"], "venue": "Knowledge Science, Engineering and Management. Springer, 2014, pp. 290\u2013301. The websites www.livingvote.org, debategraph. org, idebate.org are a few examples.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2014}, {"title": "Proof theories and algorithms for abstract argumentation frameworks", "author": ["S. Modgil", "M. Caminada"], "venue": "Argumentation in Artificial Intelligence, G. Simari and I. Rahwan, Eds. Springer US, 2009, pp. 105\u2013129.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2009}, {"title": "Opponent models with uncertainty for strategic argumentation", "author": ["T. Rienstra", "M. Thimm", "N. Oren"], "venue": "Proceedings of the Twenty-Third international joint conference on Artificial Intelligence. AAAI Press, 2013, pp. 332\u2013338.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2013}], "referenceMentions": [{"referenceID": 0, "context": "The most popularly used framework to talk about general issues of argumentation is that of Dung\u2019s abstract argumentation [2], which consists of a set of arguments and a binary relation that represents the conflicting arguments.", "startOffset": 121, "endOffset": 124}, {"referenceID": 1, "context": "A number of argumentation semantics for abstract argumentation frameworks have been proposed that highlight different aspects of argumentation [3], such as admissible sets, preferred extension, and grounded extension.", "startOffset": 143, "endOffset": 146}, {"referenceID": 2, "context": "However, these semantics provide a rather rough way to evaluate arguments and may result in some undesired results [4].", "startOffset": 115, "endOffset": 118}, {"referenceID": 3, "context": "In order to overcome these difficulties, there is a trend towards considering and exploring the possibility of discriminating between arguments by employing a larger number of categories or continuous numerical scales [5\u20139].", "startOffset": 218, "endOffset": 223}, {"referenceID": 4, "context": "In order to overcome these difficulties, there is a trend towards considering and exploring the possibility of discriminating between arguments by employing a larger number of categories or continuous numerical scales [5\u20139].", "startOffset": 218, "endOffset": 223}, {"referenceID": 5, "context": "In order to overcome these difficulties, there is a trend towards considering and exploring the possibility of discriminating between arguments by employing a larger number of categories or continuous numerical scales [5\u20139].", "startOffset": 218, "endOffset": 223}, {"referenceID": 6, "context": "In order to overcome these difficulties, there is a trend towards considering and exploring the possibility of discriminating between arguments by employing a larger number of categories or continuous numerical scales [5\u20139].", "startOffset": 218, "endOffset": 223}, {"referenceID": 7, "context": "In order to overcome these difficulties, there is a trend towards considering and exploring the possibility of discriminating between arguments by employing a larger number of categories or continuous numerical scales [5\u20139].", "startOffset": 218, "endOffset": 223}, {"referenceID": 8, "context": "This fits well with recent interest in quantitative measures for the ranking analysis of argumentation [10, 11].", "startOffset": 103, "endOffset": 111}, {"referenceID": 9, "context": "This fits well with recent interest in quantitative measures for the ranking analysis of argumentation [10, 11].", "startOffset": 103, "endOffset": 111}, {"referenceID": 10, "context": "In order to assess the strength of arguments in an argumentation framework, we will consider their evaluation procedures as dialogue games [12], where two fictitious agents\u2014one PRO (the proponent) and the other OPP (the opponent)\u2014take part in.", "startOffset": 139, "endOffset": 143}, {"referenceID": 0, "context": "We consider the basic concepts and insights of Dung\u2019s abstract argumentation framework, in which both arguments and attacks are assumed to be abstract entities [2].", "startOffset": 160, "endOffset": 163}, {"referenceID": 10, "context": "In this paper, we assess the strengths of arguments based on abstract argument games without regard to the specific internal structure of the arguments [12].", "startOffset": 152, "endOffset": 156}, {"referenceID": 3, "context": "In [5], the authors distinguish attackers (respectively, defenders) by direct and indirect.", "startOffset": 3, "endOffset": 6}, {"referenceID": 11, "context": "In this paper, shorter attackers and defenders are preferred, which can effectively drive the agents to make only relevant moves, and thus we assume that a shorter attacker (respectively, defender) of an argument has more effect than a longer one on the argument [13].", "startOffset": 263, "endOffset": 267}, {"referenceID": 8, "context": "The first fundamental property is called abstraction, which corresponds to the fact that the counting semantics only depends on the attack relation between arguments while it is thoroughly independent of any characteristic of arguments at the underlying language level [10].", "startOffset": 269, "endOffset": 273}, {"referenceID": 3, "context": "This property is common in many proposals [5,6,11].", "startOffset": 42, "endOffset": 50}, {"referenceID": 4, "context": "This property is common in many proposals [5,6,11].", "startOffset": 42, "endOffset": 50}, {"referenceID": 9, "context": "This property is common in many proposals [5,6,11].", "startOffset": 42, "endOffset": 50}, {"referenceID": 3, "context": "In this regard, there exists numerous works [5\u20138, 11], etc.", "startOffset": 44, "endOffset": 53}, {"referenceID": 4, "context": "In this regard, there exists numerous works [5\u20138, 11], etc.", "startOffset": 44, "endOffset": 53}, {"referenceID": 5, "context": "In this regard, there exists numerous works [5\u20138, 11], etc.", "startOffset": 44, "endOffset": 53}, {"referenceID": 6, "context": "In this regard, there exists numerous works [5\u20138, 11], etc.", "startOffset": 44, "endOffset": 53}, {"referenceID": 9, "context": "In this regard, there exists numerous works [5\u20138, 11], etc.", "startOffset": 44, "endOffset": 53}, {"referenceID": 3, "context": "However the most related works may be the gradual approach in [5] and the equational approach in [8] since both these two approaches and our counting approach can be seen as interaction-based approaches, i.", "startOffset": 62, "endOffset": 65}, {"referenceID": 6, "context": "However the most related works may be the gradual approach in [5] and the equational approach in [8] since both these two approaches and our counting approach can be seen as interaction-based approaches, i.", "startOffset": 97, "endOffset": 100}], "year": 2017, "abstractText": "In Dung\u2019s abstract argumentation, arguments are either acceptable or unacceptable, given a chosen notion of acceptability. This gives a coarse way to compare arguments. In this paper, we propose a counting approach for a more fine-gained assessment to arguments by counting the number of their respective attackers and defenders based on argument graph and argument game. An argument is more acceptable if the proponent puts forward more number of defenders for it and the opponent puts forward less number of attackers against it. We show that our counting model has two well-behaved properties: normalization and convergence. Then, we define a counting semantics based on this model, and investigate some general properties of the semantics.", "creator": "LaTeX with hyperref package"}}}