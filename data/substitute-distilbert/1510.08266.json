{"id": "1510.08266", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "28-Oct-2015", "title": "Computing the Ramsey Number R(4,3,3) using Abstraction and Symmetry breaking", "abstract": "the number $ r ( 4, 3, 3 ) $ is often presented as the unknown minimal number with the average chances of being found \" intact \". yet, its precise value rarely remained unknown for almost 50 years. this paper presents a methodology based called \\ emph { 0 } and \\ emph { matching breaking } that applies to solve hard graph edge - coloring problems. the utility of this methodology is demonstrated by analyzing it to compute expected value $ r ( 4, 3, 3 ) = 30 $. with the way it is required to first compute the previously unknown set $ { \\ cal r } ( 3, b, 3 ; 13 ) $ consisting of 78 {, } 892 contiguous items.", "histories": [["v1", "Wed, 28 Oct 2015 11:46:46 GMT  (26kb,D)", "https://arxiv.org/abs/1510.08266v1", "arXiv admin note: text overlap witharXiv:1409.5189"], ["v2", "Sun, 1 Nov 2015 12:06:17 GMT  (26kb,D)", "http://arxiv.org/abs/1510.08266v2", "arXiv admin note: text overlap witharXiv:1409.5189"]], "COMMENTS": "arXiv admin note: text overlap witharXiv:1409.5189", "reviews": [], "SUBJECTS": "cs.AI cs.DM", "authors": ["michael codish", "michael frank", "avraham itzhakov", "alice miller"], "accepted": false, "id": "1510.08266"}, "pdf": {"name": "1510.08266.pdf", "metadata": {"source": "CRF", "title": "Computing the Ramsey Number R(4,3,3) using Abstraction and Symmetry breaking", "authors": ["Michael Codish", "Michael Frank", "Avraham Itzhakov", "Alice Miller"], "emails": [], "sections": [{"heading": "1 Introduction", "text": "This paper introduces a general methodology that applies to solve graph edgecoloring problems and demonstrates its application in the search for Ramsey numbers. These are notoriously hard graph coloring problems that involve assigning colors to the edges of a complete graph. An (r1, . . . , rk;n) Ramsey coloring is a graph coloring in k colors of the complete graph Kn that does not contain a monochromatic complete sub-graph Kri in color i for each 1 \u2264 i \u2264 k. The set of all such colorings is denoted R(r1, . . . , rk;n). The Ramsey number R(r1, . . . , rk) is the least n > 0 such that no (r1, . . . , rk;n) coloring exists. In particular, the number R(4, 3, 3) is often presented as the unknown Ramsey number with the best chances of being found \u201csoon\u201d. Yet, its precise value has remained unknown for more than 50 years. It is currently known that 30 \u2264 R(4, 3, 3) \u2264 31. Kalbfleisch [7] proved in 1966 that R(4, 3, 3) \u2265 30, Piwakowski [11] proved in 1997 that R(4, 3, 3) \u2264 32, and one year later Piwakowski and Radziszowski [12] proved that R(4, 3, 3) \u2264 31. We demonstrate how our methodology applies to computationally prove that R(4, 3, 3) = 30.\nOur strategy to compute R(4, 3, 3) is based on the search for a (4, 3, 3; 30) Ramsey coloring. If one exists, then because R(4, 3, 3) \u2264 31, it follows that R(4, 3, 3) = 31. Otherwise, becauseR(4, 3, 3) \u2265 30, it follows thatR(4, 3, 3) = 30.\nIn recent years, Boolean SAT solving techniques have improved dramatically. Today\u2019s SAT solvers are considerably faster and able to manage larger instances than were previously possible. Moreover, encoding and modeling techniques are better understood and increasingly innovative. SAT is currently applied to solve\n? Supported by the Israel Science Foundation, grant 182/13.\nar X\niv :1\n51 0.\n08 26\n6v 2\n[ cs\n.A I]\n1 N\nov 2\na wide variety of hard and practical combinatorial problems, often outperforming dedicated algorithms. The general idea is to encode a (typically, NP) hard problem instance, \u00b5, to a Boolean formula, \u03d5\u00b5, such that the satisfying assignments of \u03d5\u00b5 correspond to the solutions of \u00b5. Given such an encoding, a SAT solver can be applied to solve \u00b5.\nOur methodology in this paper combines SAT solving with two additional concepts: abstraction and symmetry breaking. The paper is structured to let the application drive the presentation of the methodology in three steps. Section 2 presents: preliminaries on graph coloring problems, some general notation on graphs, and a simple constraint model for Ramsey coloring problems. Section 3 presents the first step in our quest to compute R(4, 3, 3). We introduce a basic SAT encoding and detail how a SAT solver is applied to search for Ramsey colorings. Then we describe and apply a well known embedding technique, which allows to determine a set of partial solutions in the search for a (4, 3, 3; 30) Ramsey coloring such that if a coloring exists then it is an extension of one of these partial solutions. This may be viewed as a preprocessing step for a SAT solver which then starts from a partial solution. Applying this technique we conclude that if a (4, 3, 3; 30) Ramsey coloring exists then it must be \u300813, 8, 8\u3009 regular. Namely, each vertex in the coloring must have 13 edges in the first color, and 8 edges in each of the other two colors. This result is already considered significant progress in the research on Ramsey numbers as stated in [19]. To further apply this technique to determine if there exists a \u300813, 8, 8\u3009 regular (4, 3, 3; 30) Ramsey coloring requires to first compute the currently unknown set R(3, 3, 3; 13).\nSections 4\u20147 present the second step: computing R(3, 3, 3; 13). Section 4 illustrates how a straightforward approach, combining SAT solving with symmetry breaking, works for smaller instances but not for R(3, 3, 3; 13). Then Section 5 introduces an abstraction, called degree matrices, Section 6 demonstrates how to compute degree matrices for R(3, 3, 3; 13), and Section 7 shows how to use the degree matrices to compute R(3, 3, 3; 13). Section 8 presents the third step re-examining the embedding technique described in Section 3 which given the set R(3, 3, 3; 13) applies to prove that there does not exist any (4, 3, 3; 30) Ramsey coloring which is also \u300813, 8, 8\u3009 regular. Section 9 presents a conclusion."}, {"heading": "2 Preliminaries and Notation", "text": "In this paper, graphs are always simple, i.e. undirected and with no self loops. For a natural number n let [n] denote the set {1, 2, . . . , n}. A graph coloring, in k colors, is a pair (G, \u03ba) consisting of a simple graph G = (V,E) and a mapping \u03ba : E \u2192 [k]. When G is clear from the context we refer to \u03ba as the graph coloring. We typically represent G = ([n], E) as a (symmetric) n \u00d7 n adjacency matrix, A, defined such that\nAi,j = { \u03ba((i, j)) if (i, j) \u2208 E 0 otherwise\nGiven a graph coloring (G, \u03ba) in k colors with G = (V,E), the set of neighbors of a vertex u \u2208 V in color c \u2208 [k] is Nc(u) = { v \u2223\u2223 (u, v) \u2208 E, \u03ba((u, v)) = c } and the color-c degree of u is degc(u) = |Nc(u)|. The color degree tuple of u is the k-tuple deg(u) = \u3008deg1(u), . . . , degk(u)\u3009. The sub-graph of G on the c colored neighbors of x \u2208 V is the projection of G to vertices in Nc(x) defined by Gcx = (Nc(x), { (u, v) \u2208 E\n\u2223\u2223u, v \u2208 Nc(x) }). For example, take as G the graph coloring depicted by the adjacency matrix in Figure 3 with u the vertex corresponding to the first row in the matrix. Then, N1(u) = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}, N2(u) = {14, 15, 16, 17, 18, 19, 20, 21}, and N3(u) = {22, 23, 24, 25, 26, 27, 28, 29}. The subgraphs G1u, G2u, and G3u are highlighted by the boldface text in Figure 3.\nAn (r1, . . . , rk;n) Ramsey coloring is a graph coloring in k colors of the complete graph Kn that does not contain a monochromatic complete sub-graph Kri in color i for each 1 \u2264 i \u2264 k. The set of all such colorings is denoted R(r1, . . . , rk;n). The Ramsey number R(r1, . . . , rk) is the least n > 0 such that no (r1, . . . , rk;n) coloring exists. In the multicolor case (k > 2), the only known value of a nontrivial Ramsey number is R(3, 3, 3) = 17. Prior to this paper, it was known that 30 \u2264 R(4, 3, 3) \u2264 31. Moreover, while the sets of (3, 3, 3;n) colorings were known for 14 \u2264 n \u2264 16, the set of colorings for n = 13 was never published.3 More information on recent results concerning Ramsey numbers can be found in the electronic dynamic survey by Radziszowski [15].\nA graph coloring problem on k colors is about the search for a graph coloring which satisfies a given set of constraints. Formally, it is specified as a formula, \u03d5(A), where A is an n \u00d7 n adjacency matrix of integer variables with domain {0} \u222a [k] and \u03d5 is a constraint on these variables. A solution is an assignment of integer values to the variables in A which satisfies \u03d5 and determines both the graph edges and their colors. We often refer to a solution as an integer adjacency matrix and denote the set of solutions as sol(\u03d5(A)).\nFigure 1 presents the k-color graph coloring problems we focus on in this paper: (r1, . . . , rk;n) Ramsey colorings. Constraint (1), \u03d5 n,k adj (A), states that the\n3 Recently, the set R(3, 3, 3; 13) has also been computed independently by: Stanislaw Radziszowski, Richard Kramer and Ivan Livinsky [14].\ngraph represented by matrix A has n vertices, is k colored, and is simple. Constraint (2) \u03d5n,cr (A) states that the n\u00d7 n matrix A has no embedded sub-graph Kr in color c. Each conjunct, one for each set I of r vertices, is a disjunction stating that one of the edges between vertices of I is not colored c. Notation: \u2118r(S) denotes the set of all subsets of size r of the set S. Constraint (3) states that A is a (r1, . . . , rk;n) Ramsey coloring.\nFor graph coloring problems, solutions are typically closed under permutations of vertices and of colors. Restricting the search space for a solution modulo such permutations is crucial when trying to solve hard graph coloring problems. It is standard practice to formalize this in terms of graph (coloring) isomorphism.\nLet G = (V,E) be a graph (coloring) with V = [n] and let \u03c0 be a permutation on [n]. Then \u03c0(G) = (V, { (\u03c0(x), \u03c0(y)) \u2223\u2223 (x, y) \u2208 E }). Permutations act on adjacency matrices in the natural way: If A is the adjacency matrix of a graph G, then \u03c0(A) is the adjacency matrix of \u03c0(G) and \u03c0(A) is obtained by simultaneously permuting with \u03c0 both rows and columns of A.\nDefinition 1 ((weak) isomorphism of graph colorings). Let (G, \u03ba1) and (H,\u03ba2) be k-color graph colorings with G = ([n], E1) and H = ([n], E2). We say that (G, \u03ba1) and (H,\u03ba2) are weakly isomorphic, denoted (G, \u03ba1) \u2248 (H,\u03ba2) if there exist permutations \u03c0 : [n]\u2192 [n] and \u03c3 : [k]\u2192 [k] such that (u, v) \u2208 E1 \u21d0\u21d2 (\u03c0(u), \u03c0(v)) \u2208 E2 and \u03ba1((u, v)) = \u03c3(\u03ba2((\u03c0(u), \u03c0(v)))). We denote such a weak isomorphism: (G, \u03ba1) \u2248\u03c0,\u03c3 (H,\u03ba2). When \u03c3 is the identity permutation, we say that (G, \u03ba1) and (H,\u03ba2) are isomorphic.\nThe following lemma emphasizes the importance of weak graph isomorphism as it relates to Ramsey numbers. Many classic coloring problems exhibit the same property.\nLemma 1 (R(r1, r2, . . . , rk;n) is closed under \u2248). Let (G, \u03ba1) and (H,\u03ba2) be graph colorings in k colors such that (G, \u03ba1) \u2248\u03c0,\u03c3 (H,\u03ba2). Then,\n(G, \u03ba1) \u2208 R(r1, r2, . . . , rk;n) \u21d0\u21d2 (H,\u03ba2) \u2208 R(\u03c3(r1), \u03c3(r2), . . . , \u03c3(rk);n)\nWe make use of the following theorem from [12].\nTheorem 1. 30 \u2264 R(4, 3, 3) \u2264 31 and, R(4, 3, 3) = 31 if and only if there exists a (4, 3, 3; 30) coloring \u03ba of K30 such that: (1) For every vertex v and i \u2208 {2, 3}, 5 \u2264 degi(v) \u2264 8, and 13 \u2264 deg1(v) \u2264 16. (2) Every edge in the third color has at least one endpoint v with deg3(v) = 13. (3) There are at least 25 vertices v for which deg1(v) = 13, deg2(v) = deg3(v) = 8.\nCorollary 1. Let G = (V,E) be a (4, 3, 3; 30) coloring, v \u2208 V a selected vertex, and assume without loss of generality that deg2(v) \u2265 deg3(v). Then, deg(v) \u2208{ \u300813, 8, 8\u3009, \u300814, 8, 7\u3009, \u300815, 7, 7\u3009, \u300815, 8, 6\u3009, \u300816, 7, 6\u3009, \u300816, 8, 5\u3009 } .\nConsider a vertex v in a (4, 3, 3;n) coloring and focus on the three subgraphs induced by the neighbors of v in each of the three colors. The following states that these must be corresponding Ramsey colorings.\nObservation 1 Let G be a (4, 3, 3;n) coloring and v be any vertex with deg(v) = \u3008d1, d2, d3\u3009. Then, d1 + d2 + d3 = n \u2212 1 and G1v, G2v, and G3v are respectively (3, 3, 3; d1), (4, 2, 3; d2), and (4, 3, 2; d3) colorings.\nNote that by definition a (4, 2, 3;n) coloring is a (4, 3;n) Ramsey coloring in colors 1 and 3 and likewise a (4, 3, 2;n) Ramsey coloring is a (4, 3;n) coloring in colors 1 and 2. This is because the \u201c2\u201d specifies that the coloring does not contain a subgraph K2 in the corresponding color and this means that it contains no edge with that color. For n \u2208 {14, 15, 16}, the sets R(3, 3, 3;n) are known and consist respectively of 115, 2, and 2 colorings. Similarly, for n \u2208 {5, 6, 7, 8} the sets R(4, 3;n) are known and consist respectively of 9, 15, 9, and 3 colorings.\nIn this paper computations are performed using the CryptoMiniSAT [16] SAT solver. SAT encodings (CNF) are obtained using the finite-domain constraint compiler BEE [10]. The use of BEE facilitates applications to find a single (first) solution, or to find all solutions for a constraint, modulo a specified set of variables. When solving for all solutions, our implementation iterates with the SAT solver, adding so called blocking clauses each time another solution is found. This technique, originally due to McMillan [9], is simplistic but suffices for our purposes. All computations were performed on a cluster with a total of 228 Intel E8400 cores clocked at 2 GHz each, able to run a total of 456 parallel threads. Each of the cores in the cluster has computational power comparable to a core on a standard desktop computer. Each SAT instance is run on a single thread."}, {"heading": "3 Basic SAT Encoding and Embeddings", "text": "Throughout the paper we apply a SAT solver to solve CNF encodings of constraints such as those presented in Figure 1. In this way it is straightforward to find a Ramsey coloring or prove its non-existence. Ours is a standard encoding to CNF. To this end: nothing new. For an n vertex graph coloring problem in k colors we take an n\u00d7n matrix A where Ai,j represents in k bits the edge (i, j) in the graph: exactly one bit is true indicating which color the edge takes, or no bit is true indicating that the edge (i, j) is not in the graph. Already at the representation level, we use the same Boolean variables to represent the color in Ai,j and in Aj,i for each 1 \u2264 i < j \u2264 n. We further fix the variables corresponding to Ai,i to false. The rest of the SAT encoding is straightforward.\nConstraint (1) is encoded to CNF by introducing clauses to state that for each Ai,j with 1 \u2264 i < j \u2264 n at most one of the k bits representing the color of the edge (i, j) is true. In our setting typically k = 3. For three colors, if b1, b2, b3 are the bits representing the color of an edge, then three clauses suffice: (b\u03041 \u2228 b\u03042), (b\u03041 \u2228 b\u03043), (b\u03042 \u2228 b\u03043). Constraint (2) is encoded by a single clause per set I of r vertices expressing that at least one of the bits corresponding to an edge between vertices in I does not have color c. Finally Constraint (3) is a conjunction of constraints of the previous two forms.\nIn Section 4 we will improve on this basic encoding by introducing symmetry breaking constraints (encoded to CNF). However, for now we note that, even\nwith symmetry breaking constraints, using the basic encoding, a SAT solver is currently not able to solve any of the open Ramsey coloring problems such as those considered in this paper. In particular, directly applying a SAT solver to search for a (4, 3, 3; 30) Ramsey coloring is hopeless.\nTo facilitate the search for (4, 3, 3; 30) Ramsey coloring using a SAT encoding, we apply a general approach where, when seeking a (r1, . . . , rk;n) Ramsey coloring one selects a \u201cpreferred\u201d vertex, call it v1, and based on its degrees in each of the k colors, embeds k subgraphs which are corresponding smaller colorings. Using this approach, we apply Corollary 1 and Observation 1 to establish that a (4, 3, 3; 30) coloring, if one exists, must be \u300813, 8, 8\u3009 regular. Specifically, all vertices must have 13 edges in the first color and 8 each, in the second and third colors. This result is considered significant progress in the research on Ramsey numbers [19]. This \u201cembedding\u201d approach is often applied in the Ramsey number literature where the process of completing (or trying to complete) a partial solution (an embedding) to a Ramsey coloring is called gluing. See for example the presentations in [13,5,12].\nTheorem 2. Any (4, 3, 3; 30) coloring, if one exists, is \u300813, 8, 8\u3009 regular.\nProof. By computation as described in the rest of this section.\nWe seek a (4, 3, 3; 30) coloring of K30, represented as a 30 \u00d7 30 adjacency matrix A. Let v1 correspond to the the first row in A with deg(v1) = \u3008d1, d2, d3\u3009 as prescribed by Corollary 1. For each possible triplet \u3008d1, d2, d3\u3009, except \u300813, 8, 8\u3009, we take each of the known corresponding colorings for the subgraphs G1v1 , G 2 v1 , and G3v1 and embed them into A. We then apply a SAT solver, to (try to) complete the remaining cells in A to satisfy \u03d54,3,3;30(A) as defined by Constraint (3) of Figure 1. If the SAT solver fails, then no such completion exists.\nTo illustrate the approach, consider the case where deg(v1) = \u300814, 8, 7\u3009. Figure 2 details one of the embeddings corresponding to this case. The first row and column of A specify the colors of the edges of the 29 neighbors of v1 (in bold). The symbol \u201c \u201d indicates an integer variable that takes a value between 1 and 3. The neighbors of v1 in color 1 form a submatrix of A embedded in rows (and columns) 2\u201315 of the matrix in the Figure. By Corollary 1 these are a (3, 3, 3; 14) Ramsey coloring and there are 115 possible such colorings modulo weak isomorphism. The Figure details one of them. Similarly, there are 3 possible (4, 2, 3; 8) colorings which are subgraphs for the neighbors of v1 in color 2. In Figure 2, rows (and columns) 16\u201323 detail one such coloring. Finally, there are 9 possible (4, 3, 2; 7) colorings which are subgraphs for the neighbors of v1 in color 3. In Figure 2, rows (and columns) 24\u201330 detail one such coloring.\nTo summarize, Figure 2 is a partially instantiated adjacency matrix. The first row determines the degrees of v1, in the three colors, and 3 corresponding subgraphs are embedded. The uninstantiated values in the matrix must be completed to obtain a solution that satisfies \u03d54,3,3;30(A) as specified in Constraint (3) of Figure 1. This can be determined using a SAT solver. For the specific example in Figure 2, the CNF generated using our tool set consists of 33,959 clauses, involves 5,318 Boolean variables, and is shown to be unsatisfiable in 52 seconds of computation time. For the case where v1 has degrees \u300814, 8, 7\u3009 in the three colors this is one of 115\u00d7 3\u00d7 9 = 3105 instances that need to be checked.\nTable 1 summarizes the experiment which proves Theorem 2. For each of the possible degrees of vertex 1 in a (4, 3, 3; 30) coloring as prescribed by Corollary 1, except \u300813, 8, 8\u3009, and for each possible choice of colorings for the derived subgraphs G1v1 , G 2 v1 , and G 3 v1 , we apply a SAT solver to show that the instance \u03d5(4,3,3;30)(A) of Constraint (3) of Figure 1 cannot be satisfied. The table details for each degree triple, the number of instances, their average size (number of clauses and Boolean variables), and the average and total times to show that the constraint is not satisfiable.\nAll of the SAT instances described in the experiment summarized by Table 1 are unsatisfiable. The solver reports \u201cunsat\u201d. To gain confidence in our implementation, we illustrate its application on a satisfiable instance: to find a, known to exist, (4, 3, 3; 29) coloring. This experiment involves some reverse engineering. 0 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 1 0 1 3 1 3 2 2 2 2 1 3 1 2 2 1 3 1 1 1 2 3 3 1 2 3 1 1 3 1 1 0 1 3 3 1 2 1 3 2 1 3 1 2 3 3 1 2 2 2 1 3 1 1 3 1 2 2 1 3 1 0 1 2 3 2 2 3 3 2 1 1 1 3 1 1 2 3 2 1 1 3 3 2 1 2 1 1 1 3 1 0 1 3 1 2 1 3 3 2 3 2 2 2 1 2 3 1 2 1 3 1 1 1 2 3 1 3 3 2 1 0 1 3 3 2 2 1 2 1 2 1 2 1 3 3 1 2 1 2 3 1 3 1 1 1 2 1 3 3 1 0 1 3 1 2 2 2 1 1 1 2 2 2 1 3 3 3 2 1 1 3 3 1 1 2 2 2 1 3 1 0 1 3 3 1 2 3 1 2 2 2 1 1 1 1 3 3 1 1 2 3 3 1 2 1 2 2 3 3 1 0 1 2 3 3 1 3 3 1 2 1 2 1 1 1 3 1 3 2 1 2 1 2 3 3 1 2 1 3 1 0 1 3 1 1 3 2 1 2 2 2 3 3 2 1 1 1 3 1 2 1 1 2 3 3 2 2 3 2 1 0 1 3 2 3 2 1 1 3 1 1 1 2 1 2 3 3 1 1 1 3 1 2 3 1 2 1 3 3 1 0 1 2 2 2 1 3 3 2 1 2 2 1 3 1 1 3 1 1 1 3 1 2 2 2 2 3 1 3 1 0 2 1 1 1 3 1 2 2 3 1 1 3 2 1 3 3 2 2 1 1 3 1 1 3 1 1 2 2 2 0 1 3 3 3 1 1 1 3 1 1 3 3 2 2 2 2 2 2 1 2 2 1 1 3 3 3 2 1 1 0 1 3 1 1 3 1 1 3 1 3 2 2 1 3 2 1 3 3 2 1 1 2 3 2 2 2 1 3 1 0 1 1 3 1 1 1 1 2 1 2 3 3 3 2 3 3 1 2 2 2 2 1 1 1 1 1 3 3 1 0 1 1 1 3 1 2 3 2 1 3 3 2 2 1 1 1 1 1 2 2 2 2 1 3 3 3 1 1 1 0 1 3 3 2 3 3 1 2 3 2 1 2 1 2 2 2 3 2 1 1 2 3 3 1 1 1 3 1 1 0 1 3 3 3 3 2 1 2 1 1 2 1 2 3 3 3 1 1 2 2 1 2 2 1 3 1 1 3 1 0 1 3 1 2 2 3 1 3 1 2 2 2 2 1 1 3 1 1 3 1 1 2 1 1 1 3 3 3 1 0 2 2 2 3 3 1 1 3 3 3 1 1 2 2 3 1 1 3 1 2 3 3 1 1 1 2 3 3 2 0 1 1 2 1 2 1 2 3 3 3 1 1 1 3 3 1 2 2 2 1 1 3 1 2 3 3 1 2 1 0 1 1 2 2 2 1 3 1 1 3 3 2 2 3 3 1 1 1 1 1 1 2 3 3 3 2 2 1 1 0 1 1 2 2 2 3 2 1 3 1 3 1 1 1 1 2 3 3 3 3 1 2 1 2 2 3 2 1 1 0 2 1 2 1 3 3 3 2 1 1 1 1 3 1 3 1 2 3 2 2 1 2 1 3 3 1 2 1 2 0 1 1 2 3 1 1 1 1 3 3 2 2 3 3 1 1 2 2 3 3 3 2 1 1 2 2 2 1 1 0 1 1 3 1 2 2 2 1 3 3 1 1 1 3 3 2 1 3 3 2 1 3 1 1 2 2 2 1 1 0 1 3 3 2 1 3 1 1 3 2 2 1 1 3 2 3 3 2 1 1 1 3 2 1 2 1 2 1 1 0 \nFig. 3. Embedding (boldface) and solution (gray text) for a (4, 3, 3; 29) Ramsey coloring.\nIn 1966 Kalbfleisch [7] reported the existence of a circulant (3, 4, 4; 29) coloring. Encoding instance \u03d5(4,3,3;29)(A) of Constraint (3) together with a constraint that states that the adjacency matrix A is circulant, results in a CNF with 146,506 clauses and 8,394 variables. Using a SAT solver, we obtain a corresponding (4, 3, 3; 29) coloring in less than two seconds of computation time. The solution is \u300812, 8, 8\u3009 regular and isomorphic to the adjacency matrix depicted as Figure 3. Now we apply the embedding approach. We take the partial solution (the boldface elements) corresponding to the three subgraphs: G1v1 , G 2 v1 and G 3 v1 which\nare respectively (3, 3, 3; 12), (4, 2, 3; 8) and (4, 3, 2; 8) Ramsey colorings. Applying a SAT solver to complete this partial solution to a (4, 3, 3; 29) coloring satisfying Constraint (3) involves a CNF with 30,944 clauses and 4,736 variables and requires under two hours of computation time. Figure 3 portrays the solution (the gray elements).\nTo apply the embedding approach described in this section to determine if there exists a (4, 3, 3; 30) Ramsey coloring which is \u300813, 8, 8\u3009 regular would require access to the setR(3, 3, 3; 13). We defer this discussion until after Section 7 where we describe how we compute the set of all 78,892 (3, 3, 3; 13) Ramsey colorings modulo weak isomorphism.\n4 Symmetry Breaking: Computing R(r1, . . . , rk;n)\nIn this section we prepare the ground to apply a SAT solver to find the set of all (r1, . . . , rk;n) Ramsey colorings modulo weak isomorphism. The constraints are those presented in Figure 1 and their encoding to CNF is as described in Section 3. Our final aim is to compute the set of all (3, 3, 3; 13) colorings modulo weak isomorphism. Then we can apply the embedding technique of Section 3 to determine the existence of a \u300813, 8, 8\u3009 regular (4, 3, 3; 30) Ramsey coloring. Given Theorem 2, this will determine the value of R(4, 3, 3).\nSolving hard search problems on graphs, and graph coloring problems in particular, relies heavily on breaking symmetries in the search space. When searching for a graph, the names of the vertices do not matter, and restricting the search modulo graph isomorphism is highly beneficial. When searching for a graph coloring, on top of graph isomorphism, solutions are typically closed under permutations of the colors: the names of the colors do not matter and the term often used is \u201cweak isomorphism\u201d [12] (the equivalence relation is weaker because both node names and edge colors do not matter). When the problem is to compute the set of all solutions modulo (weak) isomorphism the task is even more challenging. Often one first attempts to compute all the solutions of the coloring problem, and to then apply one of the available graph isomorphism tools, such as nauty [8] to select representatives of their equivalence classes modulo (weak) isomorphism. This is a generate and test approach. However, typically the number of solutions is so large that this approach is doomed to fail even though the number of equivalence classes itself is much smaller. The problem is that tools such as nauty apply after, and not during, generation. To this end, we follow [3] where Codish et al. show that the symmetry breaking approach of [2] holds also for graph coloring problems where the adjacency matrix consists of integer variables. This is a constrain and generate approach. But, as symmetry breaking does not break all symmetries, it is still necessary to perform some reduction using a tool like nauty.4 This form of symmetry breaking is an important component in our methodology.\n4 Note that nauty does not directly handle edge colored graphs and weak isomorphism directly. We applied an approach called k-layering described by Derrick Stolee [17].\nDefinition 2. [2]. Let A be an n\u00d7 n adjacency matrix. Then, sb\u2217` (A) = \u2227{ Ai {i,j} Aj \u2223\u2223 i < j } (4)\nwhere Ai {i,j} Aj denotes the lexicographic order between the ith and jth rows of A (viewed as strings) omitting the elements at positions i and j (in both rows).\nWe omit the precise details of how Constraint (4) is encoded to CNF. In our implementation this is performed by the finite domain constraint compiler BEE and details can be found in [10]. Table 2 illustrates the impact of the symmetry breaking Constraint (4) on the search for the Ramsey colorings required in the proof of Theorem 2.\nThe first four rows in the table portray the required instances of the forms (4, 3, 2;n) and (4, 2, 3;n) which by definition correspond to (4, 3;n) colorings (respectively in colors 1 and 3, and in colors 1 and 2). The next three rows correspond to (3, 3, 3;n) colorings where n \u2208 {14, 15, 16}. The last row illustrates our failed attempt to apply a SAT encoding to compute R(3, 3, 3; 13). The first column in the table specifies the instance. The column headed by \u201c#\\\u2248\u201d specifies the known (except for the last row) number of colorings modulo weak isomorphism [15]. The columns headed by \u201cvars\u201d and \u201cclauses\u201d indicate, the numbers of variables and clauses in the corresponding CNF encodings of the coloring problems with and without the symmetry breaking Constraint (4). The columns headed by \u201ctime\u201d indicate the time (in seconds) to find all colorings iterating with a SAT solver. The timeout assumed here is 24 hours. The column headed by \u201c#\u201d specifies the number of colorings found by iterated SAT solving.\nIn the first four rows, notice the impact of symmetry breaking which reduces the number of solutions by 1\u20133 orders of magnitude. In the next three rows the reduction is more acute. Without symmetry breaking the colorings cannot be computed within the 24 hour timeout. The sets of colorings obtained with symmetry breaking have been verified to reduce, using nauty [8], to the known number of colorings modulo weak isomorphism indicated in the second column."}, {"heading": "5 Abstraction: Degree Matrices for Graph Colorings", "text": "This section introduces an abstraction on graph colorings defined in terms of degree matrices. The motivation is to solve a hard graph coloring problem by first\nsearching for its degree matrices. Degree matrices are to graph coloring problems as degree sequences [4] are to graph search problems. A degree sequence is a monotonic nonincreasing sequence of the vertex degrees of a graph. A graphic sequence is a sequence which can be the degree sequence of some graph.\nThe idea underlying our approach is that when the combinatorial problem at hand is too hard, then possibly solving an abstraction of the problem is easier. In this case, a solution of the abstract problem can be used to facilitate the search for a solution of the original problem.\nDefinition 3 (degree matrix). Let A be a graph coloring on n vertices with k colors. The degree matrix of A, denoted dm(A) is an n \u00d7 k matrix, M such that Mi,j = degj(i) is the degree of vertex i in color j. [ 12 8 8\n... 12 8 8\n]} 29 rows\nFig. 4. A degree matrix.\nFigure 4 illustrates the degree matrix of the graph coloring given as Figure 3. The three columns correspond to the three colors and the 29 rows to the 29 vertices. The degree matrix consists of 29 identical rows as the corresponding graph coloring is \u300812, 8, 8\u3009 regular.\nA degree matrix M represents the set of graphs A such that dm(A) = M . Due to properties of weak-isomorphism (vertices as well as colors can be reordered) we can exchange both rows and columns of a degree matrix without changing the set of graphs it represents. In the rest of our construction we adopt a representation in which the rows and columns of a degree matrix are sorted lexicographically.\nDefinition 4 (lex sorted degree matrix). For an n\u00d7 k degree matrix M we denote by lex(M) the smallest matrix with rows and columns in the lexicographic order (non-increasing) obtained by permuting rows and columns of M .\nDefinition 5 (abstraction). Let A be a graph coloring on n vertices with k colors. The abstraction of A to a degree matrix is \u03b1(A) = lex(dm(A)). For a set A of graph colorings we denote \u03b1(A) = { \u03b1(A) \u2223\u2223A \u2208 A }. Note that if A and A\u2032 are weakly isomorphic, then \u03b1(A) = \u03b1(A\u2032). Definition 6 (concretization). Let M be an n\u00d7k degree matrix. Then, \u03b3(M) ={ A \u2223\u2223\u03b1(A) = M } is the set of graph colorings represented by M . For a set M\nof degree matrices we denote \u03b3(M) = \u222a { \u03b3(M) \u2223\u2223M \u2208M }. Let \u03d5(A) be a graph coloring problem in k colors on an n \u00d7 n adjacency matrix, A. Our strategy to compute A = sol(\u03d5(A)) is to first compute an overapproximationM of degree matrices such that \u03b3(M) \u2287 A and to then useM to guide the computation of A. We denote the set of solutions of the graph coloring problem, \u03d5(A), which have a given degree matrix, M , by solM (\u03d5(A)). Then\nsol(\u03d5(A)) = \u22c3\nM\u2208M solM (\u03d5(A)) (5)\nsolM (\u03d5(A)) = sol(\u03d5(A) \u2227 \u03b1(A)=M) (6)\nEquation (5) implies that, we can compute the solutions to a graph coloring problem \u03d5(A) by computing the independent sets solM (\u03d5(A)) for any over approximation M of the degree matrices of the solutions of \u03d5(A). This facilitates the computation for two reasons: (1) The problem is now broken into a set of independent sub-problems for each M \u2208M which can be solved in parallel, and (2) The computation of each individual solM (\u03d5(A)) is now directed using M .\nThe constraint \u03b1(A)=M in the right side of Equation (6) is encoded to SAT by introducing (encodings of) cardinality constraints. For each row of the matrix A the corresponding row in M specifies the number of elements with value c (for 1 \u2264 c \u2264 k) that must be in that row. We omit the precise details of the encoding to CNF. In our implementation this is performed by the finite domain constraint compiler BEE and details can be found in [10].\nWhen computing solM (\u03d5(A)) for a given degree matrix we can no longer apply the symmetry breaking Constraint (4) as it might constrain the rows of A in a way that contradicts the constraint \u03b1(A) = M in the right side of Equation (6). However, we can refine Constraint (4, to break symmetries on the rows of A only when the corresponding rows in M are equal. Then M can be viewed as inducing an ordered partition of A and Constraint (7) is, in the terminology of [2], a partitioned lexicographic symmetry break. In the following, Mi and Mj denote the i th and jth rows of matrix M .\nsb\u2217` (A,M) = \u2227 i<j ( ( Mi = Mj \u21d2 Ai {i,j} Aj ) ) (7)\nThe following refines Equation (6) introducing the symmetry breaking predicate.\nsolM (\u03d5(A)) = sol(\u03d5(A) \u2227 (\u03b1(A)=M) \u2227 sb\u2217` (A,M)) (8)\nTo justify that Equations (6) and (8) both compute solM (\u03d5(A)), modulo weak isomorphism, we must show that if sb\u2217` (A,M) excludes a solution then there is another weakly isomorphic solution that is not excluded.\nTheorem 3 (correctness of sb\u2217` (A,M)). Let A be an adjacency matrix with \u03b1(A) = M . Then, there exists A\u2032 \u2248 A such that \u03b1(A\u2032) = M and sb\u2217` (A\u2032,M) holds.\n6 Computing Degree Matrices for R(3, 3, 3; 13)\nThis section describes how we compute a set of degree matrices that approximate those of the solutions of instance \u03d5(3,3,3;13)(A) of Constraint (3). We apply a strategy mixing SAT solving with brute-force enumeration as follows. The computation of the degree matrices is summarized in Table 3. In the first step, we compute bounds on the degrees of the nodes in any R(3, 3, 3; 13) coloring.\nLemma 2. Let A be an R(3, 3, 3; 13) coloring then for every vertex x in A, and color c \u2208 {1, 2, 3}, 2 \u2264 degc(x) \u2264 5.\nProof. By solving instance \u03d5(3,3,3;13)(A) of Constraint (3) seeking a graph with some degree less than 2 or greater than 5. The CNF encoding is of size 13,672 clauses with 2,748 Boolean variables and takes under 15 seconds to solve and yields an UNSAT result which implies that such a graph does not exist.\nIn the second step, we enumerate the degree sequences with values within the bounds specified by Lemma 2. Recall that the degree sequence of an undirected graph is the non-increasing sequence of its vertex degrees. Not every nonincreasing sequence of integers corresponds to a degree sequence. A sequence that corresponds to a degree sequence is said to be graphical. The number of degree sequences of graphs with 13 vertices is 836,315 (see Sequence number A004251 of The On-Line Encyclopedia of Integer Sequences published electronically at http://oeis.org). However, when the degrees are bound by Lemma 2 there are only 280.\nLemma 3. There are 280 degree sequences with values between 2 and 5.\nProof. Straightforward enumeration using the algorithm of Erdo\u0308s and Gallai [4].\nIn the third step, we test the 280 degree sequences identified by Lemma 3 to determine which of them might occur as the left column in a degree matrix.\nLemma 4. Let A be a R(3, 3, 3; 13) coloring and let M = \u03b1(A). Then, (a) the left column of M is one of the 280 degree sequences identified in Lemma 3; and (b) there are only 80 degree sequences from the 280 which are the left column of \u03b1(A) for some coloring A in R(3, 3, 3; 13).\nProof. By solving instance \u03d5(3,3,3;13)(A) of Constraint (3). For each degree sequence from Lemma 3, seeking a solution with that degree sequence in the first color. This involves 280 instances with average CNF size: 10861 clauses and 2215 Boolean variables. The total solving time is 375.76 hours and the hardest instance required about 50 hours. Exactly 80 of these instances were satisfiable.\nIn the fourth step we extend the 80 degree sequences identified in Lemma 4 to obtain all possible degree matrices.\nLemma 5. Given the 80 degree sequences identified in Lemma 4 as potential left columns of a degree matrix, there are 11,933 possible degree matrices.\nProof. By enumeration. For a degree matrix: the rows and columns are lex sorted, the rows must sum to 12, and the columns must be graphical (when sorted). We enumerate all such degree matrices and then select their smallest representatives under permutations of rows and columns. The computation requires a few seconds.\nIn the fifth step, we test the 11,933 degree matrices identified by Lemma 5 to determine which of them are the abstraction of some R(3, 3, 3; 13) coloring.\nLemma 6. From the 11,933 degree matrices identified in Lemma 5, 999 are \u03b1(A) for a coloring A in R(3, 3, 3; 13).\nProof. By solving instance \u03d5(3,3,3;13)(A) of Constraint (3) together with a given degree matrix to test if it is satisfiable. This involves 11,933 instances with average CNF size: 7632 clauses and 1520 Boolean variables. The total solving time is 126.55 hours and the hardest instance required 0.88 hours.\n7 Computing R(3, 3, 3; 13) from Degree Matrices\nWe describe the computation of the setR(3, 3, 3; 13) starting from the 999 degree matrices identified in Lemma 6. Table 4 summarizes the two step experiment.\nstep 1: For each degree matrix we compute, using a SAT solver, all corresponding solutions of Equation (8), where \u03d5(A) = \u03d5(3,3,3;13)(A) of Constraint (3) and M is one of the 999 degree matrices identified in (Lemma 6). This generates in total 129,188 (3, 3, 3; 13) Ramsey colorings. Table 4 details the total solving time for these instances and the solving times for the hardest instance for each SAT solver. The largest number of graphs generated by a single instance is 3720.\nstep 2: The 129,188 (3, 3, 3; 13) colorings from step 1 are reduced modulo weakisomorphism using nauty [8]. This process results in a set with 78,892 graphs.\nWe note that recently, the set R(3, 3, 3; 13) has also been computed independently by Stanislaw Radziszowski, and independently by Richard Kramer and Ivan Livinsky [14].\n8 There is no \u300813, 8, 8\u3009 Regular (4, 3, 3; 30) Coloring\nIn order to prove that there is no \u300813, 8, 8\u3009 regular (4, 3, 3; 30) coloring using the embedding approach of Section 3, we need to check that 78,892\u00d73\u00d73 = 710,028\ncorresponding instances are unsatisfiable. These correspond to the elements in the cross product of R(3, 3, 3; 13), R(4, 2, 3; 8) and R(4, 3, 2).\nTo decrease the number of instances by a factor of 9, we approximate the three (4, 2, 3; 8) colorings by a single description as demonstrated in Figure 5. The constrained matrix on the right has four solutions which include the three (4, 2, 3; 8) colorings on the left. We apply a similar approach for the (4, 3, 2; 8) colorings. So, in fact we have a total of only 78,892 embedding instances to consider.\nIn addition to the constraints in Figure 1, we add constraints to specify that each row of the adjacency matrix has the prescribed number of edges in each color (13, 8 and 8). By application of a SAT solver, we have determined all\n78,892 instances to be unsatisfiable. The average size of an instance is 36,259 clauses with 5187 variables. The total solving time is 128.31 years (running in parallel on 456 threads). The average solving time is 14 hours while the median is 4 hours. Only 797 instances took more than one week to solve. The worst-case solving time is 96.36 days. The two hardest instances are detailed in Appendix B. Table 5 specifies, in the second column, the total number of instances that can be shown unsatisfiable within the time specified in the first column. The third column\nindicates the increment in percentage (within 10 hours we solve 71.46%, within 20 hours we solve an additional 12.11%, etc). The last rows in the table indicate that there are 4 instances which require between 1500 and 2000 hours of computation, and 2 that require between 2000 and 2400 hours."}, {"heading": "9 Conclusion", "text": "We have applied SAT solving techniques together with a methodology using abstraction and symmetry breaking to construct a computational proof that the Ramsey number R(4, 3, 3) = 30. Our strategy is based on the search for a (4, 3, 3; 30) Ramsey coloring, which we show does not exist. This implies that R(4, 3, 3) \u2264 30 and hence, because of known bounds, that R(4, 3, 3) = 30.\nThe precise value R(4, 3, 3) has remained unknown for almost 50 years. We have applied a methodology involoving SAT solving, abstraction, and symmetry\nto compute R(4, 3, 3) = 30. We expect this methodology to apply to a range of other hard graph coloring problems.\nThe question of whether a computational proof constitutes a proper proof is a controversial one. Most famously the issue caused much heated debate after publication of the computer proof of the Four Color Theorem [1]. It is straightforward to justify an existence proof (i.e. a SAT result), as it is easy to verify that the witness produced satisfies the desired properties. Justifying an UNSAT result is more difficult. If nothing else, we are certainly required to add the proviso that our results are based on the assumption of a lack of bugs in the entire tool chain (constraint solver, SAT solver, C-compiler etc.) used to obtain them.\nMost modern SAT solvers, support the option to generate a proof certificate for UNSAT instances (see e.g. [6]), in the DRAT format [18], which can then be checked by a Theorem prover. This might be useful to prove the lack of bugs originating from the SAT solver but does not offer any guarantee concerning bugs in the generation of the CNF. Moreover, the DRAT certificates for an application like that described in this paper are expected to be of unmanageable size.\nOur proofs are based on two main \u201ccomputer programs\u201d. The first was applied to compute the set R(3, 3, 3; 13) with its 78,892 Ramsey colorings. The fact that at least two other groups of researchers (Stanislaw Radziszowski, and independently Richard Kramer and Ivan Livinsky) report having computed this set and quote [14] the same number of elements is reassuring. The second program, was applied to complete partially instantiated adjacency matrices, embedding smaller Ramsey colorings, to determine if they can be extended to Ramsey colorings. This program was applied to show the non-existence of a (4, 3, 3; 30) Ramsey coloring. Here we gain confidence from the fact that the same program does find Ramsey colorings when they are known to exist. For example, the (4, 3, 3; 29) coloring depicted as Figure 3.\nAll of the software used to obtain our results is publicly available, as well as the individual constraint models and their corresponding encodings to CNF. For details, see the appendix."}, {"heading": "Acknowledgments", "text": "We thank Stanislaw Radziszowski for his guidance and comments which helped improve the presentation of this paper. In particular Stanislaw proposed to show that our technique is able to find the (4, 3, 3; 29) coloring depicted as Figure 3."}, {"heading": "A Selected Proofs", "text": "Lemma 1. [R(r1, r2, . . . , rk;n) is closed under \u2248] Let (G, \u03ba1) and (H,\u03ba2) be graph colorings in k colors such that (G, \u03ba1) \u2248\u03c0,\u03c3 (H,\u03ba2). Then,\n(G, \u03ba1) \u2208 R(r1, r2, . . . , rk;n) \u21d0\u21d2 (H,\u03ba2) \u2208 R(\u03c3(r1), \u03c3(r2), . . . , \u03c3(rk);n)\nProof (of Lemma 1). Assume that (G, \u03ba1) \u2208 R(r1, r2, . . . , rk;n) and in contradiction that (H,\u03ba2) /\u2208 R(\u03c3(r1), \u03c3(r2), . . . , \u03c3(rk);n). Let R denote a monochromatic clique of size rs in H and R\n\u22121 the inverse of R in G. From Definition 1, (u, v) \u2208 R \u21d0\u21d2 (\u03c0\u22121(u), \u03c0\u22121(v)) \u2208 R\u22121 and \u03ba2(u, v) = \u03c3\u22121(\u03ba1(u, v)). Consequently R\u22121 is a monochromatic clique of size rs in (G, \u03ba1) in contradiction to (G, \u03ba1) \u2208 R(r1, r2, . . . , rk;n).\nTheorem 3. [correctness of sb\u2217` (A,M)] Let A be an adjacency matrix with \u03b1(A) = M . Then, there exists A\u2032 \u2248 A such that \u03b1(A\u2032) = M and sb\u2217` (A\u2032,M) holds.\nProof (of Theorem 3). Let C = { A\u2032 \u2223\u2223A\u2032 \u2248 A \u2227 \u03b1(A\u2032) = M }. Obviously C 6= \u2205 because A \u2208 C and therefore there exists a Amin = min C. Therefore, Amin A\u2032 for all A\u2032 \u2208 C. Now we can view M as inducing an ordered partion on A: vertices u and v are in the same component if and only if the corresponding rows of M are equal. Relying on Theorem 4 from [2], we conclude that sb\u2217` (Amin,M) holds."}, {"heading": "B The Two Hardest Instances", "text": "The following partial adjacency matrices are the two hardest instances described in Section 8, from the total 78,892. Both include the constraints: A, B, C,\u2208 {1, 3}, D, E, F \u2208 {1, 2}, A 6= B, D 6= E. The corresponding CNF representations consist in 5204 Boolean variables (each), 36,626 clauses for the left instance and 36,730 for the right instance. SAT solving times to show these instances UNSAT are 8,325,246 seconds for the left instance and 7,947,257 for the right. 0 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 1 0 1 1 2 2 3 3 1 1 2 3 3 1 1 1 0 2 1 3 1 2 2 3 3 1 2 3 1 1 2 0 3 2 1 1 3 3 1 2 3 2 1 2 1 3 0 1 2 3 1 1 3 3 2 2 1 2 3 2 1 0 1 2 3 2 1 3 3 1 1 3 1 1 2 1 0 2 2 3 3 2 1 3 1 3 2 1 3 2 2 0 3 3 2 1 1 1 1 1 2 3 1 3 2 3 0 2 3 1 1 3 1 1 3 3 1 2 3 3 2 0 1 3 1 2 1 2 3 1 3 1 3 2 3 1 0 1 3 2 1 3 1 2 3 3 2 1 1 3 1 0 2 3 1 3 2 3 2 3 1 1 1 1 3 2 0 3 1 1 3 2 2 1 3 1 3 2 2 3 3 0 2 0 1 1 1 3 3 3 3 2 1 0 3 3 1 A 3 3 2 1 3 0 3 A B 1 3 2 1 3 3 0 3 B A 1 2 3 1 A 3 0 B C A 2 3 A B B B 0 A A 2 3 3 1 A C A 0 B 2 3 3 3 1 A A B 0 3 0 1 1 1 2 2 2 2 3 1 0 2 2 1 D 2 2 3 1 2 0 2 D E 1 2 3 1 2 2 0 2 E D 1 3 2 1 D 2 0 E F D 3 2 D E E E 0 D D 3 2 2 1 D F D 0 E 3 2 2 2 1 D D E 0   0 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 1 0 1 1 2 1 2 3 3 3 2 1 2 3 1 1 0 3 1 3 2 1 1 3 2 2 3 2 1 1 3 0 3 2 1 2 3 1 2 3 2 1 1 2 1 3 0 1 1 3 2 3 1 2 3 2 1 1 3 2 1 0 2 3 3 1 3 2 1 3 1 2 2 1 1 2 0 3 3 3 3 1 1 3 1 3 1 2 3 3 3 0 2 1 1 3 1 2 1 3 1 3 2 3 3 2 0 1 2 1 3 1 1 3 3 1 3 1 3 1 1 0 2 3 2 2 1 2 2 2 1 3 3 1 2 2 0 3 3 1 1 1 2 3 2 2 1 3 1 3 3 0 2 3 1 2 3 2 3 1 1 1 3 2 3 2 0 3 1 3 2 1 2 3 3 2 1 2 1 3 3 0 2 0 1 1 1 3 3 3 3 2 1 0 3 3 1 A 3 3 2 1 3 0 3 A B 1 3 2 1 3 3 0 3 B A 1 2 3 1 A 3 0 B C A 2 3 A B B B 0 A A 2 3 3 1 A C A 0 B 2 3 3 3 1 A A B 0 3 0 1 1 1 2 2 2 2 3 1 0 2 2 1 D 2 2 3 1 2 0 2 D E 1 2 3 1 2 2 0 2 E D 1 3 2 1 D 2 0 E F D 3 2 D E E E 0 D D 3 2 2 1 D F D 0 E 3 2 2 2 1 D D E 0 "}, {"heading": "C Making the Instances Available", "text": "The statistics from the proof that R(4, 3, 3) = 30 are available from the domain:\nhttp://cs.bgu.ac.il/~mcodish/Benchmarks/Ramsey334.\nAdditionally, we have made a small sample (30) of the instances available. Here we provide instances with the degrees \u300813, 8, 8\u3009 in the three colors. The selected instances represent the varying hardness encountered during the search. The instances numbered {27765, 39710, 42988, 36697, 13422, 24578, 69251, 39651, 43004, 75280} are the hardest, the instances numbered {4157, 55838, 18727, 43649, 26725, 47522, 9293, 519, 23526, 29880} are the median, and the instances numbered {78857, 78709, 78623, 78858, 28426, 77522, 45135, 74735, 75987, 77387} are the easiest. A complete set of both the BEE models and the DIMACS CNF files are available upon request. Note however that they weight around 50GB when zipped.\nThe files in bee_models.zip detail constraint models, each one in a separate file. The file named r433 30 Instance#.bee contains a single Prolog clause of the form\nmodel(Instance#,Map,ListOfConstraints) :- {...details...} .\nwhere Instance# is the instance number, Map is a partially instantiated adjacency matrix associating the unknown adjacency matrix cells with variable names, and ListOfConstraints are the finite domain constraints defining their values. The syntax is that of BEE, however the interested reader can easily convert these to their favorite fininte domain constraint language. Note that the Boolean values true and false are represented in BEE by the constants 1 and \u22121. Figure 6 details the BEE constraints which occur in the above mentioned models.\nThe files in cnf_models.zip correspond to CNF encodings for the constraint models. Each instance is associated with two files: r433 30 instance#.dimacs and r433 30 instance#.map. These consist respectively in a DIMACS file and a map file which associates the Booleans in the DIMACS file with the integer variables in a corresponding partially instantiated adjacency matrix. The map file specifies for each pair (i, j) of vertices a triplet [B1, B2, B3] of Boolean variables (or values) specifying the presence of an edge in each of the three colors. Each such Bi is either the name of a DIMACS variable, if it is greater than 1, or a truth value 1 (true), or \u22121 (false)."}], "references": [{"title": "Every map is four colourable", "author": ["K. Appel", "W. Haken"], "venue": "Bulletin of the American Mathematical Society, 82:711\u2013712,", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1976}, {"title": "Breaking symmetries in graph representation", "author": ["M. Codish", "A. Miller", "P. Prosser", "P.J. Stuckey"], "venue": "In F. Rossi, editor, Proceedings of the 23rd International Joint Conference on Artificial Intelligence, Beijing, China. IJCAI/AAAI,", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2013}, {"title": "Constraints for symmetry breaking in graph representation", "author": ["M. Codish", "A. Miller", "P. Prosser", "P.J. Stuckey"], "venue": "Full version of [2] (in preparation).,", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2014}, {"title": "Graphs with prescribed degrees of vertices (in Hungarian)", "author": ["P. Erd\u00f6s", "T. Gallai"], "venue": "Mat. Lapok, pages 264\u2013274,", "citeRegEx": "4", "shortCiteRegEx": null, "year": 1960}, {"title": "An upper bound of 62 on the classical Ramsey number r(3, 3, 3, 3)", "author": ["S.E. Fettes", "R.L. Kramer", "S.P. Radziszowski"], "venue": "Ars Comb., 72,", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2004}, {"title": "W", "author": ["M. Heule"], "venue": "A. H. Jr., and N. Wetzler. Bridging the gap between easy generation and efficient verification of unsatisfiability proofs. Softw. Test., Verif. Reliab., 24(8):593\u2013607,", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2014}, {"title": "Chromatic Graphs and Ramsey\u2019s Theorem", "author": ["J.G. Kalbfleisch"], "venue": "PhD thesis, University of Waterloo, January", "citeRegEx": "7", "shortCiteRegEx": null, "year": 1966}, {"title": "nauty user\u2019s guide (version 1.5)", "author": ["B. McKay"], "venue": "Technical Report TR-CS-90-02, Australian National University,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1990}, {"title": "Applying SAT methods in unbounded symbolic model checking", "author": ["K.L. McMillan"], "venue": "In E. Brinksma and K. G. Larsen, editors, Computer Aided Verification, 14th International Conference, Proceedings, volume 2404 of Lecture Notes in Computer Science, pages 250\u2013264. Springer,", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2002}, {"title": "Boolean equi-propagation for concise and efficient SAT encodings of combinatorial problems", "author": ["A. Metodi", "M. Codish", "P.J. Stuckey"], "venue": "J. Artif. Intell. Res. (JAIR), 46:303\u2013341,", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2013}, {"title": "On Ramsey number r(4, 3, 3) and triangle-free edge-chromatic graphs in three colors", "author": ["K. Piwakowski"], "venue": "Discrete Mathematics, 164(1-3):243\u2013249,", "citeRegEx": "11", "shortCiteRegEx": null, "year": 1997}, {"title": "30 \u2264 R(3, 3, 4) \u2264 31", "author": ["K. Piwakowski", "S.P. Radziszowski"], "venue": "Journal of Combinatorial Mathematics and Combinatorial Computing, 27:135\u2013141,", "citeRegEx": "12", "shortCiteRegEx": null, "year": 1998}, {"title": "Towards the exact value of the Ramsey number r(3, 3, 4)", "author": ["K. Piwakowski", "S.P. Radziszowski"], "venue": "In Proceedings of the 33-rd Southeastern International Conference on Combinatorics, Graph Theory, and Computing, volume 148, pages 161\u2013167. Congressus Numerantium,", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2001}, {"title": "Personal communication", "author": ["S.P. Radziszowski"], "venue": "January,", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2015}, {"title": "Small Ramsey numbers", "author": ["S.P. Radziszowski"], "venue": "Electronic Journal of Combinatorics, 1994. Revision #14: January,", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2014}, {"title": "Canonical labelings with nauty", "author": ["D. Stolee"], "venue": "Computational Combinatorics (Blog), Entry from September 20,", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2012}, {"title": "Drat-trim: Efficient checking and trimming using expressive clausal proofs", "author": ["N. Wetzler", "M. Heule", "W.A.H. Jr"], "venue": "In C. Sinz and U. Egly, editors, Theory and Applications of Satisfiability Testing, 17th International Conference, Proceedings, volume 8561 of Lecture Notes in Computer Science, pages 422\u2013429. Springer,", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2014}, {"title": "On some open questions for Ramsey and Folkman numbers", "author": ["X. Xu", "S.P. Radziszowski"], "venue": "Graph Theory, Favorite Conjectures and Open Problems,", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2015}], "referenceMentions": [{"referenceID": 6, "context": "Kalbfleisch [7] proved in 1966 that R(4, 3, 3) \u2265 30, Piwakowski [11] proved in 1997 that R(4, 3, 3) \u2264 32, and one year later Piwakowski and Radziszowski [12] proved that R(4, 3, 3) \u2264 31.", "startOffset": 12, "endOffset": 15}, {"referenceID": 10, "context": "Kalbfleisch [7] proved in 1966 that R(4, 3, 3) \u2265 30, Piwakowski [11] proved in 1997 that R(4, 3, 3) \u2264 32, and one year later Piwakowski and Radziszowski [12] proved that R(4, 3, 3) \u2264 31.", "startOffset": 64, "endOffset": 68}, {"referenceID": 11, "context": "Kalbfleisch [7] proved in 1966 that R(4, 3, 3) \u2265 30, Piwakowski [11] proved in 1997 that R(4, 3, 3) \u2264 32, and one year later Piwakowski and Radziszowski [12] proved that R(4, 3, 3) \u2264 31.", "startOffset": 153, "endOffset": 157}, {"referenceID": 17, "context": "This result is already considered significant progress in the research on Ramsey numbers as stated in [19].", "startOffset": 102, "endOffset": 106}, {"referenceID": 14, "context": "More information on recent results concerning Ramsey numbers can be found in the electronic dynamic survey by Radziszowski [15].", "startOffset": 123, "endOffset": 127}, {"referenceID": 13, "context": "Radziszowski, Richard Kramer and Ivan Livinsky [14].", "startOffset": 47, "endOffset": 51}, {"referenceID": 11, "context": "We make use of the following theorem from [12].", "startOffset": 42, "endOffset": 46}, {"referenceID": 9, "context": "SAT encodings (CNF) are obtained using the finite-domain constraint compiler BEE [10].", "startOffset": 81, "endOffset": 85}, {"referenceID": 8, "context": "This technique, originally due to McMillan [9], is simplistic but suffices for our purposes.", "startOffset": 43, "endOffset": 46}, {"referenceID": 17, "context": "This result is considered significant progress in the research on Ramsey numbers [19].", "startOffset": 81, "endOffset": 85}, {"referenceID": 12, "context": "See for example the presentations in [13,5,12].", "startOffset": 37, "endOffset": 46}, {"referenceID": 4, "context": "See for example the presentations in [13,5,12].", "startOffset": 37, "endOffset": 46}, {"referenceID": 11, "context": "See for example the presentations in [13,5,12].", "startOffset": 37, "endOffset": 46}, {"referenceID": 6, "context": "In 1966 Kalbfleisch [7] reported the existence of a circulant (3, 4, 4; 29) coloring.", "startOffset": 20, "endOffset": 23}, {"referenceID": 11, "context": "When searching for a graph coloring, on top of graph isomorphism, solutions are typically closed under permutations of the colors: the names of the colors do not matter and the term often used is \u201cweak isomorphism\u201d [12] (the equivalence relation is weaker because both node names and edge colors do not matter).", "startOffset": 215, "endOffset": 219}, {"referenceID": 7, "context": "Often one first attempts to compute all the solutions of the coloring problem, and to then apply one of the available graph isomorphism tools, such as nauty [8] to select representatives of their equivalence classes modulo (weak) isomorphism.", "startOffset": 157, "endOffset": 160}, {"referenceID": 2, "context": "To this end, we follow [3] where Codish et al.", "startOffset": 23, "endOffset": 26}, {"referenceID": 1, "context": "show that the symmetry breaking approach of [2] holds also for graph coloring problems where the adjacency matrix consists of integer variables.", "startOffset": 44, "endOffset": 47}, {"referenceID": 15, "context": "We applied an approach called k-layering described by Derrick Stolee [17].", "startOffset": 69, "endOffset": 73}, {"referenceID": 1, "context": "[2].", "startOffset": 0, "endOffset": 3}, {"referenceID": 9, "context": "In our implementation this is performed by the finite domain constraint compiler BEE and details can be found in [10].", "startOffset": 113, "endOffset": 117}, {"referenceID": 14, "context": "The column headed by \u201c#\\\u2248\u201d specifies the known (except for the last row) number of colorings modulo weak isomorphism [15].", "startOffset": 117, "endOffset": 121}, {"referenceID": 7, "context": "The sets of colorings obtained with symmetry breaking have been verified to reduce, using nauty [8], to the known number of colorings modulo weak isomorphism indicated in the second column.", "startOffset": 96, "endOffset": 99}, {"referenceID": 3, "context": "Degree matrices are to graph coloring problems as degree sequences [4] are to graph search problems.", "startOffset": 67, "endOffset": 70}, {"referenceID": 9, "context": "In our implementation this is performed by the finite domain constraint compiler BEE and details can be found in [10].", "startOffset": 113, "endOffset": 117}, {"referenceID": 1, "context": "Then M can be viewed as inducing an ordered partition of A and Constraint (7) is, in the terminology of [2], a partitioned lexicographic symmetry break.", "startOffset": 104, "endOffset": 107}, {"referenceID": 3, "context": "Straightforward enumeration using the algorithm of Erd\u00f6s and Gallai [4].", "startOffset": 68, "endOffset": 71}, {"referenceID": 7, "context": "step 2: The 129,188 (3, 3, 3; 13) colorings from step 1 are reduced modulo weakisomorphism using nauty [8].", "startOffset": 103, "endOffset": 106}, {"referenceID": 13, "context": "We note that recently, the set R(3, 3, 3; 13) has also been computed independently by Stanislaw Radziszowski, and independently by Richard Kramer and Ivan Livinsky [14].", "startOffset": 164, "endOffset": 168}, {"referenceID": 0, "context": "Most famously the issue caused much heated debate after publication of the computer proof of the Four Color Theorem [1].", "startOffset": 116, "endOffset": 119}, {"referenceID": 5, "context": "[6]), in the DRAT format [18], which can then be checked by a Theorem prover.", "startOffset": 0, "endOffset": 3}, {"referenceID": 16, "context": "[6]), in the DRAT format [18], which can then be checked by a Theorem prover.", "startOffset": 25, "endOffset": 29}, {"referenceID": 13, "context": "The fact that at least two other groups of researchers (Stanislaw Radziszowski, and independently Richard Kramer and Ivan Livinsky) report having computed this set and quote [14] the same number of elements is reassuring.", "startOffset": 174, "endOffset": 178}], "year": 2015, "abstractText": "The number R(4, 3, 3) is often presented as the unknown Ramsey number with the best chances of being found \u201csoon\u201d. Yet, its precise value has remained unknown for almost 50 years. This paper presents a methodology based on abstraction and symmetry breaking that applies to solve hard graph edge-coloring problems. The utility of this methodology is demonstrated by using it to compute the value R(4, 3, 3) = 30. Along the way it is required to first compute the previously unknown set R(3, 3, 3; 13) consisting of 78,892 Ramsey colorings.", "creator": "LaTeX with hyperref package"}}}