{"id": "1511.03897", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "12-Nov-2015", "title": "IfcWoD, Semantically Adapting IFC Model Relations into OWL Properties", "abstract": "in the context of building information modelling, ontologies have been found as interesting in achieving information interoperability. regarding dynamic window manager facility management domains, several ifc ( database foundation classes ) based ontologies have been developed, such as ifcowl. in the context of resource modelling, the constraint of constrained the size of ifc step - based files can be chosen. in we paper, we propose an adaptation of the ifc model into owl which leverages from classical modelling constraints required by the object - oriented structure of ifc schema. therefore, we don't only present a syntactic but assume a mathematical adaptation of the ifc model. our model takes into consideration the analysis of entities, relationships, properties and attributes defined by the ifc standard. our proposal presents several advantages compared to other initiatives resulting as robust improvement of query execution time. every thread is defended by means of practical examples and benchmarks.", "histories": [["v1", "Thu, 12 Nov 2015 13:49:06 GMT  (698kb)", "http://arxiv.org/abs/1511.03897v1", "In proceedings of the 32nd CIB W78 Conference on Information Technology in Construction, Oct 2015, Eindhoven, Netherlands"]], "COMMENTS": "In proceedings of the 32nd CIB W78 Conference on Information Technology in Construction, Oct 2015, Eindhoven, Netherlands", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["tarcisio mendes de farias", "ana roxin", "christophe nicolle"], "accepted": false, "id": "1511.03897"}, "pdf": {"name": "1511.03897.pdf", "metadata": {"source": "CRF", "title": "IfcWoD,Semantically Adapting IFC Model Relations into OWL Properties", "authors": ["Tarcisio Mendes de Farias", "Ana-Maria Roxin"], "emails": ["t.mendesdefarias@active3d.net", "ana-maria.roxin@u-bourgogne.fr", "cnicolle@u-bourgogne.fr"], "sections": [{"heading": null, "text": "In the context of Building Information Modelling, ontologies have been identified as interesting in achieving information interoperability. Regarding the construction and facility management domains, several IFC (Industry Foundation Classes) based ontologies have been developed, such as IfcOWL. In the context of ontology modelling, the constraint of optimizing the size of IFC STEP-based files can be leveraged. In this paper, we propose an adaptation of the IFC model into OWL which leverages from all modelling constraints required by theobject-oriented structure of the IFC schema. Therefore, we do not only present a syntactic but also a semantic adaptation of the IFC model. Our model takes into consideration the meaning of entities, relationships, properties and attributes defined by the IFC standard. Our approach presents several advantages compared to other initiatives such asthe optimization of query execution time. Every advantage is defended by means of practical examples and benchmarks.\nKeywords:IFC, Linked Data, OWL, Ontology, Building Information Modelling (BIM)"}, {"heading": "1 Introduction", "text": "Linked Data has been recognized as a promising research field for publishing and interlinking heterogeneous data from different Web repositories(Ne\u0161i\u0107, et al., 2011). For doing so, Linked Data relies on four main principles(Bizer, et al., 2009), derived from traditional Web architectures\u2019 principles(Heath & Bizer, 2011). First, resources are uniquely and globally identified by means of URIs (Uniform Resource Identifiers). Second, resources have to be accessed using the HTTP protocol, therefore HTTP URIs have to be used. Third, resource descriptions have to be delivered using the RDF standard model; resource queries have to be specified in SPARQL standard language. Finally, resource descriptions have to include RDF links to other resources (from other datasets), in order to increase the possibilities for discovering new resources. In the context of BIM (Building Information Modelling), such modelling of resourceshas been identified as interesting approach for achieving information interoperability(Pauwels, et al., 2011)(Farias, et al., 2014). Indeed, today\u2019s ISO standard for BIM information exchange is the IFC (Industry Foundation Classes) model(ISO , 2013).IFC was designed in order to optimize the size of STEP-based files(ISO, 2002)exchanged among project stakeholders. Still, in the context of ontology modelling, constraints imposed by IFC object-oriented modelling principles can be leveraged. Moreover, by implementing semantic adaptations of the IFC standard one can implement more intuitive building information manipulation. This is one of the reasons why, in construction and facility management domains, severalIFC-based\nProc. of the 32nd CIB W78 Conference 2015, 27th-29th 2015, Eindhoven, The Netherlands\nontologies have been developed.Existing IFC-related ontologies were conceived as direct syntax mappings between EXPRESS and OWL languages(Beetz, et al., 2009)(Pauwels, et al., 2011). One of the latest and the most solid implementationsof an IFC ontology is IfcOWL proposed in(W3C Linked Building Data Community Group, 2014). In this paper, we propose an adaptation of the IFC model into the OWL language. Our model takes advantages of RDFgraph-based structure andOWL\u2019s features for reasoning capabilities (data inference), thus leveraging from all modelling constraints required by the object-oriented structure of the EXPRESS language. Therefore, we do not only present a syntactic but also a semantic adaptation of the IFC model. Our model takes into consideration the meaning of the entities, relationships, properties and attributes as defined by the IFC standard. Our approach presents several advantages compared to other initiatives: it simplifies and eases query writing, it optimizes query execution, it maximizes inference capabilities as performed by the reasoners and finally allows reducing data redundancy. This paper begins with a brief overview of the main related works. Then, section 3 presents our approach. Allprevious stated advantages are defended by means of practical examples and benchmarks in section 4.Finally, we conclude this article in section 5."}, {"heading": "2 Related Works", "text": "Developed in the context of the IntelliGridEU FP6 project(Gehre, et al., 2006), the approach described by Beetz et al. in (Beetz, et al., 2009)is one of the most used approaches for translating the IFC standard into OWL language (IfcOWL). Authors present a semi-automatic method forconceivinganOWL ontology from the EXPRESS schema of the IFC standard. They establish various mapping rules such as every EXPRESS entity is mapped into an OWL class. Pauwels et al. in (Pauwels, et al., 2011)developed a similar method to IfcOWL for conceiving an IFC OWL ontology, butthey further focused on Linked Open Data aspects(Heath & Bizer, 2011). They also provide a web service for automatically converting the IFC model into itsSemantic Web version.Beetz et al. in (Beetz, et al., 2015)propose anintermediate approach mixing ISO 10303 part 21 STEP Physical File (SPF) format and RDF vocabulary. For doing so, authors map only the IfcPropertySingleValue entity into an RDF property. Theyjustified this approach by the fact that IFC geometric representations cannot be as efficiently stored in RDF as in SPF. Nevertheless, for mitigating this problem,in (Farias, et al., 2014), we have proposed to translate EXPRESS collections (e.g. LIST)either into non-functional OWL object properties or multiple objet and data properties,instead of using RDF List or OWL List constructs(Drummond, et al., 2006). We argue thiswith the fact that in cases where the property order is not important, acollection (LIST) can be mapped as several distinct values of a non-functional OWL property. Otherwise,for a finite collection, we can create different data or object properties.For exemplifying this, we may consider the IFC attribute \u201ccoordinates\u201d from IfcCartesianPointentity. This attribute contains an ordered list of three elements. With our approach, such attribute valueis mapped tothree OWL object properties: coordinateX, coordinateY and coordinateZ. Doing so allows us, for instance,to directly query the \u201cZ\u201d coordinate of a Cartesian point, without having to parse the entire coordinates list.\nBeetz et al. in (Beetz, et al., 2015)proposed a solutionas a first attempt to interpret IFC relation entities as OWL properties. However, their approach is limited to RDF vocabulary and only considers the IfcPropertySingleValueentity for property mapping. Furthermore, no method is proposed for semi-automatically or automatically translating IfcRelationship and IfcProperty(a super-type of IfcPropertySingleValue) entities as OWL properties.\nIn December 2014, the W3C Linked Building Data Community Group released a building ontology (W3C Linked Building Data Community Group, 2014)based on the latest version of the IFC2x4 standard. As it is an approach widely accepted by the Linked Building Data community,it can beconsidered as a state-of-the-art IfcOWL ontology. Still, this ontology was built starting from the EXPRESS specification of the IFC2x4 standard and using a direct mapping of EXPRESS entities to OWL classes, as was the caseinthe previous cited\nProc. of the 32nd CIB W78 Conference 2015, 27th-29th 2015, Eindhoven, The Netherlands\napproaches.This version of IfcOWLalso needs some improvements such as avoiding the usage ofOWL list structures for representing EXPRESS collections (e.g.: LIST or SET) as earlier described. For nextsections of this paper, the term IfcOWLmakes reference to the IFC-based ontology proposed by the W3C Linked Building Data Community(W3C Linked Building Data Community Group, 2014)."}, {"heading": "3 IfcWoD, the IFC Web of DataOntology", "text": "The latest version of IfcOWLdoes not allow fully exploiting OWL features, and still suffers from the limitations imposed by the EXPRESS language(STEP Tools, 2015). Indeed, the IFC standard was conceived for supporting object-oriented databases(Lee, et al., 2014). Moreover, one of the main goals of IFC STEP serialization was to optimize the size of exchanged data files. For example, various properties of the IFC entities are indeed a set of IfcPropertySingleValueinstances which are encapsulated in an IfcPropertySet entity. Figure 1illustrates a portion of such IFC-STEP file where several objects of IfcWallStandardCasetype (e.g.: #3060) point to the same set of IfcPropertySingleValueinstances (e.g.: #2935, #2936, #2937, #2941). This set of properties is related to IfcWallStandardCaseobjectsthrough one instance of anIfcRelDefinesbyPropertiesentity(e.g.: #14997). This referencing process allows considerably reducing the size of such STEP-based file.This applies to the context of one single STEP file, and is possible since various IFC objects can reference identical relationships only by using the unique STEP entity instance identifier (e.g. in the form \u201c#123\u201d). However, when conceiving the IFC standard ontology, from a semantic point of view, these relationship and property entities would be better \u201ctranslated\u201d into OWL properties instead of OWL classes and their instances (the considered IfcOWL ontology applies the latter). Doing this does not imply increasing data redundancy (as was the case for STEP-based files), notably because OWL knowledge bases (meaning TBoxandABox) are stored as triples in triple stores (i.e.: semantic graph knowledge bases or RDF stores)(Allemang & A. Hendler, 2008). We further explain this statement below.\nFigure 1 shows the definition of several STEP identifiers each one referencing only one instance of an IFC entity. For example, one instance of IfcRelDefinesbyProperties(i.e.: #14997) links a set of IFC objects (i.e.: #2890,#2906,#3002,#3060,#4605,#4685,#12594,#12656) to one IfcPropertySet instance (i.e.: #2950). The STEP syntax illustrated above allows optimizing the resulting file size. Indeed, it is not necessary to re-write an IfcRelDefinesbyProperties relationship for each IFC\nProc. of the 32nd CIB W78 Conference 2015, 27th-29th 2015, Eindhoven, The Netherlands\nobject implementing the same property set. Without the possibility of specifying such sets as a value for STEP entities\u2019 attributes, eight IfcRelDefinesbyProperties data entries would be necessary. Let us now suppose the case of the IfcOWL1 ontologypopulated with data from the IFC file illustrated in Figure 1.We use the prefix ifcowl for denoting terms issued from this ontology. Only one instance of type ifcowl:IfcRelDefinesbyPropertiesis created for representing data from one IfcRelDefinesbyPropertiesdata entry in the STEP format(STEP identifier \u201c#14997\u201d in Figure 1). Moreover, the previous set of IFC objects is interpreted as values for theifcowl:RelatedObjects_of_IfcRelDefinesbyPropertiesnon-functional OWL object property. When stored in a RDF triple store, each property assertion becomes a triple (e.g.::IfcRelDefinesbyProperties_14997ifcowl:RelatedObjects_of_IfcRelDefinesbyProperties: IfcWallStandardCase_3060).\nWhen considering the definition of an ontology (Guarino, et al., 2009), such data structuring isn\u2019t advised as it presents several drawbacks. Indeed, the considered IfcOWL ontology hardensthe understanding of IFC object properties and relationships. Also it complicates the correctapplication of Linked Data principles (notably the implementation ofRDF links to other knowledge bases). Moreover, the TBox model defined for the considered IfcOWL ontology makes query writing very difficult. We explain how our approach can leverage these points in section 4.\nStuder et al. in (Studer, et al., 1998)define an ontology merging Gruber\u2019s(Gruber, 1993)and Borst\u2019s(Borst, 1997)ontology definitions as follows: \u201cAn ontology is a formal, explicit specification of a shared conceptualization\u201d. Based on this definition, we propose defining IFC properties and relationships in the ontology schema instead of using instances of OWL classes (e.g. ifcowl:IfcProperty or ifcowl:IfcRelationship). By doing so, our resulting ontologycorrespondsto the above mentioned ontology definition (e.g.: explicit specification). We use the prefix ifcwodfor denoting terms from our IFC-based ontology (IfcWoD for IFC Web of Data). The methodology used forthe semi-automatic definition ofthe IfcWoD ontology is further described in the next subsections."}, {"heading": "3.1 Adapting IfcRelationship entity into OWL ontology", "text": "Figure 2 exemplifies our approach for modelling IFC relationships (i.e.: subtypes of IfcRelationship) semantically adapting into OWL ontologies based on Studer et al. ontology definition. Considering our previous example, we explicitly specify the relation between ifcowl:IfcWallStandardCaseinstances and their property set (ifcowl:IfcPropertySetinstance)by asserting OWL propertiesifcwod:isDefinedBy_IfcObject(e.g. :IfcWallStandardCase_3060ifcwod:isDefinedBy_IfcObjectIfcPropertySet_2950).In our approach, we consider this property to be the representation of the semantic meaning of the IFC entity IfcRelDefinesbyProperties. In the IFC model, theIfcRelationshipentity is a super-type (or a superclass in the IfcOWL ontology)of several relationships possible among IFC objects. These relationships represent the major building\u2019ssemantics. Still, in IfcOWL, these relations are stated as OWL classes. Hence, a relation is expressed in the ontology\u2019sABox as an instance of a subclass of IfcRelationship. Although, a relation can be explicitly defined as an OWL object property, these relations in IfcOWLare not explicitly specified in the schema (i.e.: TBox).\n1 http://linkedbuildingdata.net/resources/IFC4_ADD1.owl\nProc. of the 32nd CIB W78 Conference 2015, 27th-29th 2015, Eindhoven, The Netherlands\nThe subtypes of IfcRelationshiphavetwo attributes for relating IFC objects: Relating[name of relating object] and Related[name of related object]. Moreover, the IFC entity which models the related object has inverse attributes for referring to IfcRelationship entities. We take advantage of the inverse and Relating[name of relating object] attributesfor conceiving our OWL properties. Thus, we semantically adapt IfcRelationship entities into OWL language. For doing so, we parse the IFC standard specification in EXPRESS language(buildingSMART, 2015)to get these attribute specifications and conceive, partially, the IfcWoD ontology. For illustrating this procedure, let us consider the EXPRESS specification of IfcRelSequenceand IfcProcessentities(see Figure 3).Our approach parses the inverse attributes of IfcProcessforcomposing the set:I(IfcProcess) = {(isPredecessorTo, IfcProcess), (isSuccessorFrom, IfcProcess), (operatesOn, IfcProcessSelect) }. For each tuple (p, r)in I(e), an OWL object property is created as follows: ifcwod:p_erdf:typeowl:ObjectProperty(e.g.:ifcwod:isPredecessorTo_IfcProcessrdf:typeowl:O bjectProperty).Itsdomain is the IfcOWL class that represents the IFC entity eusing OWL (e.g.:ifcwod:isPredecessorTo_IfcProcessrdfs:domainifcowl:IfcProcess) and its rangeis the IfcOWL class that represents the IFC entity r(e.g.:ifcwod:isPredecessorTo_IfcProcessrdfs:rangeifcowl:IfcProcess). The annotation propertyifcwod:p_erdfs:label p^^xsd:string is also asserted(e.g.:ifcwod:isPredecessorTo_IfcProcessrdf:label \u201cisPredecessorTo\u201d^^xsd:string).\nIn the IFC model, IfcRelationship entity is a subtype of IfcRoot that has four attributes: GlobalId, OwnerHistory, Name andDescription. Consequently, IfcRelationshipinherits these four attributes. The GlobalId is a non-optional attribute as it allows to globally and uniquely identify a relationship within the whole software environment. These attributes are mapped as OWL object properties in IfcOWL. We consider these properties as part of a meta-model of our proposed IfcWoD ontology. Besides in the context of Web of data, a\u201cGlobalId\u201d property isredundantas a \u201cuniversal\u201d identifier already exists (i.e.: URI \u2013 Universal Resource Identifier)at a Web scale (not limited to a specific software). Nevertheless, GlobalId values can be a crucial information in the context of some IFC-based software (outside of Web). Because of this,datafrom attributes(GlobalId, OwnerHistory,Name, etc) aredescribed in IfcOWL and we ponder them as meta-data of various relations in IfcWoD. Inverse properties in IfcOWL are responsible for linking the relationship meta-data of severalIfcWoD properties. For illustrating this, let us consider one instance i of theifcowl:IfcProcessclass (Figure 3\nProc. of the 32nd CIB W78 Conference 2015, 27th-29th 2015, Eindhoven, The Netherlands\nillustrates the EXPRESS specification of IfcProcess entity). iasserts the ifcowl:IsPredecessorToproperty (inverse of ifcowl:RelatingProcess in IfcRelSequence) and its value isthe instance s of ifcowl:IfcRelSequence class. The instance sencapsulates metadata of the ifcwod:isPredecessorTo_IfcProcess propertythat defines the successor of the process i, namelyifcowl:IfcProcess.Meta-data of this property assertion comprisesGlobalId (from the IFC software used to create this entity), OwnerHistory, Name, Description, TimeLag, SequenceTypeandUserDefinedSequenceType.These attributes are all defined as optional in the IFC standard, except for GlobalId. Therefore,we use the property ifcwod:isPredecessorTo_IfcProcess for capturing the main meaning of theIfcRelSequence entity. We analysed all subtypes of IfcRelationshipand we have identified relationship entities which have specific attributes defined within. In some cases, these specific attributes improve the semantics of a relationship, but in most cases these attributes are optional. For example, in the case of IfcRelConnectsPathElements,the attributes ConnectionGeometry, RelatingPriorities,RelatedPriorities, RelatedConnectionType and RelatingConnectionTypesemantically enrich the considered relationship. However, only RelatedConnectionType and RelatingConnectionTypeattributesare mandatory. When considering the IFC standard, there are 41 IfcRelationship subtypes that can be instantiated.Among them, only 14 relationship entities have been identified as havingadditional semantic attributes (besides Relating[name of relating object] and Related[name of related object] attributes which hold the main semantics of an IFC relationship). Therefore, the mapping of the majority IfcRelationshipentitysubtypes as OWL object properties in IfcWoDcomprises the whole semantics of these relationships."}, {"heading": "3.2 Adapting IfcPropertyAbstraction entity into OWL ontology", "text": "The entity IfcPropertySet is responsible for capturing properties common toseveral IFC objects. The naming convention \"Pset_Xxx\" is used for defining these property sets in the IFC standard.IFC users can extend these property setswith non-standard properties. IfcOWLrelies on the equivalent IFC schema since all IFC entities are mapped as OWL classes independently of their semantics. Moreover, \u201cProperty Sets\u201d are not included in the consideredIfcOWL\u2019sTBox. Consequently, several properties are instances of ifcowl:IfcSimpleProperty(subclass of ifcowl:IfcProperty)instead of being OWL properties in the ontology\u2019s Tbox.Therefore, we propose to define these properties in our ontology schema, once again in order to respect the above mentioned ontology definition (e.g.: explicit specification). Besides in the Linked Data context, such modelling allows sharing vocabulary terms for publishing data on the Web. For illustrating a disadvantage of only using the IfcOWL vocabulary, let us consider a user that is searching a property for defining the gross planned area (e.g.: :grossPlannedArea) of a space.The:grossPlannedAreaproperty does not exist in IfcOWL, but it is implicitly defined using the property setPset_SpaceCommonfrom the IFC standard and an instance of ifcowl:IfcSimpleProperty class. Not only does the user has to browse the IfcOWL ontology for resource referencing and linking, but he/she must also investigate the IFC standard in order to find out that such property exists. Afterwards, he/she must manipulate unstructured information because IfcOWL conceives this property as a string value of the property ifcowl:Name_of_IfcProperty(e.g.: :instance_of_IfcSimplePropertyifcowl:Name_of_IfcProperty \u201cgrossPlannedArea\u201dxsd:string). Thus, a simple typing error of this property name implies the impossibilityfor liking data. This could have been avoided if this property would have been formally defined in the ontology schema. For semantically adapting theIfcProperty entity, we define the following IfcWoD properties, as listed in Table 1. IfcProperty entity has two subtypes: IfcSimplePropertyandIfcComplexProperty. They are mapped as OWL object properties ifcwod:hasSimpleProperty and ifcwod:hasComplexProperty, respectively. The IfcSimplePropertysubtypes are mapped assub-properties of ifcwod:hasSimpleProperty (see\nProc. of the 32nd CIB W78 Conference 2015, 27th-29th 2015, Eindhoven, The Netherlands\nTable 1).In addition, ifcwod:hasComplexPropertyis asserted as an anti-reflexive property because anIfcComplexProperty2 cannot reference itself.\nIn the IFC standard, there are more than 400 property sets defined for different IFC objects. They are also available as XML files by using the XSD schemaPSD_IFC4.xsd(seehttp://buildingSMART-tech.org/xml/psd/PSD_IFC4.xsd). Table 2contains the main correspondences for including these property sets in the IfcWoD\u2019sTBox. This table\u2019s rows summarize the mapping between Property Set Definitions (PSD) using the PSD_IFC4XSD schema and OWL.\nOur approach parses those XML files containing properties information for conceiving OWL object properties. EveryPSD XML file contains meta-data of one property set and meta-data for its properties. The property set name is used to compose the URI of properties in this set.\n2 www.buildingsmarttech.org/ifc/review/IFC4Add1/rc1/html/schema/ifcpropertyresource/lexical/ifccomplexproperty.htm\nProc. of the 32nd CIB W78 Conference 2015, 27th-29th 2015, Eindhoven, The Netherlands\npset_StackTerminalTypeCommon:referencerdfs:rangeifcowl:IfcIdentifier. referenceis defined as a sub-property ofifcwod:hasSingleValue because the <PropertyType> element contains a <TypePropertySingleValue> element.Moreover, the type attributefrom the<DataType> element defines the property range.\nAll mapping rules from Table 2are also applied to the second <PropertyDef> element in the PSD illustrated in Figure 4. Hence, pset_StackTerminalTypeCommon:statusis a subproperty ofifcwod:hasEnumeratedValue and the <EnumList> element (e.g.: PEnum_ElementStatus) is mapped as subclass of ifcowl:ENUMERATION(e.g.:\n3 http://www.buildingsmart-tech.org/ifc/IFC4/Add1/html/psd/Pset_StackTerminalTypeCommon.xml\nProc. of the 32nd CIB W78 Conference 2015, 27th-29th 2015, Eindhoven, The Netherlands\npset_StackTerminalTypeCommon:PEnum_ElementStatusrdfs:subClassOfifcowl:ENUMERA TION). Element <EnumList> (i.e.: <EnumItem>) contains instances of pset_StackTerminalTypeCommon:PEnum_ElementStatus. ThroughR6, we defined the range for the property status (e.g.: pset_StackTerminalTypeCommon:statusrdfs:rangepset_StackTerminalTypeCommon:PEnu m_ElementStatus). Therefore, we semantically adapt theIfcPropertyEnumerationentity into OWL.\nAll IFC entities that are subtypes of IfcSimpleProperty(except IfcPropertyReferenceValue and IfcEnumeratedValue) have a \u201cUnit\u201d attribute for asserting the unit used for expressing property values. For describing this information within IfcWoD, we define the property ifcwod:hasUnit,havingifcowl:IfcUnit as its range and ifcowl:IfcValueas its domain.Thus, the unit of a property value is described as part of value semantics instead of property semantics. By doing this, we do not have to define in the Tbox one property perconsidered unit value. Due to limited page number, in this article we focus solely on the semantical adaptation into OWL of the IfcPropertyAbstraction subtypes: IfcProperty and IfcPropertyEnumeration. The othersubtypes ofIfcPropertyAbstraction(i.e.IfcExtendedProperties and IfcPreDefinedProperties) are not discussed here."}, {"heading": "4 Results and discussions", "text": "IfcWoD allows enhancing reasoning (e.g.: data inference) over building data because it allows taking advantage of various OWL built-in classes.Notablyit allows defining logical characteristics for the considered properties (e.g.: owl:TransitiveProperty, owl:SymmetricProperty, owl:ReflexiveProperty). For example, the propertyifcwod:isPredecessorTo_IfcProcessfor theifcowl:IfcProcess class can be specified as a transitive property. This specification increases data inference when applying a description logic basedreasoner. This is not possible using exclusively the IfcOWL vocabulary because the considered relationship is mapped as an OWL class. Another advantage of our approach is the fact that it allows easier query writing and relationship understanding. This is because we do not have to browseifcowl:IfcRelationship instances for relating IFC objects. For illustrating this, let us suppose the following SPARQL4(query language for RDF) query, built only using IfcOWL terms: SELECT ?x ?z { ?x ifcowl:IsPredecessorTo ?y. ?yifcowl:RelatingProcess_of_IfcRelSequence ?z. }. If we use IfcWoD terms, this query is simplified to SELECT ?x ?y {?x ifcwod:isPredecessorTo_IfcProcess ?y}. Moreover, if ifcwod:isPredecessorTo_IfcProcess is stated as a transitive property more information can be inferred, for example, if P1 is predecessor to P2 and P2 is predecessor to P3, the OWL reasoner infers that P1 is also predecessor to P3 where P1, P2 and P3 are instances of ifcowl:IfcProcess class. Adapting the subtypes of theIfcPropertyAbstractionentity into OWL (as described in subsection3.2) has four main advantages: (a) it simplifies query writing; (b) it improves query response time; (c) it allows sharing building properties in the linked data context and (d) it reduces data redundancy. Table 3illustrates the advantage (a), by listing several SPARQL queries rewritten using IfcWOD terms. When comparing those queries, namely (Q1, Q1\u2019), (Q2, Q2\u2019) and (Q3, Q3\u2019), we may notice that the amount of triples is reducedof about 50%.Qn is a SPARQL query without IfcWoD terms and Qn\u2019 is a query with IfcWoD\nvocabulary where n  {1, 2, 3}.Q1 and Q1\u2019 retrieve all external walls of a building project. Q2 and Q2\u2019 retrieve all doors and their references. Q3 and Q3\u2019 retrieve spaces which are above an internal reference height of the building and their corresponding references. Table 4 presents response time benchmark resultsfor the above considered queries. For these experiments, we have used a 3.0.1 Stardog5 triple store which played the role of the server and was encapsulated in a virtual machine with the following configuration: one microprocessor Intel Xeon CPU E5-2430 at 2.2GHz with 2 cores out of 6, 8GB of DDR3\n4 http://www.w3.org/TR/rdf-sparql-query/ 5 http://docs.stardog.com/\nProc. of the 32nd CIB W78 Conference 2015, 27th-29th 2015, Eindhoven, The Netherlands\nRAM memory and the \u201cJava Heap\u201d size for the Java Virtual Machine set to 6GB. We populated the IfcOWL and IfcWoD ontologies with building information from an IFC-STEP file of 11.5 MB size. This file was mapped into more than one million RDF triples and stocked jointly with IfcOWL and IfcWoD over one knowledge base in the triple store. The client machine has the following configuration: one microprocessor Intel Core CPU I7-4790 at 3.6GHz with 4 cores, 8GB of DDR3 RAM memory at 1600MHz and the \u201cJava Heap\u201d size set to 1GB. Table 4 shows means and standard deviations of 30 executions for each query as requested by the client machine. We can conclude that the query mean time execution was reduced of about 90% or 95% in experiments which use IfcWoD terms for querying. Besides, executed queries retrieve the same results by using or not IfcWoD ontology as expected. This allows justifying advantage (b).\nTable 3Comparison between queries with and without IfcWoD ontology\nQuerying solely with IfcOWL terms Querying with IfcWoD terms Q1: SELECT ?wall WHERE {\n?wall rdf:typeifcowl:IfcWall; ifcowl:IsDefinedBy_of_IfcObject ?rel. ?relifcowl:RelatingPropertyDefinition ?pSet. ?pSetifcowl:HasProperties_of_IfcPropertyS\net ?p. ?p rdf:typeifcowl:IfcPropertySingleValue; ifcowl:Name_of_IfcProperty ?name. ?name ifcowl:has_string \"IsExternal\"^^xsd:string. ?p ifcowl:NominalValue ?val. ?valifcowl:has_boolean \"true\"^^xsd:boolean. }\nQ1\u2019: SELECT ?wall WHERE { ?wall rdf:typeifcowl:IfcWall; ifcwod:isDefinedBy_IfcObject ?pSet. ?pSetpset_WallCommon:isExternal ?val. ?valifcowl:has_boolean\n\"true\"^^xsd:boolean. }\nQ2: SELECT ?door?reference WHERE { ?doorrdf:typeifcowl:IfcDoor; ifcowl:IsDefinedBy_of_IfcObject ?rel. ?relifcowl:RelatingPropertyDefinition ?pSet. ?pSetifcowl:HasProperties_of_IfcPropertyS\net ?p. ?p rdf:typeifcowl:IfcPropertySingleValue; ifcowl:Name_of_IfcProperty ?name. ?name ifcowl:has_string \"Reference\"^^xsd:string. ?p ifcowl:NominalValue ?val. ?valifcowl:has_string?reference. }\nQ2\u2019: SELECT ?door?reference WHERE { ?doorrdf:typeifcowl:IfcDoor; ifcwod:isDefinedBy_IfcObject ?pSet. ?pSetpset_DoorCommon:reference ?val.\n?valifcowl:has_string?reference. }\nQ3: SELECT ?x ?reference WHERE { ?floor rdf:typeifcowl:IfcBuildingStorey. ?floor ifcowl:Elevation ?elev. ?elevifcowl:has_double ?y. ?floor ifcowl:isDecomposedBy ?rel. ?relifcowl:RelatedObjects_of_IfcRelAggregates ?x. ?x rdf:typeifcowl:IfcSpace;\nifcowl:IsDefinedBy_of_IfcObject ?rel. ?relifcowl:RelatingPropertyDefinition ?pSet. ?pSetifcowl:HasProperties_of_IfcPropertyS\net ?p. ?p rdf:typeifcowl:IfcPropertySingleValue; ifcowl:Name_of_IfcProperty ?name. ?name ifcowl:has_string \"Reference\"^^xsd:string. ?p ifcowl:NominalValue ?val. ?valifcowl:has_string?reference. FILTER (?y > 0) }\nQ3\u2019: SELECT ?x ?reference WHERE { ?flrdf:typeifcowl:IfcBuidingStorey. ?flifcowl:Elevation ?elev. ?elevifcowl:has_double ?y. ?flifcwod:isDecomposedBy_IfcObjectDefinition ?x. ?x rdf:typeifcowl:IfcSpace; ifcwod:IsDefinedBy_IfcObject?pSet. ?pSetpset_SpaceCommon:reference ?val. ?valifcowl:has_string?reference. FILTER (?y > 0) }\nProc. of the 32nd CIB W78 Conference 2015, 27th-29th 2015, Eindhoven, The Netherlands\nAdvantage (c) is justified by the fact that the IfcProperty entity is formally and explicitly defined in ourTBox.When consideringonly the IfcOWL ontology, properties are instances of theIfcProperty class and they cannot be easily shared in the Linked Datacontext, asthey are not part of theIfcOWL vocabulary. For justifying (d), let us consider the property \u201cIsExternal\u201d presentin thePset_WallCommonIFC property set. Figure 5illustrates how \u201cIsExtenal\u201d data is described without and with IfcWoD vocabulary. When considering solely the IfcOWL ontology, for relating this property to an IfcPropertySet instance one has to instantiate theIfcPropertySingleValue class. Thus, describing this property withoutIfcWoD implies replicatingthe same assertions(e.g.: :PropertyInstanceifcowl:Name_of_IfcProperty\u201cIsExtenal\u201d^^xsd:string)for each instance of theIfcPropertySetthat should contain an \u201cIsExternal\u201d property.Such data replication is avoided when using the IfcWoDproperty: pset_WallCommon:isExternal."}, {"heading": "5 Conclusion", "text": "In this work, we proposed an approach that focuses onsemantic modelling IFC relations in OWL. For doing so, we have based our proposal on widely accepted guidelines for ontology definition and ontology modelling. We described a semi-automatic method for conceiving an ontology (i.e. IfcWoD) more adequate for semantically linking IFC data in thecontext of the Web of Data. We have rigorouslyanalysed modelling choices as applied in the current stateof-the-art IfcOWL ontology. Based on the disadvantages identified, we propose a novel modelling that allowsan eased application of the Linked (Open) Data principles. Our IfcWoD ontology is not another version of IfcOWL, but a new ontology that uses terms from IfcOWL. Moreover, a part of IfcOWL ontology can be considered as a meta-model forIfcWoD. The experiment results and discussions prove that IfcWoD linked to IfcOWL simplifies querying writing and improves query response time for retrieving building data, when compared to only consideringIfcOWLontology. Additionally, defining PSD properties in the ontology\u2019sTBox allows reducing data redundancy.\nProc. of the 32nd CIB W78 Conference 2015, 27th-29th 2015, Eindhoven, The Netherlands\nFurther workaddressesanalysing the trade-off between data redundancy and query performance, when defining the domain of PSD properties directly as IFC object classes instead ofIfcPropertySet classes. Moreover, there are many properties such as \u201creference\u201d that are present in several PSDs. Thus, we want to further study the gathering and the hierarchizationof such common properties."}, {"heading": "Acknowledgements", "text": "This work has been financed by the French company ACTIVe3D (see http://www.active3d.net/fr/) and supported by the Burgundy Regional Council (see http://www.region-bourgogne.fr/)."}], "references": [{"title": "Semantic web for the working ontologist: effective modeling in RDF, RDFS and OWL. 1st ed", "author": ["D. Allemang", "J.A. Hendler"], "venue": null, "citeRegEx": "Allemang and Hendler,? \\Q2008\\E", "shortCiteRegEx": "Allemang and Hendler", "year": 2008}, {"title": "Interoperable data models for infrastructural artefacts \u2013 a novel IFC extension method using RDF vocabularies exemplified with quay wall structures for harbors. eWork and eBusiness in Architecture, Engineering and Construction (ECPPM", "author": ["J Beetz"], "venue": null, "citeRegEx": "Beetz,? \\Q2015\\E", "shortCiteRegEx": "Beetz", "year": 2015}, {"title": "IfcOWL: A case of transforming EXPRESS schemas into ontologies", "author": ["J. Beetz", "J. Van Leeuwen", "B. De Vries"], "venue": "Journal Artificial Intelligence for Engineering Design, Analysis and Manufacturing,", "citeRegEx": "Beetz et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Beetz et al\\.", "year": 2009}, {"title": "Linked data-the story so far.. s.l.:s.n", "author": ["C. Bizer", "T. Heath", "T. Berners-Lee"], "venue": null, "citeRegEx": "Bizer et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Bizer et al\\.", "year": 2009}, {"title": "Construction of Engineering Ontologies. Institute for Telematica and Information Technology University of Twente, Enschede, TheNetherlands: s.n", "author": ["W. Borst"], "venue": null, "citeRegEx": "Borst,? \\Q1997\\E", "shortCiteRegEx": "Borst", "year": 1997}, {"title": "Experiences and Directions (OWLEd", "author": ["M.T. Farias", "A. Roxin", "C. Nicolle"], "venue": null, "citeRegEx": "Farias et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Farias et al\\.", "year": 2014}, {"title": "Interoperability of Virtual Organiza-tions on", "author": ["A. Gehre", "P. Katranuschkov", "J. Wix", "J. Beetz"], "venue": "Volume 1211,", "citeRegEx": "Gehre et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Gehre et al\\.", "year": 2006}, {"title": "What Is an Ontology", "author": ["N. 199-220. Guarino", "D. Oberle", "S. Staab"], "venue": "Handbook on Ontologies,", "citeRegEx": "Guarino et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Guarino et al\\.", "year": 2009}, {"title": "Query Performance of the IFC Model Server Using an Object-Relational Database Approach and a Traditional Relational Database Approach", "author": ["G Lee"], "venue": "J. Comput. Civ. Eng. (ASCE), March,", "citeRegEx": "Lee,? \\Q2014\\E", "shortCiteRegEx": "Lee", "year": 2014}, {"title": "Towards a Semantically Unified Environmental Information Space", "author": ["S. Ne\u0161i\u0107", "A.E. Rizzoli", "I.N. Athanasiadis"], "venue": "Environmental Software Systems. Frameworks of eEnvironment. IFIP Advances in Information and Communication Technology,", "citeRegEx": "Ne\u0161i\u0107 et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Ne\u0161i\u0107 et al\\.", "year": 2011}, {"title": "Extending the design process into the knowledge of the world", "author": ["P. Pauwels", "R. De Meyer", "J. Van Campenhout"], "venue": "Proceedings of the 14th International Conference on Computer Aided Architectural Design,", "citeRegEx": "Pauwels et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Pauwels et al\\.", "year": 2011}, {"title": "2015IfcWoD, Semantically Adapting the IFC Model Relations into OWL Ontologies", "author": ["Farias"], "venue": "Proc. of the 32 CIB W78 Conference 2015,", "citeRegEx": "Farias,? \\Q2015\\E", "shortCiteRegEx": "Farias", "year": 2015}, {"title": "Knowledge engineering: Principles and methods", "author": ["R. Studer", "R. Benjamins", "D. Fensel"], "venue": null, "citeRegEx": "Studer et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Studer et al\\.", "year": 2015}], "referenceMentions": [{"referenceID": 4, "context": ", 1998)define an ontology merging Gruber\u2019s(Gruber, 1993)and Borst\u2019s(Borst, 1997)ontology definitions as follows: \u201cAn ontology is a formal, explicit specification of a shared conceptualization\u201d.", "startOffset": 67, "endOffset": 80}], "year": 2015, "abstractText": "In the context of Building Information Modelling, ontologies have been identified as interesting in achieving information interoperability. Regarding the construction and facility management domains, several IFC (Industry Foundation Classes) based ontologies have been developed, such as IfcOWL. In the context of ontology modelling, the constraint of optimizing the size of IFC STEP-based files can be leveraged. In this paper, we propose an adaptation of the IFC model into OWL which leverages from all modelling constraints required by theobject-oriented structure of the IFC schema. Therefore, we do not only present a syntactic but also a semantic adaptation of the IFC model. Our model takes into consideration the meaning of entities, relationships, properties and attributes defined by the IFC standard. Our approach presents several advantages compared to other initiatives such asthe optimization of query execution time. Every advantage is defended by means of practical examples and benchmarks.", "creator": "Microsoft\u00ae Office Word 2007"}}}