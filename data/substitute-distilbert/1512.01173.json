{"id": "1512.01173", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "3-Dec-2015", "title": "Building Memory with Concept Learning Capabilities from Large-scale Knowledge Base", "abstract": "we illustrate a new perspective on neural knowledge base ( kb ) embeddings, from which we build a framework that can model symbolic knowledge in the psyche together with its learning process. we show that this framework can regularizes previous neural kb reference model for superior productivity in reasoning tasks, clearly having the capabilities of dealing with random entities, that is, to learn fuzzy embeddings from natural sensory descriptions, which is very like human's behavior of learning semantic concepts.", "histories": [["v1", "Thu, 3 Dec 2015 17:52:50 GMT  (15kb)", "http://arxiv.org/abs/1512.01173v1", "Accepted to NIPS 2015 Cognitive Computation workshop (CoCo@NIPS 2015)"]], "COMMENTS": "Accepted to NIPS 2015 Cognitive Computation workshop (CoCo@NIPS 2015)", "reviews": [], "SUBJECTS": "cs.CL cs.AI cs.LG", "authors": ["jiaxin shi", "jun zhu"], "accepted": false, "id": "1512.01173"}, "pdf": {"name": "1512.01173.pdf", "metadata": {"source": "CRF", "title": "Building Memory with Concept Learning Capabilities from Large-scale Knowledge Base", "authors": ["Jiaxin Shi", "Jun Zhu"], "emails": ["ishijiaxin@126.com", "dcszj@mail.tsinghua.edu.cn"], "sections": [{"heading": null, "text": "ar X\niv :1\n51 2.\n01 17\n3v 1\n[ cs\n.C L\n] 3"}, {"heading": "1 Introduction", "text": "Recent years have seen great advances in neural networks and their applications in modeling images and natural languages. With deep neural networks, people are able to achieve superior performance in various machine learning tasks [1, 2, 3, 4]. One of those is relational learning, which aims at modeling relational data such as user-item relations in recommendation systems, social networks and knowledge base, etc. In this paper we mainly focus on knowledge base.\nGenerally a knowledge base (KB) consists of triplets (or facts) like (e1, r, e2), where e1 and e2 denote the left entity and the right entity, and r denotes the relation between them. Previous works on neural KB embeddings model entities and relations with distributed representation, i.e., vectors [5] or matrices [6], and learn them from the KB. These prove to be scalable approaches for relational learning. Experiments also show that neural embedding models obtain state-of-art performance on reasoning tasks like link prediction. Section 2 will cover more related work.\nAlthough such methods on neural modeling of KB have shown promising results on reasoning tasks, they have limitations of only addressing known entities that appear in the training set and do not generalize well to settings where we have unseen entities. Because they do not know embedding representations of new entities, they cannot establish relations with them. On the other hand, the capability of KB to learn new concepts as entities, or more specifically, to learn what a certain name used by human means, is obviously highly useful, particularly in a KB-based dialog system. We observe that during conversations human does this task by first asking for explanation and then establishing knowledge about the concept from other peoples\u2019 natural language descriptions. This inspired our framework of modeling human\u2019s cognitive process of learning concepts during conversations, i.e., the process from natural language description to a concept in memory.1 We use a neural embedding model [5] to model the memory of concepts. When given description text of a new concept, our framework directly transforms it into an entity embedding, which captures semantic information about this concept. The entity embedding can be stored and later used for other\n1Concept learning in cognitive science usually refers to the cognitive process where people grow abstract generalizations from several example objects [7]. We use concept learning here to represent a different behavior.\nsemantic tasks. Details of our framework are described in Section 3. We will show efficiency of this framework in modeling entity relationships, which involve both natural language understanding and reasoning.\nOur perspective on modeling symbolic knowledge with its learning process has two main advantages. First, it enables us to incorporate natural language descriptions to augment the modeling of relational data, which fits human\u2019s behavior of learning concepts during conversations well. Second, we also utilize the large number of symbolic facts in knowledge base as labeled information to guide the semantic modeling of natural language. The novel perspective together with framework are the key contributions of this work."}, {"heading": "2 Related work", "text": "Statistical relational learning has long been an important topic in machine learning. Traditional methods such as Markov logic networks [8] often suffer from scalability issues due to intractable inference. Following the success of low rank models [9] in collaborative filtering, tensor factorization [10, 11] was proposed as a more general form to deal with multi-relational learning (i.e., multiple kinds of relations exist between two entities). Another perspective is to regard elements in factorized tensors as probabilistic latent features of entities. This leads to methods that apply nonparametric Bayesian inference to learn latent features [12, 13, 14] for link prediction. Also, attempts have been made to address the interpretability of latent feature based models under the framework of Bayesian clustering [15]. More recently, with the noticeable achievements of neural embedding models like word vectors [16] in natural language processing area, various neural embedding models [6, 17, 5, 4, 18] for relational data have been proposed as strong competitors in both scalability and predictability for reasoning tasks.\nAll these methods above model relational data under the latent-feature assumption, which is a common perspective in machine learning to gain high performance in prediction tasks. However, these models leave all latent features to be learnt from data, which suffers from substantial increments of model complexity when applying to large-scale knowledge bases. For example, [10] can be seen as having a feature vector for each entity in factorized tensors, while [6] also represents entities in separate vectors, or embeddings, thus the number of parameters scales linearly with the number of entities. A large number of parameters in these models often increases the risk of overfitting, but few of these works have proposed effective regularization techniques to address it. On the other hand, when applying these models to real world tasks (e.g., knowledge base completion), most of them have a shared limitation that entities unseen in training set cannot be dealt with, that is, they can only complete relations between known entities, which is far from what human\u2019s ability of learning new concepts can achieve. From this perspective, we develop a general framework that is capable of modeling symbolic knowledge together with its learning process, as detailed in Section 3."}, {"heading": "3 The framework", "text": "Our framework consists of two parts. The first part is a memory storage of embedding representations. We use it to model the large-scale symbolic knowledge in the KB, which can be thought as memory of concepts. The other part is a concept learning module, which accepts natural language descriptions of concepts as the input, and then transforms them into entity embeddings in the same space of the memory storage. In this paper we use translating embedding model from [5] as our memory storage and use neural networks for the concept learning module."}, {"heading": "3.1 Translating embedding model as memory storage", "text": "We first describe translating embedding (TransE) model [5], which we use as the memory storage of concepts. In TransE, relationships are represented as translations in the embedding space. Suppose we have a set of N true facts D = {(e1, r, e2)}N as the training set. If a fact (e1, r, e2) is true, then TransE requires e1 + r to be close to e2. Formally, we define the set of entity vectors as E, the set of relation vectors as R, where R,E \u2282 Rn, e1, e2 \u2208 E, r \u2208 R. Let d be some distance measure, which is either the L1 or L2 norm. TransE minimizes a margin loss between the score of true facts\nin the training set and randomly made facts, which serve as negative samples:\nL(D) = \u2211\n(e1,r,e2)\u2208D\n\u2211\n(e\u20321,r \u2032,e\u20322)\u2208D \u2032\n(e1,r,e2)\nmax(0, \u03b3 + d(e1 + r, e2)\u2212 d(e \u2032 1 + r \u2032, e\u20322)), (1)\nwhere D\u2032(e1,r,e2) = {(e \u2032 1, r, e2) : e \u2032 1 \u2208 E} \u222a {(e1, r, e \u2032 2) : e \u2032 2 \u2208 E}, and \u03b3 is the margin. Note that this loss favors lower distance between translated left entities and right entities for training facts than for random generated facts in D\u2032. The model is optimized by stochastic gradient descent with mini-batch. Besides, TransE forces the L2 norms of entity embeddings to be 1, which is essential for SGD to perform well according to [5], because it prevents the training process from trivially minimizing loss by increasing entity embedding norms.\nThere are advantages of using embeddings instead of symbolic representations for cognitive tasks. For example, it\u2019s kind of easier for us to figure out that a person who is a violinist can play violin than to tell his father\u2019s name. However, in symbolic representations like knowledge base, the former fact <A, play, violin> can only be deduced by reasoning process through facts <A, has profession, violinist> and <violinist, play, violin>, which is a two-step procedure, while the latter result can be acquired in one step through the fact <A, has father, B>. If we look at how TransE embeddings do this task, we can figure out that A plays violin by finding nearest neighbors of A\u2019s embedding + play\u2019s embedding, which costs at most the same amount of time as finding out who A\u2019s father is. This claim is supported by findings in cognitive science that the general properties of concepts (e.g., <A, play, violin>) are more strongly bound to an object than its more specific properties (e.g., <A, has father, B>) [19]."}, {"heading": "3.2 Concept learning module", "text": "As mentioned earlier, the concept learning module accepts natural language descriptions of concepts as the input, and outputs corresponding entity embeddings. As this requires natural language understanding with knowledge in the KB transferred into the module, neural networks can be good candidates for this task. We explore two kinds of neural network architectures for the concept learning module, including multi-layer perceptrons (MLP) and convolutional neural networks (CNN).\nFor MLP, we use one hidden layer with 500 neurons and RELU activations. Because MLP is fullyconnected, we cannot afford the computational cost when the input length is too long. For large scale datasets, the vocabulary size is often as big as millions, which means that bag-of-words features cannot be used. Here, we use bag-of-n-grams features as inputs (there are at most 263 = 17576 kinds of 3-grams in pure English text). Given a word, for example word, we first add starting and ending marks to it like #word#, and then break it into 3-grams (#wo, wor, ord, rd#). Suppose we have V kinds of 3-grams in our training set. For an input description, we count the numbers of all kinds of 3-grams in this text, which form a V -dimensional feature vector x. To control scale of the input per dimension, we use log(1 + x) instead of x as input features. Then we feed this vector into the MLP, with the output to be the corresponding entity embedding under this description.\nSince MLP with bag-of-n-grams features loses information of the word order, it has very little sense of the semantics. Even at the word level, it fails to identify words with similar meanings. From this point of view, we further explore the convolutional architecture, i.e. CNN together with word vector features. Let s = w1w2...wk be the paragraph of a concept description and let v(wi) \u2208 Rd be the vector representation for word wi. During experiments in this paper, we set d = 50 and initialize v(wi) with wi\u2019s word vector pretrained from large scale corpus, using methods in [16]. Let As be the input matrix for s, which is defined by:\nAs:,i = v(wi), (2)\nwhere As:,i denotes the ith column of matrix A s. For the feature maps at the lth layer F (l) \u2208 R c\u00d7n\u00d7m, where c is the number of channels, we add the convolutional layer like:\nF (l+1) i,:,: =\nc\u2211\nj=1\nF (l) j,:,: \u2217K (l) i,j,:,:, (3)\nwhere K(l) denotes all convolution kernels at the lth layer, which forms an order-4 tensor (output channels, input channels, y axis, x axis). When modeling natural language, which is in a sequence\nform, we choose K(l) to have the same size in the y axis as feature maps F (l). So for the first layer that has the input size 1 \u00d7 D \u00d7 L, we use kernel size D \u00d7 1 in the last two axes, where D is the dimension of word vectors. After the first layer, the last two axes of feature maps in each layer remain to be vectors. We list all layers we use in Table 1, where kernels are described by output channels \u00d7 y axis \u00d7 x axis.\nNote that we use neural networks (either MLP or CNN) to output the entity embeddings, while according to Section 3.1, the embedding model requires the L2-norms of entity embeddings to be 1. This leads to a special normalization layer (the 12th layer in Table 1) designed for our purpose. Given the output of the second last layer x \u2208 Rn, we define the last layer as:\nek = wTk,:x+ bk\n[ \u2211n\nk\u2032=1(w T k\u2032,:x+ bk\u2032)\n2]1/2 (4)\ne is the output embedding. It\u2019s easy to show that \u2016e\u20162 = 1. Throughout our experiments, we found that this trick plays an essential role in making joint training of the whole framework work. We will describe the training process in Section 3.3."}, {"heading": "3.3 Training", "text": "We jointly train our embedding model and concept learning module together by stochastic gradient descent with mini-batch and Nesterov momentum [20], using the loss defined by equation 1, where the entity embeddings are given by outputs of the concept learning module. When doing SGD with mini-batch, We back-propagate the error gradients into the neural network, and for CNN, finally into word vectors. The relation embeddings are also updated with SGD, and we re-normalize them in each iteration to make their L2-norms stay 1."}, {"heading": "4 Experiments", "text": ""}, {"heading": "4.1 Datasets", "text": "Since no public datasets satisfy our need, we have built two new datasets to test our method and make them public for research use. The first dataset is based on FB15k released by [5]. We dump natural language descriptions of all entities in FB15k from Freebase [21], which are stored under relation /common/topic/description. We refer to this dataset as FB15k-desc2. The other dataset is also from Freebase, while we make it much larger. In fact, we include all entities that have descriptions in Freebase and remove triplets with relations in a filter set. Most relations in the filter set are schema relations like /type/object/key. This dataset has more than 4M entities, for which we call it FB4M-desc3. Statistics of the two datasets are presented in Table 2.\n2FB15k-desc: Available at http://ml.cs.tsinghua.edu.cn/\u02dc jiaxin/fb15k desc.tar.gz 3FB4M-desc: Available at http://ml.cs.tsinghua.edu.cn/\u02dcjiaxin/fb4m desc.tar.gz\nNote that the scale is not the only difference between these two datasets. They also differ in splitting criteria. FB15k-desc follows FB15k\u2019s original partition of training, validation and test sets, in which all entities in validation and test sets are already seen in the training set. FB4M-desc goes the contrary way, as it is designed to test the concept learning ability of our framework. All facts in validation and test sets include an entity on one side that are not seen in the training set. So when evaluated on FB4M-desc, a good embedding for a new concept can only rely on information from the natural language description and knowledge transferred in the concept learning module."}, {"heading": "4.2 Link prediction", "text": "We first describe the task of link prediction. Given a relation and an entity on one side, the task is to predict the entity on the other side. This is a natural reasoning procedure which happens in our thoughts all the time. Following previous work [5], we use below evaluation protocol for this task. For each test triplet (e1, r, e2), e1 is removed and replaced by all the other entities in the training set in turn. The neural embedding model should give scores for these corrupted triplets. The rank of the correct entity is stored. We then report the mean of predicted ranks on the test set as the left mean rank. This procedure is repeated by corrupting e2 and then we get the right mean rank. The proportion of correct entities ranked in the top 10 is another index, which we refer to as hits@10.\nWe test our link prediction performance on FB15k-desc and report it in Table 3. The type of concept learning module we use here is CNN. Note that all the triplets in training, validation and test sets of FB15k-desc are the same as FB15k, so we list TransE\u2019s results on FB15k in the same table. Compared to TransE which cannot make use of information in descriptions, our model performs much better, in terms of both mean rank and hits@10. As stated in Section 4.1, all entities in the test set of FB15k are contained in the training set, which, together with the results, shows that our framework well regularizes the embedding model by forcing embeddings to reflect information from natural language descriptions. We demonstrate the concept learning capability in the next subsection."}, {"heading": "4.3 Concept learning capabilities", "text": "It has been shown in Section 4.2 that our framework well regularizes the neural embedding model for memory storage. Next we use FB4M-desc to evaluate the capability of our framework on learning new concepts and performing reasoning based on learnt embeddings. We report the link prediction performance on FB4M-desc in Table 4. Note that the test set contains millions of triples, which is very time-consuming in the ranking-based evaluation. So we randomly sample 1k, 10k and 80k triplets from the test set to report the evaluation statistics. We can see that CNN consistently outperforms MLP in terms of both mean rank and hits@10. All the triplets in the test set of FB4M-desc include an entity unseen in the training set on one side, requiring the model to understand natural language descriptions and to do reasoning based on it. As far as we know, no traditional knowledge base embedding model can compete with us on this task, which again claims the novelty of our framework.\nFinally, we show some examples in Table 5 to illustrate our framework\u2019s capability of learning concepts from natural language descriptions. From the first example, we can see that our framework is able to infer <Lily Burana, has profession, author> from the sentence \u201cLily Burana is an American writer.\u201d To do this kind of reasoning requires a correct understanding of the original sentence and knowledge that writer and author are synonyms. In the third example, with limited information in the description, the framework hits correct facts almost purely based on its knowledge of astronomy, demonstrating the robustness of our approach."}, {"heading": "5 Conclusions and future work", "text": "We present a novel perspective on knowledge base embeddings, which enables us to build a framework with concept learning capabilities from large-scale KB based on previous neural embedding models. We evaluate our framework on two newly constructed datasets from Freebase, and the results show that our framework well regularizes the neural embedding model to give superior performance, while has the ability to learn new concepts and use the newly learnt embeddings to deal with semantic tasks (e.g., reasoning).\nFuture work may include consistently improving performance of learnt concept embeddings on large-scale datasets like FB4M-desc. For applications, we think this framework is very promising in solving problems of unknown entities in KB-powered dialog systems. The dialog system can ask users for description when meeting an unknown entity, which is a natural behavior even for human during conversations."}], "references": [{"title": "Imagenet classification with deep convolutional neural networks. In Advances in neural information processing", "author": ["Alex Krizhevsky", "Ilya Sutskever", "Geoffrey E Hinton"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2012}, {"title": "Deep neural networks for acoustic modeling in speech recognition: The shared views of four research groups", "author": ["Geoffrey Hinton", "Li Deng", "Dong Yu", "George E Dahl", "Abdel-rahman Mohamed", "Navdeep Jaitly", "Andrew Senior", "Vincent Vanhoucke", "Patrick Nguyen", "Tara N Sainath"], "venue": "Signal Processing Magazine, IEEE,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2012}, {"title": "Sequence to sequence learning with neural networks", "author": ["Ilya Sutskever", "Oriol Vinyals", "Quoc VV Le"], "venue": "In Advances in neural information processing systems,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2014}, {"title": "Reasoning with neural tensor networks for knowledge base completion", "author": ["Richard Socher", "Danqi Chen", "Christopher D Manning", "Andrew Ng"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2013}, {"title": "Translating embeddings for modeling multi-relational data", "author": ["Antoine Bordes", "Nicolas Usunier", "Alberto Garcia-Duran", "Jason Weston", "Oksana Yakhnenko"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2013}, {"title": "Learning structured embeddings of knowledge bases", "author": ["Antoine Bordes", "Jason Weston", "Ronan Collobert", "Yoshua Bengio"], "venue": "In Conference on Artificial Intelligence,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1923}, {"title": "How to grow a mind: Statistics, structure, and abstraction", "author": ["Joshua B Tenenbaum", "Charles Kemp", "Thomas L Griffiths", "Noah D Goodman"], "venue": null, "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2011}, {"title": "Matrix factorization techniques for recommender systems", "author": ["Yehuda Koren", "Robert Bell", "Chris Volinsky"], "venue": null, "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2009}, {"title": "A three-way model for collective learning on multi-relational data", "author": ["Maximilian Nickel", "Volker Tresp", "Hans-Peter Kriegel"], "venue": "In Proceedings of the 28th international conference on machine learning", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2011}, {"title": "Factorizing yago: scalable machine learning for linked data", "author": ["Maximilian Nickel", "Volker Tresp", "Hans-Peter Kriegel"], "venue": "In Proceedings of the 21st international conference on World Wide Web,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2012}, {"title": "Learning systems of concepts with an infinite relational model", "author": ["Charles Kemp", "Joshua B Tenenbaum", "Thomas L Griffiths", "Takeshi Yamada", "Naonori Ueda"], "venue": "In AAAI,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2006}, {"title": "Nonparametric latent feature models for link prediction", "author": ["Kurt Miller", "Michael I Jordan", "Thomas L Griffiths"], "venue": "In Advances in neural information processing systems,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2009}, {"title": "Max-margin nonparametric latent feature models for link prediction", "author": ["Jun Zhu"], "venue": "In Proceedings of the 29th International Conference on Machine Learning", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2012}, {"title": "Modelling relational data using bayesian clustered tensor factorization", "author": ["Ilya Sutskever", "Joshua B Tenenbaum", "Ruslan R Salakhutdinov"], "venue": "In Advances in neural information processing systems,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2009}, {"title": "Distributed representations of words and phrases and their compositionality", "author": ["Tomas Mikolov", "Ilya Sutskever", "Kai Chen", "Greg S Corrado", "Jeff Dean"], "venue": "In Advances in neural information processing systems,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2013}, {"title": "A semantic matching energy function for learning with multi-relational data", "author": ["Antoine Bordes", "Xavier Glorot", "Jason Weston", "Yoshua Bengio"], "venue": "Machine Learning,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2014}, {"title": "Knowledge graph and text jointly embedding", "author": ["Zhen Wang", "Jianwen Zhang", "Jianlin Feng", "Zheng Chen"], "venue": "In Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP),", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2014}, {"title": "The parallel distributed processing approach to semantic cognition", "author": ["James L McClelland", "Timothy T Rogers"], "venue": "Nature Reviews Neuroscience,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2003}, {"title": "On the importance of initialization and momentum in deep learning", "author": ["Ilya Sutskever", "James Martens", "George Dahl", "Geoffrey Hinton"], "venue": "In Proceedings of the 30th international conference on machine learning", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2013}, {"title": "Freebase: a collaboratively created graph database for structuring human knowledge", "author": ["Kurt Bollacker", "Colin Evans", "Praveen Paritosh", "Tim Sturge", "Jamie Taylor"], "venue": "In Proceedings of the 2008 ACM SIGMOD international conference on Management of data,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2008}], "referenceMentions": [{"referenceID": 0, "context": "With deep neural networks, people are able to achieve superior performance in various machine learning tasks [1, 2, 3, 4].", "startOffset": 109, "endOffset": 121}, {"referenceID": 1, "context": "With deep neural networks, people are able to achieve superior performance in various machine learning tasks [1, 2, 3, 4].", "startOffset": 109, "endOffset": 121}, {"referenceID": 2, "context": "With deep neural networks, people are able to achieve superior performance in various machine learning tasks [1, 2, 3, 4].", "startOffset": 109, "endOffset": 121}, {"referenceID": 3, "context": "With deep neural networks, people are able to achieve superior performance in various machine learning tasks [1, 2, 3, 4].", "startOffset": 109, "endOffset": 121}, {"referenceID": 4, "context": ", vectors [5] or matrices [6], and learn them from the KB.", "startOffset": 10, "endOffset": 13}, {"referenceID": 5, "context": ", vectors [5] or matrices [6], and learn them from the KB.", "startOffset": 26, "endOffset": 29}, {"referenceID": 4, "context": "1 We use a neural embedding model [5] to model the memory of concepts.", "startOffset": 34, "endOffset": 37}, {"referenceID": 6, "context": "Concept learning in cognitive science usually refers to the cognitive process where people grow abstract generalizations from several example objects [7].", "startOffset": 150, "endOffset": 153}, {"referenceID": 7, "context": "Following the success of low rank models [9] in collaborative filtering, tensor factorization [10, 11] was proposed as a more general form to deal with multi-relational learning (i.", "startOffset": 41, "endOffset": 44}, {"referenceID": 8, "context": "Following the success of low rank models [9] in collaborative filtering, tensor factorization [10, 11] was proposed as a more general form to deal with multi-relational learning (i.", "startOffset": 94, "endOffset": 102}, {"referenceID": 9, "context": "Following the success of low rank models [9] in collaborative filtering, tensor factorization [10, 11] was proposed as a more general form to deal with multi-relational learning (i.", "startOffset": 94, "endOffset": 102}, {"referenceID": 10, "context": "This leads to methods that apply nonparametric Bayesian inference to learn latent features [12, 13, 14] for link prediction.", "startOffset": 91, "endOffset": 103}, {"referenceID": 11, "context": "This leads to methods that apply nonparametric Bayesian inference to learn latent features [12, 13, 14] for link prediction.", "startOffset": 91, "endOffset": 103}, {"referenceID": 12, "context": "This leads to methods that apply nonparametric Bayesian inference to learn latent features [12, 13, 14] for link prediction.", "startOffset": 91, "endOffset": 103}, {"referenceID": 13, "context": "Also, attempts have been made to address the interpretability of latent feature based models under the framework of Bayesian clustering [15].", "startOffset": 136, "endOffset": 140}, {"referenceID": 14, "context": "More recently, with the noticeable achievements of neural embedding models like word vectors [16] in natural language processing area, various neural embedding models [6, 17, 5, 4, 18] for relational data have been proposed as strong competitors in both scalability and predictability for reasoning tasks.", "startOffset": 93, "endOffset": 97}, {"referenceID": 5, "context": "More recently, with the noticeable achievements of neural embedding models like word vectors [16] in natural language processing area, various neural embedding models [6, 17, 5, 4, 18] for relational data have been proposed as strong competitors in both scalability and predictability for reasoning tasks.", "startOffset": 167, "endOffset": 184}, {"referenceID": 15, "context": "More recently, with the noticeable achievements of neural embedding models like word vectors [16] in natural language processing area, various neural embedding models [6, 17, 5, 4, 18] for relational data have been proposed as strong competitors in both scalability and predictability for reasoning tasks.", "startOffset": 167, "endOffset": 184}, {"referenceID": 4, "context": "More recently, with the noticeable achievements of neural embedding models like word vectors [16] in natural language processing area, various neural embedding models [6, 17, 5, 4, 18] for relational data have been proposed as strong competitors in both scalability and predictability for reasoning tasks.", "startOffset": 167, "endOffset": 184}, {"referenceID": 3, "context": "More recently, with the noticeable achievements of neural embedding models like word vectors [16] in natural language processing area, various neural embedding models [6, 17, 5, 4, 18] for relational data have been proposed as strong competitors in both scalability and predictability for reasoning tasks.", "startOffset": 167, "endOffset": 184}, {"referenceID": 16, "context": "More recently, with the noticeable achievements of neural embedding models like word vectors [16] in natural language processing area, various neural embedding models [6, 17, 5, 4, 18] for relational data have been proposed as strong competitors in both scalability and predictability for reasoning tasks.", "startOffset": 167, "endOffset": 184}, {"referenceID": 8, "context": "For example, [10] can be seen as having a feature vector for each entity in factorized tensors, while [6] also represents entities in separate vectors, or embeddings, thus the number of parameters scales linearly with the number of entities.", "startOffset": 13, "endOffset": 17}, {"referenceID": 5, "context": "For example, [10] can be seen as having a feature vector for each entity in factorized tensors, while [6] also represents entities in separate vectors, or embeddings, thus the number of parameters scales linearly with the number of entities.", "startOffset": 102, "endOffset": 105}, {"referenceID": 4, "context": "In this paper we use translating embedding model from [5] as our memory storage and use neural networks for the concept learning module.", "startOffset": 54, "endOffset": 57}, {"referenceID": 4, "context": "We first describe translating embedding (TransE) model [5], which we use as the memory storage of concepts.", "startOffset": 55, "endOffset": 58}, {"referenceID": 4, "context": "Besides, TransE forces the L2 norms of entity embeddings to be 1, which is essential for SGD to perform well according to [5], because it prevents the training process from trivially minimizing loss by increasing entity embedding norms.", "startOffset": 122, "endOffset": 125}, {"referenceID": 17, "context": ", <A, has father, B>) [19].", "startOffset": 22, "endOffset": 26}, {"referenceID": 14, "context": "During experiments in this paper, we set d = 50 and initialize v(wi) with wi\u2019s word vector pretrained from large scale corpus, using methods in [16].", "startOffset": 144, "endOffset": 148}, {"referenceID": 18, "context": "We jointly train our embedding model and concept learning module together by stochastic gradient descent with mini-batch and Nesterov momentum [20], using the loss defined by equation 1, where the entity embeddings are given by outputs of the concept learning module.", "startOffset": 143, "endOffset": 147}, {"referenceID": 4, "context": "The first dataset is based on FB15k released by [5].", "startOffset": 48, "endOffset": 51}, {"referenceID": 19, "context": "We dump natural language descriptions of all entities in FB15k from Freebase [21], which are stored under relation /common/topic/description.", "startOffset": 77, "endOffset": 81}, {"referenceID": 4, "context": "Model Mean rank Hits@10 (%) Left Right Avg Left Right Avg TransE[5] - - 243 - - 34.", "startOffset": 64, "endOffset": 67}, {"referenceID": 4, "context": "Following previous work [5], we use below evaluation protocol for this task.", "startOffset": 24, "endOffset": 27}], "year": 2015, "abstractText": "We present a new perspective on neural knowledge base (KB) embeddings, from which we build a framework that can model symbolic knowledge in the KB together with its learning process. We show that this framework well regularizes previous neural KB embedding model for superior performance in reasoning tasks, while having the capabilities of dealing with unseen entities, that is, to learn their embeddings from natural language descriptions, which is very like human\u2019s behavior of learning semantic concepts.", "creator": "LaTeX with hyperref package"}}}