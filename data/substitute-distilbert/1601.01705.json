{"id": "1601.01705", "review": {"conference": "HLT-NAACL", "VERSION": "v1", "DATE_OF_SUBMISSION": "7-Jan-2016", "title": "Learning to Compose Neural Networks for Question Answering", "abstract": "we describe a question answering model that applies to both images and structured knowledge bases. dynamics model uses symbolic language strings to automatically assemble neural networks from a collection uniformly composable modules. parameters for designing modules are learned jointly with network - assembly parameters emphasizing reinforcement learning, selection only ( effect, question, answer ) triples as supervision. standard approach, now we term together dynamic neural model network, achieves state - of - the - art results on benchmark datasets in both visual and structured domains.", "histories": [["v1", "Thu, 7 Jan 2016 21:21:59 GMT  (4810kb,D)", "http://arxiv.org/abs/1601.01705v1", null], ["v2", "Wed, 1 Jun 2016 18:20:37 GMT  (5947kb,D)", "http://arxiv.org/abs/1601.01705v2", null], ["v3", "Mon, 6 Jun 2016 01:44:25 GMT  (7152kb,D)", "http://arxiv.org/abs/1601.01705v3", null], ["v4", "Tue, 7 Jun 2016 23:25:51 GMT  (7293kb,D)", "http://arxiv.org/abs/1601.01705v4", null]], "reviews": [], "SUBJECTS": "cs.CL cs.CV cs.NE", "authors": ["jacob andreas", "marcus rohrbach", "trevor darrell", "dan klein"], "accepted": true, "id": "1601.01705"}, "pdf": {"name": "1601.01705.pdf", "metadata": {"source": "CRF", "title": "Learning to Compose Neural Networks for Question Answering", "authors": ["Jacob Andreas"], "emails": ["jda@eecs.berkeley.edu", "rohrbach@eecs.berkeley.edu", "trevor@eecs.berkeley.edu", "klein@eecs.berkeley.edu"], "sections": [{"heading": "1 Introduction", "text": "This paper presents a compositional, attentional model for answering questions about a variety of world representations, including images and structured knowledge bases. The model translates from questions to dynamically assembled neural networks, then applies these networks to world representations (images or knowledge bases) to produce answers. We take advantage of two largely independent lines of work: on one hand, an extensive literature on answering questions by mapping from strings to logical representations of meaning; on the other, a series of recent successes in deep neural models for image recognition and captioning. By constructing neural networks instead of logical forms, our model leverages the best aspects of both linguistic compositionality and continuous representations.\nOur model has two components, trained jointly: first, a collection of neural \u201cmodules\u201d that can be freely composed (Figure 1b); second, a network layout predictor that assembles modules into complete deep networks tailored to each question (Figure 1a).\nPrevious work has used manually-specified modular structures for visual learning (Andreas et al., 2015). Here we:\n\u2022 learn a network structure predictor jointly with module parameters themselves \u2022 extend visual primitives from previous work to\nreason over structured world representations\nTraining data consists of (world, question, answer) triples: our approach requires no supervision of network layouts. We achieve state-of-the-art performance on two markedly different question answering tasks: one with questions about natural images, and another with more compositional questions about United States geography."}, {"heading": "2 Deep networks as functional programs", "text": "We begin with a high-level discussion of the kinds of composed networks we would like to learn.\nar X\niv :1\n60 1.\n01 70\n5v 1\n[ cs\n.C L\n] 7\nJ an\n2 01\n6\nAndreas et al. (2015) describe a heuristic approach for decomposing visual question answering tasks into sequence of modular sub-problems. For example, the question What color is the bird? might be answered in two steps: first, \u201cwhere is the bird?\u201d (Figure 2a), second, \u201cwhat color is that part of the image?\u201d (Figure 2c). This first step, a generic module called find, can be expressed as a fragment of a neural network that maps from image features and a lexical item (here bird) to a distribution over pixels. This operation is commonly referred to as the attention mechanism, and is a standard tool for manipulating images (Xu et al., 2015) and text representations (Hermann et al., 2015)\nThe first contribution of this paper is an extension and generalization of this mechanism to enable fully-differentiable reasoning about more structured semantic representations. Figure 2b shows how the same module can be used to focus on the entity Georgia in a non-visual grounding domain; more generally, by representing every entity in the universe of discourse as a feature vector, we can obtain a distribution over entities that corresponds roughly to a logical set-valued denotation.\nHaving obtained such a distribution, existing neural approaches use it to immediately compute a weighted average of image features and project back into a labeling decision\u2014a describe module (Figure 2c). But the logical perspective suggests a number of novel modules that might operate on attentions: e.g. combining them (by analogy to conjunction or disjunction) or inspecting them directly without a return to feature space (by analogy to quantification, Figure 2d). These modules are discussed in detail in Section 4. Unlike their formal counterparts, they are differentiable end-to-end, facilitating their integration into learned models. Building on previous work, we learn behavior for a collection of heterogeneous modules from (world, question, answer) triples.\nThe second contribution of this paper is a model for learning to assemble such modules compositionally. Isolated modules are of limited use\u2014to obtain expressive power comparable to either formal approaches or monolithic deep networks, they must be composed into larger structures. Figure 2 shows simple examples of composed structures, but for realistic question-answering tasks, even larger net-\nworks are required. Thus our goal is to automatically induce variable-free, tree-structured computation descriptors. We can use a familiar functional notation from formal semantics (e.g. Liang et al., 2011) to represent these computations.1 We write the two examples in Figure 2 as\n(describe[color] find[bird])\nand (exists find[state])\nrespectively. These are network layouts: they specify a structure for arranging modules (and their lexical parameters) into a complete network. Andreas et al. (2015) use hand-written rules to deterministically transform dependency trees into layouts, and restricted to producing simple structures like the above for non-synthetic data. For full generality, we will need to solve harder problems, like transforming What cities are in Georgia? (Figure 1) into\n(and find[city] (relate[in] lookup[Georgia]))\nIn this paper, we present a model for learning to select such structures from a set of automatically generated candidates. We call this model a dynamic neural module network.\n1But note that unlike formal semantics, the behavior of the primitive functions here is itself unknown."}, {"heading": "3 Related work", "text": "There is an extensive literature on database question answering, in which strings are mapped to logical forms, then evaluated by a black-box execution model to produce answers. Supervision may be provided either by annotated logical forms (Wong and Mooney, 2007; Kwiatkowski et al., 2010; Andreas et al., 2013) or from (world, question, answer) triples alone (Liang et al., 2011; Pasupat and Liang, 2015). In general the set of primitive functions from which these logical forms can be assembled is fixed, but one recent line of work focuses on inducing new predicates functions automatically, either from perceptual features (Krishnamurthy and Kollar, 2013) or the underlying schema (Kwiatkowski et al., 2013). The model we describe in this paper has a unified framework for handling both the perceptual and schema cases, and differs from existing work primarily in learning a differentiable execution model with continuous evaluation results.\nNeural models for question answering are also a subject of current interest. These include approaches that model the task directly as a multiclass classification problem (Iyyer et al., 2014), models that attempt to embed questions and answers in a shared vector space (Bordes et al., 2014) and attentional models that select words from documents sources (Hermann et al., 2015). Such approaches generally require that answers can be retrieved directly based on surface linguistic features, without requiring intermediate computation. A more structured approach described by Yin et al. (2015) learns a query execution model for database tables without any natural language component. Previous efforts toward unifying formal logic and representation learning include those of Grefenstette (2013) and Krishnamurthy and Mitchell (2013).\nThe visually-grounded component of this work relies on recent advances in convolutional networks for computer vision (Simonyan and Zisserman, 2014), and in particular the fact that late convolutional layers in networks trained for image recognition contain rich features useful for other downstream vision tasks, while preserving spatial information. These features have been used for both image captioning (Xu et al., 2015) and visual question answering (Yang et al., 2015).\nMost previous approaches to visual question answering either apply a recurrent model to deep representations of both the image and the question (Ren et al., 2015; Malinowski et al., 2015), or use the question to compute an attention over the input image, and then answer based on both the question and the image features attended to (Yang et al., 2015; Xu and Saenko, 2015). Other approaches include the simple classification model described by Zhou et al. (2015) and the dynamic parameter prediction network described by Noh et al. (2015). All of these models assume that a fixed computation can be performed on the image and question to compute the answer, rather than adapting the structure of the computation to the question.\nAs noted, Andreas et al. (2015) previously considered a simple generalization of these attentional approaches in which small variations in the network structure per-question were permitted, with the structure chosen by (deterministic) syntactic processing of questions. Other approaches in this general family include the \u201cuniversal parser\u201d sketched by Bottou (2014), and the recursive neural networks of Socher et al. (2013), which use a fixed tree structure to perform further linguistic analysis without any external world representation. We are unaware of previous work that succeeds in simultaneously learning both the parameters for and structures of instance-specific neural networks."}, {"heading": "4 Model", "text": "Recall that our goal is to map from questions and world representations to answers. This process involves the following variables:\n1. w a world representation 2. x a question 3. y an answer 4. z a network layout 5. \u03b8 a collection of model parameters\nOur model is built around two distributions: a layout model p(z|x; \u03b8`) which chooses a layout for a sentence, and a execution model pz(y|w; \u03b8e) which applies the network specified by z to w.\nFor ease of presentation, we introduce these models in reverse order. We first imagine that z is always observed, and in Section 4.1 describe how to evaluate and learn modules parameterized by \u03b8e within\nfixed structures. In Section 4.2, we move to the real scenario, where z is unknown. We describe how to predict layouts from questions and learn \u03b8e and \u03b8` jointly without layout supervision."}, {"heading": "4.1 Evaluating modules", "text": "Given a layout z, we assemble the corresponding modules into a full neural network (Figure 1c), and apply it to the knowledge representation. Intermediate results flow between modules until an answer is produced at the root. We denote the output of the network with layout z on input world w as JzKw; when explicitly referencing the substructure of z, we can alternatively write Jm(h1, h2)K for a top-level module m with submodule outputs h1 and h2. We then define the execution model:\npz(y|w) = (JzKw)y (1)\n(This assumes that the root module of z produces a distribution over labels y.) The set of possible layouts z is restricted by module type constraints: some modules (like find above) operate directly on the input representation, while others (like describe above) also depend on input from specific earlier modules. Two base types are considered in this paper are Attention (a distribution over pixels or entities) and Labels (a distribution over answers).\nParameters are tied across multiple instances of the same module, so different instantiated networks may share some parameters but not others. Modules have both parameter arguments (shown in square brackets) and ordinary inputs (shown in parentheses). Parameter arguments, like the running bird example in Section 2, are provided by the layout, and are used to specialize module behavior for particular lexical items. Ordinary inputs are the result of computation lower in the network. In addition to parameter-specific weights, modules have global weights shared across all instances of the module (but not shared with other modules). We writeA, a,B, b, . . . for global weights and ui, vi for weights associated with the parameter argument i. \u2295 and denote (possibly broadcasted) elementwise addition and multiplication respectively. The complete set of global weights and parameter-specific weights constitutes \u03b8e. Every module has access to the world representation, represented as a collection\nof vectors w1, w2, . . . (or W expressed as a matrix). The nonlinearity \u03c3 denotes a rectified linear unit.\nThe modules used in this paper are shown below, with names and type constraints in the first row and a description of the module\u2019s computation following.\nLookup (\u2192 Attention) lookup[i] produces an attention focused entirely at the index f(i), where the relationship f between words and positions in the input map is known ahead of time (e.g. string matches on database fields).\nJlookup[i]K = ef(i) (2) where ei is the basis vector that is 1 in the ith position and 0 elsewhere.\nFind (\u2192 Attention) find[i] computes a distribution over indices by concatenating the parameter argument with each position of the input feature map, and passing the concatenated vector through a MLP:\nJfind[i]K = softmax(a \u03c3(Bvi \u2295 CW \u2295 d)) (3)\nRelate (Attention\u2192 Attention) relate directs focus from one region of the input to another. It behaves much like the find module, but also conditions its behavior on the current region of attention h. Let w\u0304(h) = \u2211 k hkw\nk, where hk is the kth element of h. Then,\nJrelate[i](h)K = softmax(a \u03c3(Bvi \u2295 CW \u2295Dw\u0304(h)\u2295 e)) (4)\nAnd (Attention*\u2192 Attention) and performs an operation analogous to set intersection for attentions. The analogy to probabilistic logic suggests multiplying probabilities:\nJand(h1, h2, . . .)K = h1 h2 \u00b7 \u00b7 \u00b7 (5)\nDescribe (Attention\u2192 Labels) describe[i] computes a weighted average of w under the input attention. This average is then used to predict an answer representation. With w\u0304 as above,\nJdescribe[i](h)K = softmax(A\u03c3(Bw\u0304(h)+vi)) (6)\nExists (Attention\u2192 Labels) exists is the existential quantifiers, and inspects the incoming attention directly to produce a label, rather than producing an intermediate feature vector like describe:\nJexists](h)K = softmax ((\nmax k\nhk ) a+ b ) (7)\nWith z observed, the model we have described so far corresponds largely to that of Andreas et al.\n(2015), though the module inventory is different\u2014 in particular, our new exists and relate modules do not depend on the two-dimensional spatial structure of the input. This enables generalization to nonvisual world representations.\nLearning in this simplified setting is straightforward. Assuming the top-level module in each layout is a describe or exists module, the fully- instantiated network corresponds to a distribution over labels conditioned on layouts. To train, we maximize\u2211\n(w,y,z) log pz(y|w; \u03b8e) directly. This can be understood as a parameter-tying scheme, where the decisions about which parameters to tie are governed by the observed layouts z."}, {"heading": "4.2 Assembling networks", "text": "Next we describe the layout model p(z|x; \u03b8`). We first use a fixed syntactic parse to generate a small set of candidate layouts, analogously to the way a semantic grammar generates candidate semantic parses in previous work (Berant and Liang, 2014).\nA semantic parse differs from a syntactic parse in two primary ways. First, lexical items must be mapped onto a (possibly smaller) set of semantic primitives. Second, these semantic primitives must be combined into a structure that closely, but not ex-\nactly, parallels the structure provided by syntax. For example, state and province might need to be identified with the same field in a database schema, while all states have a capital might need to be identified with the correct (in situ) quantifier scope.\nWhile we cannot avoid the structure selection problem, continuous representations simplify the lexical selection problem. For modules that accept a vector parameter, we associate these parameters with words rather than semantic tokens, and thus turn the combinatorial optimization problem associated with lexicon induction into a continuous one. Now, in order to learn that province and state have the same denotation, it is sufficient to learn that their associated parameters are close in some embedding space\u2014a task amenable to gradient descent. (Note that this is easy only in an optimizability sense, and not an information-theoretic one\u2014we must still learn to associate each independent lexical item with the correct vector.) The remaining combinatorial problem is to arrange the provided lexical items into the right computational structure. In this respect, layout prediction is more like syntactic parsing than ordinary semantic parsing, and we can rely on an off-the-shelf syntactic parser to get most of the way there. In this work, syntactic structure is provided by the Stanford dependency parser (De Marneffe and Manning, 2008).\nThe construction of layout candidates is depicted in Figure 3. We assume queries are conjunctive at the top level, and collect the set of attributes and prepositional relations that depend on the wh-word or copula in the question. The parser is free to consider subsets of this conjunction, and optionally to insert an existential quantifier. These are strong simplifying assumptions, but appear sufficient to cover most of the examples that appear in both of our tasks. As our approach includes both categories, relations and simple quantification, the range of phenomena considered is generally broader than previous perceptually-grounded QA work (Krishnamurthy and Kollar, 2013; Matuszek et al., 2012).\nHaving generated a set of candidate parses, we need to score them. This is a reranking problem; as in the rest of our approach, we solve it using standard neural machinery. In particular, we produce an LSTM representation of the question, a featurebased representation of the query (with indicators\non the type and number of modules used), and pass both representations through a multilayer perceptron (MLP). While one can easily imagine a more sophisticated parse-scoring model, this simple approach works well for our tasks.\nFormally, for a question x, let hq(x) be an LSTM encoding of the question (i.e. the last hidden layer of an LSTM applied word-by-word to the input question). Let {z1, z2, . . .} be the proposed layouts for x, and let f(zi) be a feature vector representing the ith layout. Then the score s(zi|x) for the layout zi is\ns(zi|x) = a>\u03c3(Bhq(x) + Cf(zi) + d) (8)\ni.e. a the output of an MLP with inputs hq(x) and f(zi), and parameters \u03b8` = {a,B,C, d}. Finally, we normalize these scores to obtain a distribution:\np(z|x; \u03b8`) = es(zi|x)/ n\u2211\nj=1\nes(zj |x) (9)\nHaving defined a layout selection module p(z|x; \u03b8`) and a network execution model pz(y|w; \u03b8e), we are ready to define a model for predicting answers given only (world, question) pairs. The key constraint is that we want to minimize evaluations of pz(y|w; \u03b8e) (which involves expensive application of a deep network to a large input representation), but can tractably evaluate p(z|x; \u03b8`) for all z (which involves application of a shallow network to a relatively small set of candidates). This is the opposite of the situation usually encountered semantic parsing, where calls to the query execution model are fast but the set of candidate parses is too large to score exhaustively.\nIn fact, the problem more closely resembles the scenario faced by agents in the reinforcement learning setting (where it is cheap to score actions, but potentially expensive to execute them and obtain rewards). We adopt a common approach from that literature, and express our model as a stochastic policy. Under this policy, we first sample a layout z from a distribution p(z|x; \u03b8`), and then apply z to the knowledge source and obtain a distribution over answers p(y|z, w; \u03b8e).\nAfter z is chosen, we can train the execution model directly by maximizing log p(y|z, w; \u03b8e) with respect to \u03b8e as before (this is ordinary backpropagation). Because the hard selection of z is non-\ndifferentiable, we optimize p(z|x; \u03b8`) using a policy gradient method. Williams (1992) showed that the gradient of the reward surface J with respect to the parameters of the policy is\n\u2207J(\u03b8`) = E[\u2207 log p(z|x; \u03b8`) \u00b7 r] (10)\n(this is the REINFORCE rule). Here the expectation is taken with respect to rollouts of the policy, and r is the reward. Because our goal is to select the network that makes the most accurate predictions, we take the reward to be identically the negative logprobability from the execution phase, i.e.\nE[(\u2207 log p(z|x; \u03b8`)) \u00b7 log p(y|z, w; \u03b8e)] (11)\nThus the update to the layout-scoring model at each timestep is simply the gradient of the log-probability of the chosen layout, scaled by the accuracy of that layout\u2019s predictions. At training time, we approximate the expectation with a single rollout, so at each step we update \u03b8` in the direction (\u2207 log p(z|x; \u03b8`))\u00b7 log p(y|z, w; \u03b8e) for a single z \u223c p(z|x; \u03b8`). \u03b8e and \u03b8` are optimized using ADADELTA (Zeiler, 2012) with \u03c1 = 0.95, \u03b5 = 1e \u2212 6 and gradient clipping at a norm of 10."}, {"heading": "5 Experiments", "text": "The framework described in this paper is general, and we are interested in how well it performs on datasets of varying domain, size and linguistic complexity. To that end, we evaluate our model on tasks at opposite extremes of both these criteria: a large visual question answering dataset, and a small collection of more structured geography questions."}, {"heading": "5.1 Questions about images", "text": "Our first task is the recently-introduced Visual Question Answering challenge (VQA) (Antol et al., 2015). The VQA dataset consists of more than 200,000 images paired with human-annotated questions and answers, as in Figure 4.\nWe use the VQA 1.0 release, employing the development set for model selection and hyperparameter tuning, and reporting final results from the evaluation server on the test-standard set. For the experiments described in this section, the input feature representationswi are computed by the the fifth convolutional layer of a 16-layer VGGNet after pooling\n(Simonyan and Zisserman, 2014). Input images are scaled to 448\u00d7448 before computing their representations. We found that performance on this task was best if the candidate layouts were relatively simple: only describe, and and find modules are used, and layouts contain at most two conjuncts.\nOne weakness of this basic framework is a difficulty modeling prior knowledge about answers (of the form bears are brown). This kinds of linguistic \u201cprior\u201d is essential for the VQA task, and easily incorporated. We simply introduce an extra hidden layer for recombining the final module network output with the input sentence representation hq(x) (see Equation 8), replacing Equation 1 with:\nlog pz(y|w, x) = (Ahq(x) +BJzKw)y (12)\n(Now modules with output type Labels should be understood as producing an answer embedding rather than a distribution over answers.) This allows the question to influence the answer directly.\nResults are shown in Table 1. The use of dynamic networks provides a small gain, most noticeably on yes/no questions. We achieve state-of-theart results on this task, outperforming a highly effective visual bag-of-words model (Zhou et al., 2015), a model with dynamic network parameter prediction (but fixed network structure) (Noh et al., 2015), and a previous approach using neural module networks with no structure prediction (Andreas et al., 2015). For this last model, we report both the numbers from the original paper, and a reimplementation of the model that uses the same image preprocessing as the dynamic module network experiments in this paper. A more conventional attentional model has also been applied to this task (Yang et al., 2015); while we also\noutperform their reported performance, the evaluation uses different train/test split, so results are not directly comparable.\nSome examples are shown in Figure 4. In general, the model learns to focus on the correct region of the image, and tends to consider a broad window around the region. This facilitates answering questions like Where is the cat?, which requires knowledge of the surroundings as well as the object in question."}, {"heading": "5.2 Questions about geography", "text": "The next set of experiments we consider focuses on GeoQA, a geographical question-answering task first introduced by Krishnamurthy and Kollar (2013). This task was originally paired with a visual question answering task much simpler than the one just discussed, and is appealing for a number of reasons. In contrast to the VQA dataset, GeoQA is quite small, containing only 263 examples. Two baselines are available: one using a classical semantic parser backed by a database, and another which induces logical predicates using linear classifiers over both spatial and distributional features. This allows us to evaluate the quality of our model relative to other perceptually grounded logical semantics, as well as strictly logical approaches.\nThe GeoQA domain consists of a set of entities\n(e.g. states, cities, parks) which participate in various relations (e.g. north-of, capital-of). Here we take the world representation to consist of two pieces: a set of category features (used by the find module) and a different set of relational features (used by the relate module). For our experiments, we use a subset of the features originally used by Krishnamurthy et al. The original dataset includes no quantifiers, and treats the questions What cities are in Texas? and Are there any cities in Texas? identically. Because we\u2019re interested in testing the parser\u2019s ability to predict a variety of different structures, we introduce a new version of the dataset, GeoQA+Q, which distinguishes these two cases, and expects a Boolean answer to questions of the second kind.\nResults are shown in Table 2. As in the original work, we report the results of leave-oneenvironment-out cross-validation on the set of 10 environments. Our dynamic model (D-NMN) outperforms both the logical (LSP-F) and perceptual models (LSP-W) described by (Krishnamurthy and Kollar, 2013), as well as a fixed-structure neural module net (NMN). This improvement is particularly notable on the dataset with quantifiers, where dynamic structure prediction produces a 20% relative improvement over the fixed baseline. A variety of predicted layouts are shown in Figure 5."}, {"heading": "6 Conclusion", "text": "We have introduced a new model, the dynamic neural module network, for answering queries about both structured and unstructured sources of information. Given only (question, world, answer) triples as training data, the model learns to assemble neural networks on the fly from an inventory of neural models, and simultaneously learns weights for these\nmodules so that they can be composed into novel structures. Our approach achieves state-of-the-art results on two tasks. We believe that the success of this work derives from two factors:\nContinuous representations improve the expressiveness and learnability of semantic parsers: by replacing discrete predicates with differentiable neural network fragments, we bypass the challenging combinatorial optimization problem associated with induction of a semantic lexicon. In structured world representations, neural predicate representations allow the model to invent reusable attributes and relations not expressed in the schema. Perhaps more importantly, we can extend compositional questionanswering machinery to complex, continuous world representations like images.\nSemantic structure prediction improves generalization in deep networks: by replacing a fixed network topology with a dynamic one, we can tailor the computation performed to each problem instance, using deeper networks for more complex questions and representing combinatorially many queries with comparatively few parameters. In practice, this results in considerable gains in speed and sample efficiency, even with very little training data.\nThese observations are not limited to the question answering domain, and we expect that they can be applied similarly to tasks like instruction following, game playing, and language generation."}], "references": [{"title": "Semantic parsing as machine translation", "author": ["Jacob Andreas", "Andreas Vlachos", "Stephen Clark."], "venue": "Proceedings of the Annual Meeting of the Association for Computational Linguistics, Sofia, Bulgaria.", "citeRegEx": "Andreas et al\\.,? 2013", "shortCiteRegEx": "Andreas et al\\.", "year": 2013}, {"title": "Deep compositional question answering with neural module networks", "author": ["Jacob Andreas", "Marcus Rohrbach", "Trevor Darrell", "Dan Klein."], "venue": "arXiv:1511.02799.", "citeRegEx": "Andreas et al\\.,? 2015", "shortCiteRegEx": "Andreas et al\\.", "year": 2015}, {"title": "VQA: Visual question answering", "author": ["Stanislaw Antol", "Aishwarya Agrawal", "Jiasen Lu", "Margaret Mitchell", "Dhruv Batra", "C Lawrence Zitnick", "Devi Parikh."], "venue": "Proceedings of the International Conference on Computer Vision.", "citeRegEx": "Antol et al\\.,? 2015", "shortCiteRegEx": "Antol et al\\.", "year": 2015}, {"title": "Semantic parsing via paraphrasing", "author": ["Jonathan Berant", "Percy Liang."], "venue": "Proceedings of the Annual Meeting of the Association for Computational Linguistics, volume 7, page 92.", "citeRegEx": "Berant and Liang.,? 2014", "shortCiteRegEx": "Berant and Liang.", "year": 2014}, {"title": "Question answering with subgraph embeddings", "author": ["Antoine Bordes", "Sumit Chopra", "Jason Weston."], "venue": "arXiv preprint arXiv:1406.3676.", "citeRegEx": "Bordes et al\\.,? 2014", "shortCiteRegEx": "Bordes et al\\.", "year": 2014}, {"title": "From machine learning to machine reasoning", "author": ["L\u00e9on Bottou."], "venue": "Machine learning, 94(2):133\u2013149.", "citeRegEx": "Bottou.,? 2014", "shortCiteRegEx": "Bottou.", "year": 2014}, {"title": "The Stanford typed dependencies representation", "author": ["Marie-Catherine De Marneffe", "Christopher D Manning."], "venue": "Proceedings of the International Conference on Computational Linguistics, pages 1\u20138.", "citeRegEx": "Marneffe and Manning.,? 2008", "shortCiteRegEx": "Marneffe and Manning.", "year": 2008}, {"title": "Towards a formal distributional semantics: Simulating logical calculi with tensors", "author": ["Edward Grefenstette."], "venue": "arXiv preprint arXiv:1304.5823.", "citeRegEx": "Grefenstette.,? 2013", "shortCiteRegEx": "Grefenstette.", "year": 2013}, {"title": "Teaching machines to read and comprehend", "author": ["Karl Moritz Hermann", "Tomas Kocisky", "Edward Grefenstette", "Lasse Espeholt", "Will Kay", "Mustafa Suleyman", "Phil Blunsom."], "venue": "Advances in Neural Information Processing Systems, pages 1684\u20131692.", "citeRegEx": "Hermann et al\\.,? 2015", "shortCiteRegEx": "Hermann et al\\.", "year": 2015}, {"title": "A neural network for factoid question answering over paragraphs", "author": ["Mohit Iyyer", "Jordan Boyd-Graber", "Leonardo Claudino", "Richard Socher", "Hal Daum\u00e9 III."], "venue": "Proceedings of the Conference on Empirical Methods in Natural Language Processing.", "citeRegEx": "Iyyer et al\\.,? 2014", "shortCiteRegEx": "Iyyer et al\\.", "year": 2014}, {"title": "Jointly learning to parse and perceive: connecting natural language to the physical world", "author": ["Jayant Krishnamurthy", "Thomas Kollar."], "venue": "Transactions of the Association for Computational Linguistics.", "citeRegEx": "Krishnamurthy and Kollar.,? 2013", "shortCiteRegEx": "Krishnamurthy and Kollar.", "year": 2013}, {"title": "Vector space semantic parsing: A framework for compositional vector space models", "author": ["Jayant Krishnamurthy", "Tom Mitchell"], "venue": null, "citeRegEx": "Krishnamurthy and Mitchell.,? \\Q2013\\E", "shortCiteRegEx": "Krishnamurthy and Mitchell.", "year": 2013}, {"title": "Inducing probabilistic CCG grammars from logical form with higherorder unification", "author": ["Tom Kwiatkowski", "Luke Zettlemoyer", "Sharon Goldwater", "Mark Steedman."], "venue": "Proceedings of the Conference on Empirical Methods in Natural Language Process-", "citeRegEx": "Kwiatkowski et al\\.,? 2010", "shortCiteRegEx": "Kwiatkowski et al\\.", "year": 2010}, {"title": "Scaling semantic parsers with onthe-fly ontology matching", "author": ["Tom Kwiatkowski", "Eunsol Choi", "Yoav Artzi", "Luke Zettlemoyer."], "venue": "Proceedings of the Conference on Empirical Methods in Natural Language Processing.", "citeRegEx": "Kwiatkowski et al\\.,? 2013", "shortCiteRegEx": "Kwiatkowski et al\\.", "year": 2013}, {"title": "Learning dependency-based compositional semantics", "author": ["Percy Liang", "Michael Jordan", "Dan Klein."], "venue": "Proceedings of the Human Language Technology Conference of the Association for Computational Linguistics, pages 590\u2013599, Portland, Oregon.", "citeRegEx": "Liang et al\\.,? 2011", "shortCiteRegEx": "Liang et al\\.", "year": 2011}, {"title": "Ask your neurons: A neural-based approach to answering questions about images", "author": ["Mateusz Malinowski", "Marcus Rohrbach", "Mario Fritz."], "venue": "Proceedings of the International Conference on Computer Vision, 12.", "citeRegEx": "Malinowski et al\\.,? 2015", "shortCiteRegEx": "Malinowski et al\\.", "year": 2015}, {"title": "A joint model of language and perception for grounded attribute learning", "author": ["Cynthia Matuszek", "Nicholas FitzGerald", "Luke Zettlemoyer", "Liefeng Bo", "Dieter Fox."], "venue": "arXiv preprint arXiv:1206.6423.", "citeRegEx": "Matuszek et al\\.,? 2012", "shortCiteRegEx": "Matuszek et al\\.", "year": 2012}, {"title": "Image question answering using convolutional neural network with dynamic parameter prediction", "author": ["Hyeonwoo Noh", "Paul Hongsuck Seo", "Bohyung Han."], "venue": "arXiv preprint arXiv:1511.05756.", "citeRegEx": "Noh et al\\.,? 2015", "shortCiteRegEx": "Noh et al\\.", "year": 2015}, {"title": "Compositional semantic parsing on semi-structured tables", "author": ["Panupong Pasupat", "Percy Liang."], "venue": "Proceedings of the Annual Meeting of the Association for Computational Linguistics.", "citeRegEx": "Pasupat and Liang.,? 2015", "shortCiteRegEx": "Pasupat and Liang.", "year": 2015}, {"title": "Image question answering: A visual semantic embedding model and a new dataset", "author": ["Mengye Ren", "Ryan Kiros", "Richard S. Zemel."], "venue": "CoRR, abs/1505.02074.", "citeRegEx": "Ren et al\\.,? 2015", "shortCiteRegEx": "Ren et al\\.", "year": 2015}, {"title": "Very deep convolutional networks for large-scale image recognition", "author": ["K Simonyan", "A Zisserman."], "venue": "CoRR, abs/1409.1556.", "citeRegEx": "Simonyan and Zisserman.,? 2014", "shortCiteRegEx": "Simonyan and Zisserman.", "year": 2014}, {"title": "Parsing with compositional vector grammars", "author": ["Richard Socher", "John Bauer", "Christopher D. Manning", "Andrew Y. Ng."], "venue": "Proceedings of the Annual Meeting of the Association for Computational Linguistics.", "citeRegEx": "Socher et al\\.,? 2013", "shortCiteRegEx": "Socher et al\\.", "year": 2013}, {"title": "Simple statistical gradientfollowing algorithms for connectionist reinforcement learning", "author": ["Ronald J Williams."], "venue": "Machine learning, 8(3-4):229\u2013256.", "citeRegEx": "Williams.,? 1992", "shortCiteRegEx": "Williams.", "year": 1992}, {"title": "Learning synchronous grammars for semantic parsing with lambda calculus", "author": ["Yuk Wah Wong", "Raymond J. Mooney."], "venue": "Proceedings of the Annual Meeting of the Association for Computational Linguistics, volume 45, page 960.", "citeRegEx": "Wong and Mooney.,? 2007", "shortCiteRegEx": "Wong and Mooney.", "year": 2007}, {"title": "Ask, attend and answer: Exploring question-guided spatial attention for visual question answering", "author": ["Huijuan Xu", "Kate Saenko."], "venue": "arXiv preprint arXiv:1511.05234.", "citeRegEx": "Xu and Saenko.,? 2015", "shortCiteRegEx": "Xu and Saenko.", "year": 2015}, {"title": "Show, attend and tell: neural image caption generation with visual attention", "author": ["Kelvin Xu", "Jimmy Ba", "Ryan Kiros", "Aaron Courville", "Ruslan Salakhutdinov", "Richard Zemel", "Yoshua Bengio."], "venue": "arXiv preprint arXiv:1502.03044.", "citeRegEx": "Xu et al\\.,? 2015", "shortCiteRegEx": "Xu et al\\.", "year": 2015}, {"title": "Stacked attention networks for image question answering", "author": ["Zichao Yang", "Xiaodong He", "Jianfeng Gao", "Li Deng", "Alex Smola."], "venue": "arXiv preprint arXiv:1511.02274.", "citeRegEx": "Yang et al\\.,? 2015", "shortCiteRegEx": "Yang et al\\.", "year": 2015}, {"title": "Neural enquirer: Learning to query tables", "author": ["Pengcheng Yin", "Zhengdong Lu", "Hang Li", "Ben Kao."], "venue": "arXiv preprint arXiv:1512.00965.", "citeRegEx": "Yin et al\\.,? 2015", "shortCiteRegEx": "Yin et al\\.", "year": 2015}, {"title": "ADADELTA: An adaptive learning rate method", "author": ["Matthew D Zeiler."], "venue": "arXiv preprint arXiv:1212.5701.", "citeRegEx": "Zeiler.,? 2012", "shortCiteRegEx": "Zeiler.", "year": 2012}, {"title": "Simple baseline for visual question answering", "author": ["Bolei Zhou", "Yuandong Tian", "Sainbayar Sukhbaatar", "Arthur Szlam", "Rob Fergus."], "venue": "arXiv preprint arXiv:1512.02167.", "citeRegEx": "Zhou et al\\.,? 2015", "shortCiteRegEx": "Zhou et al\\.", "year": 2015}], "referenceMentions": [{"referenceID": 1, "context": "Previous work has used manually-specified modular structures for visual learning (Andreas et al., 2015).", "startOffset": 81, "endOffset": 103}, {"referenceID": 25, "context": "This operation is commonly referred to as the attention mechanism, and is a standard tool for manipulating images (Xu et al., 2015) and text representations (Hermann et al.", "startOffset": 114, "endOffset": 131}, {"referenceID": 8, "context": ", 2015) and text representations (Hermann et al., 2015)", "startOffset": 33, "endOffset": 55}, {"referenceID": 0, "context": "Andreas et al. (2015) use hand-written rules to deterministically transform dependency trees into layouts, and restricted to producing simple structures like the above for non-synthetic data.", "startOffset": 0, "endOffset": 22}, {"referenceID": 23, "context": "Supervision may be provided either by annotated logical forms (Wong and Mooney, 2007; Kwiatkowski et al., 2010; Andreas et al., 2013) or from (world, question, answer) triples alone (Liang et al.", "startOffset": 62, "endOffset": 133}, {"referenceID": 12, "context": "Supervision may be provided either by annotated logical forms (Wong and Mooney, 2007; Kwiatkowski et al., 2010; Andreas et al., 2013) or from (world, question, answer) triples alone (Liang et al.", "startOffset": 62, "endOffset": 133}, {"referenceID": 0, "context": "Supervision may be provided either by annotated logical forms (Wong and Mooney, 2007; Kwiatkowski et al., 2010; Andreas et al., 2013) or from (world, question, answer) triples alone (Liang et al.", "startOffset": 62, "endOffset": 133}, {"referenceID": 14, "context": ", 2013) or from (world, question, answer) triples alone (Liang et al., 2011; Pasupat and Liang, 2015).", "startOffset": 56, "endOffset": 101}, {"referenceID": 18, "context": ", 2013) or from (world, question, answer) triples alone (Liang et al., 2011; Pasupat and Liang, 2015).", "startOffset": 56, "endOffset": 101}, {"referenceID": 10, "context": "In general the set of primitive functions from which these logical forms can be assembled is fixed, but one recent line of work focuses on inducing new predicates functions automatically, either from perceptual features (Krishnamurthy and Kollar, 2013) or the underlying schema (Kwiatkowski et al.", "startOffset": 220, "endOffset": 252}, {"referenceID": 13, "context": "In general the set of primitive functions from which these logical forms can be assembled is fixed, but one recent line of work focuses on inducing new predicates functions automatically, either from perceptual features (Krishnamurthy and Kollar, 2013) or the underlying schema (Kwiatkowski et al., 2013).", "startOffset": 278, "endOffset": 304}, {"referenceID": 9, "context": "These include approaches that model the task directly as a multiclass classification problem (Iyyer et al., 2014), models that attempt to embed questions and answers in a shared vector space (Bordes et al.", "startOffset": 93, "endOffset": 113}, {"referenceID": 4, "context": ", 2014), models that attempt to embed questions and answers in a shared vector space (Bordes et al., 2014) and attentional models that select words from documents sources (Hermann et al.", "startOffset": 85, "endOffset": 106}, {"referenceID": 8, "context": ", 2014) and attentional models that select words from documents sources (Hermann et al., 2015).", "startOffset": 72, "endOffset": 94}, {"referenceID": 4, "context": ", 2014), models that attempt to embed questions and answers in a shared vector space (Bordes et al., 2014) and attentional models that select words from documents sources (Hermann et al., 2015). Such approaches generally require that answers can be retrieved directly based on surface linguistic features, without requiring intermediate computation. A more structured approach described by Yin et al. (2015) learns a query execution model for database tables without any natural language component.", "startOffset": 86, "endOffset": 408}, {"referenceID": 4, "context": ", 2014), models that attempt to embed questions and answers in a shared vector space (Bordes et al., 2014) and attentional models that select words from documents sources (Hermann et al., 2015). Such approaches generally require that answers can be retrieved directly based on surface linguistic features, without requiring intermediate computation. A more structured approach described by Yin et al. (2015) learns a query execution model for database tables without any natural language component. Previous efforts toward unifying formal logic and representation learning include those of Grefenstette (2013) and Krishnamurthy and Mitchell (2013).", "startOffset": 86, "endOffset": 610}, {"referenceID": 4, "context": ", 2014), models that attempt to embed questions and answers in a shared vector space (Bordes et al., 2014) and attentional models that select words from documents sources (Hermann et al., 2015). Such approaches generally require that answers can be retrieved directly based on surface linguistic features, without requiring intermediate computation. A more structured approach described by Yin et al. (2015) learns a query execution model for database tables without any natural language component. Previous efforts toward unifying formal logic and representation learning include those of Grefenstette (2013) and Krishnamurthy and Mitchell (2013).", "startOffset": 86, "endOffset": 648}, {"referenceID": 20, "context": "The visually-grounded component of this work relies on recent advances in convolutional networks for computer vision (Simonyan and Zisserman, 2014), and in particular the fact that late convolutional layers in networks trained for image recognition contain rich features useful for other downstream vision tasks, while preserving spatial information.", "startOffset": 117, "endOffset": 147}, {"referenceID": 25, "context": "These features have been used for both image captioning (Xu et al., 2015) and visual question answering (Yang et al.", "startOffset": 56, "endOffset": 73}, {"referenceID": 26, "context": ", 2015) and visual question answering (Yang et al., 2015).", "startOffset": 38, "endOffset": 57}, {"referenceID": 19, "context": "Most previous approaches to visual question answering either apply a recurrent model to deep representations of both the image and the question (Ren et al., 2015; Malinowski et al., 2015), or use the question to compute an attention over the input image, and then answer based on both the question and the image features attended to (Yang et al.", "startOffset": 144, "endOffset": 187}, {"referenceID": 15, "context": "Most previous approaches to visual question answering either apply a recurrent model to deep representations of both the image and the question (Ren et al., 2015; Malinowski et al., 2015), or use the question to compute an attention over the input image, and then answer based on both the question and the image features attended to (Yang et al.", "startOffset": 144, "endOffset": 187}, {"referenceID": 26, "context": ", 2015), or use the question to compute an attention over the input image, and then answer based on both the question and the image features attended to (Yang et al., 2015; Xu and Saenko, 2015).", "startOffset": 153, "endOffset": 193}, {"referenceID": 24, "context": ", 2015), or use the question to compute an attention over the input image, and then answer based on both the question and the image features attended to (Yang et al., 2015; Xu and Saenko, 2015).", "startOffset": 153, "endOffset": 193}, {"referenceID": 12, "context": ", 2015; Malinowski et al., 2015), or use the question to compute an attention over the input image, and then answer based on both the question and the image features attended to (Yang et al., 2015; Xu and Saenko, 2015). Other approaches include the simple classification model described by Zhou et al. (2015) and the dynamic parameter prediction network described by Noh et al.", "startOffset": 8, "endOffset": 309}, {"referenceID": 12, "context": ", 2015; Malinowski et al., 2015), or use the question to compute an attention over the input image, and then answer based on both the question and the image features attended to (Yang et al., 2015; Xu and Saenko, 2015). Other approaches include the simple classification model described by Zhou et al. (2015) and the dynamic parameter prediction network described by Noh et al. (2015). All of these models assume that a fixed computation can be performed on the image and question to compute the answer, rather than adapting the structure of the computation to the question.", "startOffset": 8, "endOffset": 385}, {"referenceID": 0, "context": "As noted, Andreas et al. (2015) previously considered a simple generalization of these attentional approaches in which small variations in the network structure per-question were permitted, with the structure chosen by (deterministic) syntactic processing of questions.", "startOffset": 10, "endOffset": 32}, {"referenceID": 0, "context": "As noted, Andreas et al. (2015) previously considered a simple generalization of these attentional approaches in which small variations in the network structure per-question were permitted, with the structure chosen by (deterministic) syntactic processing of questions. Other approaches in this general family include the \u201cuniversal parser\u201d sketched by Bottou (2014), and the recursive neural networks of Socher et al.", "startOffset": 10, "endOffset": 367}, {"referenceID": 0, "context": "As noted, Andreas et al. (2015) previously considered a simple generalization of these attentional approaches in which small variations in the network structure per-question were permitted, with the structure chosen by (deterministic) syntactic processing of questions. Other approaches in this general family include the \u201cuniversal parser\u201d sketched by Bottou (2014), and the recursive neural networks of Socher et al. (2013), which use a fixed tree structure to perform further linguistic analysis without any external world representation.", "startOffset": 10, "endOffset": 426}, {"referenceID": 3, "context": "We first use a fixed syntactic parse to generate a small set of candidate layouts, analogously to the way a semantic grammar generates candidate semantic parses in previous work (Berant and Liang, 2014).", "startOffset": 178, "endOffset": 202}, {"referenceID": 10, "context": "As our approach includes both categories, relations and simple quantification, the range of phenomena considered is generally broader than previous perceptually-grounded QA work (Krishnamurthy and Kollar, 2013; Matuszek et al., 2012).", "startOffset": 178, "endOffset": 233}, {"referenceID": 16, "context": "As our approach includes both categories, relations and simple quantification, the range of phenomena considered is generally broader than previous perceptually-grounded QA work (Krishnamurthy and Kollar, 2013; Matuszek et al., 2012).", "startOffset": 178, "endOffset": 233}, {"referenceID": 22, "context": "Williams (1992) showed that the gradient of the reward surface J with respect to the parameters of the policy is", "startOffset": 0, "endOffset": 16}, {"referenceID": 28, "context": "\u03b8e and \u03b8` are optimized using ADADELTA (Zeiler, 2012) with \u03c1 = 0.", "startOffset": 39, "endOffset": 53}, {"referenceID": 2, "context": "Our first task is the recently-introduced Visual Question Answering challenge (VQA) (Antol et al., 2015).", "startOffset": 84, "endOffset": 104}, {"referenceID": 0, "context": "NMN is the parameter-tying model from Andreas et al. (2015), while NMN* is a reimplementation using the same image processing pipeline as D-NMN.", "startOffset": 38, "endOffset": 60}, {"referenceID": 20, "context": "(Simonyan and Zisserman, 2014).", "startOffset": 0, "endOffset": 30}, {"referenceID": 29, "context": "We achieve state-of-theart results on this task, outperforming a highly effective visual bag-of-words model (Zhou et al., 2015), a model with dynamic network parameter prediction (but fixed network structure) (Noh et al.", "startOffset": 108, "endOffset": 127}, {"referenceID": 17, "context": ", 2015), a model with dynamic network parameter prediction (but fixed network structure) (Noh et al., 2015), and a previous approach using neural module networks with no structure prediction (Andreas et al.", "startOffset": 89, "endOffset": 107}, {"referenceID": 1, "context": ", 2015), and a previous approach using neural module networks with no structure prediction (Andreas et al., 2015).", "startOffset": 91, "endOffset": 113}, {"referenceID": 26, "context": "A more conventional attentional model has also been applied to this task (Yang et al., 2015); while we also What is in the sheep\u2019s ear? What color is she wearing? What is the man dragging?", "startOffset": 73, "endOffset": 92}, {"referenceID": 10, "context": "The next set of experiments we consider focuses on GeoQA, a geographical question-answering task first introduced by Krishnamurthy and Kollar (2013). This task was originally paired with a visual question answering task much simpler than the one just discussed, and is appealing for a number of reasons.", "startOffset": 117, "endOffset": 149}, {"referenceID": 10, "context": "Our dynamic model (D-NMN) outperforms both the logical (LSP-F) and perceptual models (LSP-W) described by (Krishnamurthy and Kollar, 2013), as well as a fixed-structure neural module net (NMN).", "startOffset": 106, "endOffset": 138}], "year": 2016, "abstractText": "We describe a question answering model that applies to both images and structured knowledge bases.The model uses natural language strings to automatically assemble neural networks from a collection of composable modules. Parameters for these modules are learned jointly with network-assembly parameters via reinforcement learning, with only (world, question, answer) triples as supervision. Our approach, which we term a dynamic neural module network, achieves state-of-the-art results on benchmark datasets in both visual and structured domains.", "creator": "LaTeX with hyperref package"}}}