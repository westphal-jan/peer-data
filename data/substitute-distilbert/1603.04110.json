{"id": "1603.04110", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "14-Mar-2016", "title": "Geometry of Interest (GOI): Spatio-Temporal Destination Extraction and Partitioning in GPS Trajectory Data", "abstract": "in this paper, we choose a method for extracting the geometries of interest ( gois ) of a mobile object which we qualify as topological geometries of the points having interest ( pois ) which a mobile object frequently visits. based on extracted gois the area of a long - term gps sensor is partitioned into a grid area occupying spherical shaped cells. conway proposes a method consists follows three principles : ( i ) extracting the geometry of stay regions based on the concepts of time - value and the time - weighted centroid, ( ii ) determining the geometry of destination regions contingent on the extracted stay regions using a geometry based hierarchical clustering, d ( iii ) partitioning the trajectory area based on the geometry of the destination regions and their visit frequency. the extracted gois can effectively represent the geometries across the pois of or gateway object while guaranteeing the characteristics of a valid partitioning. the proposed methods is tested using a field database covering the trajectory of a mobile object and the length of 26. 5 years, and the achieved results are compared to the state - of - that - art. our site surveys recommend that the proposed stay extraction can exclude valid stay regions with only one transition point while only other methods lose those stays. moreover, analysis considering the outcomes of the method involving empirical observation shows that the quality of the extracted stay regions, destination regions and the gois extracted by our proposed method is considerably higher than those extracted by methods proposed in traditional state - of - the - band.", "histories": [["v1", "Mon, 14 Mar 2016 01:52:28 GMT  (8038kb,D)", "https://arxiv.org/abs/1603.04110v1", "A version of this technical report has been submitted to the Springer Journal of Ambient Intelligence and Humanized Computing and it is under review"], ["v2", "Mon, 16 May 2016 20:24:07 GMT  (19454kb,D)", "http://arxiv.org/abs/1603.04110v2", "A version of this technical report has been submitted to the Springer Journal of Ambient Intelligence and Humanized Computing and it is under review"]], "COMMENTS": "A version of this technical report has been submitted to the Springer Journal of Ambient Intelligence and Humanized Computing and it is under review", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["seyed morteza mousavi", "aaron harwood", "shanika karunasekera", "mojtaba maghrebi"], "accepted": false, "id": "1603.04110"}, "pdf": {"name": "1603.04110.pdf", "metadata": {"source": "CRF", "title": "Geometry of Interest (GOI): Spatio-Temporal Destination Extraction and Partitioning in GPS Trajectory Data", "authors": ["Seyed Morteza Mousavi", "Aaron Harwood", "Shanika Karunasekera", "Mojtaba Maghrebi"], "emails": ["mousavi@student.unimelb.edu.au", "aharwood@unimelb.edu.au", "karus@unimelb.edu.au", "maghrebi@unsw.edu.au"], "sections": [{"heading": null, "text": "data is being continuously collected by GPS-enabled devices such as vehicles navigation systems and mobile phones. GPS trajectory data is useful for applications such as traffic management, location forecasting, and itinerary planning. Such applications often need to extract the time-stamped Sequence of Visited Locations (SVLs) of the mobile objects. The nearest neighbor query (NNQ) is the most applied method for labeling the visited locations based on the IDs of the POIs in the process of SVL generation. NNQ in some scenarios is not accurate enough. To improve the quality of the extracted SVLs, instead of using NNQ, we label the visited locations as the IDs of the POIs which geometrically intersect with the GPS observations. Intersection operator requires the accurate geometry of the points of interest which we refer to them as the Geometries\nNICTA VRL, Department of Computing and Information Systems, The University of Melbourne, Australia Tel.: +61-405967448 E-mail: mousavi@student.unimelb.edu.au\nDepartment of Computing and Information Systems, The University of Melbourne, Australia Tel.: +61-383441351 E-mail: aharwood@unimelb.edu.au\nDepartment of Computing and Information Systems, The University of Melbourne, Australia Tel.: +61-383441351 E-mail: karus@unimelb.edu.au\nSchool of Civil and Environmental Engineering, UNSW, Australia Tel.: +61-383441351 E-mail: maghrebi@unsw.edu.au\nof Interest (GOIs). In some application domains (e.g. movement trajectories of animals), adequate information about the POIs and their GOIs may not be available a priori, or they may not be publicly accessible and, therefore, they need to be derived from GPS trajectory data. In this paper we propose a novel method for estimating the POIs and their GOIs, which consists of three phases: (i) extracting the geometries of the stay regions; (ii) constructing the geometry of destination regions based on the extracted stay regions; and (iii) constructing the GOIs based on the geometries of the destination regions. Using the geometric similarity to known GOIs as the major evaluation criterion, the experiments we performed using long-term GPS trajectory data show that our method outperforms the existing approaches.\nKeywords Trajectory Data, Spatio-Temporal Partitioning, Geometry of Interest, Time-Value, TimeWeighted Centroid, Destination Extraction"}, {"heading": "1 Introduction", "text": "In recent years, GPS trajectory data has become abundant due to the many GPS enabled devices used on a daily basis. Mining these GPS trajectories for gathering useful information for applications has received a growing amount of attention in the recent literature. In this field, researchers have tried to derive knowledge for solving practical problems (e.g. traffic and transportation management systems (Min and Wynter, 2011), animal migration and movement monitoring (Handcock et al, 2009), location prediction (Gido\u0301falvi and Dong, 2012), transportation mode estimation (Zheng et al, 2010), and location-based social networks (Zheng et al, 2012)).\nar X\niv :1\n60 3.\n04 11\n0v 2\n[ cs\n.A I]\n1 6\nM ay\nThe applications dealing with data analysis on trajectory data often need to have access to information about the significant places which a mobile object frequently travels and stay. These significant places are referred to as the points of interest (POIs). The locations of the POIs are often used in projecting the trajectory of a mobile object into a meaningful time-stamped Sequence of Visited Locations (SVL). The constructed sequences are used in various machine learning applications dealing with trajectory data (Yan et al, 2011). Therefore, the quality and accuracy of the sequence have very significant impact on the performance of the machine learning applications.\nIn the process of constructing the SVL of a trajectory, the applications often use Nearest Neighbor Queries (NNQ) to label each GPS observation with the ID of a POI. Fig. 1(a) presents an overview of the SVL construction process. Given a GPS trajectory (depicted with green arrows), and a set of destinations showed as polygons, the NNQ based labeling method labels each GPS observation (depicted in red points) with the ID of the nearest POI (centroid of the destination polygons) in chronological order. Although this process is quite simple and efficient, it has a few significant limitations which have a dramatic impact on the quality of the generated time-stamped SVL.\nAs an example, consider the GPS point covered by destination d3. The labeling process labels the destination with the ID of the nearest destination d4, while in the real world, the GPS coordinate intersect with the geometry of d3. Therefore, the resulting SVL for the depicted trajectory using NNQ based labeling method is d1 \u2192 d1 \u2192 d1 \u2192 d2 \u2192 d3 \u2192 d4. This scenario frequently happens especially in environments with a high number of POIs located near each other. The problem has a dramatic impact of the quality of the constructed SVLs.\nOne solution to the problem is to label each of the GPS points with the ID of the POIs which intersect with them instead of performing NNQ. Fig. 1(b), shows the estimated geometry of each of the POIs which we refer to them as the Geometries of Interest (GOIs). Moreover, the GOIs must not be overlapping. Otherwise, the intersection operator would not be able to label a GPS point intersecting with more than one GOI. This solution requires having access to the real world GOIs stored in a spatial database.\nThe information about the GOIs might be publicly available in the spatial databases (e.g. geometries of the famous places in a city). However, in applications such as those processing the motion patterns of animals or the movement patterns of the troops in a battlefield,\nGOIs are not available and are required to be extracted from the trajectory data.\nIn this paper, we address the problem of extracting the GOIs of a mobile object, without using any information other than the GPS trajectory of the mobile object. We propose a method to partition the trajectory area, which is defined by the minimum bounding rectangle (MBR) of the trajectory, into a grid containing the GOIs of the moving object. Using the extracted GOIs and the partitioned trajectory area, we can extract the trajectory SVL by only using intersection geometric operator. The quality and accuracy of the SVL highly depend on the accuracy of the estimated GOIs.\nAiming for that, we extend the spatio-temporal partitioning techniques proposed in (Ye et al, 2009; Hariharan and Toyama, 2004). The partitioning methods have three phases. Firstly, they extract the stay regions within which a moving object has stayed for a time duration greater or equal than a predefined minimum time threshold and within a predefined Euclidean vicinity distance. Secondly, they cluster the resulting stay points (the centroids of the stay regions) to extract the destinations of the moving objects. Thirdly, they implicitly partition the trajectory area based on the coordinates of the centroids of the extracted destinations by using NNQ in the process of labeling the GPS points with the identifications of the POIs.\nOur proposed method improves the baselines, in each of the three phases. Given a GPS trajectory (Fig. 2(a)), in the stay extraction phase, we propose a novel clustering method for constructing the stay regions (Fig. 2(b)). In the destination construction phase, we propose a geometry based hierarchical agglomera-\ntive clustering method for clustering (merging) the stay regions based on a geometric similarity measure and construct the geometries of the destinations (Fig. 2(c)). In the third phase, we extract the GOIs based on the geometries of the destinations and include them in the final grid which is composed of the GOIs and the cells with fixed sizes (Fig. 2(d)).\nThe performance of our approach is evaluated based on comparing the similarity of the derived GOIs from our approach to know geometries of the POIs. Our experimental results performed on a long-term GPS trajectories show that, in the stay extraction phase, our method outperforms the existing methods by making the higher number of valid stay regions with geometries more related to the real world POIs. In the destination extraction phase, the performance and the accuracy of our method are considerably higher than the baseline methods, considering the geometric similarity between the geometries of the extracted destination to the real world POIs. Moreover, our method is able to partition the trajectory area based on the extracted destinations resulting in a grid which guarantees the characteristics of a validly partitioned area. Using the resulting grid, we can easily generate the SVL of the mobile object by using intersection geometric operator instead of using the nearest neighbor queries or Voronoi diagrams (Aurenhammer, 1991).\n1.1 Contributions\nThe main contributions of this research can be summarized as follows:\n\u2022 Proposing a novel spatio-temporal stay extraction method to extract the stay regions of a mobile ob-\nject by incorporating the introduces concepts of time-value and time-weighted centroid. \u2022 Introducing a novel agglomerative hierarchical clustering method to merge the stay regions of a mobile\nobject based on their geometries and constructing the geometries of the destinations of the mobile object. \u2022 Developing a spatio-temporal partitioning method to partition the trajectory area of a mobile object\ninto a grid with inhomogeneous cells containing the GOIs of the mobile object.\n1.2 Paper Organisation\nThe remaining part of the paper proceeds as follows: In section 2, the related works focused on the partitioning of the trajectory area of mobile objects are discussed. In section 3, our problem is preliminarily defined. We introduce the concepts of time-value and time-weighted centroid in a GPS trajectory in section 4. In section 5.1, we present our proposed stay region extraction method and compare it with the related works. In section 5.2, a novel geometric similarity based agglomerative hierarchical clustering method for merging the similar stay regions and extracting the destination geometries is discussed and compared with the related works. In section 5.3, our partitioning method which constructs a grid with inhomogeneous cells using the destination geometries constructed in the previous phase is introduced. In section 6, we analyze the computational complexity of our method compared to the baselines. In\nsection 7, the quality of our method compared to the related works is evaluated compared to the previous works. Finally, in section 8, the introduced method is summarized, and the achieved results and the future works are discussed."}, {"heading": "2 Related Works", "text": "In recent years, various works have considered trajectory data pre-processing, indexing, storage, and analysis (Zheng and Zhou, 2011). These trajectories could be collected by social networks (Cho et al, 2011), sensor networks (Ji and Zha, 2004), RFIDs (Kourogi et al, 2006), WI-FI (Song et al, 2006), simulators (Mousavi et al, 2007), internet of things (Macagnano et al, 2014), and cellular networks (Si et al, 2010). Among all of these kinds of trajectories, our work is focused on the trajectories collected by GPS sensors. GPS trajectories have been used in various research works in different applications (Zheng and Zhou, 2011), however, our work is a pre-processing prerequisite for all of the applications which attempt to extract the GOIs of the mobile objects.\n2.1 Partitioning Approaches\nIn the related works aiming to partition the trajectory area of a mobile object, five approaches have been taken. Following, we discuss the approaches and their capabilities and limitations."}, {"heading": "2.1.1 Grid with homogeneous cells", "text": "The first approach is to partition the trajectory area into a homogeneous grid to represent the regions of interest (e.g. (Xue et al, 2013)). The shape of the cells is often considered as triangular, square, rectangular, or hexagonal polygons. The main drawback of this approach is the degree of granularity of the cell. Coarse granularity leads to each of the grid cells cover a wide area which might include various POIs. The fine granularity results in the geometry of one POI to lie into different cells. These problems have significant drawbacks on the quality of the SVL extracted based on such grids."}, {"heading": "2.1.2 Coverage Area Based", "text": "The second approach defines the POIs as the area being covered by a wireless accesspoint (Song et al, 2006) in wireless networks or the area covered by base transceiver stations (BTS) of a cellular network (Si\net al, 2010). The geometries of the POIs are constructed using circular area or hexagonal polygons around the access points or the BTS. The main problem with this approach is that estimating a fixed geometry for the area covered by a wireless access point or a BTS is not straight forward due to various reasons such as signal power, noise, and obstacles, particularly in the urban areas. Also, the problems, above-mentioned, related to the granularity of the grid cells remains. For example, the covered area by a BTS in a cellular network might cover a very wide area which includes various POIs, or a the covered area of an access point might not cover the whole area of a POI (covered by more than one access points)."}, {"heading": "2.1.3 Spatial Clustering Based", "text": "The third approach is to construct the geometries of the POIs based on the GPS track points in the trajectory datasets using simple spatial clustering methods without considering the temporal aspects of the GPS trajectories. Spatial clustering methods perform very similar to the classic clustering schemes such as KMeans (Ashbrook and Starner, 2003), Gaussian mixture model (GMM) (Banfield and Raftery, 1993), and DBSCAN (Zhou et al, 2004). These methods simply cluster the GPS points using measures such as the distance between GPS points or density connectivity in a two-dimensional Cartesian space, without taking the third dimension time into consideration, and partition the trajectory area based on the destination geometries constructed based on that clusters.\nAnother class of research works which can be categorized into spatial clustering based approach are research works (Scellato et al, 2011; Li et al, 2011) which have used frequency map based spatial clustering methods for extracting significant places in the trajectory area. They partition the area into the very fine grid with equisized cells and assign a weight to each cell around each GPS point based on the duration of the GPS staying at that point. This weight assigned to each cell is computed based on the assumption that the real position of a mobile object has a normal distribution with standard deviation \u03c3 = 10m (Scellato et al, 2011). Then they generate a frequency map which contains peaks that give information about the region of significant places. They consider regions that are above a predefined visit frequency threshold as POIs. The main problem in the spatial clustering based partitioning approaches is the inaccuracy in the number and the geometries of the extracted POIs. They merely consider the density of the GPS track points in a neighborhood in the trajectory area as an indicator of a significant place or a POI. This\nassumption that the places which have more density of GPS track points are more significant for the user than the places with less density is not always true. Consider a mobile object often moves on a road network between its POIs regularly and repetitively. Obviously, during the journies between the POIs, there are some places which are being frequently visited and, therefore, have higher GPS track point density, while they are not the mobile objects POIs. For example, the conjunctions with traffic lights or the road segments with higher traffic loads often have a high density of GPS track points. These two approaches consider these kinds of places as POIs because they are not able to distinguish between POIs (with high density) and the non-POI places with nearly the same GPS point density."}, {"heading": "2.1.4 Speed Based", "text": "The fourth partitioning approach is taken by incorporating the speed restrictions in finding the stop and moves (E.g. (Palma et al, 2008; Bhattacharya et al, 2012)). This approach assumes the clusters with the GPS track points with lower speed are more likely to be stop points. This approach is not applicable in GPS datasets where the GPS speed is not available, or the speed is not easily computable (e.g. in trajectories with low sampling rate or with large time gaps). Moreover, there are some scenarios where defining a threshold for maximum speed is not straight forward. For example, assume a mobile object carrying a GPS-enabled mobile phone. During the daily traveling activities, he might have different transportation modes (e.g. walk, bike, train, car, bus, etc.) (Zheng et al, 2010). In each of the transportation modes the speed threshold should be different since the average walking speed is different to driving. Furthermore, even if we assume the same transportation mode for the mobile object throughout the trajectory (e.g. walk), places like shopping centers, zoos, parks, campuses, and so many other POIs exist where the mobile object stays in their geometry while keeping moving (speed is greater than zero)."}, {"heading": "2.1.5 Spatio-Temporal Clustering Based", "text": "The fifth approach (Ye et al, 2009; Xiao et al, 2010) employes time restricted spatio-temporal clustering in extracting the stay regions and the destinations. They extract the stay regions based on predefined spatiotemporal restrictions. Then, they merge the stay regions to construct the destinations.\nThey define a valid stay region (a vicinity distance with radius \u2206D \u2264 Dmax) within which the mobile object has strayed (stopped or kept moving) for a time\nspan \u2206T \u2265 Tmin, where Tmin, is a time span threshold. The destinations which represent the POIs are extracted by clustering (merging) the stay centroid points of the extracted stay regions using density-based clustering methods such as OPTICS (Ye et al, 2009). This approach is highly used in research works such as (Ye et al, 2009; Xiao et al, 2010; Zheng et al, 2009, 2008; Xiao et al, 2014) conducted in Microsoft Research Asia. This approach effectively incorporates the temporal aspects of the mobile object trajectory into extracting the stay regions and as a result into the extracted destination regions. As a result, the places which the mobile object stays for a considerable time are selected, and the other places are filtered although they might have high point densities.\nThe research presented in (Hariharan and Toyama, 2004) has a similar approach in the extraction of the stay regions with the difference that defines the time and vicinity distance based on the diameter of the extracted stay regions. The destinations are extracted based on the predefined maximum diameter of the destinations by merging the stay regions.\nThe fifth approach extracts the most meaningful and valid stay and destination regions because of their specific spatio-temporal definition of a valid stay region. Therefore, among all the works discussed above, in this paper, we choose the works discussed in the fifth approach as the baseline to compare the performance of our proposed partitioning method."}, {"heading": "3 Problem Definition", "text": "Definition 1 The trajectory of a moving object is a sequence of time stamped GPS observations ( points), T = {p1, p2, ..., pn}, where pi = (ti, xi, yi) indicates the spatio-temporal data of the moving object at time ti. The parameters ti, xi, and yi, are the time stamp and (x, y) \u2208 R2 Cartesian plane of the moving object respectively. in our GPS trajectories, \u2200p \u2208 T , i, j = 1, 2, . . . , tpi > t p j \u21d0\u21d2 i > j. There are no other guarantees such as constant sampling rate.\nDefinition 2 The geometric similarity between a set of real GOIs R = {r1, r2, ..., rn} and a set of estimated GOIs G = {g1, g2, ..., gm} is defined as:\nGS(R,G) = 1\nn n\u2211 i m\u2211 j Area(ri \u2229 gj) Area(ri \u222a gj) . (1)\nGiven a GPS trajectory T , and a set of geometries of the real POIs R = {r1, r2, ..., rn} covered by the MBR of T , our objective is to propose the best (optimal) partitioning method to partition the\nMBR of the trajectory, fo : T \u2192 G which maximizes the geometric similarities between the real GOIs R = {r1, r2, ..., rn} and their corresponding extracted GOIs G = {g1, g2, ..., gm}.\nfo = argmax fi\u2208F\nGS(fi(T ), R), (2)\nwhere F = {f1, f2, ..., fk} is the set of different partitioning methods, e.g., {diameter based, density based, geometric similarity based}.\nSubject to\nX \u2200gj and gk \u2208 G : if j 6= k then Area(gj \u2229 gk) = 0, X \u2200pt \u2208 T ,\u2203gj \u2208 G | pt \u2229 gj 6= \u00d8.\nThe first constraint guarantees that the geometries of extracted partitions are mutually disjoint. The second constraint ensures that all the GPS points in the trajectory can be assigned to one and only one partition."}, {"heading": "4 Concepts of Time-Value and Time-Weighted Centroid in Trajectory Data", "text": "In this section, we briefly introduce the concepts of time-value and time-weighted centroid which will be used in the first phase of our partitioning method to improve the performance of the stay region extraction.\nIn the process of collecting GPS observations which are often done by GPS devices installed on vehicles or mobile phones, ideally, we would like to collect each GPS observation with constant sampling rate. For example, we would like to have one sample point every 10 seconds or every one minute. However, due to various reasons, it is not always applicable. GPS sensors installed on mobile phones consume a considerable amount of power. So people usually tend to keep their GPS sensor off. This fact has a dramatic impact on the quality of the collected GPS trajectories. Another reason is poor GPS coverage in places such as urban environments and particularly in indoor locations. Besides, the process of GPS data collection is often terminated by the user for long periods (e.g. in the car parks).\nThe time gap between two consecutive GPS observations can be short or considerably long. The long time gaps often take place when a vehicle is parked at a car park, or a mobile device is switched off. We consider the time gap between two consecutive GPS points in a trajectory as a significant influencing factor.\nDefinition 3 For a GPS point pi in the trajectory T , we define the time-value as:\ntvpi = t p i+1 \u2212 t p i i = 0, 1, ..., n. (3)\nwhere tpi indicates the time stamp of point pi.\nAs an example, we can consider the simple problem of computing the centroid of a set of GPS points to address the effectiveness of considering the time-value of GPS points in trajectory data processing.\nDefinition 4 The centroid ci = (c x i , c y i ) of a set of points PS = {pm, pm+1, ..., pn}, is often computed as:\ncxi =\n\u2211n i=m x p i\n|PS| , cyi =\n\u2211n i=m y p i\n|PS| (4)\nwhere, xpi and y p i are the x and y coordinates of point pi, and |PS| is the cardinality of the point set PS.\nIn Eq. 4, the values of all the GPS points are considered the same in computing the centroid. Contrary to the previous works, we incorporate the time-value of each GPS point tvpi in computing the centroid resulting in the time-weighted centroid of the set of GPS points.\nDefinition 5 The time-weighted centroid (twcxi , twc y i ) of a set of points PS = {pm, pm+1, ..., pn} is defined as:\ntwcxi =\n\u2211n i=m x p i \u00d7 tv\np i\u2211n\ni=m tv p i \u00d7 |PS|\ntwcyi =\n\u2211n i=m y p i \u00d7 tv\np i\u2211n\ni=m tv p i \u00d7 |PS|\n(5)\nwhere, tvpi is the time-value of point pi computed using Eg. 3, and |PS| is the cardinality of the point set PS.\nIn Eq. 5, the time-value of each GPS point is considered as the weight or degree of significance of each point in computing the centroid. By this, we discriminate our GPS points based on the value of information they give us about the location of the mobile object. By incorporating the time-value, the centroid will be more biased to and closer to the locations where long term stops have taken place."}, {"heading": "5 Methodology", "text": "Our partitioning method has three phases. (i) Spatiotemporal extraction of stay regions, (ii) Constructing the destination regions based on the extracted stay regions, (iii) Partitioning the MBR of the trajectory based on the extracted destinations. Following, we discuss each phase of the method and compare them with the related works in detail.\n5.1 Spatio-Temporal Extraction of Stay Regions\nExtraction of the stay regions of a mobile object is the first phase of our spatio-temporal partitioning method. Aiming for that as the first step We convert the GPS\ntrajectory into a sequence of stays and moves. We define a stay si as an event which has been taken place within the trajectory period of a mobile object. The event has happened in a geometric region or neighborhood called a stay region. A stay region is an area in which the mobile object spends some time \u2206t \u2265 Tmin. During this time, the mobile object can be either moving or stopping provided that it does not pass the boundary of the region. The boundary of the region is calculated based on the roaming distance \u2206d \u2264 Dmax which is the maximum distance that a moving object can stray from the centroid of the stay region. For example, if a vehicle has stopped in a car park for 8 hours starting from 9 AM to 5 PM, the event is the visit to the car park, the starting time of the event is 9 AM (arrival time) and the ending time of the event is 5 PM (departure time). Each stay has a set of GPS points (point set) which indicates the GPS observations which were collected within the stay period.\nDefinition 6 We define stay si, i = 1, 2, ...n as si = (idi, gi, psi, ci, ati, dti), where idi, psi, gi, ci, ati, dti are the identification, geometry, point set, centroid, arrival time and departure time of of si, respectively. psi is a sub trajectory of the mobile object trajectory which is defined as a set of consecutive points {pm, pm+1, ..., pn}, where \u2200k,m < k \u2264 n, Dist(ci, pk) \u2264 Dmax, and Dist(ci, pn+1) > Dmax. The parameter ci referes to the centroid of the points in psi and gi is the the convex polygon of the point set psi.\nThe definition of a \u2206d in our approach is different to the previous work (Hariharan and Toyama, 2004) and (Ye et al, 2009). In (Hariharan and Toyama, 2004), \u2206d is defined as the Euclidean diameter of the coordinates of elements of a stay. This means that the diameter (the longest Euclidean distance between two points in the set) of a stay must not be greater than \u2206d. They iteratively add a point to the sub-trajectory pi and recompute the diameter of pi. If the diameter, remains less than Dmax after adding the new point, they keep the point in pi. Otherwise, they remove the point from pi, store si, and start constructing a new stay. Ye et al., in (Ye et al, 2009) have taken the very first chronological point in each stay as the reference point and have defined \u2206d as the Euclidian distance between each new point and the reference point. They do not refresh the reference point coordinate when adding a new point to the stay. While in our method, \u2206d is defined as the Euclidian distance between the time-weighted centroid of the stay (reference point) to the new point which is being examined (line 11 in Alg. 1). In other words, we use the time-weighted centroid of the point set in the\nAlgorithm 1: Time-Weighted Centroid Based Stay Region Extraction (Our Method)\ninput : P (A set of GPS points), vicinity distance threshold Dmax, time span threshold Tmin output: A set of Stays S where sk = (idk, gk, psk, ck, atk, dtk) Data: Coordinate twc\n1 \u2206d\u2190 0, \u2206t\u2190 0, i\u2190 0, j \u2190 0, token\u2190 0 2 foreach pi \u2208 P do 3 pi.tv \u2190 ComputeTimeValue(pi) 4 end 5 while i < |P | do 6 psk.insert(pi) 7 twc \u2190 TimeWeigtedCentroid(psk) 8 j \u2190 i+ 1 9 token\u2190 0\n10 while j < |P | do 11 \u2206d\u2190 EucDistance(twc, pj) 12 if \u2206d > Dmax then 13 \u2206t\u2190 (tpj + tv p j )\u2212 t p i 14 if \u2206t \u2265 Tmin then 15 idk \u2190 k 16 gk \u2190 ComputeConvexHull(PS) 17 ck \u2190 GeometryCentroid(gk) 18 atk \u2190 tpi 19 dtk \u2190 tpj + tv p j 20 sk = (idk, gk, psk, ck, atk, dtk) 21 S.insert(sk) 22 i\u2190 j 23 token\u2190 1 24 k \u2190 k + 1 25 break 26 end 27 end 28 psk.insert(pj) 29 twc \u2190 TimeWeightedCentroid(psk) 30 j \u2190 j + 1 31 end 32 if token 6= 1 then 33 i\u2190 i+ 1 34 end 35 end 36 return S\ncurrent stay as the reference points instead of the very first point of the stay.\nThe calculation of the parameter \u2206t in our method is different to the previous works as well. In the previous works, the parameter is defined as \u2206t\u2190 (tpj )\u2212 t p i , which means the time difference between the first and the last GPS observation in the stay. In our method we incorporate the time-value of the last point (tvpj ) and define the \u2206t as: \u2206t\u2190 (tpj + tv p j )\u2212 t p i . This means that we consider the time gap between the last point and its successor point in the trajectory to compute \u2206t.\nIn our method (presented in Alg. 1), having a current stay, for each new GPS observation in the trajectory, if the condition \u2206d > Dmax and \u2206t > Tmin, are\ntrue, we close the current stay, store it, and make a new stay with the GPS observation as the first point in its point set. Otherwise, we add the new GPS observation to the point set of the current stay, update the time-weighted centroid of the current stay, and keep examining the next points in the trajectory. In other words by adding each point to the stay, we refresh the coordinate of the reference point as the time-weighted centroid of the points of the current stay. We assign a unique numeric identification idi to each stay si. The parameter ati indicates the arrival time of stay si which is the time that the moving object has arrived in the region (gi). Similarly, dti is the departure time of stay si.\nTo calculate the geometry of the region gi within which the stay si has taken place, we compute the convex hull of the set of points psi = {p1, p2, ..., pn}. The convex hull of a set of points is the smallest polygon that contains all of the points (Andrew, 1979). Then, we add a predefined geometric buffer around the convex hull polygon to compensate for the GPS noise. The width of the buffer is set to 10 meters (Navstar, 2008). Fig. 3(b) shows the extracted stay regions based on the trajectory shown in Fig. 3(a).\n5.2 From Stay Regions to Destination Regions\nAssume a moving object visits a certain place every day (e.g. home). If we extract every stay throughout a trajectory period with a long time duration, e.g., one year or more, we would have at least 365 extracted stays with approximately the same geometry. At this stage, we need to merge the duplicated stays which represent the same destination region (e.g. car park). Aiming for that, we detect the stays that have approximately the same geometry and merge (cluster) them together resulting in a set of destinations with unique geometries and Identification.\nIn related works, there are two major schemes for merging the stay regions. They cluster the stay points (the centroids of the GPS points stored in each stay) such that the stay points that have close distance are clustered into the same destination. Ye et al. in (Ye et al, 2009), have used the density of neighborhood of stay points in a group as a measure of similarity in the clustering process. In other words, the stay points which have more dense neighbors (stay points with many nearby neighbors closely packed together) make a cluster (destination) and stay points that lie alone in low-density regions are considered as outliers. The result of running OPTICS (Ankerst et al, 1999) clustering algorithm on the set of stay points is a set of destinations (each destination is a set of stay points).\nOne major problem of density-based clustering methods such as OPTICS is that it is required to define two parameters neighborhood distance eps (neighborhood distance) and the (minPts) (minimum number of points required to form a dense region). The performance and output of the methods are strongly sensitive to the values chosen for these two parameters. For instance, in our application, if we choose a relatively big value for parameter (minPts), the density-based clustering methods will consider lots of stay points as noise or outliers in the clustering and eliminate them because they have the lower density of neighbors than (minPts).\nHariharan et al., in (Hariharan and Toyama, 2004) have used a clustering method which finds each pair of stay points which have maximum similarity to each other and merge them together iteratively. They have defined a similarity criterion which indicates if the diameter of the resulting region of merging two stay points is less than or equal to a given threshold Dmin, these two stay points will be merged. This process continues until all similar stay points are merged.\nIn our method, we incorporate the geometries the stay regions in extracting the destinations instead of only considering the density or distance of the stay points. In the process of clustering, we define a criterion that helps us control our merging process in our hierarchical clustering method.\nAlg. 2 presents the pseudo-code of our method. We use R-Tree indexing method to index the geometry of each stay gi \u2208 S. Subsequently, at each step, we send a query to the R-Tree to find only the clusters which their geometry intersects with the current stay geometry. The result is a list of stays (interList). Then, we compute the most similar stay geometry in interList to our current stay region (gi). After finding the similarity of all pairs in S, if JSimmax = 0, this means that there is no intersecting pair of stay regions in S. If JSimmax > 0, then there is still, at least, a pair of interesting stay regions in S. smaxIndex represents the stay region that has the highest similarity to our current stay si in the second loop in Alg. 2. To decide whether we need to merge the current stay si and smaxIndex, we compare their similarity coefficient (JSimmax) with Jmin. If (JSimmax > Jmin), we merge the two stays by adding all the GPS points in stay smaxIndex to si and computing the new region geometry of our current stay gi as the geometric union of two geometries.\nAfter merging stay region pairs, we compute the visit frequency of the resulting stay region as the sum of visit frequency of the current stay fi and the most similar stay region smaxIndex. We consider the frequency of visits to each destination as a useful criterion for select-\ning the significant destinations (POIs). As a result, we can decide whether we consider a cluster of stay regions (destination) as a POI or consider it as a trivial cluster (noise). The last loop in Alg. 2 removes the destinations which have been visited with the frequency less than Fmin.\nWe define the similarity of two geometries (gi, gj) as the measure of similarity of two stay regions as follows:\nGS(gi, gj) = Area(gi \u2229 gj) Area(gi \u222a gj) . (6)\nFig 3 shows the destinations extracted from the a set of stay regions using different values for parameter Jmin. The higher value of Jmin leads to higher number of overlapping destination regions being extracted. Interestingly, if we set Jmin = 1, we will have exactly all the stay regions extracted as destination regions because the probability that two stay regions have identical convex hulls (and accordingly JSim = 1) is approximately zero.\n5.3 From Destination Regions to Geometries of Interest (GOIs)\nHaving extracted the destination regions and their estimated geometries, as the final phase of our partitioning method, based on the geometries of the destination regions, we partition our trajectory area into a grid area with inhomogeneous cells such that both characteristics of a valid partitioning (discussed in section 3) are guaranteed.\nFirstly, we make a grid called micro-grid MG with equi-sized rectangular shaped cells with very fine granularity. The grid covers the area minimum bounding rectangle (MBR) of our GPS trajectory T . Also we make a grid composed of geometries of all destination regions.\nWe refer to this grid as destination-grid (DG). Then we convert the destination-grid (DG) to a grid called GOI-Grid (GG) with mutualy disjoint cells. Aiming for that, for each cell mi \u2208MG, we find the cell in dj \u2208 DG which maximizes the geometric similarity (Eq. 6) with mi.\ndj \u2208 DG = argmax dj GS(ci, dj).\nWe also defined and examined an alternative similarity metric as the Euclidean distance between the centroid of the polygon of cell i in micro-grid (cmi ) to the centroid of the polygon of cell j in destination-grid (cdj ). We call this similarity as polygon centroid similarity (PCS).\nPCS(mi, dj) = 1\nEucDistance(cmi , c d j ) .\nNext, we label mi \u2208MG as a cell that represents a tiny part of the destination dj in the destination-grid. We continue this process until there are no remaining unlabeled cells in MG which have an intersection with any of the cells in DG. By merging the geometries of all the cells in MG labeled with ID of each cell in DG, we make the GOI-Grid (depicted in Fig 4(d)).\nSince we find the most similar destination for each cell mi \u2208 MG and label it to be a part of the geometry of only one destination, all GOIs in the GOI-Grid are mutually disjoint, the first condition of a valid spatial partition is guaranteed. However, the grid does not cover all of the area of the MBR of the trajectory. This means that there might be a GPS observation that does not lie in the geometry of one of the GOIGrid cells. To tackle this problem, we insert all the cells mi \u2208 MG, which were not already been labeled, into the GOI-Grid. The resulting grid in referred to as finalgrid (Fig. 4(e)) which is composed of the GOIs of the\nmobile object, and the tiny cells with unique IDs. As a result, all of the area of the MBR of the trajectory T are covered by either a GOI or a tiny cell in final-grid.\nFig. 4(d) and Fig. 4(c) show the performance of both similarity metrics (GS and PCS) in the partitioning. As is seen, the resulting GOI-Grid using geometric similarity resembles the Destination-Grid much better because the PCS based method is biased to the centroid of the polygon and makes the shape of the resulting polygon less similar to the corresponding cell in the destinationgrid."}, {"heading": "6 Computational Complexity", "text": "In the stay extraction phase, in the worst case, the time complexity of our method is O(n2) for n track points in the trajectory. However, in practice, since the sum of the track point of the extracted stays are considerably fewer than n. Note that, the inner loop in Alg. 1 deals with computing the centroids of the stay regions which depends on the number of the track points in each stay. Since a large number of track points in the trajectory are not clustered in the stays (due to restrictions of a valid stay), the sum of the track points of the stays is much lower than n. Computing the diameter of the stays in the work proposed by (Hariharan and Toyama, 2004) is more complex than computing the centroid in our method, since for computing the diameter, we need to compute the distance of each point to all of the other points in the cluster with the time complexity of O(n2). Therefore, we can consider the complexity of the method, in the worst case, O(n3) for n track points in the trajectory. The time complexity of the method proposed by (Ye et al, 2009) is O(n) which is lower than our method since they do not refresh the\ncoordinate of the reference point while making the stay region.\nIn the destination extraction phase, Zheng et al., in (Ye et al, 2009) have used OPTICS (Ankerst et al, 1999) clustering method. The time complexity of OPTICS algorithm is O(n2). The time complexity of the hierarchical clustering method provided by Hariharan et al. (Hariharan and Toyama, 2004) is O(n3) in the worst case. The complexity of our method (Alg. 2) in the worst case, is O(n3). We use R-Tree indexing method to reduce the runtime of our method in finding the intersecting cells. The most costly part in our method is finding the degree of similarity between two geometries (Eq. 6).\nIn the partitioning phase, in the process of assigning each of the cells in micro-grid to the cells in GOIGrid, in the worst case, the complexity of the method is O(nm), where n is the number of cells in the MG and m is the number of cells in the destination-grid. Therefore, the granularity of MG has a significant impact on the runtime of our method. To increase the efficiency of the method we use R-Tree indexing to index the cells in the destination-grid."}, {"heading": "7 Experimental Results", "text": "In this section, we analyze the performance of our proposed method in comparison with the baselines. In our evaluations, we use a dataset of GPS trajectories collected in Anchorage, Alaska, USA as a part of the project FreeSim (Miller and Horowitz, 2007; Miller, 2009). The trajectory we use in this paper has been collected from a vehicle for the duration of about 42 months from 2010 to 2013 with varying sampling rate from one sample every 10 seconds to one sample every two minutes. We used ELKI machine learning li-\nAlgorithm 2: Geometric Similarity Based Destination Detection Method input : A set of stay regions S, Jaccard similarity\nthreshold Jmin visit frequency threshold Fmin\noutput: A set of destination regions D Data: Destination d, InterList, RTreeIndex\n1 JSimmax \u2190 0, JSim\u2190 0, firstSimIndex\u2190 0, secondSimIndex\u2190 0 2 foreach si \u2208 S do 3 fi \u2190 1 4 end 5 while (JSimmax < Jmin) do 6 RTreeIndex.Update(S) 7 i\u2190 0, JSimmax \u2190 0 8 while (i < |S|) do 9 interList\u2190\nRTreeIndex.FindIntersectingStays(si) 10 j \u2190 0 11 JSim\u2190 0 12 JSimmax \u2190 0 13 while (j < |interList|) do 14 JSim\u2190\nArea(gi \u22c2 interList[j])/Area(gi \u22c3 interList[j])\n15 if (JSim > JSimmax) then 16 JSimmax \u2190 JSim 17 maxIndex\u2190 FindIndex(S, interList[j]) 18 end 19 j \u2190 j + 1 20 end 21 i\u2190 i+ 1 22 end 23 if (JSimmax > Jmin) then 24 si.MergePoints(smaxIndex) 25 gi \u2190 gi \u222a gmaxIndex 26 fi \u2190 fi + fmaxIndex 27 S.remove(smaxIndex) 28 end 29 else 30 break 31 end 32 end 33 foreach (si \u2208 S) do 34 D.insert(si) 35 end 36 foreach (dk \u2208 D) do 37 if fk < Fmin then 38 D.remove(di) 39 end 40 end 41 return D\nbrary (Schubert et al, 2015), to implement the OPTICS clustering algorithm. Following we discuss the results in each of the three phases.\n7.1 Stay Extraction Experimental Results\nWe implemented the method presented in Alg. 1 and two methods proposed in (Hariharan and Toyama, 2004), and (Ye et al, 2009). Table 1 presents a comparison of the experimental results for each stay extraction method. As it is seen, our time-weighted clustering method outperforms the other two methods in the number of extracted clusters. Moreover, our method detects and report the stay regions with the single point while the other methods simply lose the stay regions.\nFig. 5 shows a visual perspective of the extracted stay regions by each of the stay region extraction methods in a selected area of the main GPS trajectory. We selected this particular region (Fig. 5(b)) because it contains clearly depicted places which indicate the car parks. We consider the car park geometries as the ground truth for our empirical observation and geometric similarity analysis. We cropped the GPS trajectory only to cover the selected area by removing all the GPS track point lie outside the geometry of the selected area.\nAs it is seen in Fig. 5(c), the extracted stay regions by diameter based method does not have acceptable results. Although some of the exacted stay regions intersect with the car park regions, they cover the considerable areas outside the car parks. The reference point based stay extraction method (Ye et al, 2009) depicted in Fig. 5(d) has much better performance compared to diameter based method since most of the extracted stay regions intersect with the car parks. However, on the bottom left side of the area, some irrelevant stays are evident. Fig. 5(e) shows the extracted stays using our proposed method. Although there are some minor stay regions extracted outside the car parks geometries (in places the same as those in Fig. 5(d)), the extracted stay regions are more compact and more biased to the car parks geometries.\nTable 1 reports that our method has extracted 292 stay regions with only one GPS points (cluster with one member) whereas, the two baseline methods were not able to detect them. The baseline methods compute\nthe value of \u2206t as the time distance between two consecutive points because need at least two GPS points in a cluster to make a valid stay region. However, our method incorporates the time-value of the current track point in computing \u2206t. The time-value of the current track point compensates the cases where the next point lies outside the current stay region (\u2206d > Dmax) but the time gap is long enough (\u2206t \u2265 Tmin), resulting in the stay points with only one track point being detected.\nTable 1 also shows that our method has extracted a considerably higher number of stay regions compared to the baselines. The reason is, there might be clusters which have members more than one but the time duration of the stay is less than Tmin without considering the time-value. In this case, the stay is considered invalid. The duration of the same stay might become more than or equal to Tmin by considering the timevalue of the last point in the cluster. In such scenario, our method detects these clusters while the other two methods miss them.\nIn our method, after adding a point to point set of a stay, we update the coordinate of the reference point of the stay by computing the time-weighted centroid of the points in the stay. Therefore, the points extracted in a stay become more biased and closer to the places which longer stops have taken place. Whereas, reference point based method considers the first point of the stay as the reference point does not update it iteratively. The diameter based method (Hariharan and Toyama, 2004) does not use a centroid point or a reference point and instead uses the diameter of the stay region as the condition of a valid stay. So, it performs much less accurate than both methods.\n7.2 Destination Extraction Experimental Results\nIn this section, we examine and compare our method with two baseline destination extraction methods us-\ning the stay regions extracted in the previous section. Table 2 shows the results for three methods. It is evident that the parameters Diametermin, minPts, and Jmin have a significant impact on the number of extracted destinations in all three methods. In the diameter based method, the larger Diametermin leads to a fewer number of destinations since destinations with the larger area are constructed. The parameter minPts has a significant impact on the number of destinations in density based method. The higher minPts leads to a fewer number of destinations. The greater Jmin in our method leads to higher number of destinations.\nFig. 6 shows the results of the destination extraction methods on the map. As it is evident, the diameter based method (Fig. 6(a)) does not have acceptable performance in extracting the geometries of the destinations. Although the extracted destinations do cover the car parks, they have areas much larger than the car park areas, and also, they have significant overlaps. Density based method has more acceptable performance that diameter based method. However, it loses two of the car parks. Moreover, it covers places not related to the car parks. Fig. 6(c) shows the destinations extracted by our geometric similarity based method. It is evident our method has constructed destination regions with much more acceptable geometric similarity to the car parks.\nAs it is evident in figures 6(c) and 6(e), in our method with with Fmin = 1, the value Jmin = 0 leads to all the geometries of all the destinations being disjoint while the number of extracted destination using Jmin = 0.1 is much higher. The destinations are overlapping, and even some destinations are fully covered by the other destinations.\nFigures 6(d) and 6(f) illustrate the extracted destinations with Fmin = 6. Comparison of the figures with figures 6(c) and 6(e) clearly indicates the effect of parameter Fmin in our destination extraction method. In the latter figures, the destinations with fewer visit frequencies have been eliminated from the destination-\ngrids, and only the destinations which have more geometric similarity to car park areas have been left.\nComparing two figures 6(d) and 6(f) reveals the effect of the value of Jmin on the extracted destinations. The extracted destinations in both figures are quite similar except for the destination in the middle of the area. Fig. 6(d) has merged the area of the two neighboring car parks together while Fig. 6(f) has extracted two distinct geometries for the same destination. This shows the better performance of the method with parameter Jmin = 0.1.\n7.3 Paritioning Experimental Results\nThe GOI-Grid, which is the result of constructing the GOIs based on the destinations in Fig. 6(f) is illustrated in Fig. 6(g). It is clearly seen that the partitioning method has resolved the problem of two destinations having a geometric overlap. The two destination regions in the middle of the Fig. 6(f) have been partitioned into two distinct cells in GOI-Grid without having any intersection.\nThe Final-grid, which is depicted in Fig. 6(h) is the last result of our partitioning. It is evident that the final-grid guarantees both characteristics of a valid partition. None of the cells overlap each other and all the GPS points in the mobile object trajectory can be labeled with the ID of a cell in the final grid.\n7.4 Geometric Similarity Evaluation Results\nIn this section, we use the geometric similarity as a quantitive metric to analyze the quality of our partitioning method compared to the baselines. We use Eq. 1 for analyzing the performance of the similarity of the real GOIs and the estimated GOIs. This metric uses the proportion of the area of the intersection of two geometries (gi and gj) to the area of the union of them.\nTable 3, presents the calculated degree of geometric similarity between the geometries of the real GOIs (the red colored polygons in figure 6(g)) and their corresponding extracted GOIs (the blue colored polygons in figure 6(g)). As it is evident, our method has the highest values for the geometric similarity. Table 3 also shows that the values of geometric similarities vary based on different values for the parameters Jmin, minPts, and Diamatermin.\nAmong the evaluated methods with different parameters, our method with Jmin = 0.15 has the best results. Therefore, the partitioning method which maximizes the geometric similarity (discussed in section 3) is our method with Jmin = 0.15."}, {"heading": "8 Conclusion and Future Work", "text": "In this paper, we addressed the problem of finding the Geometries of Interest of a mobile object and partitioning the trajectory area into a grid through analyzing its GPS trajectories. The research shows that considering the concept of time-value of the GPS points significantly improves the accuracy of stay region extraction. Moreover, the results of this study support the idea that considering the geometries of the stay regions, makes the geometries estimated GOIs remarkably more similar to the real world GOIs.\nThis research has opened up many questions in need of further investigation and will serve as a base for future studies. It would be interesting to focus on improving the performance and the accuracy of our proposed partitioning method by aggregating the trajectory data of other mobile objects moving in the same area of our particular mobile object. Other improvements such as using outlier detection methods to detect and remove the outlier points from the point set of the destinations could improve the results further. Finding the best geometric similarity metric to improve the performance of the destination extraction phase would be another\ninteresting research problem that could be addressed in the future."}], "references": [{"title": "Another efficient algorithm for convex hulls in two dimensions", "author": ["A Andrew"], "venue": "Information Processing Letters", "citeRegEx": "Andrew,? \\Q1979\\E", "shortCiteRegEx": "Andrew", "year": 1979}, {"title": "Optics: ordering points to identify the clustering structure", "author": ["M Ankerst", "MM Breunig", "HP Kriegel", "J Sander"], "venue": "Sigmod Record, ACM,", "citeRegEx": "Ankerst et al\\.,? \\Q1999\\E", "shortCiteRegEx": "Ankerst et al\\.", "year": 1999}, {"title": "Using gps to learn significant locations and predict movement across multiple users", "author": ["D Ashbrook", "T Starner"], "venue": "Personal and Ubiquitous Computing", "citeRegEx": "Ashbrook and Starner,? \\Q2003\\E", "shortCiteRegEx": "Ashbrook and Starner", "year": 2003}, {"title": "Voronoi diagrams&mdash;a survey of a fundamental geometric data structure", "author": ["F Aurenhammer"], "venue": "ACM Comput Surv", "citeRegEx": "Aurenhammer,? \\Q1991\\E", "shortCiteRegEx": "Aurenhammer", "year": 1991}, {"title": "Model-based gaussian and non-gaussian clustering. Biometrics pp", "author": ["JD Banfield", "AE Raftery"], "venue": null, "citeRegEx": "Banfield and Raftery,? \\Q1993\\E", "shortCiteRegEx": "Banfield and Raftery", "year": 1993}, {"title": "Extracting significant places from mobile user gps trajectories: A bearing change based approach", "author": ["T Bhattacharya", "L Kulik", "J Bailey"], "venue": "Proceedings of the 20th International Conference on Advances in Geographic Information Systems,", "citeRegEx": "Bhattacharya et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Bhattacharya et al\\.", "year": 2012}, {"title": "St-dmql: a semantic trajectory data mining query language", "author": ["V Bogorny", "B Kuijpers", "LO Alvares"], "venue": "International Journal of Geographical Information Science", "citeRegEx": "Bogorny et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Bogorny et al\\.", "year": 2009}, {"title": "Friendship and mobility: User movement in location-based social networks", "author": ["E Cho", "SA Myers", "J Leskovec"], "venue": "Proceedings of the 17th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, ACM,", "citeRegEx": "Cho et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Cho et al\\.", "year": 2011}, {"title": "When and where next: individual mobility prediction. In: MobiGIS", "author": ["G Gid\u00f3falvi", "F Dong"], "venue": null, "citeRegEx": "Gid\u00f3falvi and Dong,? \\Q2012\\E", "shortCiteRegEx": "Gid\u00f3falvi and Dong", "year": 2012}, {"title": "Monitoring animal behaviour and environmental interactions using wireless sensor networks, gps collars and satellite remote sensing. Sensors 9(5):pp", "author": ["RN Handcock", "DL Swain", "GJ Bishop-Hurley", "KP Patison", "T Wark", "P Valencia", "P Corke", "CJ ONeill"], "venue": null, "citeRegEx": "Handcock et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Handcock et al\\.", "year": 2009}, {"title": "Project lachesis: Parsing and modeling location histories", "author": ["R Hariharan", "K Toyama"], "venue": "Geographic Information Science, Lecture Notes in Computer Science,", "citeRegEx": "Hariharan and Toyama,? \\Q2004\\E", "shortCiteRegEx": "Hariharan and Toyama", "year": 2004}, {"title": "Sensor positioning in wireless adhoc sensor networks using multidimensional scaling", "author": ["X Ji", "H Zha"], "venue": null, "citeRegEx": "Ji and Zha,? \\Q2004\\E", "shortCiteRegEx": "Ji and Zha", "year": 2004}, {"title": "Indoor/outdoor pedestrian navigation with an embedded gps/rfid/self-contained sensor system", "author": ["M Kourogi", "N Sakata", "T Okuma", "T Kurata"], "venue": "Advances in Artificial Reality and Tele-", "citeRegEx": "Kourogi et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Kourogi et al\\.", "year": 2006}, {"title": "Movemine: Mining moving object data for discovery of animal movement patterns", "author": ["Z Li", "J Han", "M Ji", "LA Tang", "Y Yu", "B Ding", "JG Lee", "R Kays"], "venue": "ACM TIST", "citeRegEx": "Li et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Li et al\\.", "year": 2011}, {"title": "Indoor positioning: A key enabling technology for iot applications", "author": ["D Macagnano", "G Destino", "G Abreu"], "venue": "In: Internet of Things (WF-IoT),", "citeRegEx": "Macagnano et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Macagnano et al\\.", "year": 2014}, {"title": "Fastest path analysis in a vehicle-toinfrastructure intelligent transportation system architecture", "author": ["J Miller"], "venue": "Intelligent Vehicles Symposium,", "citeRegEx": "Miller,? \\Q2009\\E", "shortCiteRegEx": "Miller", "year": 2009}, {"title": "Freesim - a free real-time freeway traffic simulator", "author": ["J Miller", "E Horowitz"], "venue": "Intelligent Transportation Systems Conference,", "citeRegEx": "Miller and Horowitz,? \\Q2007\\E", "shortCiteRegEx": "Miller and Horowitz", "year": 2007}, {"title": "Real-time road traffic prediction with spatio-temporal correlations", "author": ["W Min", "L Wynter"], "venue": "Transportation Research Part C: Emerging Technologies 19(4):pp", "citeRegEx": "Min and Wynter,? \\Q2011\\E", "shortCiteRegEx": "Min and Wynter", "year": 2011}, {"title": "Mobisim: a framework for simulation of mobility models in mobile ad-hoc networks", "author": ["SM Mousavi", "M Moshref", "HR Rabiee", "A Dabirmoghaddam"], "venue": "Proceedings of 3rd IEEE International Conference on Wireless and Mobile Computing,", "citeRegEx": "Mousavi et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Mousavi et al\\.", "year": 2007}, {"title": "Gps standard positioning service (sps)", "author": ["G Navstar"], "venue": "URL http://www.gps.gov/technical/ps/", "citeRegEx": "Navstar,? \\Q2008\\E", "shortCiteRegEx": "Navstar", "year": 2008}, {"title": "A clustering-based approach for discovering interesting places in trajectories", "author": ["AT Palma", "V Bogorny", "B Kuijpers", "LO Alvares"], "venue": "Proceedings of the 2008 ACM Symposium on Applied Computing,", "citeRegEx": "Palma et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Palma et al\\.", "year": 2008}, {"title": "Nextplace: A spatio-temporal prediction framework for pervasive systems", "author": ["S Scellato", "M Musolesi", "C Mascolo", "V Latora", "AT Campbell"], "venue": "In: Pervasive,", "citeRegEx": "Scellato et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Scellato et al\\.", "year": 2011}, {"title": "A (2015) A framework for clustering uncertain data", "author": ["E Schubert", "A Koos", "T Emrich", "A Z\u00fcfle", "KA Schmid", "Zimek"], "venue": null, "citeRegEx": "Schubert et al\\.,? \\Q1987\\E", "shortCiteRegEx": "Schubert et al\\.", "year": 1987}, {"title": "Mobility prediction in cellular network using hidden markov model", "author": ["H Si", "Y Wang", "J Yuan", "X Shan"], "venue": null, "citeRegEx": "Si et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Si et al\\.", "year": 2010}, {"title": "Predictability of wlan mobility and its effects on bandwidth provisioning", "author": ["L Song", "U Deshpande", "U Kozat", "D Kotz", "R Jain"], "venue": null, "citeRegEx": "Song et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Song et al\\.", "year": 2006}, {"title": "Finding similar users using category-based location history", "author": ["X Xiao", "Y Zheng", "Q Luo", "X Xie"], "venue": "Proceedings of the 18th SIGSPATIAL International Conference on Advances in Geographic Information Systems,", "citeRegEx": "Xiao et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Xiao et al\\.", "year": 2010}, {"title": "Inferring social ties between users with human location history", "author": ["X Xiao", "Y Zheng", "Q Luo", "X Xie"], "venue": "Journal of Ambient Intelligence and Humanized Computing", "citeRegEx": "Xiao et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Xiao et al\\.", "year": 2014}, {"title": "Destination prediction by sub-trajectory synthesis and privacy protection against such prediction", "author": ["AY Xue", "R Zhang", "Y Zheng", "X Xie", "J Huang", "Z Xu"], "venue": "IEEE International Conference on Data Engineering (ICDE 2013),", "citeRegEx": "Xue et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Xue et al\\.", "year": 2013}, {"title": "Semitri: a framework for semantic annotation of heterogeneous trajectories", "author": ["Z Yan", "D Chakraborty", "C Parent", "S Spaccapietra", "K Aberer"], "venue": "Proceedings of the 14th International Conference on Extending Database Technology, ACM,", "citeRegEx": "Yan et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Yan et al\\.", "year": 2011}, {"title": "Mining individual life pattern based on location history", "author": ["Y Ye", "Y Zheng", "Y Chen", "J Feng", "X Xie"], "venue": "Mobile Data Management: Systems, Services and Middleware,", "citeRegEx": "Ye et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Ye et al\\.", "year": 2009}, {"title": "Towards mobile intelligence: Learning from {GPS} history data for collaborative recommendation", "author": ["VW Zheng", "Y Zheng", "X Xie", "Q Yang"], "venue": "Artificial Intelligence 184185:pp", "citeRegEx": "Zheng et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Zheng et al\\.", "year": 2012}, {"title": "Computing with Spatial Trajectories", "author": ["Y Zheng", "X Zhou"], "venue": null, "citeRegEx": "Zheng and Zhou,? \\Q2011\\E", "shortCiteRegEx": "Zheng and Zhou", "year": 2011}, {"title": "Understanding mobility based on gps data", "author": ["Y Zheng", "Q Li", "Y Chen", "X Xie", "WY Ma"], "venue": "Proceedings of the 10th international conference on Ubiquitous computing,", "citeRegEx": "Zheng et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Zheng et al\\.", "year": 2008}, {"title": "Mining interesting locations and travel sequences from gps trajectories", "author": ["Y Zheng", "L Zhang", "X Xie", "WY Ma"], "venue": "Proceedings of the 18th international conference on World wide web,", "citeRegEx": "Zheng et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Zheng et al\\.", "year": 2009}, {"title": "Understanding transportation modes based on gps data for web applications", "author": ["Y Zheng", "Y Chen", "Q Li", "X Xie", "WY Ma"], "venue": null, "citeRegEx": "Zheng et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Zheng et al\\.", "year": 2010}, {"title": "Discovering personal gazetteers", "author": ["C Zhou", "D Frankowski", "P Ludford", "S Shekhar", "L Terveen"], "venue": null, "citeRegEx": "Zhou et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Zhou et al\\.", "year": 2004}], "referenceMentions": [{"referenceID": 17, "context": "traffic and transportation management systems (Min and Wynter, 2011), animal migration and movement monitoring (Handcock et al, 2009), location prediction (Gid\u00f3falvi and Dong, 2012), transportation mode estimation (Zheng et al, 2010), and location-based social networks (Zheng et al, 2012)).", "startOffset": 46, "endOffset": 68}, {"referenceID": 8, "context": "traffic and transportation management systems (Min and Wynter, 2011), animal migration and movement monitoring (Handcock et al, 2009), location prediction (Gid\u00f3falvi and Dong, 2012), transportation mode estimation (Zheng et al, 2010), and location-based social networks (Zheng et al, 2012)).", "startOffset": 155, "endOffset": 181}, {"referenceID": 10, "context": "Aiming for that, we extend the spatio-temporal partitioning techniques proposed in (Ye et al, 2009; Hariharan and Toyama, 2004).", "startOffset": 83, "endOffset": 127}, {"referenceID": 3, "context": "Using the resulting grid, we can easily generate the SVL of the mobile object by using intersection geometric operator instead of using the nearest neighbor queries or Voronoi diagrams (Aurenhammer, 1991).", "startOffset": 185, "endOffset": 204}, {"referenceID": 31, "context": "In recent years, various works have considered trajectory data pre-processing, indexing, storage, and analysis (Zheng and Zhou, 2011).", "startOffset": 111, "endOffset": 133}, {"referenceID": 11, "context": "These trajectories could be collected by social networks (Cho et al, 2011), sensor networks (Ji and Zha, 2004), RFIDs (Kourogi et al, 2006), WI-FI (Song et al, 2006), simulators (Mousavi et al, 2007), internet of things (Macagnano et al, 2014), and cellular networks (Si et al, 2010).", "startOffset": 92, "endOffset": 110}, {"referenceID": 31, "context": "GPS trajectories have been used in various research works in different applications (Zheng and Zhou, 2011), however, our work is a pre-processing prerequisite for all of the applications which attempt to extract the GOIs of the mobile objects.", "startOffset": 84, "endOffset": 106}, {"referenceID": 2, "context": "Spatial clustering methods perform very similar to the classic clustering schemes such as KMeans (Ashbrook and Starner, 2003), Gaussian mixture model (GMM) (Banfield and Raftery, 1993), and DBSCAN (Zhou et al, 2004).", "startOffset": 97, "endOffset": 125}, {"referenceID": 4, "context": "Spatial clustering methods perform very similar to the classic clustering schemes such as KMeans (Ashbrook and Starner, 2003), Gaussian mixture model (GMM) (Banfield and Raftery, 1993), and DBSCAN (Zhou et al, 2004).", "startOffset": 156, "endOffset": 184}, {"referenceID": 10, "context": "The research presented in (Hariharan and Toyama, 2004) has a similar approach in the extraction of the stay regions with the difference that defines the time and vicinity distance based on the diameter of the extracted stay regions.", "startOffset": 26, "endOffset": 54}, {"referenceID": 10, "context": "The definition of a \u2206d in our approach is different to the previous work (Hariharan and Toyama, 2004) and (Ye et al, 2009).", "startOffset": 73, "endOffset": 101}, {"referenceID": 10, "context": "In (Hariharan and Toyama, 2004), \u2206d is defined as the Euclidean diameter of the coordinates of elements of a stay.", "startOffset": 3, "endOffset": 31}, {"referenceID": 0, "context": "The convex hull of a set of points is the smallest polygon that contains all of the points (Andrew, 1979).", "startOffset": 91, "endOffset": 105}, {"referenceID": 19, "context": "The width of the buffer is set to 10 meters (Navstar, 2008).", "startOffset": 44, "endOffset": 59}, {"referenceID": 10, "context": ", in (Hariharan and Toyama, 2004) have used a clustering method which finds each pair of stay points which have maximum similarity to each other and merge them together iteratively.", "startOffset": 5, "endOffset": 33}, {"referenceID": 10, "context": "Computing the diameter of the stays in the work proposed by (Hariharan and Toyama, 2004) is more complex than computing the centroid in our method, since for computing the diameter, we need to compute the distance of each point to all of the other points in the cluster with the time complexity of O(n).", "startOffset": 60, "endOffset": 88}, {"referenceID": 10, "context": "(Hariharan and Toyama, 2004) is O(n) in the worst case.", "startOffset": 0, "endOffset": 28}, {"referenceID": 16, "context": "In our evaluations, we use a dataset of GPS trajectories collected in Anchorage, Alaska, USA as a part of the project FreeSim (Miller and Horowitz, 2007; Miller, 2009).", "startOffset": 126, "endOffset": 167}, {"referenceID": 15, "context": "In our evaluations, we use a dataset of GPS trajectories collected in Anchorage, Alaska, USA as a part of the project FreeSim (Miller and Horowitz, 2007; Miller, 2009).", "startOffset": 126, "endOffset": 167}, {"referenceID": 10, "context": "Reference Point Based (Ye et al, 2009) 3568 0 Diameter Based (Hariharan and Toyama, 2004) 3587 0 Time-Weighted Centroid Based (Our Method) 4127 292", "startOffset": 61, "endOffset": 89}, {"referenceID": 10, "context": "1 and two methods proposed in (Hariharan and Toyama, 2004), and (Ye et al, 2009).", "startOffset": 30, "endOffset": 58}, {"referenceID": 10, "context": "Diameter Based (Hariharan and Toyama, 2004) Diametermin = 200m 3587 304 Diameter Based Diametermin = 300m 3587 166 Diameter Based Diametermin = 400m 3587 128", "startOffset": 15, "endOffset": 43}, {"referenceID": 10, "context": "The diameter based method (Hariharan and Toyama, 2004) does not use a centroid point or a reference point and instead uses the diameter of the stay region as the condition of a valid stay.", "startOffset": 26, "endOffset": 54}], "year": 2016, "abstractText": "Nowadays large amounts of GPS trajectory data is being continuously collected by GPS-enabled devices such as vehicles navigation systems and mobile phones. GPS trajectory data is useful for applications such as traffic management, location forecasting, and itinerary planning. Such applications often need to extract the time-stamped Sequence of Visited Locations (SVLs) of the mobile objects. The nearest neighbor query (NNQ) is the most applied method for labeling the visited locations based on the IDs of the POIs in the process of SVL generation. NNQ in some scenarios is not accurate enough. To improve the quality of the extracted SVLs, instead of using NNQ, we label the visited locations as the IDs of the POIs which geometrically intersect with the GPS observations. Intersection operator requires the accurate geometry of the points of interest which we refer to them as the Geometries NICTA VRL, Department of Computing and Information Systems, The University of Melbourne, Australia Tel.: +61-405967448 E-mail: mousavi@student.unimelb.edu.au Department of Computing and Information Systems, The University of Melbourne, Australia Tel.: +61-383441351 E-mail: aharwood@unimelb.edu.au Department of Computing and Information Systems, The University of Melbourne, Australia Tel.: +61-383441351 E-mail: karus@unimelb.edu.au School of Civil and Environmental Engineering, UNSW, Australia Tel.: +61-383441351 E-mail: maghrebi@unsw.edu.au of Interest (GOIs). In some application domains (e.g. movement trajectories of animals), adequate information about the POIs and their GOIs may not be available a priori, or they may not be publicly accessible and, therefore, they need to be derived from GPS trajectory data. In this paper we propose a novel method for estimating the POIs and their GOIs, which consists of three phases: (i) extracting the geometries of the stay regions; (ii) constructing the geometry of destination regions based on the extracted stay regions; and (iii) constructing the GOIs based on the geometries of the destination regions. Using the geometric similarity to known GOIs as the major evaluation criterion, the experiments we performed using long-term GPS trajectory data show that our method outperforms the existing approaches.", "creator": "LaTeX with hyperref package"}}}