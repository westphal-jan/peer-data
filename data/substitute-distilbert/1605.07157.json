{"id": "1605.07157", "review": {"conference": "NIPS", "VERSION": "v1", "DATE_OF_SUBMISSION": "23-May-2016", "title": "Unsupervised Learning for Physical Interaction through Video Prediction", "abstract": "a core challenge for an agent learning to interact with the world starts to predict how its actions affect perception in its environment. many existing methods for learning the dynamics of physical interactions require labeled object information. however, to scale real - world interaction learning to a variety of scenes and objects, acquiring labeled data becomes increasingly impractical. to learn about physical object phenomena without labels, we develop an action - conditioned video prediction model that explicitly models pixel motion, each using a distribution to pixel motion from previous frames. because our model explicitly predicts motion, it is fully invariant given object appearance, enabling it to generalize to previously unseen objects. to explore video prediction for real - world interactive agents, we also introduce a dataset of 50, 000 robot interactions experiencing pushing motions, specifically a slide set with furry objects. in this dataset, accurate narration of videos conditioned on the dog's action actions amounts to learning into \" visual imagination \" of interactive futures based on different rules of action. our descriptions show that our proposed method not only needs partially accurate video predictions, but so more accurately predicts object motion, when compared to prior methods.", "histories": [["v1", "Mon, 23 May 2016 19:45:55 GMT  (6109kb,D)", "http://arxiv.org/abs/1605.07157v1", null], ["v2", "Tue, 24 May 2016 19:33:23 GMT  (6109kb,D)", "http://arxiv.org/abs/1605.07157v2", "Fixing typo in supplementary materials URL. Correct URL is: sites.google.com/site/robotprediction"], ["v3", "Thu, 9 Jun 2016 00:29:37 GMT  (9318kb,D)", "http://arxiv.org/abs/1605.07157v3", "Fixing typo in supplementary materials URL. Correct URL is:this http URL"], ["v4", "Mon, 17 Oct 2016 20:09:56 GMT  (9116kb,D)", "http://arxiv.org/abs/1605.07157v4", "To appear in NIPS '16; Video results, code, and data available at:this http URL"]], "reviews": [], "SUBJECTS": "cs.LG cs.AI cs.CV cs.RO", "authors": ["chelsea finn", "ian j goodfellow", "sergey levine"], "accepted": true, "id": "1605.07157"}, "pdf": {"name": "1605.07157.pdf", "metadata": {"source": "CRF", "title": "Unsupervised Learning for Physical Interaction through Video Prediction", "authors": ["Chelsea Finn", "Ian Goodfellow"], "emails": ["cbfinn@eecs.berkeley.edu", "ian@openai.com", "slevine@google.com"], "sections": [{"heading": "1 Introduction", "text": "Object detection, tracking, and motion prediction are fundamental problems in computer vision, and predicting the effect of physical interactions is a critical challenge for learning agents acting in the world, such as robots, autonomous cars, and drones. Most existing techniques for learning to predict physics rely on large manually labeled datasets (e.g. [15]). However, if interactive agents can use unlabeled raw video data to learn about physical interaction, they can autonomously collect virtually unlimited experience through their own exploration. Learning a representation which can predict future video without labels has applications in action recognition and prediction and, when conditioned on the action of the agent, amounts to learning a predictive model that can then be used for planning and decision making.\nHowever, learning to predict physical phenomena poses many challenges, since real-world physical interactions tend to be complex and stochastic, and learning from raw video requires handling the high dimensionality of image pixels and the partial observability of object motion from videos. Prior video prediction methods have typically considered short-range prediction [14], small image patches [19], or synthethic images [17]. Such models follow a paradigm of reconstructing future frames from the internal state of the model. In our approach, we propose a method which does not require the model to store the object and background appearance. Such appearance information is directly available in the previous frame. We develop a predictive model which merges appearance information from previous frames with motion predicted by the model. As a result, the model is better able to predict future video sequences for multiple steps, even involving objects not seen at training time.\nar X\niv :1\n60 5.\n07 15\n7v 1\n[ cs\n.L G\n] 2\n3 M\nay 2\nTo merge appearance and predicted motion, we output the motion of pixels relative to the previous image. Applying this motion to the previous image forms the next frame. We present and evaluate three motion prediction modules. The first, which we refer to as dynamic neural advection (DNA), outputs a distribution over locations in the previous frame for each pixel in the new frame. The predicted pixel value is then computed as an expectation under this distribution. A variant on this approach, which we call convolutional dynamic neural advection (CDNA), outputs the parameters of multiple normalized convolution kernels to apply to the previous image to compute new pixel values. The last approach, which we call spatial transformer predictors (STP), outputs the parameters of multiple affine transformations to apply to the previous image, akin to the spatial transfomer network previously proposed for supervised learning [9]. In the case of the latter two methods, each predicted transformation is meant to handle separate objects. To combine the predictions into a single image, the model also predicts a compositing mask over each of the transformations. DNA and CDNA are simpler and easier to implement than STP, and while all models achieve comparable performance, the object-centric CDNA and STP models also provide interpretable internal representations.\nOur main contribution is a method for making long-range predictions in real-world videos by predicting pixel motion. When conditioned on the actions taken by an agent, the model can learn to imagine different futures from different actions. To learn about physical interaction from videos, we need a large dataset with complex object interactions. We collected a dataset of 50, 000 robot pushing motions, consisting of 1.4 million frames with the corresponding action at each time step. Our experiments using this new robotic pushing dataset, and using a human motion video dataset [8], show that models that explicitly transform pixels from previous frames better capture object motion and produce more accurate video predictions compared to prior state-of-the-art methods based on pixel reconstruction. Videos are available online: sites.google.com/robotprediction"}, {"heading": "2 Related Work", "text": "Video prediction: Prior work on video prediction has tackled synthetic videos and short-term prediction in real videos. Yuan et al. [25] constructed predictions from similar videos in a dataset. Ranzato et al. proposed a baseline for video prediction inspired by language models [18]. LSTM models have been adapted for video prediction on patches [19], action-conditioned Atari frame predictions [17], and precipitation nowcasting [24]. Mathieu et al. proposed new loss functions for sharper frame predictions [14]. Prior methods generally reconstruct frames from the internal state of the model, and some predict the internal state directly, without producing images [20]. Our method instead transforms pixels from previous frames, explicitly modeling motion and, in the case of the CDNA and STP models, decomposing it over objects. This approach differs from recent work on optic flow prediction [22, 14], which predicts where pixels will move to. We found in our experiments that all three of our models produce substantially better predictions by advecting pixels from the previous frame and compositing them onto the new image. Boots et al. predict future images of a robot arm using nonparametric kernel-based methods [3]. In contrast to this work, our approach uses flexible parametric models, and effective predicts interactions with objects, including new objects not seen during training. To our knowledge, no previous video prediction method has been applied to predict real images with novel object interactions beyond two time steps into the future.\nLearning physics: Several works have explicitly addressed prediction of physical interactions, including predicting ball motion [4], block falling [1], the effects of forces [16, 15], future human interactions [7], and future car trajectories [21]. These methods require ground truth object pose information, segmentation masks, camera viewpoint, or image patch trackers. In the domain of reinforcement learning, model-based methods have been proposed that learn prediction on images [12, 23], but they have either used synthetic images or instance-level models, and have not demonstrated generalization to novel objects nor accurate prediction on real-world videos. As shown by our comparison to LSTM-based prediction designed for Atari frames [17], models that work well on synthetic domains do not necessarily succeed on real images.\nVideo datasets: Existing video datasets capture YouTube clips [10], human motion [8], synthetic video game frames [17], and driving [6]. However, to investigate learning visual physics prediction, we need data that exhibits rich object motion, collisions, and interaction information. We propose a large new dataset consisting of real-world videos of robot-object interactions, including complex physical phenomena, realistic occlusions, and a clear use-case for interactive robot learning."}, {"heading": "3 Motion-Focused Predictive Models", "text": "In order to learn about object motion while remaining invariant to appearance, we introduce a class of video prediction models that directly use appearance information from previous frames to construct pixel predictions. Our model computes the next frame by first predicting the motions of objects in pixel space, then merges these predictions via masking. In this section, we discuss our novel pixel transformation models, and propose how to effectively merge predicted motion of multiple objects into a single next image prediction. The architecture of the CDNA model is shown in Figure 1."}, {"heading": "3.1 Pixel Transformations for Future Video Prediction", "text": "The core of our models is a motion prediction module that predicts objects\u2019 motion without attempting to reconstruct their appearance. This module is therefore partially invariant to appearance and can generalize effectively to previously unseen objects. We propose three motion prediction modules:\nDynamic Neural Advection (DNA): In this approach, we predict a distribution over locations in the previous frame for each pixel in the new frame. The predicted pixel value is computed as an expectation under this distribution. We constrain the pixel movement to a local region, under the regularizing assumption that pixels will not move large distances. This keeps the dimensionality of the prediction low. This approach is the most flexible of the proposed approaches.\nFormally, we apply the predicted motion transformation M\u0302 to the previous image prediction I\u0302t\u22121 for every pixel (x, y) to form the next image prediction I\u0302t as follows:\nI\u0302t(x, y) = \u2211\nk\u2208(\u2212\u03ba,\u03ba) \u2211 l\u2208(\u2212\u03ba,\u03ba) M\u0302xy(k, l)I\u0302t\u22121(x\u2212 k, y \u2212 l)\nwhere \u03ba is the spatial extent of the predicted distribution. This can be implemented as a convolution with untied weights. The architecture of this model matches the CDNA model in Figure 1, except that the higher-dimensional transformation parameters M\u0302 are outputted by the last (conv 2) layer instead of the LSTM 5 layer used for the CDNA model.\nConvolutional Dynamic Neural Advection (CDNA): Under the assumption that the same mechanisms can be used to predict the motions of different objects in different regions of the image, we consider a more object-centric approach to predicting motion. Instead of predicting a different distribution for each pixel, this model predicts multiple discrete distributions that are each applied to the entire image via a convolution (with tied weights), which computes the expected value of the motion distribution for every pixel. The idea is that pixels on the same rigid object will move together, and therefore can share the same transformation. More formally, one predicted object transformation\nm\u0302 applied to the previous image It\u22121 produces image J\u0302t for each pixel (x, y) as follows: J\u0302t(x, y) = \u2211\nk\u2208(\u2212\u03ba,\u03ba) \u2211 l\u2208(\u2212\u03ba,\u03ba) m\u0302(k, l)I\u0302t\u22121(x\u2212 k, y \u2212 l)\nwhere \u03ba is the spatial size of the normalized predicted convolution kernel m\u0302. Multiple transformations {m\u0302(i)} are applied to the previous image I\u0302t\u22121 to form multiple images {J\u0302 (i)t }. These output images are combined into a single prediction I\u0302t as described in the next section and show in Figure 1.\nSpatial Transformer Predictors (STP): In this approach, the model produces multiple sets of parameters for 2D affine image transformations, and applies the transformations using a bilinear sampling kernel [9]. More formally, a set of affine parameters M\u0302 produces a warping grid between pixels (xt\u22121, yt\u22121) in the previous image and pixels (xt, yt) in the generated image.(\nxt\u22121 yt\u22121\n) = M\u0302 ( xt yt 1 )\nThis grid can be applied with a bilinear kernel to form an image J\u0302t:\nJ\u0302t(xt, yt) = W\u2211 k H\u2211 l I\u0302t\u22121(k, l)max(0, 1\u2212 |xt\u22121 \u2212 k|)max(0, 1\u2212 |yt\u22121 \u2212 l|)\nwhere W and H are the image width and height. While this type of operator has been applied previously only to supervised learning tasks, it is well-suited for video prediction. Multiple transformations {M\u0302 (i)} are applied to the previous image I\u0302t\u22121 to form multiple images {J\u0302 (i)t }, which are then composited based on the masks. The architecture matches the diagram in Figure 1, but instead of outputting CDNA kernels at the LSTM 5 layer, the model outputs the transformation parameters.\nAll of these models can focus on learning physics rather than object appearance. Our experiments show that these models are better able to generalize to unseen objects compared to models that reconstruct the pixels directly or predict the difference from the previous frame."}, {"heading": "3.2 Composing Object Motion Predictions", "text": "CDNA and STP produce multiple object motion predictions, which need to be combined into a single image. To do so, our model also predicts a set of masks to apply to the transformations. These masks indicate how much each transformed image influences each pixel. A softmax over the channels of the mask ensures that it sums to one. In practice, our experiments show that the model learns to mask out objects that are moving in consistent directions. The benefit of this approach is two-fold: first, predicted motion transformations are reused for multiple pixels in the image, and second, the model naturally extracts a more object centric representation in an unsupervised fashion, a desirable property for an agent learning to interact with objects.\nFor each model, including DNA, we also include a \u201cbackground mask\u201d where we allow the models to copy pixels directly from the previous frame. Additionally, to fill in previously occluded regions, which may not be well represented by nearby pixels, we allowed the models to generate pixels from an image, and included it in the final masking step. Besides improving performance, this also produces interpretable background masks that we visualize in Section 5."}, {"heading": "3.3 Action-conditioned Convolutional LSTMs", "text": "Most existing physics and video prediction models use feedforward architectures [14, 13] or feedforward encodings of the image [17]. To generate the motion predictions discussed above, we employ stacked convolutional LSTMs [24]. Recurrence through convolutions is a natural fit for multi-step video prediction because it takes advantage of the spatial invariance of image representations, as the laws of physics are mostly consistent across space. As a result, models with convolutional recurrence require significantly fewer parameters, and use those parameters more efficiently.\nThe model architecture is displayed in Figure 1, and detailed in Appendix B. In an interactive setting, the agent\u2019s actions and internal state (such as the pose of the robot gripper) also influence the next\nimage, and we integrate both into our model by tiling the vector of concatenated state and action across the spatial extent of the lowest-dimensional activation map. Note, though, that the agent\u2019s internal state (i.e. the robot gripper pose) is only input into the network at the beginning, and must be predicted from the actions in future timesteps. We trained the networks using an l2 reconstruction loss. Alternative losses, such as those presented in [14] could complement this method.\n4 Robotic Pushing Dataset\nOne key application of action-conditioned video prediction is to use the learned model for decision making in visionbased robotic control tasks. Unsupervised learning from video can enable agents to learn about the world on their own, without human involvement, a critical requirement for scaling up interactive learning. In order to investigate action-conditioned video prediction for robotic tasks, we need a dataset with real-world physical object interactions. We collected a new dataset using 10 robotic arms, shown in Figure 2, pushing hundreds of objects in bins, amounting to 50, 000 interaction sequences with over 1 million video frames. Two test sets, each with 1, 500 recorded motions, were also collected. The first test set used two different subsets of the objects pushed during training. The second\ntest set involved two subsets of objects, none of which were used during training. In addition to 64\u00d7 64 RGB images, each frame is also annotated with the gripper pose, which we refer to as the internal state, and the action, which corresponded to the commanded gripper pose. The dataset will be made public, and further details on the data collection procedure are provided in Appendix A."}, {"heading": "5 Experiments", "text": "We evaluate our method using the dataset in Section 4, as well as on the Human3.6M dataset [8], which consists of videos of human motion. In both settings, we evaluate our three models described in Section 3, as well as prior models [14, 17]. For CDNA and STP, we used 10 transformers. For all three models, in addition to the transformations described, we also allow the network to copy background pixels directly from the previous frame by including the previous image in the masked compositing operation, with an additional channel in the mask for the background. While we show stills from the predicted videos in the figures, the qualitative results are easiest to compare when the predicted videos can be viewed side-by-side. For this reason, we encourage the reader to examine the video results on the supplemental website: sites.google.com/robotprediction\nTraining details: We trained all models using the TensorFlow library, optimizing to convergence using ADAM [11] with the suggested hyperparameters. For all recurrent models, we trained with and without scheduled sampling [2] and report the performance of the model with the best validation error. We found that scheduled sampling improved performance of our models, but did not substantially affect the performance of ablation and baseline models which did not model pixel motion.\nEvaluation: Prior work has proposed to evaluate video prediction using peak signal to noise ratio (PSNR) and structured similarity index (SSIM) [14]. Beyond the visual quality of the predictions, we are also interested in evaluating the accuracy of the predicted motion, since our goal is to learn physics for interaction. To do so, we propose a new metric, which is to measure the mean-squared error (MSE) between the optical flow vectors computed on the ground truth videos and the flow computed on the predicted video. Smaller values are better, and zero equates to perfect motion prediction within to the accuracy of the optical flow computation."}, {"heading": "5.1 Action-conditioned prediction for robotic pushing", "text": "Our primary evaluation is on video prediction using our robotic interaction dataset, conditioned on the future actions taken by the robot. In this setting, we pass in two initial images, as well as the initial robot arm state and actions, and then sequentially roll out the model, passing in the future\nactions and the model\u2019s image and state prediction from the previous time step. We trained for 8 future time steps for all recurrent models, and test for up to 18 time steps. We held out 5% of the training set for validation. To quantitatively evaluate the predictions, we measure average PSNR and SSIM, as proposed in [14]. To explicitly evaluate if the model predicts the correct motion of objects, we also report the optical flow metric described above. Unlike [14], we measure all metrics on the entire image. We evaluate on two test sets described in Section 4, one with objects seen at training time, and one with previously unseen objects.\nFigure 3 illustrates the performance of our models compared to prior methods. We report the performance of the feedforward multiscale model of [14] using an l1+GDL loss, which was the best performing model in our experiments \u2013 full results of the multi-scale models are in Appendix C. Our methods significantly outperform prior video prediction methods on all metrics. The FC LSTM model [17] reconstructs the background, lacking the representational power to reconstruct the objects in the bin. The feedforward multiscale model performs well on 1-step prediction, but quickly drops over time, as it is only trained for 1-step prediction. It is worth noting that our models are significantly more parameter efficient: despite being recurrent, they contain 12.5 million parameters, which is slightly less than the feedforward model with 12.6 million parameters and significantly less than the FC LSTM model which has 78 million parameters. We found that none of the models suffered from significant overfitting on this dataset. We also report the baseline performance of simply copying the last observed ground truth frame.\nIn Figure 4, we compare to models with the same stacked convolutional LSTM architecture, but that predict raw pixel values or the difference between previous and current frames. By explicitly modeling pixel motion, our method outperforms these ablations. Note that the model without skip connections is most representative of the model by Xingjian et al. [24]. We show a second ablation in\nFigure 5. These show the benefit of training for longer horizons and from conditioning on the action of the robot. Lastly, we show qualitative results in Figure 6 of changing the action of the arm to examine the model\u2019s predictions about possible futures. This kind of prediction is a crucial ingredient in model-based planning, where the robot could mentally test the outcomes of various actions before picking the best one for a given task."}, {"heading": "5.2 Human motion prediction", "text": "In addition to the action-conditioned prediction, we also evaluate our model on predicting future video without actions. We chose the Human3.6M dataset, which consists of human actors performing various actions in a room. We trained all models on 5 of the human subjects, held out one subject for validation, and held out a different subject for the evaluations presented here. Thus, the models have never seen this particular human subject or any subject wearing the same clothes. We subsampled the video down to 10 fps such that there was noticeable motion in the videos within reasonable timeframes. Since the model is no longer conditioned on actions, we fed in 10 video frames and trained the network to produce the next 10 frames, corresponding to 1 second each. Our evaluation measures performance up to 20 timesteps into the future.\nThe results in Figure 7 show that our motion-predictive models quantitively outperform prior methods, and qualitatively produce plausible motions for at least 10 timesteps, and start to degrade thereafter. We also show the masks predicted internally by the model for masking out the previous frame, which we refer to as the background mask. These masks illustrate that the model learns to segment out the human subject in the image without any explicit supervision."}, {"heading": "6 Conclusion & Future Directions", "text": "In this work, we develop an action-conditioned video prediction model for interaction that incoporates appearance information in previous frames with motion predicted by the model. To study unsupervised learning for interaction, we also present a new video dataset with 50, 000 real robot interactions and more than 1 million video frames. Our experiments show that, by learning to transform pixels in the initial frame, our model can produce plausible video sequences more than 10 time steps into the future, which corresponds to about one second. In comparisons to prior methods, our method achieves the best results on a number of previous proposed metrics.\nPredicting future object motion in the context of a physical interaction is a key building block of an intelligent interactive system. The kind of action-conditioned prediction of future video frames that we demonstrate can allow an interactive agent, such as a robot, to imagine different futures based on the available actions. Such a mechanism can be used to plan for actions to accomplish a particular goal, anticipate possible future problems (e.g. in the context of an autonomous vehicle), and recognize interesting new phenomena in the context of exploration. While our model directly predicts the motion of image pixels and naturally groups together pixels that belong to the same object and move together, it does not explicitly extract an internal object-centric representation (e.g. as in [5]). Learning such a representation would be a promising future direction, particularly for applying efficient reinforcement learning algorithms that might benefit from concise state representations."}, {"heading": "A Data Collection Details", "text": "In this section, we discuss additional details of the data collection procedure.\nThe data was collected using 10 7-degree-of-freedom robot arms, and included the robot\u2019s joint angles, gripper pose, commanded gripper pose, measured torques, and 640 \u00d7 512 RGB images captured from the robot\u2019s camera. The images were center-cropped and downsampled to 64\u00d7 64. Example images are shown in Figure 2. The images and robot sensor readings were recorded at 10 Hz, and the robot was commanded via impedance control in task space. In our experiments, the robot\u2019s internal state was the gripper pose, and the action was the commanded gripper pose. Two test sets, each with 1, 500 recorded motions, were also collected. Both used the same robot control method described above. The first test set used two different subsets of the objects pushed during training. The second test set involved two subsets of objects, none of which were used during training.\nDuring data collection, between ten and twenty random objects were placed in bins in front of each robot, and swapped out for new objects after approximately 4, 000 randomized interactions. The robots were programmed to repeatedly perform one of two different types of pushing motions: a random push or a randomized sweep to the middle. The sweep to the middle starts from a random position on the outside border of the bin, and meandered randomly towards the middle. The motion was designed to prevent objects from piling up on the edges of the bin. Each type of motion lasted for approximately 3-5 seconds. Between each motion, the arm was programmed to move out of the camera scene, and an image was recorded."}, {"heading": "B Model Details", "text": "In this section, we present additional details for each model. A diagram of the CDNA model is shown in the main paper in Figure 1, and additional diagrams for the DNA and STP models are shown in Figures 8 and 9, respectively. Each model consists of a core trunk made up of one stride-2 5 \u00d7 5 convolution, followed by convolutional LSTMs. Each of these LSTM layers has the weights arranged into 5\u00d75 convolutions, and the output of the preceding LSTM is fed directly into the next one. LSTM layers 3 and 5 are preceded by stride 2 downsampling to reduce resolution, and LSTM layers 5, 6, and 7 are preceded by 2\u00d7 upsampling. The end of the LSTM stack is followed by a 2\u00d7 upsampling stage and a final convolutional layer, which then outputs a full-resolution mask for compositing the various transformed predictions (in the case of the CDNA and STP) and compositing against the static background (in the case of all models, including the DNA). To preserve high-resolution information, skip connections are included from LSTM 1 to conv 2 and from LSTM 3 to LSTM 7. The skip connections simply concatenate the skip layer activations and those of the preceding layer before sending them to the following layer (e.g. the input to LSTM 7 consists of the concatenation of LSTM 6 and LSTM 3).\nIn the case of the action-conditioned robot manipulation task, all three models also include as input the current state and action of the robot (corresponding to gripper pose and gripper motion command). This 10-dimensional vector is first tiled into a 8 \u00d7 8 response map with 10 channels, and then concatenated to the input into LSTM 5. The next state is predicted linearly from the current state and action, though more sophisticated prediction models could be used for more complex systems.\nThe three models differ in the form of the transformation that is applied to the previous image. The object-centric CDNA and STP models output the transformation parameters after LSTM 5. In both cases, the output of LSTM 5 is flattened and linearly transformed, either directly into filter parameters in the case of the CDNA, or through one 100-unit hidden layer in the case of the STP. There are 10 CDNA filters, which are 5\u00d7 5 in size and normalized to sum to 1 via a spatial softmax, so that each filter represents a distribution over positions in the previous image from which a new pixel value can be obtained. The STP parameters correspond to 10 3 \u00d7 2 affine transformation matrices. The transformations are applied to the preceding image to create 10 separate transformed images. The CDNA transformation corresponds to a convolution (though with the kernel being an output of the network), while the STP transformation is an affine transformation.\nThe DNA model differs from the other two in that the transformation parameters are outputted at the last layer, in the same place as the mask. This is because the DNA model outputs a transformation map as large as the entire image. For each image pixel, the model outputs a 5 \u00d7 5 convolutional kernel that can be applied to the previous image to obtain a new pixel value, similarly to the CDNA model. However, because the kernel is spatially-varying, this model is not equivalent to the CDNA. This transformation only produces one transformed image.\nAfter transformation, the transformed image(s) and the previous image are composited together based on the mask. The previous image is included as a static \u201cbackground\u201d image and, as shown in Section 5, the mask on the background image indeed tends to pick out static parts of the scene. The final image is formed by multiplying each transformed image and the background image by their mask values, and adding all of the masked images together."}, {"heading": "C Additional Experimental Results", "text": "Here we show additional experimental results.\nTo evaluate the method of [14], we trained the feedforward multiscale architecture using four of the proposed objectives. For the robot motion dataset, we added the actions to the architecture at each scale via tiling. We were unable to successfully train the model with an adversarial loss, and, as shown in Figure 10, the model trained GDL+l1 performed the best on the robot dataset. Thus, we presented the results of this model in the main evaluation."}], "references": [{"title": "Simulation as an engine of physical scene understanding", "author": ["P.W. Battaglia", "J.B. Hamrick", "J.B. Tenenbaum"], "venue": "Proceedings of the National Academy of Sciences, 110(45)", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2013}, {"title": "Scheduled sampling for sequence prediction with recurrent neural networks", "author": ["S. Bengio", "O. Vinyals", "N. Jaitly", "N. Shazeer"], "venue": "Advances in Neural Information Processing Systems, pages 1171\u20131179", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2015}, {"title": "Learning predictive models of a depth camera & manipulator from raw execution traces", "author": ["B. Boots", "A. Byravan", "D. Fox"], "venue": "International Conference on Robotics and Automation (ICRA)", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2014}, {"title": "Estimating contact dynamics", "author": ["M.A. Brubaker", "L. Sigal", "D.J. Fleet"], "venue": "International Conference on Computer Vision (ICCV)", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2009}, {"title": "Attend", "author": ["S. Eslami", "N. Heess", "T. Weber", "Y. Tassa", "K. Kavukcuoglu", "G.E. Hinton"], "venue": "infer, repeat: Fast scene understanding with generative models. arXiv preprint arXiv:1603.08575", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2016}, {"title": "Vision meets robotics: The KITTI dataset", "author": ["A. Geiger", "P. Lenz", "C. Stiller", "R. Urtasun"], "venue": "International Journal of Robotics Research (IJRR)", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2013}, {"title": "Action-reaction: Forecasting the dynamics of human interaction", "author": ["D.-A. Huang", "K.M. Kitani"], "venue": "European Conference on Computer Vision (ECCV). Springer", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2014}, {"title": "and C", "author": ["C. Ionescu", "D. Papava", "V. Olaru"], "venue": "Sminchisescu. Human3.6m: Large scale datasets and predictive methods for 3d human sensing in natural environments. PAMI, 36(7)", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2014}, {"title": "et al", "author": ["M. Jaderberg", "K. Simonyan", "A. Zisserman"], "venue": "Spatial transformer networks. In Neural Information Processing Systems (NIPS)", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2015}, {"title": "Large-scale video classification with convolutional neural networks", "author": ["A. Karpathy", "G. Toderici", "S. Shetty", "T. Leung", "R. Sukthankar", "L. Fei-Fei"], "venue": "Compuer Vision and Pattern Recognition (CVPR)", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2014}, {"title": "Adam: A method for stochastic optimization", "author": ["D. Kinga", "J. Ba"], "venue": "International Conference on Learning Representations (ICLR)", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2015}, {"title": "Autonomous reinforcement learning on raw visual input data in a real world application", "author": ["S. Lange", "M. Riedmiller", "A. Voigtlander"], "venue": "International Joint Conference on Neural Networks (IJCNN)", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2012}, {"title": "Learning physical intuition of block towers by example", "author": ["A. Lerer", "S. Gross", "R. Fergus"], "venue": "International Conference on Machine Learning (ICML)", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2016}, {"title": "Deep multi-scale video prediction beyond mean square error", "author": ["M. Mathieu", "C. Couprie", "Y. LeCun"], "venue": "International Conference on Learning Representations (ICLR)", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2016}, {"title": "Newtonian image understanding: Unfolding the dynamics of objects in static images", "author": ["R. Mottaghi", "H. Bagherinezhad", "M. Rastegari", "A. Farhadi"], "venue": "arXiv preprint arXiv:1511.04048", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2015}, {"title": "and A", "author": ["R. Mottaghi", "M. Rastegari", "A. Gupta"], "venue": "Farhadi. \"What happens if...\" learning to predict the effect of forces in images. arXiv preprint arXiv:1603.05600", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2016}, {"title": "Action-conditional video prediction using deep networks in atari games", "author": ["J. Oh", "X. Guo", "H. Lee", "R.L. Lewis", "S. Singh"], "venue": "Neural Information Processing Systems (NIPS)", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2015}, {"title": "Video (language) modeling: a baseline for generative models of natural videos", "author": ["M. Ranzato", "A. Szlam", "J. Bruna", "M. Mathieu", "R. Collobert", "S. Chopra"], "venue": "arXiv preprint arXiv:1412.6604", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2014}, {"title": "Unsupervised learning of video representations using lstms", "author": ["N. Srivastava", "E. Mansimov", "R. Salakhutdinov"], "venue": "International Conference on Machine Learning (ICML)", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2015}, {"title": "Anticipating the future by watching unlabeled video", "author": ["C. Vondrick", "H. Pirsiavash", "A. Torralba"], "venue": "CoRR, abs/1504.08023", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2015}, {"title": "Patch to the future: Unsupervised visual prediction", "author": ["J. Walker", "A. Gupta", "M. Hebert"], "venue": "Computer Vision and Pattern Recognition (CVPR)", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2014}, {"title": "Dense optical flow prediction from a static image", "author": ["J. Walker", "A. Gupta", "M. Hebert"], "venue": "International Conference on Computer Vision (ICCV)", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2015}, {"title": "Embed to control: A locally linear latent dynamics model for control from raw images", "author": ["M. Watter", "J. Springenberg", "J. Boedecker", "M. Riedmiller"], "venue": "Neural Information Processing Systems (NIPS)", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2015}, {"title": "Convolutional LSTM network: A machine learning approach for precipitation nowcasting", "author": ["S. Xingjian", "Z. Chen", "H. Wang", "D. Yeung", "W. Wong", "W. Woo"], "venue": "Neural Information Processing Systems", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2015}, {"title": "A data-driven approach for event prediction", "author": ["J. Yuen", "A. Torralba"], "venue": "European Conference on Computer Vision ", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2010}], "referenceMentions": [{"referenceID": 14, "context": "[15]).", "startOffset": 0, "endOffset": 4}, {"referenceID": 13, "context": "Prior video prediction methods have typically considered short-range prediction [14], small image patches [19], or synthethic images [17].", "startOffset": 80, "endOffset": 84}, {"referenceID": 18, "context": "Prior video prediction methods have typically considered short-range prediction [14], small image patches [19], or synthethic images [17].", "startOffset": 106, "endOffset": 110}, {"referenceID": 16, "context": "Prior video prediction methods have typically considered short-range prediction [14], small image patches [19], or synthethic images [17].", "startOffset": 133, "endOffset": 137}, {"referenceID": 8, "context": "The last approach, which we call spatial transformer predictors (STP), outputs the parameters of multiple affine transformations to apply to the previous image, akin to the spatial transfomer network previously proposed for supervised learning [9].", "startOffset": 244, "endOffset": 247}, {"referenceID": 7, "context": "Our experiments using this new robotic pushing dataset, and using a human motion video dataset [8], show that models that explicitly transform pixels from previous frames better capture object motion and produce more accurate video predictions compared to prior state-of-the-art methods based on pixel reconstruction.", "startOffset": 95, "endOffset": 98}, {"referenceID": 24, "context": "[25] constructed predictions from similar videos in a dataset.", "startOffset": 0, "endOffset": 4}, {"referenceID": 17, "context": "proposed a baseline for video prediction inspired by language models [18].", "startOffset": 69, "endOffset": 73}, {"referenceID": 18, "context": "LSTM models have been adapted for video prediction on patches [19], action-conditioned Atari frame predictions [17], and precipitation nowcasting [24].", "startOffset": 62, "endOffset": 66}, {"referenceID": 16, "context": "LSTM models have been adapted for video prediction on patches [19], action-conditioned Atari frame predictions [17], and precipitation nowcasting [24].", "startOffset": 111, "endOffset": 115}, {"referenceID": 23, "context": "LSTM models have been adapted for video prediction on patches [19], action-conditioned Atari frame predictions [17], and precipitation nowcasting [24].", "startOffset": 146, "endOffset": 150}, {"referenceID": 13, "context": "proposed new loss functions for sharper frame predictions [14].", "startOffset": 58, "endOffset": 62}, {"referenceID": 19, "context": "Prior methods generally reconstruct frames from the internal state of the model, and some predict the internal state directly, without producing images [20].", "startOffset": 152, "endOffset": 156}, {"referenceID": 21, "context": "This approach differs from recent work on optic flow prediction [22, 14], which predicts where pixels will move to.", "startOffset": 64, "endOffset": 72}, {"referenceID": 13, "context": "This approach differs from recent work on optic flow prediction [22, 14], which predicts where pixels will move to.", "startOffset": 64, "endOffset": 72}, {"referenceID": 2, "context": "predict future images of a robot arm using nonparametric kernel-based methods [3].", "startOffset": 78, "endOffset": 81}, {"referenceID": 3, "context": "Learning physics: Several works have explicitly addressed prediction of physical interactions, including predicting ball motion [4], block falling [1], the effects of forces [16, 15], future human interactions [7], and future car trajectories [21].", "startOffset": 128, "endOffset": 131}, {"referenceID": 0, "context": "Learning physics: Several works have explicitly addressed prediction of physical interactions, including predicting ball motion [4], block falling [1], the effects of forces [16, 15], future human interactions [7], and future car trajectories [21].", "startOffset": 147, "endOffset": 150}, {"referenceID": 15, "context": "Learning physics: Several works have explicitly addressed prediction of physical interactions, including predicting ball motion [4], block falling [1], the effects of forces [16, 15], future human interactions [7], and future car trajectories [21].", "startOffset": 174, "endOffset": 182}, {"referenceID": 14, "context": "Learning physics: Several works have explicitly addressed prediction of physical interactions, including predicting ball motion [4], block falling [1], the effects of forces [16, 15], future human interactions [7], and future car trajectories [21].", "startOffset": 174, "endOffset": 182}, {"referenceID": 6, "context": "Learning physics: Several works have explicitly addressed prediction of physical interactions, including predicting ball motion [4], block falling [1], the effects of forces [16, 15], future human interactions [7], and future car trajectories [21].", "startOffset": 210, "endOffset": 213}, {"referenceID": 20, "context": "Learning physics: Several works have explicitly addressed prediction of physical interactions, including predicting ball motion [4], block falling [1], the effects of forces [16, 15], future human interactions [7], and future car trajectories [21].", "startOffset": 243, "endOffset": 247}, {"referenceID": 11, "context": "In the domain of reinforcement learning, model-based methods have been proposed that learn prediction on images [12, 23], but they have either used synthetic images or instance-level models, and have not demonstrated generalization to novel objects nor accurate prediction on real-world videos.", "startOffset": 112, "endOffset": 120}, {"referenceID": 22, "context": "In the domain of reinforcement learning, model-based methods have been proposed that learn prediction on images [12, 23], but they have either used synthetic images or instance-level models, and have not demonstrated generalization to novel objects nor accurate prediction on real-world videos.", "startOffset": 112, "endOffset": 120}, {"referenceID": 16, "context": "As shown by our comparison to LSTM-based prediction designed for Atari frames [17], models that work well on synthetic domains do not necessarily succeed on real images.", "startOffset": 78, "endOffset": 82}, {"referenceID": 9, "context": "Video datasets: Existing video datasets capture YouTube clips [10], human motion [8], synthetic video game frames [17], and driving [6].", "startOffset": 62, "endOffset": 66}, {"referenceID": 7, "context": "Video datasets: Existing video datasets capture YouTube clips [10], human motion [8], synthetic video game frames [17], and driving [6].", "startOffset": 81, "endOffset": 84}, {"referenceID": 16, "context": "Video datasets: Existing video datasets capture YouTube clips [10], human motion [8], synthetic video game frames [17], and driving [6].", "startOffset": 114, "endOffset": 118}, {"referenceID": 5, "context": "Video datasets: Existing video datasets capture YouTube clips [10], human motion [8], synthetic video game frames [17], and driving [6].", "startOffset": 132, "endOffset": 135}, {"referenceID": 8, "context": "Spatial Transformer Predictors (STP): In this approach, the model produces multiple sets of parameters for 2D affine image transformations, and applies the transformations using a bilinear sampling kernel [9].", "startOffset": 205, "endOffset": 208}, {"referenceID": 13, "context": "Most existing physics and video prediction models use feedforward architectures [14, 13] or feedforward encodings of the image [17].", "startOffset": 80, "endOffset": 88}, {"referenceID": 12, "context": "Most existing physics and video prediction models use feedforward architectures [14, 13] or feedforward encodings of the image [17].", "startOffset": 80, "endOffset": 88}, {"referenceID": 16, "context": "Most existing physics and video prediction models use feedforward architectures [14, 13] or feedforward encodings of the image [17].", "startOffset": 127, "endOffset": 131}, {"referenceID": 23, "context": "To generate the motion predictions discussed above, we employ stacked convolutional LSTMs [24].", "startOffset": 90, "endOffset": 94}, {"referenceID": 13, "context": "Alternative losses, such as those presented in [14] could complement this method.", "startOffset": 47, "endOffset": 51}, {"referenceID": 7, "context": "6M dataset [8], which consists of videos of human motion.", "startOffset": 11, "endOffset": 14}, {"referenceID": 13, "context": "In both settings, we evaluate our three models described in Section 3, as well as prior models [14, 17].", "startOffset": 95, "endOffset": 103}, {"referenceID": 16, "context": "In both settings, we evaluate our three models described in Section 3, as well as prior models [14, 17].", "startOffset": 95, "endOffset": 103}, {"referenceID": 10, "context": "Training details: We trained all models using the TensorFlow library, optimizing to convergence using ADAM [11] with the suggested hyperparameters.", "startOffset": 107, "endOffset": 111}, {"referenceID": 1, "context": "For all recurrent models, we trained with and without scheduled sampling [2] and report the performance of the model with the best validation error.", "startOffset": 73, "endOffset": 76}, {"referenceID": 13, "context": "Evaluation: Prior work has proposed to evaluate video prediction using peak signal to noise ratio (PSNR) and structured similarity index (SSIM) [14].", "startOffset": 144, "endOffset": 148}, {"referenceID": 16, "context": "Figure 3: Qualitative and quantitative reconstruction performance of our models, compared with [17, 14].", "startOffset": 95, "endOffset": 103}, {"referenceID": 13, "context": "Figure 3: Qualitative and quantitative reconstruction performance of our models, compared with [17, 14].", "startOffset": 95, "endOffset": 103}, {"referenceID": 13, "context": "All models were trained for 8-step prediction, except [14], which is trained for 1-step prediction.", "startOffset": 54, "endOffset": 58}, {"referenceID": 13, "context": "To quantitatively evaluate the predictions, we measure average PSNR and SSIM, as proposed in [14].", "startOffset": 93, "endOffset": 97}, {"referenceID": 13, "context": "Unlike [14], we measure all metrics on the entire image.", "startOffset": 7, "endOffset": 11}, {"referenceID": 13, "context": "We report the performance of the feedforward multiscale model of [14] using an l1+GDL loss, which was the best performing model in our experiments \u2013 full results of the multi-scale models are in Appendix C.", "startOffset": 65, "endOffset": 69}, {"referenceID": 16, "context": "The FC LSTM model [17] reconstructs the background, lacking the representational power to reconstruct the objects in the bin.", "startOffset": 18, "endOffset": 22}, {"referenceID": 23, "context": "[24].", "startOffset": 0, "endOffset": 4}, {"referenceID": 4, "context": "as in [5]).", "startOffset": 6, "endOffset": 9}], "year": 2016, "abstractText": "A core challenge for an agent learning to interact with the world is to predict how its actions affect objects in its environment. Many existing methods for learning the dynamics of physical interactions require labeled object information. However, to scale real-world interaction learning to a variety of scenes and objects, acquiring labeled data becomes increasingly impractical. To learn about physical object motion without labels, we develop an action-conditioned video prediction model that explicitly models pixel motion, by predicting a distribution over pixel motion from previous frames. Because our model explicitly predicts motion, it is partially invariant to object appearance, enabling it to generalize to previously unseen objects. To explore video prediction for real-world interactive agents, we also introduce a dataset of 50, 000 robot interactions involving pushing motions, including a test set with novel objects. In this dataset, accurate prediction of videos conditioned on the robot\u2019s future actions amounts to learning a \u201cvisual imagination\u201d of different futures based on different courses of action. Our experiments show that our proposed method not only produces more accurate video predictions, but also more accurately predicts object motion, when compared to prior methods.", "creator": "LaTeX with hyperref package"}}}