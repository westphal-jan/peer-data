{"id": "1610.06601", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "19-Nov-2015", "title": "An Approach to Speed-up the Word Sense Disambiguation Procedure through Sense Filtering", "abstract": "in 2013 paper, we are going to focus on speed up of the word sense disambiguation procedure toward filtering the relevant senses of taking ambiguous word through part - of - speech tagging. first, this proposed approach performs fast part - of - speech tagging strategy after the disambiguation procedure using fuzzy approximation. as a result, the exact part - of - speech of the ambiguous word on a particular text segment is derived. in the design stage, only those dictionary definitions ( glosses ) are retrieved from an online dictionary, which are associated with that particular part - of - speech to disambiguate the exact sense of the ambiguous word. of the training phase, scientists have used brown corpus for part - of - speech tagging a wordnet as an online dictionary. both proposed approach reduces the execution periods upto half ( approximately ) of the normal execution time beside said text, containing around unspecified word. not only however, we have found several instances, where the correct sense of an ambiguous word is found for using the short - of - speech tagging before interactive disambiguation procedure.", "histories": [["v1", "Thu, 19 Nov 2015 11:29:10 GMT  (224kb)", "http://arxiv.org/abs/1610.06601v1", "13 pages in International Journal of Instrumentation and Control Systems (IJICS) Vol.3, No.4, October 2013"]], "COMMENTS": "13 pages in International Journal of Instrumentation and Control Systems (IJICS) Vol.3, No.4, October 2013", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["alok ranjan pal", "anupam munshi", "diganta saha"], "accepted": false, "id": "1610.06601"}, "pdf": {"name": "1610.06601.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Alok Ranjan Pal", "Anupam Munshi", "Diganta Saha"], "emails": [], "sections": [{"heading": null, "text": "DOI : 10.5121/ijics.2013.3403 29\nIn this paper, we are going to focus on speed up of the Word Sense Disambiguation procedure by filtering the relevant senses of an ambiguous word through Part-of-Speech Tagging. First, this proposed approach performs the Part-of-Speech Tagging operation before the disambiguation procedure using Bigram approximation. As a result, the exact Part-of-Speech of the ambiguous word at a particular text instance is derived. In the next stage, only those dictionary definitions (glosses) are retrieved from an online dictionary, which are associated with that particular Part-of-Speech to disambiguate the exact sense of the ambiguous word.\nIn the training phase, we have used Brown Corpus for Part-of-Speech Tagging and WordNet as an online dictionary. The proposed approach reduces the execution time upto half (approximately) of the normal execution time for a text, containing around 200 sentences. Not only that, we have found several instances, where the correct sense of an ambiguous word is found for using the Part-of-Speech Tagging before the Disambiguation procedure."}, {"heading": "Key words", "text": "Word Sense Disambiguation (WSD), Part-of-Speech Tagging (POS), WordNet, Lesk Algorithm, Brown Corpus."}, {"heading": "1. INTRODUCTION", "text": "In human languages all over the world, there are a lot of words having different meanings depending on the contexts. Word Sense Disambiguation (WSD) [1-8] is the process for identification of actual meaning of an ambiguous word based on distinct situations. As for example, the word \u201cBank\u201d has several meanings, such as \u201cplace for monitory transaction\u201d, \u201creservoir\u201d, \u201cturning point of a river\u201d, and so on. Such words with multiple meanings are ambiguous in nature. The process to decide the appropriate meaning of an ambiguous word for a particular context is known as Word Sense Disambiguation. People have inborn ability to sense\nthe actual meaning of an ambiguous word in a particular context. But the machines do this job by some pre-defined rules or statistical methods.\nTwo types of learning procedures are commonly used for Word Sense Disambiguation procedure. First, Supervised Learning, where a learning set is considered for the system to predict the actual meaning of an ambiguous word using a few sentences, having a specific meaning for that particular word. A system finds the actual meaning of an ambiguous word for a particular context based on that defined learning set. In this method, learning set is created manually. As a result, it is unable to generate fixed rules for all the systems. Therefore, the actual meaning of an ambiguous word in a given context can\u2019t be detected always. Supervised learning derives partially correct result, if the learning set does not contain sufficient information for all possible senses of the ambiguous word. Even, it fails to show the result, if there is no information in the predefined database.\nIn Unsupervised learning, an online dictionary is taken as learning set avoiding the inefficiency of Supervised learning. \u201cWordNet\u201d[9-15] is the most widely used online dictionary maintaining \u201cwords and related meanings\u201d as well as \u201crelations among different words\u201d.\nBut in Unsupervised Learning procedures, commonly used for Sense Disambiguation, all the dictionary definitions (glosses) of the ambiguous word are considered from the Dictionary. These glosses are of different types of Part-of-Speech (POS), such as noun, verb, adjective and adverb. In case of commonly used Unsupervised Learning procedures like Lesk Algorithm [16, 17], all the glosses of different Part-of-Speech are considered, which takes some unnecessary additional execution time. As an ambiguous word carries a specific Part-of-Speech in a particular context, we have gone through Part-of-Speech Tagging [18-31] before the WSD procedure. As a result, only the glosses of the related Part-of-Speech are considered.\nUsing this approach, we have observed two types of betterment in the output. First, the execution of the disambiguation procedure becomes faster and second, as the relevant glosses are filtered, accuracy in disambiguated sense is increased.\nOrganization of rest of the paper is as follows: Section 2 is about the Theoretical Background of the proposed approach; Section 3 describes the Implementation Background; Section 4 describes the Proposed Approach in detail; Section 5 depicts the experimental results along with comparison; Section 6 represents Conclusion of the paper."}, {"heading": "2. THEORETICAL BACKGROUND", "text": "The most common Unsupervised WSD algorithm is Lesk Algorithm, which uses WordNet as an online dictionary. The algorithm is described below in brief:"}, {"heading": "2.1 Preliminaries of Lesk Algorithm", "text": "Typical Lesk Algorithm selects a short phrase from the sentence containing an ambiguous word. Then, dictionary definition (gloss) of each of the senses of the ambiguous word is compared with glosses of the other words in that particular phrase. An ambiguous word is being assigned with\nthe particular sense, whose gloss has the highest number of overlaps (number of common words) with the glosses of the other words of the phrase.\nExample 1: \u201cRam and Sita everyday go to bank for withdrawal of money.\u201d Here, the phrase is taken depending on window size (number of consecutive words). If window size is 3, then the phrase would be \u201cgo bank withdrawal\u201d. All other words are being discarded as \u201cstop words\u201d.\nConsider the glosses of all words presented in that particular phrase are as follows: Suppose, the number of senses of \u201cBank\u201d is 2 such as \u2018X\u2019 and \u2018Y\u2019 (refer Table 1). The number of senses of \u201cGo\u201d is 2 such as \u2018A\u2019 and \u2018B\u2019 (refer Table 2). And the number of senses of \u201cWithdrawal\u201d is 2 such as \u2018M\u2019 and \u2018N\u2019 (refer Table 3)."}, {"heading": "Keyword Probable sense", "text": ""}, {"heading": "Word Probable sense", "text": "Consider the word \u201cBank\u201d as a keyword. Number of common words is measured in between a pair of sentences."}, {"heading": "Pair of Sentences Common number of Words", "text": "Table 4 shows all possibilities using sentences from Table 1, Table 2, Table 3, and number of words common in each possible pair.\nFinally, two senses of the keyword \u201cBank\u201d have their counter readings (refer Table 4) as follows:\nX counter, XC = A\u2019 + B\u2019 + M\u2019 + N\u2019.\nY counter, YC = A\u201d + B\u201d + M\u201d + N\u201d.\nTherefore, higher counter value would be assigned as the sense of the keyword \u201cBank\u201d in the particular sentence. This strategy believes that surrounding words have the same senses as of the keyword."}, {"heading": "2.2 Simple (unsmoothed) N-gram and Bigram Model", "text": "N-gram [32] is used to compute the probability of a complete string of words (which can be represented either as w1\u2026.wn or w1 n ). If each word, occurring in its correct location, is considered as an independent event, the probability is represented as: P (W1, W2,\u2026\u2026,Wn-1, Wn).\nThe chain rule to decompose the probability would be:\nP (W1 n )=P(W1)P(W2|W1)P(W3|W1 2 )\u2026.P(Wn|W1 n-1 ).\nBut, computing the probability like P(Wn|W1 n-1 ) is not easy for a long sequence of preceding words. The Bigram model approximates the probability of a word with respect to all the previous words P(Wn|W1 n-1 ) by the conditional probability of the just preceding word P(Wn | Wn-1).\nFor example, instead of computing the probability P(rabbit | Just the other day I saw a), the probability is approximated by P(rabbit | a)."}, {"heading": "3. IMPLEMENTATION BACKGROUND", "text": "This paper adopts the basic ideas from typical Lesk algorithm by introducing some modifications."}, {"heading": "3.1 Simplified Lesk Approach", "text": "In this approach, the glosses of only the keyword are considered for a specific sentence instead of all words. Number of common words is being calculated between the specific sentence and each dictionary definition of the particular keyword.\n\u2022 Consider, earlier mentioned sentence of \u201cExample 1\u201d as follows: \u201cRam and Sita everyday go to bank for withdrawal of money.\u201d\n\u2022 The instance sentence would be \u201cRam Sita everyday go bank withdrawal money\u201d after discarding the \u201cstop words\u201d like \u201cto\u201d, \u201cfor\u201d and so on.\n\u2022 If \u201cBank\u201d is considered as the keyword and its two senses are X and Y (refer Table 1). Then, number of common words should be calculated between the instance sentence and each probable senses of \u201cBank\u201d (refer Table 1).\n\u2022 Number of common words found would be assigned to the counter of that sense of \u201cBank\u201d. Consider X-counter has the value I\u2019 and Y-counter has the value I\u201d.\n\u2022 Finally, the higher counter value would be assigned as the sense of the keyword for the particular instance sentence.\n\u2022 The dictionary definition (gloss) of the keyword would be taken from \u201cWordNet\u201d. \u2022 This approach also believes that entire sentence represents a particular sense of the keyword."}, {"heading": "4. PROPOSED APPROACH", "text": "The proposed approach derives the actual sense of an ambiguous word in two steps. First, the input text is passed through the POS Tagging module, where the POS of the ambiguous word is derived. Second, the input sentence, containing the ambiguous word with derived POS is passed to WSD module, where the disambiguation operation is performed using Simplified Lesk Algorithm.\nAs the POS of the ambiguous word is derived before WSD operation, the selected dictionary definitions (glosses) are filtered from all the instances present in WordNet (as Noun, Verb, Adjective and Adverb instances). As a result, the disambiguation procedure becomes faster.\nNot only that, as the POS of the ambiguous word is derived before the WSD operation, the disambiguation algorithm is applied on only the relevant glosses. As a result, the accuracy of the\ndisambiguation algorithm is increased. The detail explanation of the proposed approach is given below:\nAlgorithm 1: This algorithm (refer Figure 1) describes the overall approach. The first module is responsible for POS Tagging and the second module is responsible for WSD task. Input: Input text, containing the ambiguous word. Output: Disambiguated sense of the ambiguous word.\nStep 1: Input text, containing the ambiguous word is passed to Module 1 for finding the POS of\nthe ambiguous word.\nStep 2: Simplified Lesk Algorithm is applied to find the actual sense of the ambiguous word,\ntaking the derived POS into account.\nStep 3: Stop.\nModule 1: Algorithm 2:\nThis algorithm (refer Figure 2) finds the POS of the ambiguous word using Brown Corpus. The maximum Time Complexity of the algorithm is O(n 2 ), which is evaluated at step 2. Input: Sentence, containing the ambiguous word.\nOutput: POS of the ambiguous word.\nStep 1: Input sentence, containing the ambiguous word is taken. Step 2: Bigram approximation of the ambiguous word is found using the XML data source of the\nBrown Corpus.\nStep 3: POS of the ambiguous word is derived from the largest approximation value. Step 4: Stop.\nModule 2: Algorithm3: This algorithm (refer Figure 3) derives the actual sense of an ambiguous word using the Simplified Lesk Algorithm. Time Complexity of the algorithm is O(n 3 ), as finding the total number of overlaps between a particular gloss and the input sentence is of O(n 2 ) complexity and this procedure is performed for all the n number of glosses.\nInput: Ambiguous word with derived POS.\nOutput: Disambiguated sense of the ambiguous word.\nStep 1: The ambiguous word is taken. Step 2: Only those dictionary definitions (glosses) are considered from WordNet, which belong to\nthe same POS domain w. r. t. to the POS of the ambiguous word.\nStep 3: Overlaps are encountered between the glosses and the input sentence itself. Step 4: The actual sense of the ambiguous word is derived from the maximum number of\noverlaps for an instance.\nStep 5: Stop.\nThe proposed approach gives better result regarding the execution time and the accuracy of the result, which is described in the next section."}, {"heading": "5. OUTPUT AND DISCUSSION", "text": "The algorithm is tested on more than 100 texts of different lengths and categories. Average length of the texts is of 200 sentences and two ambiguous words are selected for testing, \"Bank\" and \"Plant\".\nNext, the Simplified Lesk Algorithm is applied on the input text, containing the POS-tagged ambiguous word. As the POS of the ambiguous word is derived earlier, only those dictionary definitions are selected from WordNet for WSD process, which belong to the same POS domain w. r. t. the POS of the ambiguous word. As a result, the execution time of the WSD process becomes less (refer Table 5).\nIt is also observed that, as the relevant glosses are considered for the WSD process, accuracy of the disambiguated sense is increased (refer Text no. 10). Some of the results for target word \"Bank\" are given in Table 5. All the sample texts are taken from \"www.wikipedia.com\".\nNote 1: D-sense means Disambiguated sense, E-time means Execution time, ms means Mille Second.\nIn the following sample test (Text no. 10), it is depicted that, in the given input text the ambiguous word \"Plant\" carries the actual sense (decided by human) as \"Living Organism\", which is in noun sense, but when the algorithm runs without POS Tagging, it derives the sense \"Contact\", which is in verb sense and obviously it is a wrong sense for this context according to human decision. This text is also taken from \"www.wikipedia.com\". Accuracy measurement of WSD procedure using the proposed approach is described below with a sample text."}, {"heading": "Text no. 10:", "text": "Plants, also called green plants, are living organisms of the kingdom Plantae including such multi cellular groups as flowering plants, conifers, ferns and mosses, as well as, depending on definition, the green algae, but not red or brown seaweeds like kelp, nor fungi or bacteria. Green plants have cell walls with cellulose and characteristically obtain most of their energy from sunlight via photosynthesis using chlorophyll contained in chloroplasts, which gives them their green color. Some plants are parasitic and may not produce normal amounts of chlorophyll or photosynthesize. Plants are also characterized by sexual reproduction, modular and indeterminate growth, and an alternation of generations, although asexual reproduction is common, and some plants bloom only once while others bears only one bloom.\nPrecise numbers are difficult to determine, but as of 2010, there are thought to be 300\u2013315 thousand species of plants, of which the great majority, some 260\u2013290 thousand, are seed plants. Green plants provide most of the world's molecular oxygen and are the basis of most of the earth's ecologies, especially on land. Plants described as grains, fruits and vegetables form mankind's basic foodstuffs, and have been domesticated for millennia. Plants enrich our lives as flowers and ornaments. Until recently and in great variety they have served as the source of most of our medicines and drugs. Their scientific study is known as botany."}, {"heading": "Output:", "text": "Target word: Plant. Actual sense: Living Organism (Noun). Derived sense with POS Tagging: Living Organism (Noun). Derived sense without POS Tagging: Contact (Verb)."}, {"heading": "6. CONCLUSION AND FUTURE WORK", "text": "The proposed approach speeds up the WSD procedure by filtering the only relevant glosses and increases the accuracy of the WSD procedure as well. The execution time differences between the two cases (with and without POS Tagging procedure) might be increased, if few system calls and other system related tasks are handled properly. The obvious operations (loop, memory allocation, condition check, function call etc.) for POS Tagging took some time, which is included in the cited result. Otherwise, the actual time difference could have been better."}], "references": [], "referenceMentions": [], "year": 2013, "abstractText": "In this paper, we are going to focus on speed up of the Word Sense Disambiguation procedure by filtering<lb>the relevant senses of an ambiguous word through Part-of-Speech Tagging. First, this proposed approach<lb>performs the Part-of-Speech Tagging operation before the disambiguation procedure using Bigram<lb>approximation. As a result, the exact Part-of-Speech of the ambiguous word at a particular text instance is<lb>derived. In the next stage, only those dictionary definitions (glosses) are retrieved from an online<lb>dictionary, which are associated with that particular Part-of-Speech to disambiguate the exact sense of the<lb>ambiguous word. In the training phase, we have used Brown Corpus for Part-of-Speech Tagging and WordNet as an online<lb>dictionary. The proposed approach reduces the execution time upto half (approximately) of the normal<lb>execution time for a text, containing around 200 sentences. Not only that, we have found several instances,<lb>where the correct sense of an ambiguous word is found for using the Part-of-Speech Tagging before the<lb>Disambiguation procedure.", "creator": "PScript5.dll Version 5.2.2"}}}