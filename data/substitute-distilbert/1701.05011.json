{"id": "1701.05011", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Jan-2017", "title": "Assessing User Expertise in Spoken Dialog System Interactions", "abstract": "identifying the level of expertise surrounding its users is important for a system since it can lead to a better interaction through retrieval techniques. furthermore, this information can be used in offline processes of root cause analysis. however, not much effort has been put into automatically identifying the level health expertise of an user, especially in dialog - based interactions. in this paper we present an approach based on a specific set of task related features. based on the distribution of the features adopted the two classes - novice and scout - hunter used random forests as candidate classification approach. later, we used a support inventory scheduling diagram, in 2009 to perform preliminary result comparison. by applying these approaches on data from a real system, let's go, we obtained preliminary results that we consider positive, given the difficulty of the task and the severity of competing types for information.", "histories": [["v1", "Wed, 18 Jan 2017 11:10:59 GMT  (28kb)", "http://arxiv.org/abs/1701.05011v1", "10 pages"]], "COMMENTS": "10 pages", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["eug\\'enio ribeiro", "fernando batista", "isabel trancoso", "jos\\'e lopes", "ricardo ribeiro", "david martins de matos"], "accepted": false, "id": "1701.05011"}, "pdf": {"name": "1701.05011.pdf", "metadata": {"source": "CRF", "title": "Assessing User Expertise in Spoken Dialog System Interactions", "authors": ["Eug\u00e9nio Ribeiro", "Fernando Batista", "Isabel Trancoso", "Jos\u00e9 Lopes", "Ricardo Ribeiro", "David Martins de Matos"], "emails": ["eugenio.ribeiro@l2f.inesc-id.pt"], "sections": [{"heading": null, "text": "ar X\niv :1\n70 1.\n05 01\n1v 1\n[ cs\n.C L\n] 1\nKeywords: user expertise \u00b7 Let\u2019s Go \u00b7 SVM \u00b7 Random Forest"}, {"heading": "1 Introduction", "text": "The users of a dialog system have different levels of expertise, that is, knowledge of the system\u2019s capabilities and experience using it. Thus, identifying the level of expertise of a user is important for a dialog system, since it provides cues for adaptation which can improve dialog flow and the overall user satisfaction. For instance, by identifying a novice user, the system may provide help on the first signs of struggle and adapt its prompts to provide further information. Also, user expertise information can be used to adapt the system\u2019s parameters, such as Automatic Speech Recognition (ASR) timeout values, reducing the number of misinterpretations and interruptions. Furthermore, it can be used in offline processes to identify problems caused by lack of expertise, which is important for the development of better dialog systems.\nIn this article we present an analysis of different features and how they can be used to identify the level of expertise of a user on Let\u2019s Go [15] data. The remaining sections are structured as follows: Section 2 presents related work on\n2 user expertise with dialog systems. Section 3 lists relevant feature classes for this task. Section 4 describes the datasets, the specific features extracted, and the classification approaches. Results are presented and discussed in Section 5, and, finally, Section 6 states the achieved conclusions and suggests paths for future work."}, {"heading": "2 Related Work", "text": "A system that behaves the same way for all users, independently of their expertise, may not provide a truly usable interface for any of them. By knowing the level of expertise of its users, a system could improve the quality of the interaction through adaptation techniques based on that level [13]. However, not much effort has been put into identifying the level of expertise of a user, especially in dialog-based interactions.\nHjalmarsson [9] analyzed dialog dynamics and discussed the utility of creating adaptive spoken dialog systems and individual user models. She suggests that such models can be created using both rule-based and statistical approaches [8]. Given the correct set of rules, rule-based models have good performance on specific tasks. However, they must be handcrafted from the intuition of the designer or experts, which is a time-consuming process. Thus, when annotated data is available, statistical models are a better option. The author suggests Bayesian Networks, Reinforcement Learning, and Decision Trees as promising approaches for the task.\nHassel and Hagen [7] developed an automotive dialog system that adapts to its users\u2019 expertise. However, it does not attempt to identify each user\u2019s expertise, but rather assumes that every user is a novice and then adapts over time. The adaptation is task-based and controlled by the number of successful attempts and the time since the last execution of that task.\nJokinen and Kanto [10] used user expertise modelling to enable the adaptation of a speech-based e-mail system. They distinguish three levels of expertise \u2013 Novice, Competent, and Expert \u2013, a subset of the five proposed by Dreyfus and Dreyfus [4] in their studies about the behaviour of expert systems. The developed models have two components \u2013 online and offline. The first tracks the current user session and provides cues for system adaptation, accordingly. The latter is based on statistical event distributions created from all sessions of a user and serves as a starting point for the next session. In terms of features, a small set is used, consisting on the number of timeouts, interruptions, and help requests, as well as the number of times a given task was performed, or a specific system dialog act was invoked."}, {"heading": "3 Relevant Features", "text": "Since expertise depends on the task being performed, it cannot be identified by large sets of generic acoustic features such as the ones extracted by openSMILE [5]. Thus, a small set of task oriented features must be devised. These\n3 features can be clustered into different categories, according to their origin and what aspects they intend to capture. In the following sections we describe each of these categories."}, {"heading": "3.1 Interruptions", "text": "Expert users may interrupt the system when they are aware of the complete dialog flow. However, this is not a good approach when system utterances are confirmation prompts which only include the information to be confirmed in the end. In this case, interruptions usually signal a novice user. Furthermore, cases when the system interrupts the user can also reveal a novice user who uses long sentences or pauses that exceed the system\u2019s waiting times."}, {"heading": "3.2 Delays", "text": "Negative delays between the system and user utterances mean that an interruption occurred, which has the previously described implications. On the other hand, long delays suggest that the user is still processing the system\u2019s utterance and is unsure about what to say and, thus, may reveal inexperience."}, {"heading": "3.3 Durations", "text": "Long durations are typically more discriminative than short ones and may suggest inexperience. For instance, a long call usually means that something went wrong during the dialog. Long utterances also suggest inexperience, as they are more prone to recognition errors and interruptions by the system."}, {"heading": "3.4 Speech Rate", "text": "Speech rate is also a possible indicator of the level of expertise of a user since both high and low speech rates may lead to communication problems. While high speech rates lead to higher error rates in recognition, low speech rates are related to paused speeches, which are more prone to be interrupted by the system. Thus, expert users usually keep a balanced speech rate."}, {"heading": "3.5 Help Requests", "text": "When a user is new to a system and unsure how it works, he or she typically asks for help, revealing inexperience. This is especially clear in cases when the system offers help and the user immediately accepts it. Unfortunately, some systems do not provide help functionality or the user is not aware it exists."}, {"heading": "4 Experimental Setup", "text": "This section describes our experimental setup, starting with the used datasets. Next, the used features and their distribution in the training dataset are thoroughly presented. After that, the used classification and evaluation approaches are described.\n4"}, {"heading": "4.1 Datasets", "text": "We explored user expertise on data extracted from interactions with the Let\u2019s Go Bus Information System [15], which provides information about bus schedules, through spoken telephonic interaction with a dialog system. This system has been running for many years and has experienced changes over time. Thus, the characteristics of the data differ according to when it was obtained.\nIn our experiments we used the LEGO [16] corpus. This corpus is a subset of 347 Let\u2019s Go calls during the year of 2006. The corpus contains annotations relevant for the user level of expertise identification task, such as barge-in information and durations. In terms of the level of expertise, the original corpus is not annotated. Thus, we annotated each call with that information using two labels \u2013 Expert and Novice. Out of the 347 calls, 80 users were labeled as Expert and 235 as Novice. The remaining calls were impossible to annotate since the user did not interact with the system. We used this dataset for analyzing the distribution of different features and as training data for the classification task.\nIn addition to the 2006 data, we also looked into a small set of 80 calls from 2014 data of the Let\u2019s Go corpus. This set was annotated for expertise at KTH using the same two labels \u2013 Expert and Novice [11]. The audio files for all but one of calls are accompanied by the logs of the system, which provide important information for feature extraction. Of the 79 calls, 42 users were labeled as Expert and 37 as Novice. The reported Cohen\u2019s Kappa for the annotator agreement was 0.73, which is usually considered good. However, we also annotated the 79 calls, labeling 31 users as Expert and 48 as Novice, obtaining an agreement of 0.43 with the original annotation, which is usually considered moderate. We used the 56 calls with agreement to assess the generalization capabilities of our classifiers."}, {"heading": "4.2 Features", "text": "In Section 3 we defined a set of feature classes that are relevant for identifying the level of expertise of a user. In this section we describe the specific features that we were able to extract from the datasets. Furthermore, for the training dataset, LEGO, we perform an analysis of the distributions of the features among the data, in order to perform a comparison with the previously defined expectations. Table 1 presents these distributions.\nInterruptions The LEGO corpus is annotated with user barge-in information. Thus, we were able to extract the number of user barge-ins per dialog. Table 1 shows that novice users are more prone to interrupt the system, with an average of 5 barge-ins per dialog. This was expected, since most of the system utterances in the corpus are of the kind that state information to be confirmed in the final words and, thus, should not be interrupted. However, these statistics did not take the length of the dialog into account. Thus, we calculated the user bargein rate as the percentage of exchanges containing user barge-ins. The previous results were confirmed, as, on average, novice users barged-in on 16% of the exchanges, while experts only barged-in on 10% of the exchanges. The median\n5\nvalues of 15% and 10% for novice and expert users, respectively, also support the hypothesis. Furthermore, only novice users have barge-in rates over 30%. Information extracted from the first turn is not as discriminative, as around 60% of the users barged-in on the first turn, independently of the class. However, the first system utterance is a fixed introduction, which encourages expert users to barge-in, in order to skip to important parts of the dialog.\nOn Let\u2019s Go 2014, the barge-in information was extracted from the interaction logs.\nDelays LEGO annotations include the duration of each user utterance, as well as the time when each exchange starts. However, each exchange starts with the system utterance, for which the duration is not annotated. Thus, we were not able to obtain delay information for most exchanges. The only exception was the first exchange, since the system utterance is fixed and, thus, so is its duration \u2013 10.25 seconds. In this case, we calculated the delay as the difference between the time when the user utterance starts and the time when the system utterance ends. As expected, the results presented in Table 1 suggest that novice users take longer to answer than expert users. Furthermore, when only positive delay values are taken into account, the discrepancy between the two classes is even more evident.\nOn the 2014 data, we used a similar approach to obtain the first turn delay. In this case, the duration of the first system utterance is 13.29 seconds. The remaining information required to calculate the delay was obtained from the interaction logs.\n6 Durations The LEGO corpus is annotated in terms of duration of user utterances, as well of the whole call. However, a few of the utterances are wrongly annotated. Nonetheless, we were able to compute the average user utterance duration per dialog. As expected, novice users tend to use longer utterances and are much less consistent than expert users. There are no expert users with average utterance durations over 3 seconds. In terms of the whole call, the same conclusions can be drawn, both in terms of time duration and number of exchanges, as novice users have higher values for all the measures. While most calls by expert users last less than 2 minutes, calls by novice users have a wider distribution. As for the duration of the first utterance, on average, novice users still use longer utterances. However, that is not true in terms of median value. Nonetheless, standard deviation for novice users is higher than the average value, which suggests that novice users adopt unpredictable behaviors.\nWe obtained duration information from 2014 data directly from the audio files, using SoX [1].\nSpeech Rate We extracted the speech rate in phones per second from each user utterance of the LEGO corpus and used those values to calculate the average speech rate for each dialog. The phones for each utterance were obtained using the neural networks included in the AUDIMUS [12] ASR system. Table 1 shows similar average and median values for both classes, around 15 phones per second. However, expert users are more steady, which leaves the tails of the distribution for novice users only. Looking only at the first user utterance, average and median values are even closer for both classes. Nonetheless, the tails of the distribution are still reserved for novice users only, although the expert users are slightly less steady. The same extraction procedure was applied on 2014 data.\nHelp Requests From the existing information, we were able to extract the number of help requests detected by the system during each LEGO dialog. As expected, only novice users asked for help, with an average of 0.27 help requests per dialog. 23% of novice users asked for help at least once and up to 3 times. Furthermore, 17% of the novice users asked for help on the first turn.\nOn the 2014 data, we obtained the number of help requests from the dialog transcriptions, by looking for the help keyword or the zero key on user utterances."}, {"heading": "4.3 Classification", "text": "Distinguishing between novice and expert users is a binary classification task. From the multiple classification approaches that could be used, we opted Support Vector Machines (SVMs)[3], since it is a widely used approach and typically produces acceptable results, and Random Forest (RF) [2], an approach based on decision trees, which are indicated for this task, given the distribution of our features among the two classes.\nTo train our SVMs, we took advantage of the Sequential Minimal Optimization (SMO) algorithm [14] implementation provided by the Weka Toolkit [6]. We used the linear kernel and kept the C parameter with its default 1.0 value.\n7 We opted for an RF approach due to its improved performance when compared to a classic decision tree algorithm. We also used the implementation provided by the Weka Toolkit to train our RFs. We used 1000 as the number of generated trees, since it provided a good trade-off between training time and classification accuracy."}, {"heading": "4.4 Evaluation", "text": "Since there is no standard partition of the LEGO corpus into training and testing sets, we obtained results using 10-fold cross-validation. Furthermore, we used the data from 2014 to assess the generalization capabilities of our classifiers.\nIn terms of measures, we use Accuracy and the Kappa Statistic since they are the most indicated measures to evaluate performance and relevance on this task. Accuracy is given by the ratio between the number of correct predictions and the total number of predictions. The Kappa Statistic gives the weighted agreement between the predictions of the classifier and the gold standard, in relation to those of a chance classifier."}, {"heading": "5 Results", "text": "Since the LEGO dataset is highly unbalanced, we balanced it using the Spread Subsample filter provided by the Weka Toolkit. Still, we performed experiments on both the balanced and unbalanced data. Table 2 presents the results obtained using each set of features independently, as well as different combinations. The First Turn set combines the features extracted from the first turn only, while the Global set combines the features extracted from the whole dialog. The All set combines the two previous sets. The Selected set is obtained by applying the Best First feature selection algorithm, provided by the Weka Toolkit, to the All set.\n8 The SVMs classification approach performed poorly on the unbalanced dataset, never surpassing a chance classifier. However, the RF approach achieved 80% accuracy using the Selected feature set, which represents an improvement of 6 percentage points. Given the difficulty and subjectivity of the task, the Kappa coefficient of 0.40 should not be disregarded.\nOn the balanced dataset, both the SVM and RF approaches were able to surpass the chance classifier. Still, similarly to to what happened on the unbalanced dataset, the RF approach performed better. Using all the available features, it achieved 79% accuracy, which represents an improvement of 8 percentage points over the SVM counterpart and 29 percentage points over the chance classifier. The Kappa coefficient of 0.59 is 50% higher than the one obtained for the unbalanced dataset, in spite of facing the same concerns. In this version of the dataset, feature selection did not improve the results.\nThe First Turn feature set is the most relevant for expertise level identification in real time. Using this set, an accuracy of 77% was achieved on the unbalanced dataset, which represents an improvement of 3 percentage points over the chance classifier. On the balanced dataset, the RF approach was able to improve the results of a chance classifier by 21 percentage points and achieve a Kappa coefficient of 0.42. However, the SVM classifier performed poorly. Overall, this means that it is not easy to identify the level of expertise of a user based solely on the first turn of the dialog. Still, a preliminary classification can be obtained to start guiding the system towards user adaptation, and improved as the dialog flows.\nIn terms of the individual feature sets, duration related features are the most important for the RF approach on both versions of the dataset. On the balanced dataset, interruption and help related features also provide important information. For the SVM approach, the important features remain the same but the order of importance is inverted.\nTable 3 presents the results obtained on Let\u2019s Go 2014 data by the classifiers trained on the balanced LEGO corpus. We do not show the rows related to feature categories that did not provide relevant results. We can see that, in this case, the SVM approach surpassed the RF one, achieving 66% accuracy and a Kappa coefficient of 0.33, using the Selected feature set. This represents an improvement of 11 percentage points over the chance classifier. As for the RF approach, although its accuracy using the Selected feature set is just two percentage points below the SVM approach, its Kappa coefficient of 0.22 is much lower and is surpassed, although only slightly, by the 0.23 obtained by using only help related features. Overall, this means that the RF classifiers, which performed better on the LEGO corpus, have less generalization capabilities than the SVM ones. This explains the negative results obtained by the RF classifier using the Global feature set, as the differences between both datasets are more noticeable when looking at the dialogs as a whole than when just looking at first turns.\n9"}, {"heading": "6 Conclusions", "text": "In this article we presented an approach for automatically distinguishing novice and expert users based on a specific set of task related features. Given the distributions of the features, a classification approach based on decision trees was indicated. This was confirmed when the RF approach outperformed the widely used SVMs on both versions of the LEGO corpus.\nSince this is a relatively unexplored task and the dataset was not previously annotated for expertise, we cannot compare our results with other work. Nonetheless, we believe that the obtained results are positive, since our approach focused on identifying the level of expertise from a single session, without previous information about the user, which is a difficult task.\nFurthermore, we were also able to obtain relevant results using features extracted only from the first turn of each dialog. This is important for a fast adaptation of the system to the user\u2019s level of expertise, as it provides a preliminary classification of that level, which can be improved as the dialog flows, through the accumulation of the results of all turns.\nOn the downside, the results obtained on the data from Let\u2019s Go 2014 were not as satisfactory, with the RF classifiers revealing less generalization capabilities than the SVM ones.\nIn terms of future work, we believe that it would be important to obtain more annotated data, in order to train more reliable classifiers, with improved generalization capabilities."}, {"heading": "Acknowledgements", "text": "This work was supported by national funds through Fundac\u0327a\u0303o para a Cie\u0302ncia e a Tecnologia (FCT) with reference UID/CEC/50021/2013, by Universidade de Lisboa, and by the EC H2020 project RAGE under grant agreement No 644187."}], "references": [{"title": "Random Forests", "author": ["L. Breiman"], "venue": "Machine Learning 45(1), 5\u201332", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2001}, {"title": "Support-Vector Networks", "author": ["C. Cortes", "V. Vapnik"], "venue": "Machine Learning. pp. 273\u2013 297", "citeRegEx": "3", "shortCiteRegEx": null, "year": 1995}, {"title": "Mind over Machine: The Power of Human Intuition and Expertise in the Era of the Computer", "author": ["H.L. Dreyfus", "S.E. Dreyfus"], "venue": "The Free Press, New York, NY, USA", "citeRegEx": "4", "shortCiteRegEx": null, "year": 1986}, {"title": "Recent Developments in openSMILE, the Munich Open-source Multimedia Feature Extractor", "author": ["F. Eyben", "F. Weninger", "F. Gross", "B. Schuller"], "venue": "Proceedings of the 21st ACM International Conference on Multimedia. pp. 835\u2013838", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2013}, {"title": "The WEKA Data Mining Software: An Update", "author": ["M. Hall", "E. Frank", "G. Holmes", "B. Pfahringer", "P. Reutemann", "I.H. Witten"], "venue": "SIGKDD Exploration Newsletter 11(1), 10\u201318", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2009}, {"title": "Adaptation of an Automotive Dialogue System to Users\u2019 Expertise and Evaluation of the System", "author": ["L. Hassel", "E. Hagen"], "venue": "Language Resources and Evaluation 40(1), 67\u201385", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2006}, {"title": "Adaptive Spoken Dialogue Systems (2005), available at http://www.speech.kth.se/~rolf/NGSLT/gslt_papers_2004/annah_termpaper_05.pdf on", "author": ["A. Hjalmarsson"], "venue": null, "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2015}, {"title": "Towards User Modelling in Conversational Dialogue Systems: A Qualitative Study of the Dynamics of Dialogue Parameters", "author": ["A. Hjalmarsson"], "venue": "Proceedings of INTERSPEECH 2005. pp. 869\u2013872", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2005}, {"title": "User Expertise Modeling and Adaptivity in a Speech-Based E-Mail System", "author": ["K. Jokinen", "K. Kanto"], "venue": "Proceedings of the 42nd Annual Meeting of the Association for Computational Linguistics. pp. 87\u201394", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2004}, {"title": "The SpeDial Datasets: Datasets for Spoken Dialogue System Analytics", "author": ["J. Lopes", "A. Chorianopoulou", "E. Palogiannidi", "H. Moniz", "A. Abad", "K. Louka", "E. Iosif", "A. Potamianos"], "venue": "Proceedings of the 10th International Conference on Language Resources and Evaluation (LREC)", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2016}, {"title": "Evaluation of a Live Broadcast News Subtitling System for Portuguese", "author": ["H. Meinedo", "M. Viveiros", "Neto", "J.a."], "venue": "Proceedings of INTERSPEECH 2008. pp. 508\u2013511", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2008}, {"title": "Usability Engineering", "author": ["J. Nielsen"], "venue": "Morgan Kaufmann Publishers Inc., San Francisco, CA, USA", "citeRegEx": "13", "shortCiteRegEx": null, "year": 1993}, {"title": "Fast Training of Support Vector Machines using Sequential Minimal Optimization", "author": ["J. Platt"], "venue": "Advances in Kernel Methods - Support Vector Learning. MIT Press", "citeRegEx": "14", "shortCiteRegEx": null, "year": 1998}, {"title": "Doing Research on a Deployed Spoken Dialogue System: One Year of Lets Go! Experience", "author": ["A. Raux", "D. Bohus", "B. Langner", "A.W. Black", "M. Eskenazi"], "venue": "Proceedings of INTERSPEECH 2006. pp. 65\u201368", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2006}, {"title": "A Parameterized and Annotated Spoken Dialog Corpus of the CMU Let\u2019s Go Bus Information System", "author": ["A. Schmitt", "S. Ultes", "W. Minker"], "venue": "Proceedings of the 8th International Conference on Language Resources and Evaluation (LREC)", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2012}], "referenceMentions": [{"referenceID": 13, "context": "In this article we present an analysis of different features and how they can be used to identify the level of expertise of a user on Let\u2019s Go [15] data.", "startOffset": 143, "endOffset": 147}, {"referenceID": 11, "context": "By knowing the level of expertise of its users, a system could improve the quality of the interaction through adaptation techniques based on that level [13].", "startOffset": 152, "endOffset": 156}, {"referenceID": 7, "context": "Hjalmarsson [9] analyzed dialog dynamics and discussed the utility of creating adaptive spoken dialog systems and individual user models.", "startOffset": 12, "endOffset": 15}, {"referenceID": 6, "context": "She suggests that such models can be created using both rule-based and statistical approaches [8].", "startOffset": 94, "endOffset": 97}, {"referenceID": 5, "context": "Hassel and Hagen [7] developed an automotive dialog system that adapts to its users\u2019 expertise.", "startOffset": 17, "endOffset": 20}, {"referenceID": 8, "context": "Jokinen and Kanto [10] used user expertise modelling to enable the adaptation of a speech-based e-mail system.", "startOffset": 18, "endOffset": 22}, {"referenceID": 2, "context": "They distinguish three levels of expertise \u2013 Novice, Competent, and Expert \u2013, a subset of the five proposed by Dreyfus and Dreyfus [4] in their studies about the behaviour of expert systems.", "startOffset": 131, "endOffset": 134}, {"referenceID": 3, "context": "Since expertise depends on the task being performed, it cannot be identified by large sets of generic acoustic features such as the ones extracted by openSMILE [5].", "startOffset": 160, "endOffset": 163}, {"referenceID": 13, "context": "We explored user expertise on data extracted from interactions with the Let\u2019s Go Bus Information System [15], which provides information about bus schedules, through spoken telephonic interaction with a dialog system.", "startOffset": 104, "endOffset": 108}, {"referenceID": 14, "context": "In our experiments we used the LEGO [16] corpus.", "startOffset": 36, "endOffset": 40}, {"referenceID": 9, "context": "This set was annotated for expertise at KTH using the same two labels \u2013 Expert and Novice [11].", "startOffset": 90, "endOffset": 94}, {"referenceID": 10, "context": "The phones for each utterance were obtained using the neural networks included in the AUDIMUS [12] ASR system.", "startOffset": 94, "endOffset": 98}, {"referenceID": 1, "context": "From the multiple classification approaches that could be used, we opted Support Vector Machines (SVMs)[3], since it is a widely used approach and typically produces acceptable results, and Random Forest (RF) [2], an approach based on decision trees, which are indicated for this task, given the distribution of our features among the two classes.", "startOffset": 103, "endOffset": 106}, {"referenceID": 0, "context": "From the multiple classification approaches that could be used, we opted Support Vector Machines (SVMs)[3], since it is a widely used approach and typically produces acceptable results, and Random Forest (RF) [2], an approach based on decision trees, which are indicated for this task, given the distribution of our features among the two classes.", "startOffset": 209, "endOffset": 212}, {"referenceID": 12, "context": "To train our SVMs, we took advantage of the Sequential Minimal Optimization (SMO) algorithm [14] implementation provided by the Weka Toolkit [6].", "startOffset": 92, "endOffset": 96}, {"referenceID": 4, "context": "To train our SVMs, we took advantage of the Sequential Minimal Optimization (SMO) algorithm [14] implementation provided by the Weka Toolkit [6].", "startOffset": 141, "endOffset": 144}], "year": 2017, "abstractText": "Identifying the level of expertise of its users is important for a system since it can lead to a better interaction through adaptation techniques. Furthermore, this information can be used in offline processes of root cause analysis. However, not much effort has been put into automatically identifying the level of expertise of an user, especially in dialog-based interactions. In this paper we present an approach based on a specific set of task related features. Based on the distribution of the features among the two classes \u2013 Novice and Expert \u2013 we used Random Forests as a classification approach. Furthermore, we used a Support Vector Machine classifier, in order to perform a result comparison. By applying these approaches on data from a real system, Let\u2019s Go, we obtained preliminary results that we consider positive, given the difficulty of the task and the lack of competing approaches for comparison.", "creator": "LaTeX with hyperref package"}}}