{"id": "1703.10571", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "30-Mar-2017", "title": "Bootstrapping Labelled Dataset Construction for Cow Tracking and Behavior Analysis", "abstract": "this paper introduces very new approach to the moderate - term tracking if an object in a herd environment. the object is something cow and the environment is an cow in a cowshed. some of the worst challenges in this domain are a cluttered background, low contrast and high similarity between moving objects which greatly reduces the efficiency of most existing approaches, including those based on background stimuli. our approach is split into object localization, instance propagation, learning and tracking stages. our solution is compared to a range of once - automated object tracking algorithms and we show that the performance is strong and well suited to subsequent analysis. we present our solution as a future step behind broader simulation and behavior testing for cows in precision agriculture with the ultimate objective of early detection of lameness.", "histories": [["v1", "Thu, 30 Mar 2017 17:09:39 GMT  (3121kb,D)", "http://arxiv.org/abs/1703.10571v1", null]], "reviews": [], "SUBJECTS": "cs.CV cs.AI cs.LG", "authors": ["aram ter-sarkisov", "robert ross", "john kelleher"], "accepted": false, "id": "1703.10571"}, "pdf": {"name": "1703.10571.pdf", "metadata": {"source": "CRF", "title": "Bootstrapping Labelled Dataset Construction for Cow Tracking and Behavior Analysis", "authors": ["Aram Ter-Sarkisov", "Robert Ross", "John Kelleher"], "emails": ["453615@dit.ie"], "sections": [{"heading": null, "text": "Index Terms\u2014machine learning; animal behavior; machine vision\nI. INTRODUCTION\nIn the domain of modern animal husbandry the early detection and treatment of lameness is a serious and challenging problem. Lack of adequate treatment can lead to substantial losses for farms and reduced well-being for animals [1], [2]. Detection and treatment of animal lameness has traditionally involved the hiring of expensive specialists after the disease has already become highly pronounced. Due to the negative consequences of late detection, there has recently been an increased interest in applying statistical and machine learning methods to lameness detection. These methods range from regressions and longitudinal studies ([3], [4]) through to neural networks and support vector machines [5], [6], [7]. Analysis such as these mainly rely on 4 main sensor types: accelerometers, weight platforms, remote sensors and video cameras. In our work we are particularly focused on video data since it is convenient for both humans and cows; there is no need for a lengthy installation of equipment, the equipment is cheap when viewed over the long term, and importantly for the animal the method is non-invasive.\nThe main drawback of video based analysis in this domain is the complexity in information retrieval: one needs to extract the animal\u2019s shape and behavior over a period of time and in relatively complex environments. As such, to the best of our knowledge, previous video recordings for lameness detection were performed in open space with good contrast between the\nbackground and the object, as in [7], [8] over a short period of time. In Section II we discuss these and other results in greater detail.\nIt has been shown elsewhere that there are multiple features that correlate with lameness, i.e., gait, head tilt, weight distribution, and behavior. While each of these can in principle be analyzed through video, we suggest that analysis of behavior is particularly interesting, because difference in behavior between lame and so-called sound cows has been observed extensively ([9], [10], [3], [11]). For example it has been shown that the frequency and duration of actions like lying and walking correlates with lameness onset.\nOur long term research goal is to monitor animal behavior directly from video to predict the early onset of lameness, which, given the above, is harder than with the use of accelerators or weight platforms from both scientific and technical points of view. Among other things, it cannot be approached in a straightforward manner (raw data \u2192 features \u2192 classification), because extraction of raw features and generation of a labelled corpus from video data full of challenges (poor lighting conditions, frequent occlusion, bad contrast) are problems that do not have a straightforward solution. In the current article we set out a method that combines deep learning algorithms, heuristic methods and an ensemble learning algorithm to track the movement of a cow and construct a labelled dataset.\nOur method is constructed and benchmarked against a new video corpus of animal behavior. We detail the content and construction of this video corpus in Section IV. We then present the details of our novel approach to object tracking in Section V. In Section VI experimental results are presented together with a comparison to other relevant algorithms. Finally in Section VII we outline our conclusions and plans for future work."}, {"heading": "II. PREVIOUS WORK", "text": "The use of Computer Vision in monitoring animal behavior has a varied history. Rather than providing a comprehensive review of all such work here, we instead focus on the challenge at hand, i.e., the specific case of behavior tracking\nar X\niv :1\n70 3.\n10 57\n1v 1\n[ cs\n.C V\n] 3\n0 M\nar 2\n01 7\nfor bovines. To the best of our knowledge, there has to date been no direct overlap in the literature between object tracking and behavior-based cow lameness detection from video. However, there have been attempts to use machine learning algorithms like support vector machines (SVM) to directly predict cow lameness stage and lameness identification from video. In [7] cow\u2019s backposture was extracted from two sets (n1 = 28, n2 = 66) of cows shot on video while walking and scored by observers based on the presence of lameness features between 1 (no lameness) and 3 (severe lameness). The authors report a 96% accuracy (percentage of correctly classified observations) of estimation using this method. Background subtraction in the publication was done in a relatively straightforward manner, because the video was shot outside at a convenient angle with little to no clutter in the background and very mild partial occlusion. Most importantly, contrast between the cow and the background is quite sharp, and there were no other cows in the video.\nEarlier work [8] showed that cow\u2019s movement (locomotion) was examined in a manner similar to [7]. That work established high correlation (94.2%) between hoof positions estimated by the camera and humans, and the difference in the position of the hooves between sound and lame cows. In addition to these two studies, there have been other publications on lameness detection based on video, but all of them were shot outside, with good contrast between background and object, making the task much easier then the problem we address in this paper.\nBeyond the specific application to cow tracking, there has of course been significant research into object tracking. Of this work the kernel-based, semi-supervised and ensemble tracking algorithms have shown much promise. Tracking algorithms in these categories are some of the most popular, because they fulfil two important requirements: they do not require fully-labelled datasets for supervised learning and they generalize well to different problems. Semi-supervised algorithms include Tracking-Learning-Detection (TLD), developed by Kalal et al, [12], a related Median Flow algorithm, also by Kalal et al, [13], Multiple Instance Learning (MIL) ([14], [15]) with an extension built upon random forests, [16]. Kernel-based algorithms use a Kernel filter for similarity measure: [17]. One of the most recent approaches is Kernelized Correlation filter (KCF) by Henriques et al, [18], [19], that employs circulant matrices, several types of kernels (Gaussian, Linear, Ridge) and Fast Fourier Transform to learn a set of dense samples (all subwindows) from the tracked object. A big advantage of all these algorithms is that the user only needs to define the starting coordinates and the size of the bounding box(hence semi-supervised), therefore they are easy to test. Also recently, deep learning algorithms, such as Convolutional Neural Nets (ConvNN) were adapted for tracking tasks by Ma et al in [20]. These ConvNNs use a popular VGG-Net-19 architecture\n([21]). A major disadvantage to these algorithms and the reason that we cannot apply them directly at this point is that they require a significant amount of labelled data."}, {"heading": "III. APPROACH OVERVIEW", "text": "In our work we have been interested in the automated bootstrapping of labelled dataset construction to cut down on the cost and technical challenges associated with building a large labelled dataset suitable to use with for example Deep Learning methods. Our approach to building this dataset is to build a predictive model that can track a particular cow through the video. We use a Random Forest classifier to do this tracking. Here we will give a high-level overview of the stages in the approach so as to help reader understand how the different components in our approach interact.\nOur approach to building a tracking model for a given cow involves a number of steps. The first step is that we choose the cow in the video that is to be tracked. We do this by drawing a bounding box around that cow in the first frame of the video and label this bounding box as containing the target cow. We then also draw bounding boxes around all the other cows in the video and label these bounding boxes as distractor cows. We then sequentially process each frame in the video.\nWhen processing each frame we first apply a model called CRFasRNN [22] to localize blobs of pixels that the model predicts as belonging to a cow or multiple cows. Because of this ambiguity, we then apply an edge detector called HED [23] followed by a thresholding method (ISODATA [24]) and this process isolates instances of cows within each blob. In other words, this process may segment a blob further into multiple cow instances. Note, that for now we do not address the problem of merging blobs but we will discuss this in future work.\nOnce we have extracted a set of cow instances from the frame, we then label each of these cow instances in the frame as belonging to either the target cow or one of the distractor cows. We do this by labelling each instance in the current frame with the label of the nearest instance in the previous frame. Using this process of frame analysis followed by the nearest neighbor instance labelling, we can track the target cow successfully through a short well-behaved video sequence. However, this approach doesn\u2019t scale to longer noisier videos. To do this we use the labelled short video to construct a training set for a random forest model that can track the cow through the longer more difficult video sequences. We build this training set for the random forest model by extracting 9 features from each instance in each frame. We then construct the training set by having one-row-per-instance-per-frame with each row labelled as being either the target instance or distractor instance. We then train and validate the random forest model on this constructed dataset and then test this model on the portions of the video\nnot used to construct the dataset. Having obtained the results, we manually identify true and false positives on a frame by frame basis."}, {"heading": "IV. DATASETS", "text": "Our raw datasets consist of video data collected over a period of 14 days in a cowshed environment. Cameras observed enclosures which contained 10 individual animals. Cameras were mounted at a fixed angle to the animals, and in total 3TB of video data was collected. The data was collected and provided by the Irish National Agriculture and Food Development Authority (Teagasc), No labelling of the raw data was provided.\nFrom this wealth of data we extracted a number of snippets, listed in Table I. As a video sequence is a time series, i.e. ordered data, each snippet is split into two consecutive subsets: training/validation and testing. Test datasets are usually a few times longer than training and validation datasets. Since cows move slowly, we only took every 10th frame from the video sequence. Therefore, in Table I we report both the number of frames and the length of the video. Names of datasets consist of the channel/camera id, date (day, month, year format) and the time in hour:minute:second format, with the actual time corresponding to the first second of the snippet. For example, ch0106092015115543 means camera number 1 shooting on June, 9, 2015 starting at 11:55:43.\nTraining and testing datasets were selected with the following objectives in mind: in the training set the cow that we want to track has to be fairly well visible for the whole duration (therefore they are quite short), so that the learning algorithm has enough correctly labelled features to train with. In the test set, on the other hand, most or at least some challenges should be present. While we recognize that these are simplifying assumptions in comparison to making a purely random selection of sequences from the data, we believe that this method is useful at this stage.\nGiven the nature of the problem and the recording environment, the dataset includes a number of challenges:\n1) Background: background in the video is generally dark and suffers from the low contrast, it is easy to confuse the background with animals, especially dark-skinned (black and brown), certain cows (especially black ones) are often not discernible even by a human eye, 2) Lighting: the lighting is generally low and uneven due to the presence of narrow and long gaps in the walls and ceilings. As a result, many cows have bright rectangular patches on their skin, often splitting the object in two or more parts. 3) Objects: In every enclosure there are 10 cows of approximately the same size and different skin color, usually black, brown, white and striped (white and black), hence\nthey are easy to confuse with each other. As cows are malleable objects, throughout the video their appearance changes substantially, from small while facing away from the camera and blending with the background to large and contrasting when standing perpendicular to the camera\u2019s direction. 4) Occlusion: there are two types of occlusion in the dataset. First, the components of the cowshed and enclosure, like metal bars and concrete troughs that serve as boundaries of the enclosure. Secondly, due to the size of the enclosure, cows block each other from view much of the time, thus if a cow changes its action (walking\u2192standing, standing\u2192lying) while blocked away from the view, it is very challenging to identify this change automatically.\nThese features cause considerable trouble for existing tracking algorithms. This is exhibited in Fig. 1, where we used five tracking algorithms implemented in OpenCV 3.1.0 library for Python 2 and mentioned in Section II: MIL, TLD, KCF, Boosting and MeanFlow. Their drawbacks become evident after about first 70-100 frames (35-50 s) as the cow starts to move from its starting position. Trackers fail to account for the changing shape of the cow as it turns around and instead learn from other objects in the bounding box: a similar cow and the background. The second challenge are the metal bars (enclosure boundary) serving as a partial occlusion as the cow moves behind it."}, {"heading": "V. METHOD", "text": "An essential feature of many tracking algorithms is the dependence on the contrast between the tracked object and background, however cluttered it is. This poses a particular challenge for our project, because pixel intensity (hence the color) of large areas of the background, such as the floor, drinking troughs, metal bars and pathways between enclosures are very similar to that of many dark-skinned cows. Similarly, light-skinned cows are easily confused with patches of light passing through gaps in the wall and ceiling. Another problem is that cows of the same color are essentially similar, hence it is enormously challenging for a tracking algorithm to tell between two brown cows, especially if one of them blocks the other from camera view. The main idea of our approach for this reason is to extract contours of the tracked object instead of the background. As explained in Section III, the algorithm consists of two steps: the first one does instance segmentation, feature extraction and training and validation, it is presented in Fig. 2 and the second does feature extraction and testing of a learning algorithm, and is presented in Fig. 3. The instance segmentation phase is presented in Fig. 4."}, {"heading": "A. Framewise cow instance segmentation", "text": "This is the first important phase in both steps of our approach. We start by localizing potentially interesting areas in the frame, and for this purpose we use a pre-trained deep learning algorithm: Conditional Random Fields as Recurrent Neural Network (CRFasRNN), recently introduced in a paper\nby Zheng et al in [22]. This is a combination of a fully convolutional network (FCN, see [25]) and a conditional random field (CRF) with a layout of a recurrent neural network, RNN. This novel object segmentation algorithm returns a mask with the color of the pixels corresponding to the identified class, see Fig. 4. Yellow blobs in the mask correspond to the identified cow pixels (some cows in this video were misclassified as sheep and horses; to avoid further complications, we relabelled these pixels as cows and note that further training of the CRFasRNN is likely to increase accuracy). So far CRFasRNN has shown very high performance on our video data, compared to other algorithms, including FCN. ConvNN\u2019s architecture used for our approach is FCN-8, which is based on VGG-16 ([21]). This identification of elements in the raw image is by far the most computationally intensive part of our model, taking \u223c50s/frame on the CPU and \u223c7s/frame on GPU (Tesla K40).\nOnce we have localized the blobs with potentially interesting objects, we get a bounding box around those larger than an optimal threshold empirically found to be 800 pixels and extract this patch from the original image. What we want now is to identify instances of cows, since CRFasRNN does not report the number of instances, but only that the observations in these blobs are consistent with the\nclass \u2018cow\u2019. As explained above, background subtraction is intractable in cowsheds due to very noisy and low-contrast background. Instead, we attempt to extract contours of objects. This comes from the observation that, even if the objects have a similar pixel intensity, the value of the derivative at the boundary has the potential for delineating between them.\nFor contour detection we found that the HolisticallyNested Edge Detector (HED), recently introduced by Xie and Tu in [23] performs strongly by filtering out most of the noise in the image. Therefore in the next stage we run each localized area in the image through HED to obtain edges. The output of HED is an image with the darker pixels corresponding to more important edges. Since we only need the most important of them, we want to split each contour image into two disjoint subsets: objects and background. We do this by using the threshold detection algorithm ISODATA, introduced by Ridler and Calvard in [24]. A combination of these two methods produces a set of isolated objects that we label as such and add to the training set should their area exceed 800 pixels (also found empirically). We also get the objects\u2019 convex hulls (to track the change in the cows\u2019 shape) and bounding boxes.This step is much less computationally expensive, taking 5-7s on a CPU or < 1s on a GPU (Tesla K40).\nOur approach takes CRFasRNN\u2019s output a step further by offering a solution for instance segmentation: blobs from CRFasRNN\u2019s output merely tell us that there are cows in this locality. We extract the hypothesis for the number of cows and the approximation for their shapes and locations. In Fig. 4 we present the flowchart of the instance segmentation step."}, {"heading": "B. Feature Extraction", "text": "The process detailed in the previous subsection is applied to every frame in the video sequence. We combine that process with a simple 1-Nearest Neighbor (1NN) tracking method to automate feature extraction from instances identified in the first phase of processing. In the very first frame of the sequence, we select the cow we want to track and assign it label 1; all other objects are labelled with 0. For all other frames, once we have all the instances, we get a simple distance matrix, where the number of rows is equal to the number of instances in the current frame, and the number of columns to the number of labelled instances in the previous frame, hence each entry in the matrix is a distance from every instance in this frame to every labelled instance in the previous frame. Once we have this matrix, we assign every instance in this frame the label of the nearest instance from the previous frame. This heuristic approach is too simple for any serious tracking problem, and therefore our training databases are very small (50-100 frames) and well-behaved, i.e. the cow we want to track is well visible throughout the video of the training set. Once we have labelled all instances in the frame, we extract features from them, which are added to the training dataset in the correct order (i.e. concatenated with the previous data). In total, we use 9 features from three types:\n1) Pixel intensity: We use the instance\u2019s centroid as the mean and \u03c32 = 5 to sample 100 5x5 patches in each object; after averaging over their pixel intensities we get a vector of features: overall mean, maximum and three quartiles. 2) Size: we use the size of the bounding box around the object. This is motivated by the fact that in the previous stage we ignored small objects (under 800 pixels), and that our instance segmentation algorithm tends to find large portions of cows. 3) Location: we store the (x, y) coordinates of the centroid of the bounding box as the distance feature. During the training and test phases, we find the distance between every instance\u2019s centroid and the centroid of the previous observation of the tracked cow. This coordinate difference is the actual feature used.\nFinally, once we have collected all the data from the training video sequence, we manually clean up the training dataset by removing mislabelled (false positive) observations and pass the correctly labelled dataset to the training algorithm."}, {"heading": "C. Training", "text": "With features extracted for each cow, we trained a classifier to automatically identify an individual animal in a video frame. We selected the Random Forest (RF) classifier, attributed to Breiman [26] to learn the features. Originally in each training set the proportion of positive (tracked cow) observations is about 16 %. To provide the classifier with more data, we sampled out about 50 % of negative (distractor cows) observations, thus increasing the positive data points to about a third of the training database. As the data is essentially a time series, we train the algorithm on the first K observations and validate on the remaining n\u2212K. The second contribution of this paper, after instance segmentation algorithm, is optimizing a classifier based on the training, validation and testing output. We found that RF with 300 trees, cross-entropy error function, using all features during training, with bootstrap samples and out-of-bag samples for generalization do the best job on our data. Training of a single forest takes a very small amount of time, \u223c 5 seconds."}, {"heading": "VI. RESULTS", "text": "Results from testing the RF classifier, precision and recall, are summarized in Tables II and III. Test sets, which are taken from the same video, are different to the training set in a number of ways: there are many issues that an algorithm must handle, such as full and partial occlusion, bad lighting, low contrast, cluttered background and other. For comparison we use the five trackers mentioned above: TLD, MIL, KCF, MedianFlow and Boosting on each test set. In three datasets our approach achieves the highest precision and in two - the highest recall rate. Its strength is particularly well visible on ch0106092015115543 and ch0915062015120155, where the tracked cow moves around. Other either immediately loose it (as TLD in ch0106092015115543) or confuse it with the background as soon as the cow leaves the area where the tracking started. We consider this to be a specific strength of our algorithm. On two sets where our approach underperformed (e.g.ch0710062015201033) the problem is related to the generalization capacity of the classifier: the cow does not move much, but its features are too easily confused with those of other objects."}, {"heading": "VII. DISCUSSION AND FUTURE WORK", "text": "In this article we have presented a new tracking algorithm developed for tracking malleable objects (cows) in a challenging environment (enclosures in a cowshed). The ultimate goal of this project is to identify lameness in cows at an early stage; successful cow tracking is the first stage in this project. This article has three main contributions:\n1) Framewise instance segmentation, 2) Optimal Random Forest algorithm, 3) Construction of a large dataset for further analysis of\ncows\u2019 behavior From here there are three main directions in which we would like to take the development of this algorithm:"}], "references": [{"title": "Effect of lameness on the calving-to-conception interval in dairy cows", "author": ["J. Hernandez", "J.K. Shearer", "D.W. Webb"], "venue": "Journal of the American veterinary medical association, vol. 218, no. 10, pp. 1611\u20131614, 2001. 1", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2001}, {"title": "Applying additive logistic regression to data derived from sensors monitoring behavioral and physiological characteristics of dairy cows to detect lameness", "author": ["C. Kamphuis", "E. Frank", "J. Burke", "G. Verkerk", "J. Jago"], "venue": "Journal of dairy science, vol. 96, no. 11, pp. 7043\u20137053, 2013. 1", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2013}, {"title": "Lameness in tied danish dairy cattle: the possible influence of housing systems, management, milk yield, and prior incidents of lameness", "author": ["L. Alban", "J. Agger", "L. Lawson"], "venue": "Preventive veterinary medicine, vol. 29, no. 2, pp. 135\u2013149, 1996. 1", "citeRegEx": "4", "shortCiteRegEx": null, "year": 1996}, {"title": "A probabilistic neural network model for lameness detection", "author": ["M. Pastell", "M. Kujala"], "venue": "Journal of dairy science, vol. 90, no. 5, pp. 2283\u2013 2292, 2007. 1", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2007}, {"title": "Cow behaviour pattern recognition using a threedimensional accelerometer and support vector machines", "author": ["P. Martiskainen", "M. J\u00e4rvinen", "J.-P. Sk\u00f6n", "J. Tiirikainen", "M. Kolehmainen", "J. Mononen"], "venue": "Applied Animal Behaviour Science, vol. 119, no. 1, pp. 32\u201338, 2009. 1", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2009}, {"title": "Real-time automatic lameness detection based on back posture extraction in dairy cattle: Shape analysis of cow with image processing techniques", "author": ["A. Poursaberi", "C. Bahr", "A. Pluk", "A. Van Nuffel", "D. Berckmans"], "venue": "Computers and Electronics in Agriculture, vol. 74, no. 1, pp. 110\u2013119, 2010. 1, 2", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2010}, {"title": "Automatic detection of lameness in dairy cattlevision-based  trackway analysis in cow\u2019s locomotion", "author": ["X. Song", "T. Leroy", "E. Vranken", "W. Maertens", "B. Sonck", "D. Berckmans"], "venue": "Computers and electronics in agriculture, vol. 64, no. 1, pp. 39\u201344, 2008. 1, 2", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2008}, {"title": "Behaviour of lame cows: a review", "author": ["J. Olechnowicz", "J. Jaskowski"], "venue": "Veterinarni Medicina, vol. 56, no. 12, pp. 581\u2013588, 2011. 1", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2011}, {"title": "Electronic detection of lameness in dairy cows through measuring pedometric activity and lying behavior", "author": ["M. Alsaaod", "C. R\u00f6mer", "J. Kleinmanns", "K. Hendriksen", "S. Rose- Meierh\u00f6fer", "L. Pl\u00fcmer", "W. B\u00fcscher"], "venue": "Applied Animal Behaviour Science, vol. 142, no. 3, pp. 134\u2013 141, 2012. 1", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2012}, {"title": "Automatic real-time monitoring of locomotion and posture behaviour of pregnant cows prior to calving using online image analysis", "author": ["\u00d6. Cangar", "T. Leroy", "M. Guarino", "E. Vranken", "R. Fallon", "J. Lenehan", "J. Mee", "D. Berckmans"], "venue": "Computers and electronics in agriculture, vol. 64, no. 1, pp. 53\u201360, 2008. 1", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2008}, {"title": "Tracking-learning-detection", "author": ["Z. Kalal", "K. Mikolajczyk", "J. Matas"], "venue": "IEEE transactions on pattern analysis and machine intelligence, vol. 34, no. 7, pp. 1409\u20131422, 2012. 2", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2012}, {"title": "Forward-backward error: Automatic detection of tracking failures", "author": ["\u2014\u2014"], "venue": "Pattern recognition (ICPR), 2010 20th international conference on. IEEE, 2010, pp. 2756\u20132759. 2", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2010}, {"title": "Visual tracking with online multiple instance learning", "author": ["B. Babenko", "M.-H. Yang", "S. Belongie"], "venue": "Computer Vision and Pattern Recognition, 2009. CVPR 2009. IEEE Conference on. IEEE, 2009, pp. 983\u2013990. 2", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2009}, {"title": "Robust object tracking with online multiple instance learning", "author": ["\u2014\u2014"], "venue": "IEEE Transactions on Pattern Analysis and Machine Intelligence, vol. 33, no. 8, pp. 1619\u20131632, 2011. 2", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2011}, {"title": "Miforests: Multiple-instance  learning with randomized trees", "author": ["C. Leistner", "A. Saffari", "H. Bischof"], "venue": "European Conference on Computer Vision. Springer, 2010, pp. 29\u201342. 2", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2010}, {"title": "Kernel-based object tracking", "author": ["D. Comaniciu", "V. Ramesh", "P. Meer"], "venue": "IEEE Transactions on pattern analysis and machine intelligence, vol. 25, no. 5, pp. 564\u2013577, 2003. 2", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2003}, {"title": "Exploiting the circulant structure of tracking-by-detection with kernels", "author": ["J.F. Henriques", "R. Caseiro", "P. Martins", "J. Batista"], "venue": "European conference on computer vision. Springer, 2012, pp. 702\u2013715. 2", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2012}, {"title": "High-speed tracking with kernelized correlation filters", "author": ["\u2014\u2014"], "venue": "IEEE Transactions on Pattern Analysis and Machine Intelligence, vol. 37, no. 3, pp. 583\u2013596, 2015. 2", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2015}, {"title": "Hierarchical convolutional features for visual tracking", "author": ["C. Ma", "J.-B. Huang", "X. Yang", "M.-H. Yang"], "venue": "Proceedings of the IEEE International Conference on Computer Vision, 2015, pp. 3074\u20133082. 2", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2015}, {"title": "Very deep convolutional networks for large-scale image recognition", "author": ["K. Simonyan", "A. Zisserman"], "venue": "arXiv preprint arXiv:1409.1556, 2014. 2, 4", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2014}, {"title": "Conditional random fields as recurrent neural networks", "author": ["S. Zheng", "S. Jayasumana", "B. Romera-Paredes", "V. Vineet", "Z. Su", "D. Du", "C. Huang", "P.H. Torr"], "venue": "Proceedings of the IEEE International Conference on Computer Vision, 2015, pp. 1529\u20131537. 2, 4", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2015}, {"title": "Holistically-nested edge detection", "author": ["S. Xie", "Z. Tu"], "venue": "Proceedings of the IEEE International Conference on Computer Vision, 2015, pp. 1395\u20131403. 2, 4", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2015}, {"title": "Picture thresholding using an iterative selection method", "author": ["T. Ridler", "S. Calvard"], "venue": "IEEE Trans Syst Man Cybern, vol. 8, no. 8, pp. 630\u2013632, 1978. 2, 4", "citeRegEx": "24", "shortCiteRegEx": null, "year": 1978}, {"title": "Fully convolutional networks for semantic segmentation", "author": ["J. Long", "E. Shelhamer", "T. Darrell"], "venue": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, 2015, pp. 3431\u20133440. 4", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2015}, {"title": "Random forests", "author": ["L. Breiman"], "venue": "Machine learning, vol. 45, no. 1, pp. 5\u201332, 2001. 5", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2001}, {"title": "Long short-term memory", "author": ["S. Hochreiter", "J. Schmidhuber"], "venue": "Neural computation, vol. 9, no. 8, pp. 1735\u20131780, 1997. 6", "citeRegEx": "27", "shortCiteRegEx": null, "year": 1997}], "referenceMentions": [{"referenceID": 0, "context": "Lack of adequate treatment can lead to substantial losses for farms and reduced well-being for animals [1], [2].", "startOffset": 108, "endOffset": 111}, {"referenceID": 1, "context": "These methods range from regressions and longitudinal studies ([3], [4]) through to neural networks and support vector machines [5], [6], [7].", "startOffset": 63, "endOffset": 66}, {"referenceID": 2, "context": "These methods range from regressions and longitudinal studies ([3], [4]) through to neural networks and support vector machines [5], [6], [7].", "startOffset": 68, "endOffset": 71}, {"referenceID": 3, "context": "These methods range from regressions and longitudinal studies ([3], [4]) through to neural networks and support vector machines [5], [6], [7].", "startOffset": 128, "endOffset": 131}, {"referenceID": 4, "context": "These methods range from regressions and longitudinal studies ([3], [4]) through to neural networks and support vector machines [5], [6], [7].", "startOffset": 133, "endOffset": 136}, {"referenceID": 5, "context": "These methods range from regressions and longitudinal studies ([3], [4]) through to neural networks and support vector machines [5], [6], [7].", "startOffset": 138, "endOffset": 141}, {"referenceID": 5, "context": "knowledge, previous video recordings for lameness detection were performed in open space with good contrast between the background and the object, as in [7], [8] over a short period of time.", "startOffset": 153, "endOffset": 156}, {"referenceID": 6, "context": "knowledge, previous video recordings for lameness detection were performed in open space with good contrast between the background and the object, as in [7], [8] over a short period of time.", "startOffset": 158, "endOffset": 161}, {"referenceID": 7, "context": "While each of these can in principle be analyzed through video, we suggest that analysis of behavior is particularly interesting, because difference in behavior between lame and so-called sound cows has been observed extensively ([9], [10], [3], [11]).", "startOffset": 230, "endOffset": 233}, {"referenceID": 8, "context": "While each of these can in principle be analyzed through video, we suggest that analysis of behavior is particularly interesting, because difference in behavior between lame and so-called sound cows has been observed extensively ([9], [10], [3], [11]).", "startOffset": 235, "endOffset": 239}, {"referenceID": 1, "context": "While each of these can in principle be analyzed through video, we suggest that analysis of behavior is particularly interesting, because difference in behavior between lame and so-called sound cows has been observed extensively ([9], [10], [3], [11]).", "startOffset": 241, "endOffset": 244}, {"referenceID": 9, "context": "While each of these can in principle be analyzed through video, we suggest that analysis of behavior is particularly interesting, because difference in behavior between lame and so-called sound cows has been observed extensively ([9], [10], [3], [11]).", "startOffset": 246, "endOffset": 250}, {"referenceID": 5, "context": "In [7] cow\u2019s backposture was", "startOffset": 3, "endOffset": 6}, {"referenceID": 6, "context": "Earlier work [8] showed that cow\u2019s movement (locomotion) was examined in a manner similar to [7].", "startOffset": 13, "endOffset": 16}, {"referenceID": 5, "context": "Earlier work [8] showed that cow\u2019s movement (locomotion) was examined in a manner similar to [7].", "startOffset": 93, "endOffset": 96}, {"referenceID": 10, "context": "Semi-supervised algorithms include Tracking-Learning-Detection (TLD), developed by Kalal et al, [12], a related Median Flow algorithm, also by Kalal et al, [13], Multiple Instance Learning (MIL) ([14], [15]) with an extension built upon random forests, [16].", "startOffset": 96, "endOffset": 100}, {"referenceID": 11, "context": "Semi-supervised algorithms include Tracking-Learning-Detection (TLD), developed by Kalal et al, [12], a related Median Flow algorithm, also by Kalal et al, [13], Multiple Instance Learning (MIL) ([14], [15]) with an extension built upon random forests, [16].", "startOffset": 156, "endOffset": 160}, {"referenceID": 12, "context": "Semi-supervised algorithms include Tracking-Learning-Detection (TLD), developed by Kalal et al, [12], a related Median Flow algorithm, also by Kalal et al, [13], Multiple Instance Learning (MIL) ([14], [15]) with an extension built upon random forests, [16].", "startOffset": 196, "endOffset": 200}, {"referenceID": 13, "context": "Semi-supervised algorithms include Tracking-Learning-Detection (TLD), developed by Kalal et al, [12], a related Median Flow algorithm, also by Kalal et al, [13], Multiple Instance Learning (MIL) ([14], [15]) with an extension built upon random forests, [16].", "startOffset": 202, "endOffset": 206}, {"referenceID": 14, "context": "Semi-supervised algorithms include Tracking-Learning-Detection (TLD), developed by Kalal et al, [12], a related Median Flow algorithm, also by Kalal et al, [13], Multiple Instance Learning (MIL) ([14], [15]) with an extension built upon random forests, [16].", "startOffset": 253, "endOffset": 257}, {"referenceID": 15, "context": "Kernel-based algorithms use a Kernel filter for similarity measure: [17].", "startOffset": 68, "endOffset": 72}, {"referenceID": 16, "context": "One of the most recent approaches is Kernelized Correlation filter (KCF) by Henriques et al, [18], [19], that employs circulant matrices, several types of kernels (Gaussian, Linear, Ridge) and Fast Fourier Transform to learn a set of dense samples (all subwindows) from the tracked object.", "startOffset": 93, "endOffset": 97}, {"referenceID": 17, "context": "One of the most recent approaches is Kernelized Correlation filter (KCF) by Henriques et al, [18], [19], that employs circulant matrices, several types of kernels (Gaussian, Linear, Ridge) and Fast Fourier Transform to learn a set of dense samples (all subwindows) from the tracked object.", "startOffset": 99, "endOffset": 103}, {"referenceID": 18, "context": "deep learning algorithms, such as Convolutional Neural Nets (ConvNN) were adapted for tracking tasks by Ma et al in [20].", "startOffset": 116, "endOffset": 120}, {"referenceID": 19, "context": "These ConvNNs use a popular VGG-Net-19 architecture ([21]).", "startOffset": 53, "endOffset": 57}, {"referenceID": 20, "context": "When processing each frame we first apply a model called CRFasRNN [22] to localize blobs of pixels that", "startOffset": 66, "endOffset": 70}, {"referenceID": 21, "context": "Because of this ambiguity, we then apply an edge detector called HED [23] followed by a thresholding method (ISODATA [24]) and this process isolates instances of cows within each blob.", "startOffset": 69, "endOffset": 73}, {"referenceID": 22, "context": "Because of this ambiguity, we then apply an edge detector called HED [23] followed by a thresholding method (ISODATA [24]) and this process isolates instances of cows within each blob.", "startOffset": 117, "endOffset": 121}, {"referenceID": 20, "context": "by Zheng et al in [22].", "startOffset": 18, "endOffset": 22}, {"referenceID": 23, "context": "This is a combination of a fully convolutional network (FCN, see [25]) and a conditional random field (CRF) with a layout of a recurrent neural", "startOffset": 65, "endOffset": 69}, {"referenceID": 19, "context": "ConvNN\u2019s architecture used for our approach is FCN-8, which is based on VGG-16 ([21]).", "startOffset": 80, "endOffset": 84}, {"referenceID": 21, "context": "Nested Edge Detector (HED), recently introduced by Xie and Tu in [23] performs strongly by filtering out most of the noise in the image.", "startOffset": 65, "endOffset": 69}, {"referenceID": 22, "context": "We do this by using the threshold detection algorithm ISODATA, introduced by Ridler and Calvard in [24].", "startOffset": 99, "endOffset": 103}, {"referenceID": 24, "context": "We selected the Random Forest (RF) classifier, attributed to Breiman [26] to learn the features.", "startOffset": 69, "endOffset": 73}, {"referenceID": 25, "context": "this purpose we will be training a large deep learning algorithm like LSTM ([27]) or a similar recurrent neural network.", "startOffset": 76, "endOffset": 80}], "year": 2017, "abstractText": "This paper introduces a new approach to the longterm tracking of an object in a challenging environment. The object is a cow and the environment is an enclosure in a cowshed. Some of the key challenges in this domain are a cluttered background, low contrast and high similarity between moving objects \u2013 which greatly reduces the efficiency of most existing approaches, including those based on background subtraction. Our approach is split into object localization, instance segmentation, learning and tracking stages. Our solution is benchmarked against a range of semi-supervised object tracking algorithms and we show that the performance is strong and well suited to subsequent analysis. We present our solution as a first step towards broader tracking and behavior monitoring for cows in precision agriculture with the ultimate objective of early detection of lameness.", "creator": "LaTeX with hyperref package"}}}