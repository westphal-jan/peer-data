{"id": "1706.04215", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "13-Jun-2017", "title": "Identifying Spatial Relations in Images using Convolutional Neural Networks", "abstract": "traditional approaches to building a large scale knowledge graph have usually relied on extracting information ( entities, database properties, and relations between relations ) from unstructured text ( ga. g. dbpedia ). several advances in convolutional optical networks ( cnn ) allow us to shift our focus to learning entities and relations from images, as they build robust models that require little or no pre - processing of the images. doing this paper, publishers present an approach to identify strategies handle spatial relations ( e. g., the argument is now behind the table ) from images using cnns. our research addresses two specific challenges : providing insight into how task relations are learned by the processors and which layers of the image are used to predict state relations. we use the pre - trained network vggnet to extract features from an image tool train a multi - layer mapping ( ic ) on a set through synthetic images and the sun09 dataset to extract spatial relations. another research predicts spatial relations without detecting bounding box around the subject or matching space in the image depicting the relation. to understand how the group relations are displayed in the network, a heatmap is overlayed on the image to show the regions that are deemed important by the network. also, we analyze the mlp to show the intermediate between the activation associated consistent groups of nodes and the prediction of a spatial relation. we show how the loss relating these groups affects the networks ability to identify elements.", "histories": [["v1", "Tue, 13 Jun 2017 18:24:11 GMT  (3634kb,D)", "http://arxiv.org/abs/1706.04215v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.CV cs.NE", "authors": ["mandar haldekar", "ashwinkumar ganesan", "tim oates"], "accepted": false, "id": "1706.04215"}, "pdf": {"name": "1706.04215.pdf", "metadata": {"source": "CRF", "title": "Identifying Spatial Relations in Images using Convolutional Neural Networks", "authors": ["Mandar Haldekar", "Ashwinkumar Ganesan", "Tim Oates"], "emails": ["gashwin1@umbc.edu", "oates@cs.umbc.edu"], "sections": [{"heading": null, "text": "Identifying Spatial Relations in Images using Convolutional Neural Networks\nMandar Haldekar, Ashwinkumar Ganesan Dept. Of Computer Science & Engineering,\nUMBC, Baltimore, MD\nmandarh1, gashwin1@umbc.edu\nTim Oates Dept. Of Computer Science & Engineering,\nUMBC, Baltimore, MD\noates@cs.umbc.edu\nAbstract\u20141Traditional approaches to building a large scale knowledge graph have usually relied on extracting information (entities, their properties, and relations between them) from unstructured text (e.g. Dbpedia). Recent advances in Convolutional Neural Networks (CNN) allow us to shift our focus to learning entities and relations from images, as they build robust models that require little or no pre-processing of the images. In this paper, we present an approach to identify and extract spatial relations (e.g., The girl is standing behind the table) from images using CNNs. Our research addresses two specific challenges: providing insight into how spatial relations are learned by the network and which parts of the image are used to predict these relations. We use the pre-trained network VGGNet to extract features from an image and train a Multi-layer Perceptron (MLP) on a set of synthetic images and the sun09 dataset to extract spatial relations. The MLP predicts spatial relations without a bounding box around the objects or the space in the image depicting the relation. To understand how the spatial relations are represented in the network, a heatmap is overlayed on the image to show the regions that are deemed important by the network. Also, we analyze the MLP to show the relationship between the activation of consistent groups of nodes and the prediction of a spatial relation. We show how the loss of these groups affects the network\u2019s ability to identify relations.\nI. INTRODUCTION\nResearch in the area of knowledge graphs have largely focused on mining large corpora of text to extract entities, concepts, and the relations between them. Linking entities extracted from images to knowledge graphs and reasoning with them has received little attention. Knowledge graphs (KG) such DBpedia [3] and Yago [29] store entities and their relations in the form of RDF triples. Certain attributes contain pictures of the entity described, but most systems that use these KGs lack the ability to reason using these pictures. Pictures can provide information that can be used to improve a system\u2019s ability to perform tasks such as image search, visual verification [25] (i.e., to verify the validity of a fact by looking for proof in pictures) and visual question answering [2] (i.e. answering questions about the image). To improve visual reasoning, Zhu et. al [34] use a knowledge graph representation to reason about object affordances [8], where the system tries to learn about the object, estimate the human pose to perform an action over it, and define the relative position of object with respect\n1*The document is a preprint version.\nto the human. These tasks have become important in an age where smart-phones with cameras are the preferred mode of communication and to search for content on the web [1].\nObject detection, scene description, pose estimation and other such tasks were commonly solved using SIFT [21] and HOG [4] features. But in recent years, deep neural networks have had tremendous success in diverse fields such as computer vision [16] [9], natural language processing [12] [28] and audio [11]. These developments, coupled with the availability of large quantities of data and high performance computing hardware such as GPUs (with CUDA and dedicated libraries like CuDNN), made remarkable performance gains possible. One of the popular deep neural network architectures, a Convolutional Neural Network (CNN), has substantially improved image classification compared to other existing methods as shown by Krizhevsky et. al. in 2012 [16]. CNNs are also able to achieve state-of-the-art performance in many of the aforementioned tasks [9] [10] [33].\nHowever, despite their success, intermittent work has been conducted to understand how deep neural networks learn features from the input data. Our focus is to extend the understanding of how deep networks operate by looking at the network\u2019s representations of spatial relations between objects in images. Spatial relations are difficult to learn as they are defined by the relative positions of objects in the image and are independent of the object itself (e.g., the relation next to is common to both scenarios: (a) A man is standing next to his dog (b) A child is sitting next to the chair). Consider figure 1 where the desired output is to extract the relation next-to directly from the image and represent it as:\n\u2203x\u2203y : Person(x) \u2227Dog(y) \u2227Beside(x, y)\nOur research focuses on training a network to classify a subset of spatial relations only. Depending on the frame of reference, spatial relations are classified into three types: basic, deictic, or intrinsic [19]. Our network is trained on deictic relations, where the relation between two objects is specified with respect to the viewer\u2019s point of view (POV). In this paper, we show how the network learns these relations by overlaying a generated heatmap on the original image that highlights parts of the image that are considered important to identify the relations. On further analysis, experiments reveal how a group of nodes\nar X\niv :1\n70 6.\n04 21\n5v 1\n[ cs\n.A I]\n1 3\nJu n\n20 17\nare formed in the network which have a higher impact on the ability of the network to predict them. Figure 2 shows an example image and the overlayed heatmap. The regions in red are important to identify the relation behind.\nThe following sections discuss the background and related work, the architecture used to train a model to predict spatial relations, the datasets on which the models are trained, and the observations from experiments conducted."}, {"heading": "II. RELATED WORK", "text": "A convolutional neural network (CNN) is a feed forward network that uses a combination of convolutional layers, pooling layers, and fully-connected layers. It is common to train with a batch of input images (determined during fine tuning of the network) and the gradient is calculated for the average loss across the batch. There are multiple CNN architectures that have been proposed to classify an object in images such AlexNet [15], VGGNet [27] and Inception [30]. One of the key reasons why CNNs are effective is because the network is trained on large datasets (such as imagenet) and can be directly applied (with fine tuning) to perform object recognition on images from different domains (domain adaptation) as well as used for various visual recognition tasks [6].\nA. VGGNet\nLike many CNN architectures, VGGNet [27] is trained on the imagenet (ILSVRC) dataset [5]. The network uses a small receptive field of size 3x3 and 5 spatial pooling layers, and ReLU as the activation function. It has 2 fully-connected layers at the end before the output layer, which has 1000 nodes, representing all the labels in imagenet. The fully-connected layers are each of size 4096. VGGNet is known to be robust. Output of specific layers are used to describe images [13] (layer FC-7). Our pipeline also utilizes the output of layer FC-7. A 16 layer pre-trained VGGNet model is used in our experiments."}, {"heading": "B. Spatial Relations", "text": "Prior research on recognizing spatial relations between objects in images relies on constructing handcrafted features by\nmanually inspecting the dataset [17]. Humans, though, perceive the relative positions of objects by fitting their positions into one of the pre-defined templates, i.e., to identify the relation [19]. Malinowski et. al [22] create spatial templates for each relation and then use a bi-directional fragment embedding framework to associate the template with text triplets [14]. To train their model to perform spatial reasoning, they annotate the SUN09 dataset with spatial relations. For example, the image in figure 2 is annotated as a bench (subject) in-front-of a wall (object). In our work, we identify the spatial relation without using the bounding box surrounding the objects in the image and the associated annotation. We show that learning to identify the presence of an object, the relative positions of the objects, as well as the space between them is useful to identify the spatial relation.\nC. Interpreting CNN features\nWith CNNs solving a large number of tasks, there is a growing interest to understand how features are represented in the network and the effect of various hyper-parameters used to train the network. Zeiler et. al [31] create a deconvolutional network to show the mid-level representations in a convolutional neural network. They show that features learned at intermediate layers go from a lower level of abstraction in the initial layers (like basic shape features) to higher level abstraction (such as texture) in the layers ahead. Also, they occlude parts of the image to understand which parts are important to classify the objects in the image. Simoyan et al. [26] backpropagate the gradient of the class score with respect to the image pixels to generate an artificial image which is representative of what is learned for that particular class. The method can be utilized for weakly-supervised object localization. Long et al. [20] prove that despite using large receptive fields, CNNs learn the correspondence between object parts.\nEscorcia et. al. [7] provide empirical evidence of attribute centric nodes (ACNs) inside a CNN that are trained to recognize specific objects. These ACNs represents different attributes in the image such as texture like furry, black/brown, wooden, etc. Their experiments reveal that the network recognizes the aforementioned attributes even though it is not specifically trained for it. ACNs are sparse and their distribution across the layers is not uniform, but are likely to be found in the top (forward) layers of the network. They also show that when ACNs corresponding to a certain sets of attributes are ablated, it reduces classification accuracy of the objects represented by these attributes.\nAnother way to interpret what the network is learning is by isolating which parts of the image are important for the network to classify it. Although this can be achieved by a class activation mapping technique which finds the regions in a single forward pass of the network [32], a fully convolutional neural network without any fully connected layers is required.\nIn our approach, we similarly try to isolate the parts of the image that are considered important for the purpose of classification. We mask each region of the image and measure the entropy change to characterize the impact of\neach region of the image and ablate nodes to check impact on the relations predicted. The heatmap is generated even though fully connected layers are present. The network is separately trained on the SUN09 dataset and a synthetic dataset generated for the purpose of studying the network."}, {"heading": "III. PRELIMINARIES & ANALYSIS METHODS", "text": ""}, {"heading": "A. Cross Entropy", "text": "Consider a trained neural network A. Given an image X(i) of size MxN and the spatial relation labels y1...yz , the softmax cross entropy loss function is:\nC(i) = \u2212 z\u2211\ny=1\nPi(y)log(Qi(y)) (1)\nwhere C(i) is the cross entropy, Qi(y) is the softmax probability of the label and Pi(y) is actual value of the label. An input image can be modified for a number of reasons such as identifying the important regions of an image, isolating a particular object in the image, etc. Let X(i)j be the modified version of the original image X(i). Using eq. 1, the cross entropy of the new image C(i)j (with the label of the original image) can be calculated (C(i) can be considered to be the baseline cross entropy).\nThe entropy difference is given by:\nE(i) = C (i) j \u2212 C (i) (2)\nThe entropy difference is used to measure the effect on the prediction while a network tries to classify the image when any change is made to it or to the network architecture."}, {"heading": "B. Characterizing the Cross Entropy Difference", "text": "During training, the network reduces the loss between the predicted and true label. Once a network is trained, the magnitude of E(i) shows the importance of the change to the image. The larger the magnitude of E(i), the higher is the likely importance. We call this the influence of the introduced change (in the image or the network) on the ability of the network to perform a prediction. There are three possible conditions:\n\u2022 E(i) > 0: influence is positive, i.e., the change introduced increases the likelihood of the image to be identified as the label.\n\u2022 E(i) < 0: influence is negative, i.e., the change introduced reduces the likelihood of the image to be identified as the label. \u2022 E(i) = 0: No influence."}, {"heading": "C. Ablating Nodes in Layers", "text": "Consider a fully connected layer li of size n. The previous layer li\u22121 has size h, the resulting output being Oi\u22121 (size 1\u00d7h). The weight vector is Wh\u00d7n and b1\u00d7n is the bias. A fully connected layer generates an output:\nOi = max(0,W \u00b7Oi\u22121 + b)\nwhere a Rectified Linear Unit (ReLU) is the activation function. We perform an element-wise multiplication with a vector A1\u00d7n.\nAOi = Oi A\nA is the ablation vector. The vector contains 1 at every index position except the nodes that need to be ablated which have a value of 0. AOi is the final output of the layer that is transferred forward to the next layer. Because we use a ReLU, the node might have a final output of 0 or a value greater than 0. Thus the above method will ablate nodes only in the case where the output is greater than 0. The method sufficiently ablates the nodes because in the case where the output of a node is 0, the node does not impact any forward computation in the proceeding layers."}, {"heading": "D. Extract Important Regions of Images", "text": "Important regions are parts of the image that the network is paying the most attention to while classifying images for particular class labels. The key idea is to artificially mask small regions of the image and measure the influence (eq. 2). The mask is a patch placed on the specific part of the image that makes the region unrecognizable, like a gray colored rectangular mask for images with non-gray colored backgrounds.\nBelow is the procedure to measure the influence: Consider a trained network N . Given an image X(i) with cross entropy C(i), create a gray mask for size AxB. The mask is sequentially slid on the image to create a set of images X\n(i) S = {X (i) 1 ...X (i) k } where each image has a single region that is masked. The number of regions k depends on the size\nof the mask and the incremental step where the mask will be next applied on the image. The set of influence is given by E\n(i) S = {E (i) 1 ...E (i) k }. The region of the image with the highest\ninfluence is: r (i) imp = max(E (i) S )\nrepresented by mask region j where X(i)j \u2208 X (i) S . We can define a set of regions that are influential using a threshold value t.\nR(i) = {r(i)j |E (i) j > t,E (i) j \u2208 E (i) S }\nIn our experiments, we first mask the region present at the upper the left corner of the image and then slide the rectangular mask over the image without overlapping previous regions. We do not consider overlapping regions in order to limit the number of different images generated while masking each region of the image.\nR(i) and the corresponding E(i) values are used to draw a heatmap to show the influence. The regions that have a high positive influence are important parts of image, necessary for classification of certain spatial relations. We postulate that the network is looking for the relative position of objects as well as identifying the space between objects to classify images for spatial relations. The fineness or coarseness of the heatmaps can be changed by modifying the size of the mask or the iteration step used."}, {"heading": "E. Analysis of effect of nodes on spatial relations", "text": "Another way to understand how the network learns spatial relations is to analyze the internals of the architecture and isolate sets of nodes that have a positive influence on the classification of a certain spatial relation. This is calculated by measuring the change in cross entropy when a specific node or a group of nodes are ablated (i.e. zeroed out).\nConsider a trained MLP A and its fully connected (FC) layer l. The size of the l is p. The nodes in the layer are N = {n1...np} Let the relations be Y = {y1..yz}. Given an image set X , we first find the baseline cross entropy:\nC(Y ) = {C(i)(y)|i \u2208 X, y \u2208 Y }\nWe ablate a single node at a time and measure change in entropy. Thus each image in the test dataset has an influence value E with respect to the ablated node. The node j has an influence corresponding to E(i)(Y ) that is set of all the influence values for all the relations (influence is calculated per label). The final output is the average influence per node per relation (label). This is to find which nodes in a layer have the highest influence on a spatial relation. Once the nodes are identified, the clusters generated per relation are ablated simultaneously to see the net effect on the classification of a relation."}, {"heading": "IV. SYSTEM ARCHITECTURE & DATASETS", "text": "Figure 3 shows the overall architecture of our system. It consists of two parts:\n\u2022 Preprocessing: The images of size 224x224 are transformed using VGGNet to a feature vector (output of layer FC-7) that has a size of 4096. The image labels are one-hot encoded. \u2022 Model Generation: Once the images are preprocessed, a two layer MLP is trained to detect the spatial relation. The type of relation predicted depends on the method by which the labels are encoded.\nA. Image Preprocessing\nA pre-trained model of a 16-layer VGGNet [27] is used. It requires the input to have a standard size of 224 \u00d7 224 pixels. Hence before transforming the image, it is resized (original pictures have varying number of pixels). The process is completed in a single forward pass. While VGGNet performs object recognition, the feature vector is extracted from layer FC-7 that is the second fully connected layer in the network. VGGNet features rather than the images are used as input to the multi-layer perceptron (figure 3) because features extracted are robust in terms of the kinds of objects detected, and are translation and rotation invariant [24]."}, {"heading": "B. Model Generation", "text": "The extracted image features are fed as inputs to a multi-layer perceptron as shown in figure 3. The MLP contains two fully connected layers. The MLP\u2019s hidden layers are ReLU activated. The dropout rate is 0.5 and a softmax classifier is present in the output layer. Categorical cross entropy is the loss function. An AdamOptimizer calculates the gradient after each batch (of size 10). The learning rate is 0.001.\nThere are two types of datasets used to evaluate the system. A modified version of the SUN09 dataset [22] and a synthetic dataset containing a limited number of objects and relations in the image."}, {"heading": "C. SUN09 Dataset", "text": "The original SUN09 dataset consists of around 12,000 images. Malinowski et. al. [22] take a subset of them and annotate them with spatial prepositions such as above, below,\nbehind and in front of. The images were randomly selected for annotation. The final dataset consists of 53 structured queries (i.e., tuples defined as subject-relation-object) and 11 distinct spatial relations. There are 4468 images for training and 4955 images to test."}, {"heading": "D. Synthetic Dataset", "text": "This dataset is generated using google search on a predefined set of objects, manually selecting sample images and combining them2. It consists 10 types of objects present in the training dataset and 5 in the test dataset. The objects are:\n\u2022 Training: Dog, tiger, table, lamp, TV, sofa, ball, hat, vase and vacuum cleaner.\n\u2022 Test: Deer, lion, drawer, bag, car. Each object above has a variety of images in the dataset. For example, there are 7 different dog images and 5 different TV images. The images contain any two objects either rotated or translated to different locations in an image template with varying background colors. They are then combined to form a single image. Figure 4 shows a sample set of images.\nThe training dataset contains 2628 images while the test contains 432 images. Each one is annotated as object-relationobject. Background colors used in the test are completely different from those used while training.\nThe advantages of the synthetic dataset are that there is a pair-wise object constraint while generating images. All objects annotated are in the foreground and distinct while the SUN09 dataset has many annotations that are between non-significant objects (e.g. figure 8(c))."}, {"heading": "V. EXPERIMENTAL RESULTS & DISCUSSION", "text": ""}, {"heading": "A. Extracting Regions", "text": "Table I shows the accuracy of the network on training as well as test data. We use images from training data (synthetic dataset) that are correctly classified by the network for our analysis.\nWe analyzed 50 training images for each of the 3 spatial relations classes that are correctly classified by the MLP. The objects used for testing are completely separate from the objects in the synthetic dataset used for training. A gray rectangular\n2Python Imaging Library (PIL) is used to perform image manipulation\nmask of size 16 x 16 pixels covers each section of the image iteratively. Since they have been re-sized to 224 x 224 pixels, a total of 196 images are generated, once each region is masked.\nFigures 4 and 6 show the heatmap for some of the synthetic images. The scale of heatmaps differs from image to image. The red regions are the most important, progressively going to blue that are the least. The range of the scale is specific to an image because it is decided based on the maximum and minimum value of E(i) for that image.\nConsider the image from figure 4 where a sofa is beside a lamp. The heat map shows that the regions of the image where the lamp is located has a large increase in cross entropy resulting in a positive E. Thus we see that the network is looking for the relative position of the object while classifying an image as beside. The heatmap generated is consistent (i.e the position of the object is tracked) even when the object is rotated or moved to a separate location in the image. The network is tracking the relative position of other objects with respect to a fixed point (shown in red).\nNow we look at what is being learned by the network in case of the above spatial relation. Refer to the image in figure 6(a) where a TV is above the sofa. It is evident from the heat map that the network is looking for the relative positions of the TV as well as the space between the TV and the sofa. In addition to this, the network also learns to see gaps present between two objects, but this is not always the case.\nIn case of the behind spatial relation (figure 6 (b)), the corresponding heat map shows a high E at the places where the ball is present and that there is a single important location in the image concentrated between the ball and lamp. Thus in case of the \u201cbehind\u201d spatial relation, the network looks at the position of the object while ignoring the rest the image.\nThe heatmaps reveal how the relation is learned by the network. The network is trained with each object placed in different positions in the image and rotated. Figure 7 is an example of the same object (a dog) in different positions and orientations classified correctly. The training and test accuracy in table I show that the network is able to look at relative positions of objects and remains unaffected by translation / rotation of objects. Figure 8 shows heatmaps for sample SUN09 images."}, {"heading": "B. Measuring Influence of Layer Nodes", "text": "We apply the method discussed in section III-E. For this experiment, we have analyzed the training dataset (rather than test) as there is a likelihood to extract groups of nodes to avoid negative influence from the images where the network misclassified. For each class label, we consider the top 25% of nodes out of the total size of the hidden layer such that zeroing\nthem out will result in maximum increase in the cross entropy. We group these into three groups, one per class label. In this way, we get three groups of nodes where each group of nodes affects one particular spatial relation more than others. Figures 5(a) and (b) show the differences in cross entropy vs the group that is being zeroed for the layer FC-0 and FC-1, respectively. Each group has 3 bars, i.e., absolute cost difference, positive cost difference and negative cost difference (made positive), so that each change can be characterized. The graphs show that the groups have little average negative cost (very small bars), confirming their influence is net positive. Tables II and III show the accuracy with respect to each relation when these groups of nodes are ablated. For example group 0 has an average E of 0.29. The entropy change results in a reduction in accuracy of 85.7% because the nodes are not utilized while classifying an image with the label Above. The same is seen for group 1 & 2 where the accuracy of the network to predict Beside & Behind reduces to 8.4% and 20.43%. The classification accuracy for the other labels remains 100%. Thus we can clearly see the existence of these sets of nodes that affect just one particular class label. The existence of such sets of nodes is more evident in layer FC-0 rather than layer FC-1. We do not see the existence of such sets of nodes clearly in the last fully connected layer. One possible reason is that the number of nodes in FC-1 are fewer (256 as compared to 512 in FC-0), so the number of nodes that are common in the three groups of nodes is more."}, {"heading": "VI. CONCLUSIONS & FUTURE WORK", "text": "We have analyzed how an MLP (with a pre-trained CNN) learns spatial relations between objects in an image. We extract image features using CNNs and train a MLP in a supervised manner for spatial relation classification on two datasets: SUN09 and a simplified synthetic dataset. We show that the network pays attention to a certain parts of images while classifying them for spatial relations and that the network looks for relative positions of objects to identify the relation.\nWe also show the existence of sets of nodes representing one particular relation by conducting extensive tests to isolate single nodes that influence a certain relation and how the group behaves when ablated. In future, we would like to represent visual data in a symbolic form by training the network to identify more relations (spatial and others) and objects by designing the network to predict both subject and object labels as well as the relation label. For example, we want to go from an image of a ball above a boy to a representation in RDF triple as (Ball, Above, Boy) or in first order logic as\n\u2203x\u2203y Ball(x) \u2227Ball(y) \u2227Above(x, y)\nAlso, the network can be extended to generate relations for multiple subject-predicate-object combinations in natural images to improve descriptions of the images. We also see the need to create a larger dataset with real world images to train better networks for spatial relations. We plan to use image captioning datasets such as MS COCO [18] and Flickr30k [23] and annotate the images with spatial relations between object pairs by parsing the image descriptions. We would like to apply our analysis method to such real world dataset."}], "references": [{"title": "Vqa: Visual question answering", "author": ["S. Antol", "A. Agrawal", "J. Lu", "M. Mitchell", "D. Batra", "C. Lawrence Zitnick", "D. Parikh"], "venue": "In Proceedings of the IEEE International Conference on Computer Vision,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2015}, {"title": "Dbpedia-a crystallization point for the web of data. Web Semantics: science, services and agents on the world wide web", "author": ["C. Bizer", "J. Lehmann", "G. Kobilarov", "S. Auer", "C. Becker", "R. Cyganiak", "S. Hellmann"], "venue": null, "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2009}, {"title": "Histograms of oriented gradients for human detection", "author": ["N. Dalal", "B. Triggs"], "venue": "In Computer Vision and Pattern Recognition,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2005}, {"title": "Imagenet: A large-scale hierarchical image database", "author": ["J. Deng", "W. Dong", "R. Socher", "L.-J. Li", "K. Li", "L. Fei-Fei"], "venue": "In Computer Vision and Pattern Recognition,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2009}, {"title": "Decaf: A deep convolutional activation feature for generic visual recognition", "author": ["J. Donahue", "Y. Jia", "O. Vinyals", "J. Hoffman", "N. Zhang", "E. Tzeng", "T. Darrell"], "venue": "CoRR, abs/1310.1531,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2013}, {"title": "On the relationship between visual attributes and convolutional networks", "author": ["V. Escorcia", "J.C. Niebles", "B. Ghanem"], "venue": "In Computer Vision and Pattern Recognition (CVPR),", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2015}, {"title": "The ecological approach to visual perception: classic edition", "author": ["J.J. Gibson"], "venue": null, "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2014}, {"title": "Rich feature hierarchies for accurate object detection and semantic segmentation", "author": ["R. Girshick", "J. Donahue", "T. Darrell", "J. Malik"], "venue": "In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition (CVPR),", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2014}, {"title": "R-cnns for pose estimation and action detection", "author": ["G. Gkioxari", "B. Hariharan", "R. Girshick", "J. Malik"], "venue": null, "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2014}, {"title": "Speech recognition with deep recurrent neural networks", "author": ["A. Graves", "A. Mohamed", "G.E. Hinton"], "venue": "CoRR, abs/1303.5778,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2013}, {"title": "Effective use of word order for text categorization with convolutional neural networks", "author": ["R. Johnson", "T. Zhang"], "venue": "CoRR, abs/1412.1058,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2014}, {"title": "Deep visual-semantic alignments for generating image descriptions", "author": ["A. Karpathy", "L. Fei-Fei"], "venue": "In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2015}, {"title": "Deep fragment embeddings for bidirectional image sentence mapping", "author": ["A. Karpathy", "A. Joulin", "F. Li"], "venue": "CoRR, abs/1406.5679,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2014}, {"title": "Learning multiple layers of features from tiny", "author": ["A. Krizhevsky", "G. Hinton"], "venue": null, "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2009}, {"title": "Imagenet classification with deep convolutional neural networks", "author": ["A. Krizhevsky", "I. Sutskever", "G.E. Hinton"], "venue": "Advances in Neural Information Processing Systems", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2012}, {"title": "Image retrieval with structured object queries using latent ranking svm", "author": ["T. Lan", "W. Yang", "Y. Wang", "G. Mori"], "venue": "In Computer Vision\u2013ECCV", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2012}, {"title": "Microsoft coco: Common objects in context", "author": ["T.-Y. Lin", "M. Maire", "S. Belongie", "J. Hays", "P. Perona", "D. Ramanan", "P. Doll\u00e1r", "C.L. Zitnick"], "venue": "In European Conference on Computer Vision,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2014}, {"title": "A computational analysis of the apprehension of spatial relations", "author": ["G.D. Logan", "D.D. Sadler"], "venue": null, "citeRegEx": "19", "shortCiteRegEx": "19", "year": 1996}, {"title": "Do Convnets Learn Correspondence", "author": ["J.L. Long", "N. Zhang", "T. Darrell"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2014}, {"title": "Distinctive image features from scale-invariant keypoints", "author": ["D.G. Lowe"], "venue": "International journal of computer vision,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2004}, {"title": "A pooling approach to modelling spatial relations for image retrieval and annotation", "author": ["M. Malinowski", "M. Fritz"], "venue": "[cs.CV],", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2014}, {"title": "Flickr30k entities: Collecting region-to-phrase correspondences for richer image-to-sentence models", "author": ["B.A. Plummer", "L. Wang", "C.M. Cervantes", "J.C. Caicedo", "J. Hockenmaier", "S. Lazebnik"], "venue": "In Proceedings of the IEEE International Conference on Computer Vision,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2015}, {"title": "CNN features off-the-shelf: an astounding baseline for recognition", "author": ["A.S. Razavian", "H. Azizpour", "J. Sullivan", "S. Carlsson"], "venue": "CoRR, abs/1403.6382,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2014}, {"title": "Viske: Visual knowledge extraction and question answering by visual verification of relation phrases", "author": ["F. Sadeghi", "S.K. Divvala", "A. Farhadi"], "venue": "In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2015}, {"title": "Deep inside convolutional networks: Visualising image classification models and saliency maps", "author": ["K. Simonyan", "A. Vedaldi", "A. Zisserman"], "venue": "arXiv preprint arXiv:1312.6034,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2013}, {"title": "Very deep convolutional networks for large-scale image recognition", "author": ["K. Simonyan", "A. Zisserman"], "venue": "CoRR, abs/1409.1556,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2014}, {"title": "Recursive deep models for semantic compositionality over a sentiment treebank", "author": ["R. Socher", "A. Perelygin", "J. Wu", "J. Chuang", "C.D. Manning", "A.Y. Ng", "C. Potts"], "venue": "In Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2013}, {"title": "Yago: a core of semantic knowledge", "author": ["F.M. Suchanek", "G. Kasneci", "G. Weikum"], "venue": "In Proceedings of the 16th international conference on World Wide Web,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2007}, {"title": "Going deeper with convolutions", "author": ["C. Szegedy", "W. Liu", "Y. Jia", "P. Sermanet", "S. Reed", "D. Anguelov", "D. Erhan", "V. Vanhoucke", "A. Rabinovich"], "venue": "In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition,", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2015}, {"title": "Deconvolutional Networks for Feature Learning", "author": ["M. Zeiler", "D. Krishnan", "G. Taylor", "R. Fergus"], "venue": "In Cvpr,", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2010}, {"title": "Learning Deep Features for Discriminative Localization", "author": ["B. Zhou", "A. Khosla", "A. Lapedriza", "A. Oliva", "A. Torralba"], "venue": null, "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2015}, {"title": "Learning deep features for scene recognition using places database", "author": ["B. Zhou", "A. Lapedriza", "J. Xiao", "A. Torralba", "A. Oliva"], "venue": "Advances in Neural Information Processing Systems", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 2014}, {"title": "Reasoning about object affordances in a knowledge base representation", "author": ["Y. Zhu", "A. Fathi", "L. Fei-Fei"], "venue": "Vision\u2013ECCV", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 2014}], "referenceMentions": [{"referenceID": 1, "context": "Knowledge graphs (KG) such DBpedia [3] and Yago [29] store entities and their relations in the form of RDF triples.", "startOffset": 35, "endOffset": 38}, {"referenceID": 27, "context": "Knowledge graphs (KG) such DBpedia [3] and Yago [29] store entities and their relations in the form of RDF triples.", "startOffset": 48, "endOffset": 52}, {"referenceID": 23, "context": "perform tasks such as image search, visual verification [25] (i.", "startOffset": 56, "endOffset": 60}, {"referenceID": 0, "context": ", to verify the validity of a fact by looking for proof in pictures) and visual question answering [2] (i.", "startOffset": 99, "endOffset": 102}, {"referenceID": 32, "context": "al [34] use a knowledge graph representation to reason about object affordances [8], where the system tries to learn", "startOffset": 3, "endOffset": 7}, {"referenceID": 6, "context": "al [34] use a knowledge graph representation to reason about object affordances [8], where the system tries to learn", "startOffset": 80, "endOffset": 83}, {"referenceID": 19, "context": "Object detection, scene description, pose estimation and other such tasks were commonly solved using SIFT [21] and HOG [4] features.", "startOffset": 106, "endOffset": 110}, {"referenceID": 2, "context": "Object detection, scene description, pose estimation and other such tasks were commonly solved using SIFT [21] and HOG [4] features.", "startOffset": 119, "endOffset": 122}, {"referenceID": 14, "context": "But in recent years, deep neural networks have had tremendous success in diverse fields such as computer vision [16] [9], natural language processing [12] [28] and audio [11].", "startOffset": 112, "endOffset": 116}, {"referenceID": 7, "context": "But in recent years, deep neural networks have had tremendous success in diverse fields such as computer vision [16] [9], natural language processing [12] [28] and audio [11].", "startOffset": 117, "endOffset": 120}, {"referenceID": 10, "context": "But in recent years, deep neural networks have had tremendous success in diverse fields such as computer vision [16] [9], natural language processing [12] [28] and audio [11].", "startOffset": 150, "endOffset": 154}, {"referenceID": 26, "context": "But in recent years, deep neural networks have had tremendous success in diverse fields such as computer vision [16] [9], natural language processing [12] [28] and audio [11].", "startOffset": 155, "endOffset": 159}, {"referenceID": 9, "context": "But in recent years, deep neural networks have had tremendous success in diverse fields such as computer vision [16] [9], natural language processing [12] [28] and audio [11].", "startOffset": 170, "endOffset": 174}, {"referenceID": 14, "context": "in 2012 [16].", "startOffset": 8, "endOffset": 12}, {"referenceID": 7, "context": "CNNs are also able to achieve state-of-the-art performance in many of the aforementioned tasks [9] [10] [33].", "startOffset": 95, "endOffset": 98}, {"referenceID": 8, "context": "CNNs are also able to achieve state-of-the-art performance in many of the aforementioned tasks [9] [10] [33].", "startOffset": 99, "endOffset": 103}, {"referenceID": 31, "context": "CNNs are also able to achieve state-of-the-art performance in many of the aforementioned tasks [9] [10] [33].", "startOffset": 104, "endOffset": 108}, {"referenceID": 17, "context": "intrinsic [19].", "startOffset": 10, "endOffset": 14}, {"referenceID": 13, "context": "There are multiple CNN architectures that have been proposed to classify an object in images such AlexNet [15], VGGNet [27] and Inception [30].", "startOffset": 106, "endOffset": 110}, {"referenceID": 25, "context": "There are multiple CNN architectures that have been proposed to classify an object in images such AlexNet [15], VGGNet [27] and Inception [30].", "startOffset": 119, "endOffset": 123}, {"referenceID": 28, "context": "There are multiple CNN architectures that have been proposed to classify an object in images such AlexNet [15], VGGNet [27] and Inception [30].", "startOffset": 138, "endOffset": 142}, {"referenceID": 4, "context": "One of the key reasons why CNNs are effective is because the network is trained on large datasets (such as imagenet) and can be directly applied (with fine tuning) to perform object recognition on images from different domains (domain adaptation) as well as used for various visual recognition tasks [6].", "startOffset": 300, "endOffset": 303}, {"referenceID": 25, "context": "Like many CNN architectures, VGGNet [27] is trained on the imagenet (ILSVRC) dataset [5].", "startOffset": 36, "endOffset": 40}, {"referenceID": 3, "context": "Like many CNN architectures, VGGNet [27] is trained on the imagenet (ILSVRC) dataset [5].", "startOffset": 85, "endOffset": 88}, {"referenceID": 11, "context": "Output of specific layers are used to describe images [13] (layer FC-7).", "startOffset": 54, "endOffset": 58}, {"referenceID": 15, "context": "objects in images relies on constructing handcrafted features by manually inspecting the dataset [17].", "startOffset": 97, "endOffset": 101}, {"referenceID": 17, "context": ", to identify the relation [19].", "startOffset": 27, "endOffset": 31}, {"referenceID": 20, "context": "al [22] create spatial templates for each relation and then use a bi-directional fragment embedding framework to associate the template with text triplets [14].", "startOffset": 3, "endOffset": 7}, {"referenceID": 12, "context": "al [22] create spatial templates for each relation and then use a bi-directional fragment embedding framework to associate the template with text triplets [14].", "startOffset": 155, "endOffset": 159}, {"referenceID": 29, "context": "al [31] create a deconvolutional network to show the mid-level representations in a convolutional", "startOffset": 3, "endOffset": 7}, {"referenceID": 24, "context": "[26] backpropagate the gradient of the class score with respect to the image pixels to generate an artificial image which is representative of what is learned for that particular class.", "startOffset": 0, "endOffset": 4}, {"referenceID": 18, "context": "[20] prove that despite using large receptive fields, CNNs learn the correspondence between object parts.", "startOffset": 0, "endOffset": 4}, {"referenceID": 5, "context": "[7] provide empirical evidence of attribute centric nodes (ACNs) inside a CNN that are trained to recognize specific objects.", "startOffset": 0, "endOffset": 3}, {"referenceID": 30, "context": "Although this can be achieved by a class activation mapping technique which finds the regions in a single forward pass of the network [32], a fully convolutional neural network without any fully connected layers is required.", "startOffset": 134, "endOffset": 138}, {"referenceID": 25, "context": "A pre-trained model of a 16-layer VGGNet [27] is used.", "startOffset": 41, "endOffset": 45}, {"referenceID": 22, "context": "the multi-layer perceptron (figure 3) because features extracted are robust in terms of the kinds of objects detected, and are translation and rotation invariant [24].", "startOffset": 162, "endOffset": 166}, {"referenceID": 20, "context": "A modified version of the SUN09 dataset [22] and a synthetic dataset containing a limited number of objects and relations in the image.", "startOffset": 40, "endOffset": 44}, {"referenceID": 20, "context": "[22] take a subset of them and", "startOffset": 0, "endOffset": 4}, {"referenceID": 16, "context": "We plan to use image captioning datasets such as MS COCO [18] and Flickr30k [23] and annotate the images with spatial relations between object pairs by parsing the image descriptions.", "startOffset": 57, "endOffset": 61}, {"referenceID": 21, "context": "We plan to use image captioning datasets such as MS COCO [18] and Flickr30k [23] and annotate the images with spatial relations between object pairs by parsing the image descriptions.", "startOffset": 76, "endOffset": 80}], "year": 2017, "abstractText": "Traditional approaches to building a large scale knowledge graph have usually relied on extracting information (entities, their properties, and relations between them) from unstructured text (e.g. Dbpedia). Recent advances in Convolutional Neural Networks (CNN) allow us to shift our focus to learning entities and relations from images, as they build robust models that require little or no pre-processing of the images. In this paper, we present an approach to identify and extract spatial relations (e.g., The girl is standing behind the table) from images using CNNs. Our research addresses two specific challenges: providing insight into how spatial relations are learned by the network and which parts of the image are used to predict these relations. We use the pre-trained network VGGNet to extract features from an image and train a Multi-layer Perceptron (MLP) on a set of synthetic images and the sun09 dataset to extract spatial relations. The MLP predicts spatial relations without a bounding box around the objects or the space in the image depicting the relation. To understand how the spatial relations are represented in the network, a heatmap is overlayed on the image to show the regions that are deemed important by the network. Also, we analyze the MLP to show the relationship between the activation of consistent groups of nodes and the prediction of a spatial relation. We show how the loss of these groups affects the network\u2019s ability to identify relations.", "creator": "LaTeX with hyperref package"}}}