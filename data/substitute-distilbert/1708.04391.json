{"id": "1708.04391", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-Aug-2017", "title": "Learning body-affordances to simplify action spaces", "abstract": "controlling embodied agents wherein many actuated degrees of acceptance is a challenging task. we propose a method programmer can discover and interpolate between context dependent high - level actions or body - affordances. advocates suggest an abstract, low - dimensional interface indexing high - dimensional and time - extended action policies. here method is related to recent self - proaches in the machine learning literature whilst is conceptually simpler and easier to implement. more specifically our method requires the choice of isolated n - dimensional target sensor space that is endowed with zero distance vector. the method then learns another also n - dimensional embedding of possibly reactive body - affordances that spread as far as possible throughout this target sensor matrix.", "histories": [["v1", "Tue, 15 Aug 2017 04:07:57 GMT  (372kb,D)", "http://arxiv.org/abs/1708.04391v1", "4 pages, 4 figures"]], "COMMENTS": "4 pages, 4 figures", "reviews": [], "SUBJECTS": "cs.AI cs.RO", "authors": ["nicholas guttenberg", "martin biehl", "ryota kanai"], "accepted": false, "id": "1708.04391"}, "pdf": {"name": "1708.04391.pdf", "metadata": {"source": "CRF", "title": "Learning body-affordances to simplify action spaces", "authors": ["Nicholas Guttenberg", "Martin Biehl", "Ryota Kanai"], "emails": ["ngutten@gmail.com,", "martin@araya.org,", "kanair@araya.org"], "sections": [{"heading": null, "text": "I. INTRODUCTION\nIn order for robots to be able to learn to achieve higherlevel tasks efficiently they need an awareness of what their embodiment can achieve in the world. This work contributes to the development of automatic ways to endow many degrees of freedom (DOFs) robots with an awareness of their capabilities. In other words, we would like to algorithmically learn the affordances that the body of a robot provides to its controller.\nA fundamental assumption of this work is that not all possible sequences of high-dimensional actuation signals are equally useful. An agent will usually only need a lowdimensional subset of its action space independent of the eventual tasks\nthat it is faced with. If this is the case it should be possible to learn a low-dimensional embedding of these actions, action-sequences, or policies before going on to more specific applications or higher level cognitive development. For lack of a better term we here call the embedded policies \u201cbodyaffordances\u201d. The body-affordances then provide a compressed interface between agent controller and it\u2019s body. Awareness of its capabilities corresponds to access to the possible outcomes of these body-affordances. In this work we mostly focus on learning the body-affordances but our method also results in predictions of according outcomes of the body-affordances which could be fed to the controller as well.\nA hint that the above assumption may be justified can be found in biological agents. These often perform dimensional reduction by means of central pattern generators (CPG) [1]. These convert low dimensional signals from higher cognitive levels into time-extended, high-dimensional, coordinated, and reflexive signals that realise appropriate locomotive gaits. These appropriate gaits are either learned during infancy or in other cases (e.g. antelopes) possibly hardwired by evolution. Rather than just providing a reduction of the action sequences the CPGs also directly process sensor inputs to adapt their output. In this sense they provide a lower dimensional choice\nof closed-loop policies rather than open-loop action sequences. In our language, the set of possible signals to the CPG corresponds to the body-affordances provided to the higher cognitive level.\nOther hints that the assumption is justified come from recent advances in reinforcement learning with sparse rewards. There the high-dimensionality of the problem comes less from a high number of actuated DOF and more commonly from the timeextended sequences of actions that have to be invoked in the right combination to get rewards. In the option framework [2] time-extended policies called options are derived and then added to the choice of possible (elementary) actions. Task independent ways in which the options should be derived are a matter of current research (see Sec. III) and the present work can be seen as proposing such a method as well.\nThe main intuitions behind our approach are: 1) actions or policies can be clustered together to a body-\naffordance if they lead to the same outcomes 2) body-affordances should achieve as many different out-\ncomes as possible 3) small changes in the body-affordance should lead to\nsmall changes in the outcome. How these can be achieved is described in the next section. We note that since we use a predictive network to speed up the learning process our method also results in a way to generate predictions of the outcomes of the body-affordances from the current state. If we feed these predictions back as sensorvalues to a higher level controller together with the body-affordance interface the agent can be seen as being aware of the consequences of its actions."}, {"heading": "II. METHOD", "text": "For our method to work, it is necessary to explicitly choose a continuous standard by which outcomes should be considered distinguishable. This consists of defining a distance d between outcomes in some target (sub)space ST \u2286 S of the space of sensorvalues S. Here, we use an explicit time horizon h to determine the point at which a sensor state is considered an outcome, but this could be generalised to variable time horizons by including an explicit stopping action.\nIt is also necessary to choose the dimensionality and coordinate representation that will be used to construct a control space \u2126 to contain the learned body-affordances. In our cases, we pick a finite n-dimensional cubic grid \u2126G \u2282 \u2126 of side length k whose vertices \u03c9i \u2208 \u2126G (here i \u2208 [1, kn]) are body-affordances that we use for training. In the case that \u2126G reliably leads to a regular grid of outcomes SG \u2282 ST (see\nar X\niv :1\n70 8.\n04 39\n1v 1\n[ cs\n.A I]\n1 5\nA ug\n2 01\n7\nbottom right of Fig. 1) that pervades ST we can then determine a body-affordance that approximately reaches a target point sTt+h by finding the nearest neighbouring outcomes s G t+h \u2208 SG and then linearly interpolating the values of the according \u03c9i \u2208 \u2126G.\nFirst, we train a neural network (the proposer network) \u03c0\u03b8 : S \u00d7\u2126\u2192 A to map the current state (or sensor value) st \u2208 S and vertex body-affordances \u03c9i \u2208 \u2126G to actions at \u2208 A (or policies) that lead to maximally different outcomes sTt+h \u2208 ST using the distance on the target space. In order to obtain the outcome sTt+h for a given time-horizon h the body-affordance \u03c9i is fixed such that \u03c0\u03b8( . , \u03c9i) : S \u2192 A corresponds to a fixed reactive policy that interacts with the environment for h timesteps. The simplest way to force the outcomes to be different and thus the body-affordances to pervade the target space is to maximise the minimum distance between them, but more sophisticated methods are possible (see e.g. Sec. IV).\nIn general the environment is a black box which we cannot explicitly differentiate so that learning will be slow. However, we can train a forward predictive model to emulate the environment, and then optimise the proposer with respect to that. So in addition to the proposer \u03c0\u03b8 we train a predictor network \u03b3\u03c6 : S \u00d7 A \u2192 S which maps a given sensor value st \u2208 S (not ST ) and an action at \u2208 A to a next estimated sensor value s\u0302t+1. We can then chain proposer and predictor together starting from a given initial state (or sensor value) st to produce estimated outcomes s\u0302Tt+h \u2208 ST (see Fig. 1)1.\nNote that since both networks need to understand the sensorvalues st \u2208 S, it is convenient to allow both networks to share a few layers purely for processing sensor inputs, before fusing with the proposed action (for the predictor) or the bodyaffordance (for the proposer).\n1In principle this method can be augmented by allowing the predictor and proposer networks to also pass themselves latent variables.\nThe predictor can be trained via supervised learning, minimising the mean squared error between the predicted outcome and the actual outcome. If we have sufficient data in the form of triplets (st, at, st+1) about a robot/agent both proposer \u03c0\u03b8 and predictor \u03b3\u03c6 can be trained in an offline manner. It is also possible to add data continuously during training. In all cases it is generally necessary to perform several gradient descent steps per observation in order to extract all of the useful information contained in that example.\nIn practice, it can be useful to use a partially trained proposal network to generate the action policies which the predictor learns to predict, since that will cause the predictor to become more specialised towards what the proposal network is actually trying to do. To this end, training can involve a cycle consisting of:\nAlgorithm 1 Training procedure 1: Collect triplets (st, at, st+1) based on proposal network\nplus random variation; 2: Add to experience dataset; 3: Train predictor \u03b3\u03c6 to convergence on the entire dataset; 4: Train proposer \u03c0\u03b8 to convergence on the predictor; 5: Repeat"}, {"heading": "III. RELATED WORK", "text": "While the three intuitions mentioned above are reasonably straightforward, they are also closely related to the more theoretically principled approach of selecting the body-affordances so that they maximise empowerment [3]. Empowerment is the channel capacity from the actions (here the body-affordances) to future sensor values. It is maximised if the variability (more precisely the entropy) of the future sensors is high and the body-affordances can reliably determine them (conditional entropy of the sensor values with respect to the body-affordances is low). Empowerment has been used more directly in order to derive body-affordances (under a different name) in [4].\nTheir work ultimately uses a method where options are defined implicitly with respect to outcomes. However, they comment that an intermediate learned hidden layer representation could be used to obtain a lower-dimensional option/affordance space. We tried several implementations based on this idea, but found that problems could arise from the fact that the training data only mapped to some subset of the option space. Points outside of the subset would generally map to nonsensical action policies.\nOur approach attempts to address this by fixing the structure of the latent space to be completely covered by points that the network must make separate in the outcomes. As a consequence, we lose the ability to directly estimate the information about the actions contained in the final sensorvalues (which would be used to calculate empowerment), but instead attempt to maximise empowerment by choosing actions for the grid of body-affordances \u2126G which result in maximally separated outcomes. Under the assumption that the source of unreliability in achieving an outcome is Gaussian noise with\nthe same variance for each body-affordance our method also maximises empowerment.\nEarlier work that also uses empowerment to find options are [5], [6]. However, this work only treats finite action spaces and it is unclear whether it scales to continuous spaces. Another interesting and successful approach to dimensional reduction [7] focuses more on finding policies that independently control features in the environment than maximising control itself. A combination with a control maximising method would be interesting further work."}, {"heading": "IV. EXPERIMENTS", "text": "We use Bullet physics engine [8] as an environment simulator, and implement our networks in pytorch [9]. Code for our experiments is available at https://github.com/arayabrain/ AffordanceMapping."}, {"heading": "A. Reaching task", "text": "We first consider the case in which the agent is learning to take single, complex actions \u2014 for example, it has a body with many DOF and we wish to represent that large set of DOF with a much lower-dimensional body-affordance space \u2126, but we aren\u2019t concerned yet with sequences of multiple actions over time.\nThe task we use is to control the reaching behaviour of a segmented armature. The armature is composed of 9 cylindrical segments connected in sequence by 8 hinge joints, which can rotate only within a limited range of angles. The armature can reach points within a roughly hemispherical shell around its base of radius 4 units. In addition, the environment includes a variety of randomly positioned spherical and cubical obstacles. A 24 pixel resolution depth camera is suspended above the armature and provides sensory information about the environment to the predictor and proposer networks.\nThe target space ST is the space of reachable positions of the tip of the armature. While this is technically threedimensional only an approximately two-dimensional submanifold can be reached. We choose the two-dimensional grid\n\u2126G with k = 9 such that it covers all of \u2126 = [\u22121, 1]\u00d7 [\u22121, 1]. To force differences between the outcomes sGt+1 of the \u03c9i \u2208 \u2126G we maximise their minimum distance. In addition, we add a term to the loss function minimizing the distance between neighboring pairs of grid points, which helps ensure the smoothness of the grid.\nIn practice we found it necessary to use very small learning rates for the proposer to maintain the smoothness of the target space with respect to the body-affordance space.\nWe iteratively generated a dataset according to the above algorithm, consisting of 200000 random environments and joint angles and 90000 environments and joint angles taken from subsequent partially-trained proposal networks. The final predictor was trained from scratch for 150 epochs on the full dataset, trying to minimise the mean-squared error of the final position of each segment of the armature, achieving a final mean squared error of 0.076 on a held-out testing set of 5000 environments and angles. Given that the reachable space is a hemisphere of radius 4, this corresponds to about a 4% positioning error in predicting where the tip will end up. An example of actual versus predicted points is shown in Fig. 2b.\nIn Fig. 2a, we show the outcome grid SG in the absence of any environmental obstacles. Since our body-affordance space \u2126 has a planar geometry, there are some areas where the grid does not extend over the entirety of the reachable hemisphere, but in general those points are fairly close to the opposing side of the outcome grid. As a result, the interpolation scheme mentioned in Sec. II could be made to work. The outcome grid SG gives an idea of what the reacher arm is able to reach, while affording this to a controller via a 2 DOF interface rather than an 8 DOF one.\nWhen we add obstacles, the proposer is still able to maintain a fairly uniform coverage of the reachable space. In Fig. 3, we show an overlay of the different configurations of the reacher\nin the presence of different obstacles corresponding to points on the proposed outcome grid (top row). Compared to the case of simply transplanting the body-affordances from the obstacle-free environment (bottom row), the proposed outcome grid is much more uniform even when the reacher goes from being fairly unconstrained to being so constrained that it loses the ability to bend at the trunk."}, {"heading": "B. Closed loop control: hexapod", "text": "We now consider the case of learning multiple-action bodyaffordances of a hexapod robot. The hexapod has three hinge joints per leg, each of which is controlled via a target angle. Since we are concerned with locomotion specifically, we provide a sinusoidal clock signal to the model and ask the actions to determine the phase angle and amplitude for how that clock signal is applied at each joint. The robot has its centre of mass position and orientation as well as the joint angles as sensor inputs, and provides 36 actions at 5 time points during a run. We reduce this 180 dimensional policy space down to a 2 DOF body-affordance space \u2126, using the final in-plane displacement of the centre of mass as the target space ST .\nWe find that iterative training predictor and proposer is more important to keep the predictor accurate compared to the reacher. We also find that body-affordance space can be very discontinuous due to collisions of the feet with the ground. To increase robustness, we add noise to the sensor and action values when training the predictor, and also ask the predictor to assess its own uncertainty by outputting the most likely parameters of a Gaussian distribution modelling the outcome rather than just a single estimated point. We then add a regularising term to the proposer\u2019s loss function equal to \u2212\u03b1 log(\u3008\u03c3\u3009) where \u03b1 = 0.01 is the strength of the regularisation and \u3008\u03c3\u3009 is the mean standard deviation over all predicted variables. This encourages the proposer to avoid high uncertainty points while trying to spread out the outcome grid.\nThe resulting outcome grid and corresponding centre of mass motions are shown in Fig. 4. We observe that the hexapod has learned to move its centre of mass quite some distance away from its starting point. The robot is 2 units in radius, but after 10 cycles of its gait it has moved up to 10 units away in the most extreme cases. The body-affordances enable it to reach a number of different final positions, so that the hexapod not only learns to walk but can also dynamically change the target to which it is walking. The outcome grid is noisier than in the case of the reacher (though significantly less noisy than when we train the predictor without asking for uncertainty estimates), and there is some overall rotation which seems to be due to the orientation of the centre of mass drifting during the actual policy playout."}, {"heading": "V. CONCLUSION", "text": "We proposed and tested a method for dimensional reduction of action spaces that learns closed loop controllers that provide a low-dimensional interface to higher-level control. We were able to construct 2 DOF interfaces for both, 8 DOFs of a robot\narm and a 180 DOF time-extended hexapod action space. In the case of the hexapod, the learned control space extended to the discovery of locomotive gaits, allowing the robot to reach different points on the plane. Furthermore, the control spaces produced by this method tend to be smooth and interpolatable.\nIn the future, we would like to evaluate the effect that using these intermediate controllers has on the rate of reinforcement learning at higher levels, to directly test whether or not this addresses issues of sparse rewards. Furthermore, we would like to see if it is possible to relax the requirement to impose a distance metric on the outcome space while retaining the guarantee of complete coverage over the option space."}], "references": [{"title": "Central pattern generators for locomotion control in animals and robots: A review", "author": ["A.J. Ijspeert"], "venue": "Neural Networks, vol. 21, no. 4, pp. 642\u2013653, May 2008. [Online]. Available: http://www.sciencedirect.com/ science/article/pii/S0893608008000804", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2008}, {"title": "Between mdps and semi-mdps: A framework for temporal abstraction in reinforcement learning", "author": ["R.S. Sutton", "D. Precup", "S. Singh"], "venue": "Artificial intelligence, vol. 112, no. 1-2, pp. 181\u2013211, 1999.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1999}, {"title": "Empowerment: A universal agent-centric measure of control", "author": ["A.S. Klyubin", "D. Polani", "C.L. Nehaniv"], "venue": "Evolutionary Computation, 2005. The 2005 IEEE Congress on, vol. 1. IEEE, 2005, pp. 128\u2013135. [Online]. Available: http://ieeexplore.ieee.org/abstract/document/1554676/", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2005}, {"title": "Variational Intrinsic Control", "author": ["K. Gregor", "D.J. Rezende", "D. Wierstra"], "venue": "arXiv:1611.07507 [cs], Nov. 2016, arXiv: 1611.07507. [Online]. Available: http://arxiv.org/abs/1611.07507", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2016}, {"title": "Impoverished Empowerment: Meaningful Action Sequence Generation through Bandwidth Limitation", "author": ["T. Anthony", "D. Polani", "C.L. Nehaniv"], "venue": "Advances in Artificial Life. Darwin Meets von Neumann, ser. Lecture Notes in Computer Science. Springer, Berlin, Heidelberg, Sep. 2009, pp. 294\u2013301. [Online]. Available: https://link.springer.com/chapter/10. 1007/978-3-642-21314-4 37", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2009}, {"title": "General Self-Motivation and Strategy Identification: Case Studies Based on Sokoban and Pac-Man", "author": ["\u2014\u2014"], "venue": "IEEE Transactions on Computational Intelligence and AI in Games, vol. 6, no. 1, pp. 1\u201317, Mar. 2014.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2014}, {"title": "Independently Controllable Features", "author": ["V. Thomas", "J. Pondard", "E. Bengio", "M. Sarfati", "P. Beaudoin", "M.-J. Meurs", "J. Pineau", "D. Precup", "Y. Bengio"], "venue": "arXiv:1708.01289 [cs, stat], Aug. 2017, arXiv: 1708.01289. [Online]. Available: http://arxiv.org/abs/1708.01289", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2017}], "referenceMentions": [{"referenceID": 0, "context": "These often perform dimensional reduction by means of central pattern generators (CPG) [1].", "startOffset": 87, "endOffset": 90}, {"referenceID": 1, "context": "In the option framework [2] time-extended policies called options are derived and then added to the choice of possible (elementary) actions.", "startOffset": 24, "endOffset": 27}, {"referenceID": 2, "context": "While the three intuitions mentioned above are reasonably straightforward, they are also closely related to the more theoretically principled approach of selecting the body-affordances so that they maximise empowerment [3].", "startOffset": 219, "endOffset": 222}, {"referenceID": 3, "context": "Empowerment has been used more directly in order to derive body-affordances (under a different name) in [4].", "startOffset": 104, "endOffset": 107}, {"referenceID": 4, "context": "Earlier work that also uses empowerment to find options are [5], [6].", "startOffset": 60, "endOffset": 63}, {"referenceID": 5, "context": "Earlier work that also uses empowerment to find options are [5], [6].", "startOffset": 65, "endOffset": 68}, {"referenceID": 6, "context": "Another interesting and successful approach to dimensional reduction [7] focuses more on finding policies that independently control", "startOffset": 69, "endOffset": 72}], "year": 2017, "abstractText": "Controlling embodied agents with many actuated degrees of freedom is a challenging task. We propose a method that can discover and interpolate between context dependent high-level actions or body-affordances. These provide an abstract, low-dimensional interface indexing high-dimensional and timeextended action policies. Our method is related to recent approaches in the machine learning literature but is conceptually simpler and easier to implement. More specifically our method requires the choice of a n-dimensional target sensor space that is endowed with a distance metric. The method then learns an also n-dimensional embedding of possibly reactive body-affordances that spread as far as possible throughout the target sensor space.", "creator": "LaTeX with hyperref package"}}}