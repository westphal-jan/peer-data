{"id": "1709.01672", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "6-Sep-2017", "title": "Throughput Optimal Decentralized Scheduling of Multi-Hop Networks with End-to-End Deadline Constraints: II Wireless Networks with Interference", "abstract": "consider a multihop wireless database serving multiple flows in which any link interference constraints are described by a link interference graph. for such communications network, we design routing - scheduling policies that maximize the end - to - end timely throughput of the network. timely policy ensuring multiple flow $ f $ is quoted as the average rate at which packets joining flow $ f $ reach their destination node $ d _ f $ within their deadline.", "histories": [["v1", "Wed, 6 Sep 2017 04:56:43 GMT  (923kb,D)", "http://arxiv.org/abs/1709.01672v1", null], ["v2", "Tue, 12 Sep 2017 03:58:18 GMT  (1236kb,D)", "http://arxiv.org/abs/1709.01672v2", null]], "reviews": [], "SUBJECTS": "cs.NI cs.LG cs.NE cs.SY", "authors": ["rahul singh", "p r kumar", "eytan modiano"], "accepted": false, "id": "1709.01672"}, "pdf": {"name": "1709.01672.pdf", "metadata": {"source": "CRF", "title": "Throughput Optimal Decentralized Scheduling of Multi-Hop Networks with End-to-End Deadline Constraints: II Wireless Networks with Interference", "authors": ["Rahul Singh", "Eytan Modiano"], "emails": [], "sections": [{"heading": null, "text": "Our policy has several surprising characteristics. Firstly, we show that the optimal routing-scheduling decision for an individual packet that is present at a wireless node i \u2208 V is solely a function of its location, and \u201cage\u201d. Thus, a wireless node i does not require the knowledge of the \u201cglobal\u201d network state in order to maximize the timely throughput. We notice that in comparison, under the backpressure routing policy, a node i requires only the knowledge of its neighbours queue lengths in order to guarantee maximal stability, and hence is decentralized. The key difference arises due to the fact that in our set-up the packets loose their utility once their \u201cage\u201d has crossed their deadline, thus making the task of optimizing timely throughput much more challenging than that of ensuring network stability. Of course, due to this key difference, the decision process involved in maximizing the timely throughput is also much more complex than that involved in ensuring network-wide queue stabilization. In view of this, our results are somewhat surprising.\nSecondly, the complexity of algorithms that obtaining the policy scales linearly with the number of links present in the network. In case the network parameters are unknown, we derive iterative \u201conline learning\u201d algorithms that yield the optimal policy.\nWe divide the available bandwidth into multiple sub-channels, and allow a policy to activate a set of non-interfering links on each of the subchannels. We consider several types of constraints on the bandwidth availability. When the wireless network is constrained by the average bandwidth utilization, then the obtained policy is shown to be optimal.\nIn case the wireless network has to operate under a hard constraint on the available bandwidth, we truncate the policy obtained for the network with average bandwidth constraints in order that the bandwidth utilized by it is \u2264 K units in each time-slot. We show that this truncated policy is asymptotically optimal as the network traffic is scaled to \u221e.\nI. INTRODUCTION For multi-hop networks serving real-time applications, data packets typically have a deadline and it is important to ensure that a maximum fraction of the packets reach their destination within the deadline. Currently the performance metric of throughput optimality, i..e, the property of ensuring queue stability for maximal set of arrival vectors, is widely popular\nin designing network control policies. Backpressure policy is known to be throughput optimal under very general conditions [1], [2]. Similarly the Q-CSMA scheme, which combines backpressure routing along with the CSMA algorithm to find the maximum weight matching, is known to be throughput optimal for scheduling traffic in wireless networks under link interference constraints [3], [4]. However, the goal of a throughput maximizing policy does not amount to ensuring that the packets meet stringent end-to-end deadlines. Thus, for example, the backpressure policy, or its wireless version Q-CSMA, is known to have poor performance with respect to average delays [5]\u2013[7]. Thus, we consider the problem of scheduling packets for multi-hop wireless interference network in which data packets have stringent deadlines that has to be met.\nHowever, designing an optimal policy for maximizing the timely throughput is much more complicated than ensuring the throughout optimality since the timely throughput attained by a policy is \u201chighly sensitive\u201d to its routing-scheduling decisons. This is the case because the utility earned from a single packet \u201cdrops to 0\u201d in a discontinuous fashion as soon as its age has crossed its deadline, and hence even a minute fluctuation in the network bandwidth or a small deviation from the optimal decision affects the timely thoughput significantly.\nFor a network control policy, it is highly desirable that it is decentralized, meaning that the wireless nodes do not need to know the \u201cglobal\u201d state of the system denoted X(t). The backpressure policy is decentralized, in the sense that a node needs to know the queue lengths of only its neighbouring nodes, i.e, the nodes that are connected to it via an outgoing link. However, as depicted in Fig. 1, it seems unlikely that the timely throughput maximization problem has a decentralized solution.\nIn this paper we derive a new class of policies that not only maximize the timely throughput, but are also highly decentralized in the sense that a wireless ndoe only needs to know the age of the packets present with it in order to make scheduling decisions. This eliminates the need to share any information amongst the nodes.\nIn a companion paper [8], we developed a theoretical framework and proposed decentralized policies that maximize the timely-throughput in a multi-hop stochastic network. This\nar X\niv :1\n70 9.\n01 67\n2v 1\n[ cs\n.N I]\n6 S\nep 2\n01 7\npaper extends the ideas therein to the set-up of wireless networks in which the links suffer from wireless interference."}, {"heading": "II. CONTRIBUTIONS AND PAST WORKS", "text": "We consider the problem of designing efficient scheduling policy for multihop wireless networks in which the data packets have a deadline associated with their deliveries.\nAs described in Fig. 1, the timely throughput is \u201chighly sensitive\u201d to the routing-scheduling decisons because the utility earned from a single packet drops to 0 in a discontinuous fashion as soon as its age crosses its deadline. Thus, we cannot use the fluid model, which is commonly used in combination with Lyapunov techniques in order to establish throughput optimality. We have to resort to directly solving the stochastic network model rather than its fluid approximation. The policy provided by us is decentralized, and its complexity scales linearly with the network size, thus addressing the crucial problem of meeting end-to-end packet deadlines, that is typically encountered in multi-hop scheduling in wireless networks.\nWe pose the problem of finding the timely throughput maximizing policy as an Markov Decision Process (MDP) in Section IV. However, the MDP formulation is intractible since the resulting policy is centralized. We then devise a novel approach to decentralized stochastic control under constraints in Section VI by replacing the hard versions of the i) link interference, and ii) network-wide bandwidth availability constraints, by their \u201csofter versions\u201d which involve time averages of the corresponding constraint violations. This relaxation is in inspired by Whittle\u2019s relaxation for the Restless Multiarmed Bandit problem. This relaxation of the constraints to their soft versions leads us to a constrained MDP (CMDP).\nWe first deal exclusively with the optimal scheduling problem under link-level average constraints, and hence ignore the wireless interference completely. Since the primal CMDP is intractible we then consider the dual version of the CMDP, and show that it is much simpler to solve. This reduction in complexity results from the realization that the Lagrangian with the multiplier set equal to \u03bb = {\u03bb`} can be viewed as the sum of the rewards earned by the individual data packets, where the reward of a single packet is equal to its timely throughput minus the price it pays for using network bandwidth. Since the optimization of reward of an individual packet can be performed independently of other packets present in the network, this means that the evaluation of dual function D(\u03bb), and consequently its optimization (max\u03bb\u22650D(\u03bb)) can be performed in a decentralized manner. We then use the strong duality property of linear programs to deduce a highly decentralized policy denoted \u03c0? for the primal CMDP that can be computed in a distributed way.\nWe then come back to original problem of scheduling under wireless interference constraints. We introduce a new variant of the commonly used CSMA protocol in order to allocate the total bandwidth amongst various independent sets in a decentralized way. Then, we consider a scaling of the network, under which the total available bandwidth, and the traffic arrival rates are scaled by a parameter N . The total bandwidth is then divided into N \u201corthogonal\u201d channels, and CSMA protocol is used on each of them independently. The policy \u03c0?, that was optimal under link-level average bandwidth constraints is then modified to yield a policy \u03c0\u0303 for the network with interference. We then use show that as N \u2192 \u221e, the timely throughput of \u03c0\u0303 approaches within O( \u221a N) of the optimal policy, and hence \u03c0\u0303 is asymptotically optimal. The proof relies on the structure of the policy \u03c0\u0303, combined with a \u201cbandwidth smoothing\u201d that is achieved by using independent CSMA counters on each of the orthogonal subchannels.\nWe highlight some key differences between the manner in which we utilize the CSMA protocol, from the commonly used CSMA. CSMA has been commonly used to provide decentralized channel access. The CSMA \u201caggression parameter\u201d can be modulated, as in [9] based on the network queue lengths in order to ensure the throughput optimality property. Since the focus of these works has been on throughput optimality, by letting the aggression rate r` of the CSMA counters continually adapt to the mismatch between the traffic arrival\nintensity at link ` and the time-average bandwidth provided to the link ` (which is an increasing function of r`), the QCSMA scheme achieves its throughput optimality. However, since in our case, the contribution of a single packet towards the timely throughput heavily depends on the actual value of the channel capacities on each link ` belonging to its source-destination path, we need to ensure that the bandwidth fluctuations of each link ` in the network are \u201csmall\u201d over the entire duration that a packet remains in the network. Thus, we divide the total available bandwidth into N subchannels, each of unit bandwidth, and assume that each link ` utilizes independent CSMA counters on each of these N orthogonal sub-channels in order to attain channel access. Due to \u201ccentral limit theorem type\u201d bandwiwdth smoothing, and due to the property of \u03c0\u0303, we are able to ensure that the network timely throughput is not affected much by having CSMA based channel access mechanism, as opposed to a centralized controller. This optimality result can be viewed as a large deviations control of timely throughput of wireless networks.\nThe CSMA aggression parameter r is adjusted based on the feedback received on the link prices, and we utilize a gradient decent based scheme in order to converge to a locally optimal solution. Such a deficiency arises because the optimization problem is non-convex.\nThe problem of scheduling traffic in order to satisfy timely throughput constraints of multiple clients being served by a single-hop wireless network is fairly well-understood by now [10]\u2013[19]. For this single-hop network, simple to implement greedy policies are shown to be optimal. However, the problem of extending the approach to a multi-hop network has been open for quite some time, though several heuristics have been proposed [20], or a fraction of the maximum achievable timely-throughput has been attained [21]."}, {"heading": "III. SYSTEM DESCRIPTION", "text": "Network Description : The wireless network is described by a graph G = (V, E), where V is the set of wireless nodes, and E is the set of directed edges of the form (i, j), i, j \u2208 V . Associated with each edge ` = (i, j) is a rate C` denoting that node i can attempt transmission of C` packets to node j in a single time slot. A packet transmission can fail due to to either the unreliability of the wireless channel, or the interference caused by other concurrent wireless transmissions. Assuming that no interfering links are transmitting, a transmission on a link ` in a time slot t succeeds with a probability p`. The quantity p` is called the channel reliabilty of link `. Throughout we assume that the random outcomes of packet transmissions are independent across time and links.\nInterference Model : We model wireless interference constraints via an \u201cedge interference graph\u201d. It is an undirected graph in which each vertex corresponds to a wireless link from the set E . There is an undirected edge between two nodes `1, `2 if and only if the links `1 and `2 interfere, i.e., if `1, `2 are activated simultaneously, then the packet transmissions occurring on both the links fail.\nLet I be the set comprising of the maximal independent sets of the link interference graph. We denote the maximal independent sets by IS1, IS2, . . .. Each maximal independent set IS \u2208 I consists of links ` \u2208 E that do not interfere with each other, because they are not connected by an edge in the edge interference graph. Moreover any link ` that does not belong to IS definitely interferes with at least one link in IS because IS is maximally independent.\nTherefore, at any time t, a scheduling policy \u03c0 is restricted to choosing an IS \u2208 I and activating the corresponding links.\nMultiple Flows: The network is shared by F flows, where each flow f has a source node sf and a destination node df . We suppose that time is slotted, and the network evolves at tim slots t = 1, 2, . . .. The time-duration of a single time-slot is equal to the time taken to attempt transmission of C` packets on link ` \u2208 E . The packets for flow f arrive at their source sf in an i.i.d. fashion across time. We assume that the packet arrival process is uniformly bounded across flows and time. Since a source-destination pair (sf , df ) need not be a link, packets will typically need to traverse multihop paths before reaching their destination."}, {"heading": "IV. MULTI-HOP TIMELY THROUGHPUT", "text": "We define the timely throughput metric for a multihop wireless network described in the previous section. Let \u03c4 \u2265 1 be an integer which represents the deadline for packet deliver, i.e., it is the maximum allowable end-to-end delay that a packet may incur.\nMultihop Timely Throughput: We define the timely throughput D\u0304f of a flow f as the average number of packets per unit time of flow f that reach the destination node df within \u03c4 time-slots from the time they are generated at the source node sf 1,\nD\u0304f := lim T\u2192\u221e\n1 T E { T\u2211 t=1 Df (t) } ,\nwhere Df (t) is the number of flow f packets delivered at time t to the destination node df within \u03c4 time-slots from the time they were generated at sf . The expectation is under the probability measure induced by the scheduling policy \u03c0 under use, the packet arrival processes and the random states of wireless links. We will denote the average value of Df (t) by D\u0304f , so that D\u0304f is the timely throughput of flow f . Similarly, time-averages corresponding to a stochastic process X(t) will be denoted by X\u0304 .\nNetwork State: The state of an individual packet at time t is described by,\n1) the node i \u2208 V at which it is present, and, 2) the age (time elapsed since generation) of the packet.2\n1Throughout the paper, we assume that the averages corresponding to stochastic processes of interest converge almost surely. This is not restrictive since we are optimizing over finite state Markov processes, which always admit a stationary policy that is optimal. Since a time-homogenous finitestate Markov chain is necessarily positive recurrent, they admit almost sure limits. Thus, we can replace lim sup by lim etc.\n2 We note that the age of a packet can be easily deduced by time-stamping it at the time it was generated at its source node.\nThe state of the network at time t, denoted X(t), is described by specifying the state of each packet that is present in the network, for each flow f . We note that for conventional networks that are designed to be throughput or delay optimal do not need to keep track of the ages of packets. However, in our case the age of a packet has to be taken into account because a packet delivered after its age has crossed \u03c4 does not contribute to timely throughput.\nPolicy: A policy \u03c0 maps X(t), the system state at time t, to an action U(t), which is uniquely described by the following i) the independent set IS that has to be activated at time t, ii) the packets that are to be transmitted on each link ` \u2208 IS. Thus, a policy \u03c0 has to make both routing and scheduling decisions simultaneously.\nThe MDP for Timely Throughput Maximization: The problem of maximizing a weighted sum of timely throughputs can be posed as the following MDP,\nmax \u03c0 \u2211 f \u03b2f D\u0304f , (1)\nwhere \u03c0 is a policy, and the weights \u03b2f \u2265 0 allow the network operator to prioritize the various packets on the basis of their relative importance of their timely-throughputs.\nComplexity of Solving the MDP (1): The size of the statespace corresponding to MDP (1) is (|V |\u03c4)B , where B is a bound on the number of packets that can be present in the network at any given time. Thus it is computationally infeasible to solve (1). Secondly, the resulting optimal policy will prescribe the optimal action U(t) as a function of the network state X(t), and hence calls for a centralized controller. This again is quite impractical."}, {"heading": "V. ORTHOGONAL CHANNELS", "text": "Our results will be asymptotic in nature, i.e., the resulting policy will be shown to be nearly optimal as the network capacity is scaled to \u221e. Therefore, we will slightly enhance the system model.\nWe will assume that the total bandwidth available to the wireless network is equal to K units, divided into K orthogonal sub-channels, so that each orthogonal channel has access to a unit amount of bandwidth. At each time t, a scheduling policy \u03c0 can activate an independent set of links on each of the K orthogonal sub-channels.\nDenote by Im(t) \u2265 0 the amount of bandwidth provided to independent set ISm at time t, with \u2211 m Im(t) = K. We suppose that the data rate attainable per unit bandwidth on link ` is C` packets/slot. Hence the number of packet transmissions that can be scheduled on a link ` at time t is given by C` \u2211 m:`\u2208ISm Im(t).\nIn the below, we let I\u03c0(t) denote the vector with entries I\u03c0m(t), while I\u0304\n\u03c0 contains their time-averages. Let \u03c0 be any history dependent policy that decides the following at each time t: i ) I\u03c0m(t), the i) number of sub-channels allocated to independent set ISm, and ii) the packets scheduled on each\nlink ` \u2208 E . The timely throughput maximization problem can now be re-stated as,\nmax \u03c0 \u2211 f \u03b2f D\u0304f , (2)\ns.t. \u2211 m I\u03c0m(t) \u2264 K, \u2200t = 1, 2, . . . . (3)\nunder the Markov Decision Process Model."}, {"heading": "VI. RELAXING THE CONSTRAINTS", "text": "Problem (2)-(3) imposes a \u201chard\u201d constraint (3) on the bandwidth consumption of a feasible policy \u03c0 in every timeslot t = 1, 2, . . .. We will now consider a simpler version of the bandwidth constraint, by replacing the constraint \u2211 m I \u03c0 m(t) \u2264 K, \u2200t = 1, 2, . . . by a \u201csoft\u201d version that requires only that the time-average bandwidth consumption by \u03c0 is less than K units.\nWe pose this relaxation of the timely throughput maximization problem (2) as,\nmax \u03c0 \u2211 f\n\u03b2f D\u0304f , such that (4)\u2211 m I\u0304\u03c0m \u2264 K, (5)\nwhere I\u0304m denotes the time-average of the bandwidth \u201cconsumed\u201d by the independent set ISm. The relaxed constraint now allows a policy \u03c0 to utilize more than K units of bandwidth at any time-slot t.\nWe note that that the relaxed constraint (5) \u2211 m I\u0304 \u03c0 m \u2264 K is still a constraint of a \u201cglobal spatial nature\u201d 3. Thus, a An optimal \u03c0 has to achieve a \u201cglobal spatial coordination\u201d amongst the various links ` \u2208 E , and thus the problem (4)- (5) is challenging. Hence we will now further relax the constraints, and this will lead us to a somewhat weaker form of the hard interference constraints under which any concurrent transmissions on two interfering links fail.\nWe observe that under a policy \u03c0, the transmission rate obtained by a link ` at time t is given by\nC\u03c0` (t) := C` \u2211\nm:`\u2208ISm\nIm(t), (6)\nwhile the time-average transmission rate that it receives is given by\nC\u0304\u03c0` := C` ( \u2211 m:`\u2208Em I\u0304m ) . (7)\nThe relation between C\u03c0` (t) and I(t) can be viewed as interference constraint. Thus, the \u201cRelaxed Problem\u201d in which the hard interference and the hard bandwidth availability\n3This is true because the choice of Im(t) affects the amount of bandwidth available to each link ` \u2208 ISm, and hence must necessarily depend on the state of the packets present at each link ` \u2208 ISm.\nconstraints have been relaxed to their average versions is as follows,\nmax \u03c0 \u2211 f \u03b2f D\u0304f , such that (8)\nC\u0304\u03c0` \u2264 C` ( \u2211 m:`\u2208ISm I\u0304m ) , (9)\u2211\nm\nI\u0304m \u2264 K. (10)\nWe interpret the constraints (9)-(10) as follows. Once a feasible vector I\u0304 = {I\u0304m} satisfying \u2211 m I\u0304m \u2264 K has been fixed, the average link bandwidths C\u0304\u03c0` get fixed according to (9). The constraint (9) does not impose any constraint on instantaneous link bandwidths C\u03c0` (t). They also do not impose any interference constraints, i.e., the edge interference graph model described in Section III is no longer valid. Hence two links `, \u02c6\u0300 that are connected in edge interference graph, are allowed to carry out concurrent packet transmissions without packet drops4.\nNotice that though we have rid ourselves of the hard interference constraints (6), we have retained the constraints i) the average bandwidth available to a link ` depends on the average bandwidth allocation vector I\u0304 , and, ii) the total average bandwidth available to the wireless network, i.e., the constraint \u2211 m I\u0304 \u03c0 m \u2264 K. We have only relaxed the constraints (6) imposed by the \u201cwireless interference system\u201d since they are overly restrictive. This relaxation, in a certain sense, is equivalent to \u201cweaking\u201d the wireless interference constraints, i.e., under the relaxed constraints an admissible scheduling policy \u03c0 does not need to assign an independent set IS on each of the K sub-channels. However, as will be shown in this paper, solving this relaxed problem does yield a nearoptimal solution to the original problem when the network traffic is scaled to\u221e, and hence the efforts to solve the relaxed problem will not go in vain.\nConnections with Whittle\u2019s Relaxation for the MABP The relaxation that we have introduced above is in the sprit of Whittle\u2019s relaxation [22] for Restless Multi-Armed bandit problem (MABP) [23] which can be posed as an MDP. In the MABP set-up, a controller has to play one \u201carm\u201d at each time-slot t = 1, 2, . . ., and he obtains a reward which is a function of the state of the arm that he currently played. The various arms of the bandit are essentially controlled Markov processes. Whittle\u2019s relaxation for the MABP is to replace the hard constraint that only a single arm be played at each time, by a softer constraint that requires that the player plays a single arm only on an average. Since in the relaxed problem, the \u201cdecision processes\u201d for the arms are decoupled, the relaxed problem is much easier to solve, and the complexity reduces drastically as compared to the MABP. The Whittle\u2019s index policy then activates the arm that attains the \u201chighest gain in reward\u201d from activating it. See [23] for details. In our set-up,\n4Equivalently we can assume that each link ` has access to unlimited bandwidth, and that the channel it uses is orthogonal to the channels used by other links.\nthe packets that are to be routed over the wireless network are the analogues of bandit arms in the MABP. The player is the policy \u03c0 that has to be designed by the network operator, the constraints are the wireless interference constraints. The wireless interference constraints are obviously much more complex than the constraints imposed in the MABP in that only a single independent set/arm has to be played in a timeslot. However, as we will see, the idea of Whittle\u2019s relaxation does turn out to be useful even in this complex setup.\nIn view of the above discussion, our approach to solving the original problem (2)-(3) will be as follows. We will first solve the much simpler relaxed problem (8)-(10) since it is tractable and admits a neat decentralized solution. Denote the solution to (8)-(10) by \u03c0?. Once \u03c0? has been obtained, we will modify it appropriately, and combine it with CSMA protocol. This will yield us a policy \u03c0\u0303 that is feasible for the original problem (2). Then, we will show that \u03c0\u0303 is asymptotically optimal in the limit the traffic arrival rates, and available bandwidth K are scaled to \u221e.\nRemark 1: We note that the relaxed version of the link capacity constraints (9)-(10) still induces a weaker version of the interference constraint. In later sections we will show that an optimized version of the CSMA protocol resolves the bandwidth allocation problem in a decentralized fashion. Moreover, since the amount of bandwidth it assigns to each link ` is nearly a constant, i.e., its stochastic fluctuations are small, we would be interested in developing a scheduling policy under the assumption that the bandwidth for each link ` has been fixed. The reason why we derive the scheduling policy under fixed average link bandwidths is that we will require the solution of this problem in order to optimize the CSMA protocol.\nWe begin by addressing the relaxed problem (8)-(10) for the case when the link-level bandwidths have been fixed at Cav ."}, {"heading": "VII. SCHEDULING UNDER LINK-LEVEL AVERAGE BANDWIDTH CONSTRAINTS", "text": "In this section we will be concerned with maximizing the total timely throughput under the constraint that the average bandwidth provided to each link ` is less than or equal to Cav` . Equivalently, the constraints (9)-(10) in the problem (8)-(10) will be replaced by the constraints\nC\u0304\u03c0` \u2264 Cav` ,\u2200` \u2208 E ,\nwhere Cav` is the bound on average bandwidth of link `. We also let Cav = {Cav` }`\u2208E .\nThus, in this Section we will solve the following CMDP,\nf (Cav) : = max \u03c0 \u2211 f \u03b2f D\u0304f , such that (11)\nC\u0304\u03c0` \u2264 Cav` ,\u2200` \u2208 E. (12)\nWe will obtain a computationally simple and decentralized solution. However, as discussed in Section IV, a naive approach to solve the above CMDP in its primal form using the linear programming approach is impractical owing to the curse of dimensionality, and the requirement of a centralized controller.\nIn order to develop a decentralized and computationally feasible iterative solution, we consider the dual problem associated with the primal CMDP (11)-(12). For a scheduling policy \u03c0, the Lagrangian corresponding to (11)-(12) is given by,\nL(\u03c0, \u00b5) = \u2211 f \u03b2f D\u0304f \u2212 \u2211 ` \u00b5` ( C\u0304\u03c0` \u2212 Cav` ) = \u2211 f \u03b2f D\u0304f \u2212 \u2211 ` \u00b5`C\u0304 \u03c0 ` + \u2211 ` \u00b5`C av ` ,\nwhere \u00b5` \u2265 0 is the multiplier associated with average link capacity constraint C\u0304\u03c0` \u2264 Cav` , and \u00b5 = {\u00b5`}`\u2208E is the vector containing these multipliers. We note that in the above, the policy \u03c0 under consideration is the primal variable. The dual function D(\u00b5) is then given by,\nD(\u00b5) = max \u03c0 L(\u03c0, \u00b5)\n= max \u03c0 \u2211 f \u03b2f D\u0304f \u2212 \u2211 ` \u00b5`C\u0304 \u03c0 ` +\u2211 ` \u00b5`C av ` , (13)\nwhere we note that only the term within the braces (\u00b7) depends on the policy \u03c0."}, {"heading": "A. Decentralized computation of Dual Function D(\u00b5)", "text": "In order to evaluate the dual function at value \u00b5, the following problem needs to be solved,\nmax \u03c0 \u2211 f \u03b2f D\u0304f \u2212 \u2211 ` \u00b5`C\u0304 \u03c0 ` .\nNext, we make the following important observation. The cost\u2211 ` \u00b5`C\u0304 \u03c0 ` as well as the reward \u03b2f D\u0304f is the sum of the individual costs incurred by packets, i.e.,\u2211 ` \u00b5`C\u0304 \u03c0 ` = \u2211 ` \u00b5` \u2211 f C\u0304\u03c0`,f\n= \u2211 f (\u2211 ` \u00b5`C\u0304 \u03c0 `,f )\n= \u2211 f \u2211 \u03c3f (\u2211 ` \u00b5`C\u0304 \u03c0 `,\u03c3f ) , (14)\nwhere C\u0304\u03c0`,f is the average bandwidth consumption by packets belonging to flow f on link `, the index \u03c3f labels packets of flow f , and C\u0304\u03c0`,\u03c3f denotes the average amount of link ` bandwidth consumed by packet \u03c3f . A similar decomposition holds for the timely-throughput reward too. This decomposition property yields us the following algorithm to compute the dual function D(\u00b5)."}, {"heading": "B. Highly Decentralized Packet Level Policy", "text": "In this section, we will fix the value of dual variable at \u00b5, and focus exclusively on maximizing the following\n\u201ccumulative reward\u201d earned by a policy \u03c0 in a decentralized way, \u2211\nf \u2211 \u03c3f ( \u03b2f D\u0304\u03c3f \u2212 \u2211 ` \u00b5`C\u0304 \u03c0 `,\u03c3f ) , (15)\nwhere D\u0304\u03c3f denotes the probability that packet \u03c3f is delivered to its destination node within its deadline. Maximization of the cumulative reward will yield us the value of dual function D(\u00b5).\nMaximizing (15) using Dynamic Programming : The state X(t) of the system at time t is mentioned by describing the flow f and age for each packet present at each node i \u2208 V . We can then solve for the optimal \u03c0 that maximizes the cumulative reward (15) using Dynamic Programming i.e.,\nR+ V (x) = max u\n(Rinst(x, u) + Eu {V (y)}) , (16)\nwhere R is the optimal average reward, V (x) is the transient reward function associated with the system beginning in state x, and Rinst(x, u) is the one-step reward earned when the system state is x, and control u is applied. The instantaneous reward Rinst includes the reward earned due to timely delivery of packets, and the cost paid due to using the link bandwidth, i.e., \u00b5` amount of price is incurred upon using unit amount of link ` bandwidth. Solving the Dynamic programming equation (16), and implementing the resulting policy leads to several technical difficulties: \u2022 The number of variables involved in solving (16) is equal\nto the size of the state space. If we assume that the total number of packets in the network is bounded by B, the state space size is exponential in B (one has to mention the location and age of each packet present in the network). \u2022 The optimal policy calls for a centralized controller in order to be implemented, i.e., the control input at time t, U(t) = \u03c0?(X(t)) is a function of the system state X(t). Thus, the nodes need to share their information with all the other nodes in every time-slot.\nOur key result is that the cumulative reward can be maximized by maximizing the cumulative rewards earned by each individual packets.\nWe re-collect the decomposition principle (14), which says that the instantaneous reward asociated with the cumulative reward function (15) is the sum of rewards of individual packets, i.e.,\u2211\nf \u2211 \u03c3f (\u2211 t \u03b2fD\u03c3f (t) + \u2211 ` \u00b5`C`,\u03c3f (t) ) , (17)\nwhere D\u03c3f (t) = 1 only if the packet \u03c3f is delivered at time t to its destination node df , and is 0 otherwise, while C`,\u03c3f (t) is the amount of bandwidth utilized by the packet \u03c3f at time t on link `.\nSince the total cost decomposes into the cost incurred by individual packets (17), and since the reward of an individual\npacket can be optimized independently of other packets, it then follows that the cumulative reward (15) can be optimized by implementing a \u201cpacket-by-packet optimal policy\u201d. Thus, we introduce the following MDP which is concerned with optimizing the trajectory of a single packet from its source to destination.\nSingle Packet Optimal Transportation Problem : Consider the following dynamic optimization problem. At time t = 0, a single packet is generated at its source node sf . Thereafter its evolution is jointly decided by the scheduling action applied at each of the node it traverses, and the prevailing channel state. Thus, if its transmission is attempted on a link ` at any time t, then the transmission succeeds with a probability p` which is the reliability of link `. Moreover, the link ` that is utilized for transmision charges a price of \u00b5` from the packet. After a sequence of transmissions occurring at different nodes i \u2208 V , if the packet manages to reach the destination df before time \u03c4 , then it earns a reward of \u03b2f units.\nThe problem is to design a scheduling policy so as to maximize the net reward earned while transporting a unit packet from source to destination. In order to do so, we realize that the state of the packet at time t is described by the node i at which it is present, and its age, i.e. the time that has elapsed since it was generated at time t = 0 at the source node. Solving the following DP equations yields the solution to the Single Packet Optimal Transportation Problem,\nV (i, s) = max `=(i,j) ( max u {\u00b5`u+ P (`, u)V (j, s+ 1)\n+ (1\u2212 P (`, u))V (i, s+ 1)}) , (18)\nwhere u \u2208 {0, 1} represents the amount of bandwidh utilized for transmission, i.e., u = 0 for not transmitting, and u = 1 for transmitting. The joint action comprising the decisions (`, u) ranges over all the choices of a transmission link `, or not transmitting the packet at all. We will denote the optimal policy thus obtained by solving the above DP as \u03c0?f (\u00b5), with the subscript f denoting that the solution depends upon the flow f that the individual packet \u03c3f belongs to.\nThe size of the state space involved in solving the Single Packet Transportation Problem is equal to the number of nodes in the network |V | times the deadline threshold \u03c4 , i.e., |V |\u03c4 . Moreover, the optimal decision for a packet \u03c3f at any time t depends only on its state, i.e., its age and location. Thus, it can be implemented in a distributed fashion, i.e., the node i at which the packet is present simply looks up the optimal action to be taken, and implements it. It does not need to know the state of packets present at other nodes, or even the states of other packets present at the node i. Notice that this was not the case in implmenting the solution to (16).\nLemma 1: The policy \u03c0?(\u00b5) that maximizes the Lagrangian L(\u03c0, \u00b5), or equivalently satisfies L(\u03c0, \u00b5) = D(\u00b5) implements the solution of the Single Packet Optimal Transportation Problem for each packet \u03c3f of each flow f . Thus, we have \u03c0?(\u00b5) = \u2297f\u03c0?f (\u00b5)."}, {"heading": "C. Obtaining the optimal prices \u00b5?", "text": "In the previous section, we derived an algorithm that computes the value of dual function D(\u00b5), and \u03c0?(\u00b5), i.e, the policy that maximizes the Lagrangian L(\u00b7, \u00b5). However, in order to solve the dual MDP corresponding to the CMDP (8)- (10), we need to solve the following dual problem,\nmin \u00b5\u22650 D(\u00b5). (19)\nWe will use sub-gradient descent method in order to converge to optimal link-prices \u00b5?. In the below, k denotes the iteration index, and C\u0304\u03c0\n?(\u00b5) ` denotes the average bandwidth consumption\non link ` under the application of policy \u03c0?(\u00b5) that can be calculated by solving the DP equations (18) for each flow f .\nIn order to implement sub-gradient descent algorithm, each link ` needs to iterate on its price \u00b5``(t) as follows\n\u00b5`(t+ 1) = \u03a0 [ \u00b5`(t) + \u03b1(t) ( C\u0304 \u03c0?(\u00b5(t)) ` \u2212 C av ` )] , t = 1, 2, . . . ,\n(20)\n5where \u03a0 [\u00b7] projects the iterates onto a suitable compact set. Since the dual problem (19) is convex, we have,\nLemma 2: The price iterations (20) converge to the price vector \u00b5? that solves the dual problem (19). We note that in order to carry out the price iterations we need to compute the quantities C\u0304\u03c0\n?(\u00b5(t)) ` . This task is com-\nputationally expensive, and moreover, the assumption that there is a central entity that has knowledge of the network characteristics, is an unrealistic one. We provide a distributed scheme in the theorem below.\nWe summarize the results obtained in this section by concluding with the following Theorem.\nTheorem 1 (Scheduling under Average Link Bandwidth constraints): Consider the problem of optimal scheduling for packets having end-to-end deadline constraints under link-level\n5we have used the same index t to label the time-slots, and the sub-gradient descent iterations.\naverage constraints C\u0304\u03c0` \u2264 Cav` ,\u2200` \u2208 E , i.e., the problem (11)- (12). The optimal policy is given by \u03c0? = \u2297f\u03c0?f (\u00b5?), where \u00b5? is the solution to the dual problem (19). It implements the policy \u03c0?f (\u00b5\n?) that is the solution to the single packet transportation problem with link prices set to \u00b5?, for each packet belonging to flow f . Hence in order to make decisions regarding a packet present at a node i \u2208 V , the node i only needs to know the age of the packet.\nThe vector \u00b5? of optimal prices can be obtained by performing the gradient descent iterations (20).In between two successive updates of the price \u00b5(t), the DP iterations (18) can be performed with price set to \u00b5(t) in order to evaluate the quantity C\u0304\u03c0\n?(\u00b5(t)) ` . This involves a link ` to obtain the\nvalue of value function evaluated at its outgoing links, i.e., if ` = (i, j) then all nodes j : (j, k) \u2208 E need to share V (j, \u00b7). Hence, the price updates and value iterations can be performed in a distributed way.\nXX CHECK THE RIGHT SECTION AFTER REARRANGING XX In practice, the iterations need to be performed using the data that is available during the network operation. Thus, in Section XII-B we briefly discuss a stochastic approximation based scheme which is an \u201conline learning\u201d algorithm that guarantees convergence to the optimal policy.\nRemark 2: It must be noted that in this section we have addressed only a sub-problem concerning the relaxed version (8)- (10) of the timely throughput maximization problem. Thus, the following must be noted,\n1) Since the policy \u03c0?(\u00b5?) is designed to satisfy link-level bandwidth constraints only on an average, its instantaneous bandwidth consumption might exceed Cav` , i.e., C \u03c0?(\u00b5?) ` (t) > C av ` is a possibility. 2) As mentioned in Section VI, we have not considered the problem of channel access yet. Thus, so far we have explicitly assumed that interfering links have been provided orthogonal channels amounting to unlimited bandwidth via some mechanism. That is to say, at each time t, the set of available orthogonal sub-channels is allocated amongst the various network links ` \u2208 E in such a manner that any two interfering links `, \u02c6\u0300\u2208 E are allocated sub-channels that are orthogonal. Furthermore there is no bandwidth constraint on these orthogonal channels. The problem of designing a decentralized channel access mechanism is highly non-trivial, and will be addressed in Section VIII. 3) We have not addressed the constraint that the cumulative bandwidth consumed by the network at any time t should be less than or equal to K units.\nIn Appendix XII-A we apply the gradient descent algorithm in order to further optimize over the vector of bandwidth allocation I\u0304 , and hence solve the problem (8)-(10). The scheme discussed therein is impractical because it assumes that there is a centralized controller, and the scheme involves tuning the bandwidth allocated to each independent set in the set I. The number of independent sets grows exponentially with the number of links |E|, the scheme cannot be justifed for practical purrposes. This brings us to the CSMA protocol."}, {"heading": "VIII. CSMA FOR DECENTRALIZED CHANNEL ACCESS", "text": "We briefly discuss the CSMA protocol that we will utilize in order to obtain decentralized channel access. The CSMA scheme used by us is significntly different from the commonly used CSMA, and the differences will be pointed out at the end of this section."}, {"heading": "A. Randomized Channel Access", "text": "We begin with a brief discussion of the CSMA protocol. We will now slightly augment the discrete time-slot model introduced earlier, in order to accomodate the CSMA scheme to be implemented in conjuntion with a scheduling policy. Thus, we will now assume that a small portion of each timeslot is devoted to making channel access decisions. We will call this dedicated time duration within each time-slot as a \u201cminislot\u201d. Thus, a time-slot is divided into a mini-slot and a data-slot, with the former reserved for making channel access decisions, and the latter for packet transmissions. At the beginning of each minislot, each link ` \u2208 E waits for a random amount of time duration that is exponentially distributed with mean value of 1/r`. The quantity r` is called the aggression parameter of link `. We will denote this random wait-time as counter. During a minislot, each link ` \u2208 E continually senses the carrier in order to detect packet transmissions from any of its conflicting links. At the expiry of its counter, if the link ` finds that none of its conflicting links6 is transmitting, then it makes the decision to attempt a packet transmission in the current data-slot.\nSince the support of an exponential random variable is the entire real line, we will truncate the wait counters to some large enough threshold value so that the probability that a counter value exceeds this threshold is vanishingly small. Thus, it is assumed that the duration of a minislot is much longer than the average value of waiting time, 1/r`. Under the above assumptions, the following fact is easily verified.\nLemma 3: Under the above described randomized channel access scheme, the probability that a link ` \u2208 E gets channel access to transmit a packet in a data-slot t is given by,\np(`; r) = r`\u2211\n\u02c6\u0300\u2208N(`) r\u02c6\u0300 , (21)\nwhere the vector r := ( r1, r2, . . . , r|E| ) , and N(`) is the set of links \u02c6\u0300 that interfere with the link `. Equivalently, the bandwidth available to link ` under the CSMA-r protocol is equal to r`\u2211\n\u02c6\u0300\u2208N(`) r\u02c6\u0300 .\nWe will denote the above randomized channel access mechanism as CSMA-r. The CSMA algorithm is decentralized because each link carries out sensing and channel access independently of other links in the network, and hence it does not require a centralized co-ordinator to ensure that average bandwidth constraints are satisfied. We will use p(r) := {p(`; r)}`\u2208E to denote the vector consisting of average link bandwidths under the CSMA-r protocol.\n6a link \u02c6\u0300 such that (`, \u02c6\u0300) is an edge in the edge interference graph.\nRemark 3: We note that the CSMA model considered by us is significantly different from the existing commonly used CSMA scheme as in [24], [25]. Under the commonly used CSMA, the set of links active at any time t, is described by a Markov process, with its state-space equal to I, i.e., the set of independent sets of the link interference graph. However in our set-up, the set of active links, i.e., IS(t), is i.i.d. across each time-slot t = 1, 2, . . .. Such a construction is required because we need to guarantee that the temporal bandwidth fluctuations are minimal, which is necessary in order to ensure optimality of scheduling policy with respect to timely-throughput metric. More concretely, we cannot allow for large amount of fluctuations in link-bandwidths. Thus, for example, the contribution of a single packet to the timely throughput is an intricate function of the bandwidth availability across various links ` \u2208 E over a time horizon of \u03c4 timeslots, which is the time that the packet spends in the multihop network. This is in contrast with the network queue stability problems, where temporal fluctuations in bandwidth availability do not affect the throughput as long as the average link-bandwidth remains the same [1]. The primary reason why such a control on bandwidth fluctuation is required, is because the \u201ccurrent utility\u201d of a packet depends on its \u201cage\u201d, i.e., the time it has spent in the network."}, {"heading": "IX. CAPACITY SCALING AND ASYMPTOTICALLY OPTIMAL POLICY", "text": "We will develop a decentralized scheduling policy and show that is asymptotically optimal if the cumulative networkwideavailable bandwidth is scaled to \u221e. In order to develop the policy, we will combine the solution of the relaxed problem with the CSMA protocoland then analyze its timely throughput in this limiting regime. We begin by formally defining the network scaling that we employ.\nRecall the definition of f(Cav) as in (11)\nf(Cav) := max \u03c0:C\u0304\u03c0\u2264Cav \u2211 f \u03b2f D\u0304f . (22)\nNow, assume that the packet arrivals for each flow f are random and follow the Bernoulli distribution with parameters (1, Af ). We now introduce a performance metric that is similar to f(Cav). Let us assume that at the beginning of each timeslot t = 1, 2, . . ., each link ` \u2208 E is now available with a probability p(`; r), which is the activation probability of link ` under the CSMA-r protocol (21). The stochastic availability of the links is used to model the random activations of links by the CSMA scheme. Now define\nf\u03031(p(r)) := max \u03c0:C\u03c0(t)\u2264CCSMAr1 (t) \u2211 f \u03b2f D\u0304f , (23)\nwhere CCSMAr1 (t) = {C CSMAr 1,` (t)}`\u2208E is the vector of bandwidths allocated at time t under the CSMA-r protocol applied to a unit bandwidth. The subscript 1 in the above stands for the fact that only a single independent set is to be activated at each time-slot t.\nLet us now consider a sequence of wireless networks. For the N -th network in the sequence, we have that the packet arrivals for each flow f are distributed according to Bernoulli (N,Af ). Also, the network has access to N units of bandwidth, and hence can now activate N independent sets simultaneously in any time-slot t. The channel access mechanism in the N -th network is as follows. The network uses N independent CSMA counters for channel access on N orthogonal channels. Each link `, at the beginning of each mini-slot, generates N i.i.d. backoff counters which are exponential with mean 1/r`, one for each orthogonal channel. Then, it uses a single counter on the corresponding channel in order to apply the CSMA scheme on it. Hence, the number of orthogonal channels available to link ` at each time t is distributed according to Bernoulli (N, p(`; r)). Define\nf\u0303N (p(r)) := max \u03c0:C\u03c0(t)\u2264CCSMArN (t) \u2211 f \u03b2f D\u0304f , (24)\nwhere the sub-script N in CCSMArN (t) := {C CSMAr N,` (t)} denotes that the network has N orthogonal channels available to it, and superscript r denotes that independent CSMA counters with aggression parameter r are used on each of them separately.\nWe note that the quantity f\u0303N (p(r)) is less than or equal to f(Np(r)) because of the following observation. The set of policies that qualify while evaluating f(Np(r)) have no constraint on instantaneous bandwidths during individual time-slots t = 1, 2, . . .. However during the computation of f\u0303N (p(r)), the set of allowable policies can utilize only CCSMArN (t) amount of links at time t. While since under the CSMA scheme, the infinite horizon average bandwidth consumption is equal to Np(r), the set of policies that are feasible during the evaluation of f\u0303N (p(r)) are automatically feasible for the evaluation of f(Np(r)).\nLemma 4: We have,\nf\u0303N (p(r)) \u2264 f(Np(r)). (25)\nRemark 4: It is this hard, per time restriction on the available bandwidth that makes the optimal scheduling problem for CSMA network much more challenging, since a scheduler now has to prioritize amongst the packets based on the global state of the network, thus requiring a centralized controller. However, as will be shown now, it is possible to overcome this limitation if the optimal prices \u00b5? are utilized appropriately while making scheduling decisions. Next, we show that the relative difference between f(Np(r)) and f\u0303N (p(r)) asymptotically vanishes as the network capacity is scaled to\u221e, i.e., f(Np(r))\u2212f\u0303N (p(r))f(Np(r)) \u2192 0 as N \u2192\u221e. Hence, asymptotically nothing is lost due to restraining the link capacities to those made available by the CSMA algorithm. Our proof relies on constructing a decentralized scheduling algorithm for the CSMA network, denoted \u03c0\u0303, for which the timely-throughput is within O (\u221a N )\nof f(Np(r)). We now describe our scheduling algorithm \u03c0\u0303.\nLet \u03c0? denote the policy that is optimal for the scheduling problem under the link-level average bandwidth constraints given by p(r), i.e., \u03c0? solves the problem (11)-(12) with Cav set equal to p(r). \u03c0? can be obtained as in Theorem 1. Construction of \u03c0\u0303: It follows from Theorem 1 that the policy \u03c0? makes packet-based decisions at each node i \u2208 V . Since \u03c0? does not make decisions based on instantaneous bandwidth availability CCSMArN (t), it is not a feasible policy for scheduling under the CSMA protocol applied to N orthogonal channels. Thus, one cannot utilize \u03c0? in order to schedule packets for the N -th scaled network.\nNow, if at some timeslot t it occurs that according to \u03c0? a node i has to utilize more than CCSMArN,` (t) amount of bandwidth on a link `, then the node i simply chooses a maximal subset of the packets meant for transmission on link ` subject to total bandwidth utilization less than CCSMArN,` (t). The selection of the set of packets meant for transmission on link ` can be made according to some rule that has been fixed apriori before the network operation begins at time t = 0. The policy \u03c0\u0303 is essentially \u03c0? truncated according to CCSMArN (t).\nTheorem 2: Consider the sequence of \u201cscaled CSMA-r networks\u201d as defined above operating under the policy \u03c0\u0303. We then have that\nf(Np(r))\u2212 f\u0303N (p(r)) f(Np(r)) = O ( 1\u221a N ) , (26)\nwhere f\u0303N (p(r)) is the maximum timely-throughput attainable by the N -th CSMA network in the sequence.\nProof: In the below, we drop the reference to the scale N , and the CSMA aggression vector r, e.g. CCSMArN (t) becomes CCSMA(t).\nThe following arguments are based on analysis of the evolutions of policies on an appropriately constructed probability space. Let us denote by r0 the (average) reward earned by policy \u03c0? under the average bandwidth constraint on link ` equal to NC(r). Firstly note that the reward collected by the policy \u03c0\u0303 (denoted by r1) does not increase if it were to, instead of dropping a packet because of violation of instantaneous capacity CCSMA` (t), schedule it as dictated by \u03c0?, but no reward is given to it if this packet is delivered to its destination node (denoted by r2). However r2 is more than the reward if now a penalty of \u03b2f units per packet was imposed for scheduling a packet via utilizing \u201ccapacity in excess of CCSMA(t)\u201d at some link ` \u2208 E , but it were given a reward in case this packet reaches the destination node (denoted by r3). r3 is certainly more than the reward which \u03c0? earns if it is penalized an amount equal to the sum of the excess bandwidths (in excess of CCSMA(t)) that its links utilize (denoted by r4) multiplied by \u03b2f , since any individual packet may be scheduled multiple times by utilizing excess bandwidth. Thus, the difference r0 \u2212 r4 is less than the sum of the excess bandwidths utilized by the links operating under the policy \u03c0?, scaled by maxf \u03b2f \u2019s. Next, we will derive a bound on the excess capacity utilization.\nConsider the system operation under the policy \u03c0?. Based on the above arguments, we thus have that, (let all \u03b2f \u2261 1),\nr0 \u2212 r4 \u2264 lim T\u2192\u221e\n1 T E T\u2211 t=1 \u2211 `\u2208E ( C\u03c0 ? ` (t)\u2212 CCSMA` (t) )+ (27)\nNote that( C\u03c0 ? ` (t)\u2212 CCSMA` (t) )+\n= (( C\u03c0 ? ` (t)\u2212 C`(r) ) + ( C`(r)\u2212 CCSMA` (t) ))+ \u2264 ( C\u03c0 ? ` (t)\u2212 C`(r) )+ + ( C`(r)\u2212 CCSMA` (t) )+ . (28)\nWe also note that\nC\u03c0 ? ` (t) = \u2211 f \u2211 \u03c4 C\u03c0 ? f,`,\u03c4 (t), (29)\nwhere C\u03c0 ?\nf,`,\u03c4 (t) denotes the bandwidth utilization at time t on link ` by packets of flow f that have an age of \u03c4 time-slots. Similarly,\nC`(r) = \u2211 f \u2211 \u03c4 Cf,`,\u03c4 , (30)\nwhere Cf,`,\u03c4 denotes the average bandwidth utilization on link ` by packets of flow f that have an age of \u03c4 timeslots. Using (30), (27) and (28) we upperbound the term( C\u03c0 ? ` (t)\u2212 CCSMA` (t) )+ in the r.h.s. of (29) as,\n( C\u03c0 ? ` (t)\u2212 CCSMA` (t) )+ \u2264 \u2211 f,\u03c4 (Cf,`,\u03c4 (t)\u2212 Cf,`,\u03c4 )+ \n+ ( CCSMA` (t)\u2212 C`(r) )+ (31)\nCombining (27) with the above, we obtain that\nr0 \u2212 r4\n\u2264 lim t\u2192\u221e\n1\nT T\u2211 t=1 \u2211 f,\u03c4 MAD (Cf,`,\u03c4 (t)) +MAD ( CCSMA` (t) ) = O( \u221a N) +O( \u221a N)\nwhere N is the scaling parameter for packet arrivals. Thus we have that,\nro \u2212 r4 \u2264 O (\u221a N ) .\nSince the quantity f(Np(r)) scales linearly with N , this completes the proof. Next, we show that if the parameter r of the CSMA schem is chosen appropriately so as to optimize the bandwidths allocated to various independent sets in I \u201coptimally\u201d, then the policy \u03c0\u0303 is also asymptotically optimal for the original problem.\nTheorem 3: Let OPT denote the value of the relaxed problem (8)-(10) that was obtained by relaxing the original timely-throughput maximization problem (2)-(3). There exists a value of the aggression parameter r? such that for the CSMA r? network operating under the policy \u03c0\u0303, we have that\nthe timely throughput (\u2211\nf D\u0304f ) \u03c0\u0303 is greater than or equal to\nOPT \u2212O( \u221a N), i.e.,\nOPT \u2212 (\u2211\nf D\u0304f ) \u03c0\u0303\nOPT = O ( 1\u221a N ) ,\nand hence asymptotically CSMA r? utilized in combination with \u03c0\u0303 is asymptoticaly optimal for the timely throughput maximization problem (2)-(3).\nProof: Let us denote by the set S, the set of vectors that describe the instantaneous average bandwidths available to each independent set. Thus,\nS = { I\u0304m(t) : I\u0304m(t) is average bandwidth available to ISm at time t} .\nThe closure of the set S, i.e. S\u0304 then coincides with the set {I\u0304 : I\u0304m \u2265 0, \u2211 m I\u0304m = K}. In particular, I\u0304?, the timeaverage bandwidth that is optimal for the relaxed problem (8)- (10), also lies in the set S. Let tp1 be the timely-throughput of the policy that attains the maximum while evaluating f ( C`( \u2211 m:`\u2208ISm I\u0304 ? m) ) . Also, let tp2 the timely throughput of the scheduling policy that is optimal when applied in conjunction with the CSMA-r?, where the parameter r? is chosen so that the expected bandwidths allocated at each timeslot are given by I\u0304?. Such an r? exists because any allocation in the set S can be obtained through an appropriate choice of r. It then follows from Theorem 2 that the difference between tp1 and tp2 is O( \u221a N), and hence asymptotically, as N \u2192\u221e, the optimal throughput achievable under the CSMA protocol is the same as the solution of the relaxed problem (8)-(10).\nRemark 5: Utilizing multiple independent copies of CSMA protocol allows us to smoothen the bandwidth fluctuations for a time duration equal to the deadline \u03c4 , which is the time taken by a packet to reach its deadline. This helps us in ensuring that a single packet that is generated during the time-slot s, views the link-capacities {C`(t)}`\u2208E , t \u2208 [s, s + \u03c4 ] as nearly equal to their average values {C\u0304`} for its entire lifetime in the network. However, since the number of packets generated by the network also scales linearly in N , hence it is not trivial, in the light of utilizing a complicated policy such as \u03c0\u0303, to ensure that a packet receives its \u201cright share of bandwidths\u201d over its entire lifetime, one that ensures that the timely throughput is not affected.\nX. OBTAINING r?\nThough Theorem 3 ensures the existence of an r? such that the combination of CSMA r? and \u03c0\u0303 can be used to attain the network timely throughput capacity in a decentralized fashion, it does not discuss how to obtain r?. Since obtaining the performance of \u03c0\u0303 as a function of CSMA parameter r, and the scaling parameter N is a difficult problem, we will instead optimize the timely throughput under the average bandwidth constraint (11)-(12).\nConsider the following problem, dubbed the CSMA Optimization Problem. Define\nF (r) := sup { f(Cav) : s.t. Cav` =\nr`\u2211 \u02c6\u0300\u2208N(`) r\u02c6\u0300 ,\u2200` \u2208 E\n} ,\n(32)\nCSMA optimization problem is\nmax r\u22650 F (r). (33)\nWe now turn our attention towards obtaining its solution r? in a distributed manner. Next, we compute the gradient of the function F (\u00b7) with respect to the CSMA aggression parameter r which can be used in the gradient-descent method for optimizing the function F (\u00b7). In the below, we let\nR` = r` + \u2211\n\u02c6\u0300\u2208N(`)\nr\u02c6\u0300, (34)\nbe the \u201ccumulative aggression\u201d associated with link ` and its neighbouring links. The following results are easily derived.\nLemma 5:\np(`; r) = r` R` ,\nso that for a link \u02c6\u0300 that interferes with link `, i.e., \u02c6\u0300\u2208 N(`), we have that,\n\u2202p(`; r) \u2202r\u02c6\u0300 = \u2212 r` R2` , (35)\nwhile,\n\u2202p(`; r) \u2202r` = R` \u2212 r` R2` . (36)\nHence it follows from Lemma 6 (see Appendix) that,\n\u2202F \u2202r` = \u2211 \u02c6\u0300\u2208N(`) \u2212\u00b5?\u02c6\u0300(C(r)) R2\u02c6\u0300 + (R` \u2212 r`)\u00b5?` (C(r)) R2` (37)\nAfter having derived the explicit expressions for the gradients, we are now in a position to apply the gradient-descent scheme in order to optimize the CSMA-r protocol,\nTheorem 4: Consider the CSMA optimization problem (33), with the function F (\u00b7) defined as in (32).\nDenote by \u00b5?(C(r)) := {\u00b5?` (C(r))}`\u2208E the value of link prices that solve the dual problem (19) with average link bandwidth constraints set equal to r`\u2211\n\u02c6\u0300\u2208N(`) r\u02c6\u0300 (see (21)). In\nthe below, variable k denotes the iteration index associated with \u201cr updates\u201d. Consider the following iterative algorithm in which each link ` \u2208 E tunes its parameter r` according to (in the below, \u00b5k` is to be read as \u00b5 ? ` (C(r\nk)), similarly for Rk` etc.),\nrk+1` = \u0393 rk` + \u03b3k  \u2211\n\u02c6\u0300\u2208N(`)\n\u2212\u00b5k\u02c6\u0300 (Rk\u02c6\u0300) 2 +\n( Rk` \u2212 rk` ) \u00b5k`\n(Rk` ) 2  , \u2200` \u2208 E, k = 1, 2, . . . .. (38)\nThe above iterations converge to a locally optimal value of r for the problem (33). The complexity of this algorithm is O(|E|).\nRemark 6: Let us break down the various components involved in performing the iterations (38). An update of the rk` involves access to the values of \u00b5?` (C(r\nk)) and the quantity Rk` . Since R k ` = \u2211 \u02c6\u0300\u2208N(`) r k \u02c6\u0300, the quantity R k ` is easily available if we allow the links to share their values rk` with their neighbours.\nNow, the quantity \u00b5?` (C(r k)) can be computed by performing gradient-descent and value iterations as in Theorem (1) by setting the link bandwidths at p(r) (or C(r)). This involves the nodes to share the values of value function with their neighbours.\nThe overall scheme thus requires information sharing amongst neighbouring nodes only.\nSection XII-B discusses the problem of searching the optimal policy using online learning methods that use data available during the operation of network."}, {"heading": "XI. SIMULATION RESULTS", "text": "We now carry out simulations to test the performance of the policy that was shown to be asymptotically optimal in Theorem 3. However note that the CSMA modulator of Theorem 4 that solves the CSMA optimization problem converges to an r? that is only locally optimal. However, simulation results show that the resulting policy is quite good in practice.\nWe will refer to the policy simply as the \u201coptimal policy\u201d, with the understanding that it is using an r? that may not be optimal, and also that even if the r? were to be globally optimal, the policy of Theorem 3 is asymptotically optimal in the limit the network scale N \u2192\u221e."}, {"heading": "A. Policy Description", "text": "We compare the performance of the optimal policy with a version of the Q-CSMA policy [3], [4], [9] that has been adapted to be relevant to the problem of maximizing the timely throughput. We denote this policy as Q-CSMA with EDFShortest Path, which is described below.\nQ-CSMA with EDF-Shortest Path: The Q-CSMA algorithm [4] has been shown to throughput optimal for wireless networks in which interference is modeled using edge intereference graph. The Q-CSMA algorithm uses a decentralized channel access mechanism in which the CSMA aggression parameter r is tuned in accordance with the current queue lengths Q(t). We describe a discretized version of the QCSMA algorithm that was discussed in [4]. A single time-slot is divided into a control mini-slot and a data slot. It is during the control mini-slot, that decisions regarding channel access are made. A single control mini-slot is divided into W subslots. During the control mini-slot for time-slot t, each link ` generates a number w`(t) uniformly at random from the set {1, 2, . . . ,W}. The quantity W is called the window-size. The link ` then declares an \u201cintent\u201d during the sub-slot w`(t) in case none of its neighbouring links have declared an intent by the sub-slot w`(t). At the end of the control mini-slot, if\nthe link ` does not hear intent from any of its neighbours, and if none of its neighboring links were transmitting during data slot t, then the link ` transmits during the data-slot for time t with a probability equal to eQ`(t)/1 + Q`(t), where Q`(t) = \u2211 f Qf,`(t) is the cumulative queue length at link `. Also, if multiple neighboring links declare intent in the same sub-slot, then none of them transmits data during the corresponding data-slot.\nNote that the Q-CSMA provides only channel access decisions, but not the routing or packet scheduling decisions that prioritize based on the age of packets. Thus, we will combine the Q-CSMA with EDF discipline which will enable it to make routing decisions, and also the earliest deadline first (EDF) policy which will allow it to prioritize the scheduling of packets that are \u201ccloser\u201d to their deadline. For such a policy, the bandwidth allocated across the network links during a dataslot t are decided by the Q-CSMA algorithm described above. At the end of the control-slot, each link ` arranges the packets with it in increasing order of their time until deadline. Then, the link ` schedules them on the shortest path route, subject to the instantaneous link bandwidth of link ` that has been provided to it by the Q-CSMA. In case there are multiple shortest paths that connect the link ` to the destination node for a flow f , then the link ` chooses from amongst them uniformly at random while scheduling packets for flow f ."}, {"heading": "B. Network Set-Up", "text": "We simulate the policies for the networks shown in Fig. 3 and Fig. 4. We assume that any two links which share a node will be affected by wireless interference, and hence will be connected by an edge in the link interference graph. Thus, two links `1 = (i1, j1) and `2 = (i2, j2) interefere if either of the following conditions is satisfied i1 = i2, i1 = j2, j1 = i1, j1 = j2. Throughout, we assume that all links have a transmission capacity of 1 pkt/time-slot. For the Q-CSMA with EDF-SP policy, we set the window length of the control mini-slot to be equal to 10 sub-slots. We assume that for the unscaled network, the arrivals for each flow f at each time t are distributed according to Bernoulli (1, .8)."}, {"heading": "C. Results", "text": "We fix the relative end-to-end deadline for the flows to be equal to 10 time-slots, and vary the network scale N of Theorem 2. The resulting timely throughputs are plotted in Fig. 6 and Fig. 7. We observe that the normalized timely throughputs (timely throughput/N ) converge to the asymptotic (N \u2192 \u221e) timely throughputs quite quickly. Even with the scale N = 4, the normalized timely throughput has equilibriated to the asymptotic timely throughput.\nSecondly, we observe that the performance obtained by using the r? that was derived in Theorem 4 is near-optimal. Since the cumulative mean arrival rate for the network shown in Fig. 3 is equal to 1.6 units, its maximum achievable normalized timely-throughput is less than or equal to 1.6 pkts/time-slot. As seen in Fig. 6, the timely throughput of the optimal scheme is quite close to this upper bound.\nWe then fix the scale of the networks at N = 4, and vary the end-to-end relative deadlines for the flows. The results are plotted in Fig. 8 and Fig. 9. We observe that the performance of the optimal policy is much superior to that of the Q-CSMA with EDF-SP. This is primarily because it utilizes the link prices \u03bb` in order to make decisions. Since this automatically allows the packets to be prioritized according to the probability that they will be able to reach their destination within the deadline."}, {"heading": "XII. APPENDIX", "text": ""}, {"heading": "A. Centralized Optimization of Bandwidth Allocation I\u0304", "text": "We will now provide a centralized algorithm that performs optimization over the bandwidth allocation vector I\u0304 that solves (8)-(10). Throughout this section we will assume that there is a centralized controller that knows the wireless network G, and its link-interference graph. Thus it knows the various independent sets IS in the set I. This asumption is relaxed in Section VIII, where CSMA protocol is utilized for decentralized channel access. The algorithms discussed in this section are based on the commonly used optimization technique of gradient-descent-method, and the discussion is very straightforward. Define the following,\nf(Cav) := max \u03c0:C\u0304\u03c0\u2264Cav \u2211 f \u03b2f D\u0304f , (39)\nwhere the inequality C\u0304\u03c0 \u2264 Cav between two vectors is to be taken componentwise. Our concern in this section will be to solve the following optimization problem,\nmax f(Cav) (40)\ns.t. Cav` = C` ( \u2211 m:`\u2208Cm I\u0304m ) ,\u2200` \u2208 E, (41)\nand \u2211 m I\u0304m = K. (42)\nAssumption 1: We will design an iterative algorithm based on gradient descent that will converge to the value of I\u0304?, which is the optimal bandwidth allocation vector. Denote by I\u0304k the value of average bandwidth allocation vector at iteration k. The central controller keeps track of I\u0304k. It then updates it according to,\nI\u0304k+1m = I\u0304 k + \u03b1k\n\u2202f\n\u2202I\u0304m ,m = 1, 2, . . . ,M, (43)\nwhere the quantity \u2202f \u2202I\u0304m is the rate of change of the maximum achievable timely-throughput under the constraint on average bandwidth consumption on link ` set to C` (\u2211 m:`\u2208ISm I\u0304m ) . The iterates stated above are also projected onto the feasible set {I\u0304 : I\u0304m \u2265 0 \u2200m, \u2211 m I\u0304m = K}. Next, we derive an explicit expression for the quantities \u2202f \u2202I\u0304m\n. Lemma 6: For the problem (11)-(12) since the Lagrange multiplier \u00b5` associated with the constraint C\u0304\u03c0` \u2264 Cav` can be interpreted as shadow price, we have,\n\u2202f\n\u2202Cav` = \u00b5?` (C av),\u2200` \u2208 E ,\nwhere \u00b5?(Cav) is the vector that solves the dual problem (19) and can be obtained by the gradient descent method as discussed in Section VII-C. Since the average bandwidth available to a link ` is the sum of the bandwidths provided to each independent set that it is part of, we have that\n\u2202f \u2202I\u0304m = \u2211 `\u2208ISm \u00b5?` (C av)."}, {"heading": "B. Online Learning using Multiple Time-Scales Stochastic Approximation", "text": "We now use the technique of stochastic approximation [26]\u2013 [28] in order to solve the problem of searching for the optimal policy in case the network parameters are unknown. Recall that the following 3 iterations were performed\n1) Value Iterations for solving Dynamic Programming equations (18), which yield the policies \u03c0?f (\u00b5). 2) Gradient descent iterations (20) for solving the dual problem (19). 3) Gradient descent iterations (38) for obtaining the locally optimal CSMA aggression parameter r? in problem (32)- (33).\nWe will now combine these algorithms using multi timescale stochastic approximation [28], [29] so as to obtain a single online learning algorithm.\nWe note that the constraints (12) imposed in the definition of f(Cav) involve average values of link bandwidth consumption and hence the instantaneous bandwidth utilization by the optimal policy corresponding to the evaluation of f(Cav) can exceed Cav` .\n7 In contrast, the CSMA-r access protocol is oblivious to the state of the packets present at various network\n7Indeed, for the policy that is optimal under link-level average bandwidth constraints, if the instantaneous state of the packets present at time t at a link ` is such that their cumulative bandwidth demand is in excess of Cav` , then the link ` would simply charge them a price of \u00b5?` , and provide them excess capacity.\nlinks. It allocates bandwidth in an i.i.d. fashion, without any knowledge of the state of the packets present at various links ` \u2208 E , and it also imposes a hard constraint on the cumulative bandwidth consumption, i.e. \u2211 m Im(t) = N .\nHence, we make the following crucial assumption. Assumption 2: During the \u201clearning\u201d phase of network operation when we are solving for the optimal CSMA parameter r?, we will allow the links to utilize bandwidths in excess of that provided by the CSMA scheme. This can be achieved by assuming that each link ` \u2208 E has spare bandwidth available to it during this phase, and moreover this bandwidth is reserved for its usage, i.e., no link interference takes place. In view of the above discussion, we will use different symbols to denote the bandwidths allocated by the CSMA and that actually utilized by the network.\nThe bandwidth allocated by CSMA protocol, i.e., CCSMA` (t), may not be equal to the actual bandwidth utilized by the routing policy, which is denoted CU(t)` (t). The superscript U(t) denotes that the value is decides by the actual scheduling decision implemented at time t. We note that typically CU(t)` (t) will necessarily exceed C CSMA ` (t) not only because the Q-learning iterations make packet-based decisions, but also due to the fact that price iterations that solve the dual problem rely on bandwidth utilization CU(t)` (t) exceeding the bandwidth availability CCSMA` (t). We will thus use Assumption 2. Furthermore since we are searching for the value of r that maximizes the timely throughput under average bandwidth constraints, the scaling parameter N is irrelevant, and the algorithm proposed below can be used with N = 1.\nTheorem 5: We propose the following 3-layered iterative algorithm that converges to the optimal CSMA parameter r? that solves the problem (32)-(33), and the optimal policy for the relaxed problem \u03c0?(C(r?)).\nQf (i, \u03c4, j) = Qf (i, \u03c4, j) (1\u2212 \u03b1t) (44)\n+ \u03b1t { \u2212\u00b5(i,j) + 1(i = df ) + max\nj\u0303 Q(i+, (\u03c4 + 1) \u2227B, j\u0303)\n} ,\n(45) Q-Learning\n\u00b5`(t+ 1) = \u0393 [ \u00b5`(t) + \u03b2t ( C U(t) ` (t)\u2212 C CSMA ` (t) )] , (46)\nPrice Gradient Descent r`(t+ 1) (47)\n= \u0393 ( r`(t) + \u03b3t { \u00b5`(t) ( CCSMA` (t)\u2212 CCSMA` (t)2 )}) , (48)\nCSMA optimization t = 1, 2, . . . .\nwhere \u2211 t \u03b1t = \u221e, \u2211 t \u03b1 2 t < \u221e, \u2211 t \u03b2t = \u221e, \u2211 t \u03b2 2 t <\n\u221e, \u2211 t \u03b3t =\u221e, \u2211 t \u03b3 2 t <\u221e and also \u03b2t = o(\u03b1t), \u03b3t = o(\u03b2t). The roles of the three layers that comprise the algorithm are described below.\n1) Layer 1 [Q Learning]: Learns the optimal scheduling policy to solve the Single Packet Transportation Problem that is paramterzied by the current link prices \u00b5(t).\n2) Layer 2 [Online Gradient Descent for Price ]: is provided \u201ctarget link capacities {CCSMA` }`\u2208E from Layer 3, and adjusts the link-prices {\u00b5`}`\u2208E so that the \u201caverage traffic intensity\u201d resulting from the policy produced by Layer 1, i.e., Ctr respects the target link capacities CCSMA. Iterations are based on the sub-gradient descent method (20). 3) Layer 3 [CSMA Learning] : gets access to the link prices {\u00b5`}`\u2208E from Layer 2, and modulates the aggression parameter r of the CSMA-r protocol. It performs the bandwidth optimization by converging to the optimal aggression rate r?.\nFigure 10 depicts the 3-layered hierarchial structure of the proposed algorithm.\nRemark 7: Notice that the iterations asociated with tuning the parameter r can be guaranteed to converge to only a local optima of the function F (\u00b7). However, gradient descent schemes in general suffer from this drawback unless the function F (\u00b7) is shown to be convex. For our problem, it is not easy to the convexity of the function F (r) in the parameter r. One can use noisy perturbations (see [27], [30]) in order to ensure that the iterations do not get stuck at a critical point that is not local optima. If we utilize methods like simulated annealing, then the r iterations are guaranteed to converge to a global optima. However the convergence speed of simulated annealing procedure is too slow to be of any practical application.\nWe realize that due to the 3 layered structure, and complex multi-timescale nature of the above algorithm, the proposed algorithms may not be practical to implement. Thus, we now consider a somewhat related problem that involves scheduling packet transmissions under constraints on link-bandwidths. Next, we introduce this objective."}], "references": [{"title": "Dynamic power allocation and routing for time varying wireless networks", "author": ["M. Neely", "E. Modiano", "C. Rohrs"], "venue": "INFOCOM 2003. Twenty-Second Annual Joint Conference of the IEEE Computer and Communications. IEEE Societies, vol. 1, March 2003, pp. 745\u2013755.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2003}, {"title": "A distributed csma algorithm for throughput and utility maximization in wireless networks", "author": ["L. Jiang", "J. Walrand"], "venue": "IEEE/ACM Transactions on Networking (ToN), vol. 18, no. 3, pp. 960\u2013972, 2010.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2010}, {"title": "Q-csma: Queue-length based csma/ca algorithms for achieving maximum throughput and low delay in wireless networks", "author": ["Jian Ni", "Bo Tan", "R. Srikant"], "venue": "IEEE INFOCOM 2010, pp. 1\u20135, March 2010.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2010}, {"title": "Fast Mixing of Parallel Glauber Dynamics and Low-Delay CSMA Scheduling.", "author": ["J.N.R.S. Libin Jiang", "Mathieu Leconte", "J. Walrand"], "venue": "IEEE Transactions on Information Theory, vol. 58,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2012}, {"title": "A novel architecture for reduction of delay and queueing structure complexity in the back-pressure algorithm", "author": ["L. Bui", "R. Srikant", "A. Stolyar"], "venue": "IEEE/ACM Transactions on Networking, vol. 19, no. 6, pp. 1597\u20131609, Dec 2011.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2011}, {"title": "Delay analysis for multi-hop wireless networks", "author": ["G. Gupta", "N. Shroff"], "venue": "Proc. IEEE INFOCOM 2009, April 2009, pp. 2356\u20132364.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2009}, {"title": "Throughput optimal decentralized scheduling of multi-hop networks with end-to-end deadline constraints: Unreliable links", "author": ["R. Singh", "P. Kumar"], "venue": "arXiv preprint arXiv:1606.01608, 2016.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2016}, {"title": "A Distributed CSMA Algorithm for Throughput and Utility Maximization in Wireless Networks", "author": ["L. Jiang", "J. Walrand"], "venue": "IEEE/ACM Transactions on Networking, vol. 18, no. 3, pp. 960\u2013972, June 2010.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2010}, {"title": "Utility maximization for delay constrained QoS in wireless", "author": ["I-Hong Hou", "P.R. Kumar"], "venue": "Proceedings of Twenty-Ninth Annual Joint Conference of the IEEE Computer and Communications Societies (INFOCOM), March 2010, pp. 1\u20139.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2010}, {"title": "Real-time communication over unreliable wireless links: a theory and its applications", "author": ["\u2014\u2014"], "venue": "IEEE Transactions on Wireless Communications, vol. 19, no. 1, pp. 48\u201359, 2012.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2012}, {"title": "Pathwise performance of debt based policies for wireless networks with hard delay constraints", "author": ["Rahul Singh", "I-Hong Hou", "P.R. Kumar"], "venue": "Decision and Control (CDC), 2013 IEEE 52nd Annual Conference on, Dec 2013, pp. 7838\u20137843.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2013}, {"title": "Fluctuation analysis of debt based policies for wireless networks with hard delay constraints", "author": ["R. Singh", "I.-H. Hou", "P. Kumar"], "venue": "IEEE INFOCOM, 2014 Proceedings, April 2014, pp. 2400\u20132408.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2014}, {"title": "Utility-optimal scheduling in timevarying wireless networks with delay constraints", "author": ["I-Hong Hou", "P.R. Kumar"], "venue": "Proceedings of the Eleventh ACM International Symposium on Mobile Ad Hoc Networking and Computing (MobiHoc), 2010, pp. 31\u201340.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2010}, {"title": "Broadcasting delay-constrained traffic over unreliable wireless links with network coding", "author": ["\u2014\u2014"], "venue": "Proceedings of the Twelfth ACM International Symposium on Mobile Ad Hoc Networking and Computing (MobiHoc), 2011, pp. 33\u201342.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2011}, {"title": "A survey of recent results on real-time wireless networking", "author": ["\u2014\u2014"], "venue": "Proceedings of Real-Time Wireless for Industrial Applications, 2011.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2011}, {"title": "Optimality of periodwise static priority policies in real-time communications", "author": ["I-Hong Hou", "Anh Truong", "Santanu Chakraborty", "P.R. Kumar"], "venue": "Proceedings of the 50th IEEE Conference on Decision and Control and European Control Conference (CDC-ECC), 2011, pp. 5047\u20135051.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2011}, {"title": "Scheduling for end-to-end deadline-constrained traffic with reliability requirements in multi-hop networks", "author": ["R. Li", "A. Eryilmaz"], "venue": "INFO- COM, 2011 Proceedings IEEE, April 2011, pp. 3065\u20133073.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2011}, {"title": "Optimal online scheduling with arbitrary hard deadlines in multihop communication networks", "author": ["Z. Mao", "C.E. Koksal", "N.B. Shroff"], "venue": "IEEE/ACM Transactions on Networking, vol. 24, no. 1, pp. 177\u2013189, 2016.", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2016}, {"title": "Restless bandits: Activity allocation in a changing world", "author": ["P. Whittle"], "venue": "Journal of Applied Probability, vol. 25, pp. 287\u2013298, 1988.", "citeRegEx": "22", "shortCiteRegEx": null, "year": 1988}, {"title": "Multi-armed Bandit Allocation Indices", "author": ["J.C. Gittins", "K. Glazebrook", "R. Weber"], "venue": null, "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2011}, {"title": "Back-of-the-envelope computation of throughput distributions in csma wireless networks", "author": ["S.C. Liew", "C.H. Kai", "H.C. Leung", "P. Wong"], "venue": "IEEE Transactions on Mobile Computing, vol. 9, no. 9, pp. 1319\u20131331, 2010.", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2010}, {"title": "Throughput modelling and fairness issues in csma/ca based ad-hoc networks", "author": ["X. Wang", "K. Kar"], "venue": "INFOCOM 2005. 24th Annual Joint Conference of the IEEE Computer and Communications Societies. Proceedings IEEE, vol. 1. IEEE, 2005, pp. 23\u201334.", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2005}, {"title": "A stochastic approximation method", "author": ["H. Robbins", "S. Monro"], "venue": "The Annals of Mathematical Statistics, vol. 22, no. 3, pp. 400\u2013407, Sept. 1951.", "citeRegEx": "26", "shortCiteRegEx": null, "year": 1951}, {"title": "Stochastic approximation methods for constrained and unconstrained systems", "author": ["H.J. Kushner", "D.S. Clark"], "venue": "Springer Science & Business Media,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2012}, {"title": "Stochastic Approximation : A Dynamical Systems Viewpoint", "author": ["V.S. Borkar"], "venue": null, "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2008}, {"title": "Stochastic approximation with two time scales", "author": ["\u2014\u2014"], "venue": "Systems & Control Letters, vol. 29, no. 5, pp. 291 \u2013 294, 1997.", "citeRegEx": "29", "shortCiteRegEx": null, "year": 1997}], "referenceMentions": [{"referenceID": 0, "context": "Backpressure policy is known to be throughput optimal under very general conditions [1], [2].", "startOffset": 89, "endOffset": 92}, {"referenceID": 1, "context": "Similarly the Q-CSMA scheme, which combines backpressure routing along with the CSMA algorithm to find the maximum weight matching, is known to be throughput optimal for scheduling traffic in wireless networks under link interference constraints [3], [4].", "startOffset": 246, "endOffset": 249}, {"referenceID": 2, "context": "Similarly the Q-CSMA scheme, which combines backpressure routing along with the CSMA algorithm to find the maximum weight matching, is known to be throughput optimal for scheduling traffic in wireless networks under link interference constraints [3], [4].", "startOffset": 251, "endOffset": 254}, {"referenceID": 3, "context": "Thus, for example, the backpressure policy, or its wireless version Q-CSMA, is known to have poor performance with respect to average delays [5]\u2013[7].", "startOffset": 141, "endOffset": 144}, {"referenceID": 5, "context": "Thus, for example, the backpressure policy, or its wireless version Q-CSMA, is known to have poor performance with respect to average delays [5]\u2013[7].", "startOffset": 145, "endOffset": 148}, {"referenceID": 6, "context": "In a companion paper [8], we developed a theoretical framework and proposed decentralized policies that maximize the timely-throughput in a multi-hop stochastic network.", "startOffset": 21, "endOffset": 24}, {"referenceID": 7, "context": "The CSMA \u201caggression parameter\u201d can be modulated, as in [9] based on the network queue lengths in order to ensure the throughput optimality property.", "startOffset": 56, "endOffset": 59}, {"referenceID": 15, "context": "The problem of scheduling traffic in order to satisfy timely throughput constraints of multiple clients being served by a single-hop wireless network is fairly well-understood by now [10]\u2013[19].", "startOffset": 188, "endOffset": 192}, {"referenceID": 16, "context": "However, the problem of extending the approach to a multi-hop network has been open for quite some time, though several heuristics have been proposed [20], or a fraction of the maximum achievable timely-throughput has been attained [21].", "startOffset": 150, "endOffset": 154}, {"referenceID": 17, "context": "However, the problem of extending the approach to a multi-hop network has been open for quite some time, though several heuristics have been proposed [20], or a fraction of the maximum achievable timely-throughput has been attained [21].", "startOffset": 232, "endOffset": 236}, {"referenceID": 18, "context": "Connections with Whittle\u2019s Relaxation for the MABP The relaxation that we have introduced above is in the sprit of Whittle\u2019s relaxation [22] for Restless Multi-Armed bandit problem (MABP) [23] which can be posed as an MDP.", "startOffset": 136, "endOffset": 140}, {"referenceID": 19, "context": "Connections with Whittle\u2019s Relaxation for the MABP The relaxation that we have introduced above is in the sprit of Whittle\u2019s relaxation [22] for Restless Multi-Armed bandit problem (MABP) [23] which can be posed as an MDP.", "startOffset": 188, "endOffset": 192}, {"referenceID": 19, "context": "See [23] for details.", "startOffset": 4, "endOffset": 8}, {"referenceID": 20, "context": "Remark 3: We note that the CSMA model considered by us is significantly different from the existing commonly used CSMA scheme as in [24], [25].", "startOffset": 132, "endOffset": 136}, {"referenceID": 21, "context": "Remark 3: We note that the CSMA model considered by us is significantly different from the existing commonly used CSMA scheme as in [24], [25].", "startOffset": 138, "endOffset": 142}, {"referenceID": 1, "context": "We compare the performance of the optimal policy with a version of the Q-CSMA policy [3], [4], [9] that has been adapted to be relevant to the problem of maximizing the timely throughput.", "startOffset": 85, "endOffset": 88}, {"referenceID": 2, "context": "We compare the performance of the optimal policy with a version of the Q-CSMA policy [3], [4], [9] that has been adapted to be relevant to the problem of maximizing the timely throughput.", "startOffset": 90, "endOffset": 93}, {"referenceID": 7, "context": "We compare the performance of the optimal policy with a version of the Q-CSMA policy [3], [4], [9] that has been adapted to be relevant to the problem of maximizing the timely throughput.", "startOffset": 95, "endOffset": 98}, {"referenceID": 2, "context": "Q-CSMA with EDF-Shortest Path: The Q-CSMA algorithm [4] has been shown to throughput optimal for wireless networks in which interference is modeled using edge intereference graph.", "startOffset": 52, "endOffset": 55}, {"referenceID": 2, "context": "We describe a discretized version of the QCSMA algorithm that was discussed in [4].", "startOffset": 79, "endOffset": 82}], "year": 2017, "abstractText": "Consider a multihop wireless network serving multiple flows in which wireless link interference constraints are described by a link interference graph. For such a network, we design routing-scheduling policies that maximize the end-to-end timely throughput of the network. Timely throughput of a flow f is defined as the average rate at which packets of flow f reach their destination node df within their deadline. Our policy has several surprising characteristics. Firstly, we show that the optimal routing-scheduling decision for an individual packet that is present at a wireless node i \u2208 V is solely a function of its location, and \u201cage\u201d. Thus, a wireless node i does not require the knowledge of the \u201cglobal\u201d network state in order to maximize the timely throughput. We notice that in comparison, under the backpressure routing policy, a node i requires only the knowledge of its neighbours queue lengths in order to guarantee maximal stability, and hence is decentralized. The key difference arises due to the fact that in our set-up the packets loose their utility once their \u201cage\u201d has crossed their deadline, thus making the task of optimizing timely throughput much more challenging than that of ensuring network stability. Of course, due to this key difference, the decision process involved in maximizing the timely throughput is also much more complex than that involved in ensuring network-wide queue stabilization. In view of this, our results are somewhat surprising. Secondly, the complexity of algorithms that obtaining the policy scales linearly with the number of links present in the network. In case the network parameters are unknown, we derive iterative \u201conline learning\u201d algorithms that yield the optimal policy. We divide the available bandwidth into multiple sub-channels, and allow a policy to activate a set of non-interfering links on each of the subchannels. We consider several types of constraints on the bandwidth availability. When the wireless network is constrained by the average bandwidth utilization, then the obtained policy is shown to be optimal. In case the wireless network has to operate under a hard constraint on the available bandwidth, we truncate the policy obtained for the network with average bandwidth constraints in order that the bandwidth utilized by it is \u2264 K units in each time-slot. We show that this truncated policy is asymptotically optimal as the network traffic is scaled to \u221e.", "creator": "LaTeX with hyperref package"}}}