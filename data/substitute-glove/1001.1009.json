{"id": "1001.1009", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "6-Jan-2010", "title": "Multi-path Probabilistic Available Bandwidth Estimation through Bayesian Active Learning", "abstract": "Knowing all largest rate hours present system without be requested earlier an extended - be - on path some that from heuristic rate once equal given the cmv borrowing behind high probability can still so purely when even transmission rates having video streaming more individual peers 1999 peer - to - peer applications. We instead probabilistic available bandwidth, which takes defined in yet though ingress risk the rocket-assisted risks of access soon small path, look than when requirement of capacity all utilization however for constituent between that several path that which price include bandwidth exporting. In instead collected, we any a distributed algorithm, based end single probabilistic graphical designed rest Bayesian active physical, for turning estimating end renormalizable either wireless of certain pathways few a operate. Our mandatory sorcery with fact way same packet approached provides analysis anyone instead about given path it traverses, nothing for reason any heading that shares a link with the monitored way. Simulations and PlanetLab trials indicate that important possibility mean dramatically reduce since only but scrutiny obtain to contribute detail estimates.", "histories": [["v1", "Wed, 6 Jan 2010 23:33:49 GMT  (224kb,D)", "http://arxiv.org/abs/1001.1009v1", null]], "reviews": [], "SUBJECTS": "cs.NI cs.LG", "authors": ["frederic thouin", "mark coates", "michael rabbat mcgill university", "montreal", "canada)"], "accepted": false, "id": "1001.1009"}, "pdf": {"name": "1001.1009.pdf", "metadata": {"source": "CRF", "title": "Multi-path Probabilistic Available Bandwidth Estimation through Bayesian Active Learning", "authors": ["Frederic Thouin", "Mark Coates", "Michael Rabbat"], "emails": ["frederic.thouin@mail.mcgill.ca,", "mark.coates@mcgill.ca,", "michael.rabbat@mcgill.ca"], "sections": [{"heading": null, "text": "I. INTRODUCTION\nIn many applications, especially peer-to-peer and overlay, it is beneficial to know what kind of performance guarantees end-to-end networks paths can offer. More specifically, knowing the rate at which data can be sent between two nodes such that the injected traffic induces minimal congestion is very valuable to guide peer selection in peer-to-peer streaming, to choose transmission rates in video streaming or to choose client-server association in content delivery networks [1]. In this paper, we are interested in finding the largest rate at which data can be sent on an end-to-end path such that there is high probability that the output rate is almost the same as the ingress rate. A network metric closely related to this value is available bandwidth, which is typically defined as the average unused capacity of a path over a given time interval.\nEstimating available bandwidth accurately involves saturating the path for a short period of time with a few high-rate packet trains. If this is done rarely, then the overhead is acceptable, but if many paths in a subnetwork are being monitored simultaneously, then due to shared links, the additional load becomes unacceptable and the measurement process itself can significantly bias the estimates. We could sequentially apply the same strategy to all these paths independently. Not only is this approach time-consuming, but it is also inefficient in terms of resources, since we may probe the same link multiple times via different paths to obtain the same information.\nIntuitively, however, it should be possible to accurately and efficiently estimate the available bandwidth on multiple paths in a network by exploiting spatial correlation [2], [3]. The available bandwidth of a path is limited by the tight link \u2014 the link with the least available bandwidth on this path. Knowing something about the available bandwidth of one path reveals information about other paths that share some subset of links. For example, if paths P and Q have different origins and the same destination, knowing that P has less available bandwidth than Q implies that the tight link of path P must be on a link that is not shared by path Q. This can help to localize the tight links to a particular segment, and consequently improve inference for other paths that overlap with the tight segment."}, {"heading": "A. Contributions", "text": "Unlike previous work on available bandwidth estimation, which focuses on estimating the average unused capacity, we use a probabilistic notion of available bandwidth. Namely, we focus on estimating the largest ingress rate for each path such that the destination will receive at nearly the same rate with high probability. This is a natural way to quantify available bandwidth for streaming and file-transfer applications. This paper proposes a method to simultaneously estimate the available bandwidth on multiple paths in the network. Our goal is to accurately infer the available bandwidth on multiple paths without overwhelming the network with excessive measurement traffic. Our approach to efficient probing is based on two underlying concepts. First, we develop a probabilistic model that allows us to use the measurements taken on one path to draw inferences about the available bandwidth on other paths in the network. This model accounts for variability in the measurements and also allows us to quantify how much uncertainty we have about estimates on each path. Second, we design measurements in a sequential fashion using ideas from active learning. After each measurement, we re-evaluate the uncertainty in our current available bandwidth estimates, and then select the next measurement (path and probing rate) so that it will maximize the gain in information.\nTo exploit correlations that exist between paths, we encode the overlap between different paths in a probabilistic graphical model (factor graph). The graphical model contains one variable for each path, as well as one unmeasurable variable representing the available bandwidth on each link in the network. The variables represent the available bandwidths on each path and link, respectively. Correlation among different paths is encoded by connecting each path to the links it traverses through a function expressing the notion that the available bandwidth on the path is the smallest available bandwidth of all links. Thus, the\nar X\niv :1\n00 1.\n10 09\nv1 [\ncs .N\nI] 6\nJ an\n2 01\n0\n2 graphical model represents a joint probability distribution on available bandwidth on all paths and links in the network. Our use of the graphical models formalism also allows us to exploit well-known efficient techniques for performing inference. Given a collection of measurements, we can quickly form estimates of the marginal distributions of all path available bandwidths using belief propagation.\nWe select which measurement to collect next using ideas from active learning. Similar to other bandwidth estimation techniques, such as Pathload [4], one measurement involves sending a quick burst of traffic along an end-to-end path at a fixed rate, and the measurement outcome indicates whether the probed rate is above or below the available bandwidth on the path. At each measurement iteration, we select the path and rate at which to probe next in order to probabilistically bisect the uncertainty in our model, given the previous measurements. This is analogous to performing a probabilistic binary search, and if there is just a single path being monitored, the approach is similar to related work for single-path bandwidth monitoring. In our framework, the difference is that we determine both which path to probe and what rate to probe in an active, online fashion, based on the measurements we have already gathered over the entire network. Simulations and PlanetLab experiments suggest that our framework significantly reduces the amount of probing traffic (by more than 50%) in comparison to na\u0131\u0308vely probing sequentially on every path, without any loss in accuracy.\nThe rest of this paper is organized as follows. In Sect. II, we introduce the notion of probabilistic available bandwidth. In Sect. III, we specify the estimation problem we are solving and state our assumptions. In Sect. IV, we outline our proposed solution based on active learning, graphical models and belief propagation. In Sect. V, we describe our measurement software implementation and show the results obtained from simulations and online experimentations. In Sect. VI, we discuss our contributions in relation to previous work in the area. In Sect. VII, we conclude and present future work."}, {"heading": "II. PROBABILISTIC AVAILABLE BANDWIDTH", "text": "Our goal is to provide estimates of the probabilistic available bandwidths of multiple paths in a network. We use the term \u201cprobabilistic available bandwidth\u201d to highlight the fact that the quantity we strive to estimate is not the same as the standard available bandwidth metric, which is defined in terms of the capacity and utilization of the constituent links of the path [4]. As discussed in [5], there is a modelling assumption underpinning the available bandwidth estimation techniques that are based on the principle of self-induced congestion (sending packet trains and comparing ingress and egress rates) 1. The assumption is that the available bandwidth is equal to the largest probe rate at which the egress rate is (approximately) equal to the ingress rate, and that beyond this rate, the egress rate will drop below the ingress rate. This assumption is true for fluid traffic models and a single hop path. Liu et al. show that it is only approximate for multi-hop paths and other traffic models [5]. In most cases, the egress rate will drop below the ingress rate at a probing rate well below the available bandwidth, leading to under-estimation.\nOur metric of interest is the rate at which we can transmit data along a path so that there is a specified probability of inducing congestion, which occurs when the egress rate drops significantly below the ingress rate. We therefore specify the probabilistic available bandwidth metric directly in terms of ingress rates and egress rates of traffic on a path; we do not require a direct connection to path or link utilization.\nWe represent a network by a set of N directed links L and a set of M paths P . We assume that at the start of each link is a store-and-forward first-come first-served router/switch that dictates the behaviour of the link (in terms of delay, loss, utilization) and that the routing topology of this network is known, as embodied in the set of paths P , and that it remains fixed for the duration of our experiments. We denote by rp the ingress rate of a traffic flow on a path p and by r\u2032p the egress rate of the same traffic flow. For a link `, we adopt similar notation, denoting the ingress rate of the flow r` and the egress rate r\u2032`. We are interested in determining the largest ingress rate at which we can send a traffic flow along a path while achieving, with specified probability at least 1 \u2212 \u03b4, an egress rate that is almost as large as the ingress rate. More formally, for given > 0 and \u03b4 > 0, we seek the largest rp such that Pr(r\u2032p > rp \u2212 ) > 1\u2212 \u03b4, where the probability is defined over all possible flows of rate rp that can complete transmission during a specified measurement period. We denote the largest such ingress rate by yp( , \u03b4) and refer to it as the ( , \u03b4)-available bandwidth (the probabilistic available bandwidth) for path p. For a link ` we use the notation x`( , \u03b4). Our inference procedure relies on a relationship between the ( , \u03b4)-available bandwidth of a path and the ( , \u03b4)-available bandwidths of its constituent links. We now develop this relationship and specify the assumptions underpinning it. We first note that ( , \u03b4)-available bandwidth is non-decreasing in or \u03b4.\nFor a path p consisting of the set of links Lp = {1, 2, . . . , n}, it is possible to identify small constants 0 < ` < and 0 < \u03b4` < \u03b4 such that:\nPr(r\u2032` \u2264 r` \u2212 `) \u2264 \u03b4` for all r` \u2264 yp( , \u03b4). (1) 1Neither Pathload [4] nor pathChirp [6], two widely-cited bandwidth estimation schemes, are exactly based on rate comparisons. However, Pathload employs a test based on detection of an increasing trend in one-way delays, and this test is highly correlated with a rate comparison test. Although Jain et al. argue that these tests are not equivalent [7], it is relatively clear that any received packet train that passes the one-way delay test employed by Pathload (i.e., shows an increasing trend in delays), would have a measured egress rate substantially smaller than the rate of the injected probe. Pathload\u2019s one-way delay test is a more conservative test, but it detects essentially the same phenomenon as a test that compares ingress and egress rates. Similar comments apply regarding the identification of excursion regions and the resultant available bandwidth estimator employed by pathChirp [6].\n3 but Pr(r\u2032` \u2264 r` \u2212 `) > \u03b4` for all r` > yp( , \u03b4). (2)\nThis follows from the fact that the rate decrease on a path is always greater than the rate decrease on any of its constituent links. Suppose for the moment that the condition r\u2032` > r` \u2212 ` holds for each link. Then we have the following relationship between the path and link ingress and egress rates:\nr1 = rp r2 = r \u2032 1 > rp \u2212 1 r3 = r \u2032 2 > rp \u2212 1 \u2212 2\n...\nr\u2032p = r \u2032 n > rp \u2212\nn\u2211\ni=1\ni.\nWe can apply the union bound on the links to establish:\nPr\n  \u22c3\n`\u2208Lp {r\u2032` \u2264 r` \u2212 `}\n  \u2264 \u2211\n`\u2208Lp \u03b4`.\nThis relationship implies the following:\nPr  r\u2032p > rp \u2212 \u2211\n`\u2208Lp `\n  \u2265 1\u2212 \u2211\n`\u2208Lp \u03b4l. (3)\nFor sufficiently large ( , \u03b4) we assume that it is possible to identify small constants 0 < ` < and 0 < \u03b4` < \u03b4 that satisfy (1) for all ` \u2208 Lp, such that \u2211 `\u2208Lp l < and \u2211 `\u2208Lp\u03b4l < \u03b4. Moreover, we assume that there is a tight link `\n\u2217 \u2208 Lp which essentially determines the probabilistic available bandwidth on the path p. This means that it is possible, for all ` \u2208 Lp, ` 6= `\u2217, to identify ` and \u03b4` \u03b4 that satisfy (1). In the case of `\u2217, however, the smallest `\u2217 < and \u03b4`\u2217 < \u03b4 pair that satisfy (1) have the property `\u2217 \u2248 and \u03b4`\u2217 \u2248 \u03b4.\nThe tight link assumption implies that \u2211 `\u2208Lp l \u2248 `\u2217 \u2248 and \u2211\n`\u2208Lp\u03b4l \u2248 \u03b4`\u2217 \u2248 \u03b4. This property, together with (1), ((2), and (3), imply that yp( , \u03b4) \u2248 x`\u2217( , \u03b4). Another way of interpreting this assumption, is that the ( , \u03b4)-bandwidth of any link ` \u2208 Lp, ` 6= `\u2217 is significantly greater than yp. In other words, for sufficiently large ( , \u03b4), the ( , \u03b4)-available bandwidth is determined by the minimum ( , \u03b4)-available bandwidth of its constituent links."}, {"heading": "III. PROBLEM STATEMENT", "text": "Now that we have defined the ( , \u03b4)-available bandwidth of a path, we can formalize our problem statement. For a specified ( , \u03b4) and network (L,P), we employ packet train measurements, with the goal of forming estimates of the ( , \u03b4)-available bandwidths of all paths in the network. Let the available bandwidth of each link ` and path p be modelled as discrete random variables x` and yp (e.g., Pr(yp = r) being the probability that the ( , \u03b4)-available bandwidth on path p is r). For each packet train measurement, we evaluate a binary outcome z which specifies whether the egress rate of the train was within of the ingress rate. Then at any given instant k, we are interested in the marginal Pr(yp|z1, ...zk) for every path p, where zk is the outcome of the measurement at iteration k.\nTo obtain an estimate of that distribution, we adopt a Bayesian estimation framework. We specify a likelihood function, learned from empirical training data, that relates this binary outcome to the difference between the probe rate and the underlying ( , \u03b4)-available bandwidth of the probed path. Our non-informative prior model is a uniform distribution over the range [Bmin, Bmax] for the ( , \u03b4)-available bandwidth of each link, where Bmin and Bmax are estimates of the minimum and maximum available bandwidths of links.\nOur goal is to sequentially identify, using active learning, a sequence of measurements that allows us to form estimates of the ( , \u03b4)-available bandwidths, such that the credible intervals of the estimates are acceptably tight. We use the confidence range \u03b2 and confidence level \u03b7 as stopping criteria:\n\u03b7p = min ubp\u2212lbp \u222b ubp lbp p\u0302(yp|z1, ..., zk)dyp \u2265 \u03b7 (4)\n\u03b2p = ubp \u2212 lbp \u2264 \u03b2 (5) where \u03b7p is the confidence level (percent of the probability mass), \u03b2p is the confidence range of path p with lower bound lbp and upper bound ubp, and p\u0302(yp) is the empirical pdf of yp. The procedure terminates when all paths satisfy these two\n4 conditions. To ensure termination, we stop if we reach a specified maximum number of measurements whether the estimates meet the stopping criteria or not.The secondary objective is to sequentially choose these measurements (the path to probe and the probing rate), taking into account the past binary outcomes, such that the total number of measurements required to construct the estimates is minimized."}, {"heading": "A. Assumptions", "text": "We assume the routing topology is known, i.e. that we are able to construct the network (L,P). We first infer links and the mapping from IP addresses to routers using traceroute (which has been known to inflate the number of observed routers, record incorrect links and bias router degree distributions [8]). However, due to our problem formulation, our approach is robust to these kind of errors in the inference procedure; additional links can lead to an increase in the number of measurements, but has little impact on the accuracy of the estimates. Ultimately, if our validation shows that our estimate of probabilistic available bandwidth is accurate, the accuracy of the actual topology is not relevant.\nWe use logical topologies (combine all links that are in a series) rather than routing topologies to reduce the number of links and the complexity of the factor graph. We are able to do so without affecting the results since the available bandwidth of a two or more links in series will be limited by the link with the smallest available bandwidth. Thus, we operate on the logical topology without loss of generality.\nWe assume that the routing topology is stable during the estimation procedure, which only takes up to a few minutes for moderate-size topologies (see Sect. V) - the scale over which the proposed algorithm is most applicable. Throughout all our experiments (performed at different times of the day and different days), the resulting logical topologies were stable.\nAs explained in Sect. II, we assume the existence of a tight link on every path; the link with minimum ( , \u03b4)-available bandwidth on path p that determines the value of yp."}, {"heading": "IV. METHODOLOGY", "text": "Our approach to network-wide available bandwidth estimation employs packet train measurements. Each packet train probes one path at a specified rate. When we probe path p at a rate rp, the outcome of the measurement is a binary variable z = 1{r\u2032p > rp \u2212 }, indicating whether the output rate r\u2032p was within of the input rate. Each measurement is then a (p, rp, zRDT ) triple, where zRDT the binary outcome of the rate difference test (RDT). The information obtained from all previous measurements is fused and summarized after each measurement iteration by maintaining an estimate of the available bandwidths for each path. The way information is shared amongst nodes in a factor graph is by using message passing, or belief propagation [9]. This procedure allows us to estimate the marginals in a factor graph and to update these distributions easily when we have new information from a measurement. Of course, we would like to obtain network-wide available bandwidth estimates using as few probes as possible. To accomplish this, we adopt an active learning approach [10], sequentially choosing which path to probe next based on the measurements already obtained. Our approach is summarized in Algorithm 1.\n1 create factor graph using known topology; 2 while # measurements < MAX MEAS do 3 choose path to probe next; 4 choose rate to probe; 5 take new measurement; 6 update marginals using belief propagation; 7 if \u2200 paths p: (4) and (5) are satisfied then 8 break; 9\n10 end Algorithm 1: Multipath available bandwidth estimation algorithm"}, {"heading": "A. Rate Difference Test", "text": "Whenever rp > yp, one of the links of path p receives more traffic than it can service, which causes queuing along the path; ultimately the rate observed at the receiving end, r\u2032p, should be lower than rp. The special case where = 0 in the RDT is then equivalent to using the input/output rate ratio employed in several previously proposed available bandwidth estimation algorithms. We define the outcome of the rate difference test as zRDT = 1{r\u2032p \u2265 rp \u2212 }.\nIn Fig. 1, we show an example of the the behaviour of the RDT in the case where = 5. We notice how the increasing trend of the receiving rate ceases for probing rates greater than 7 Mbps. As as indication, we display a metric related to ours: the available bandwidth as estimated by Pathload."}, {"heading": "B. Graphical Model", "text": "The available bandwidth of each path is determined by all the links it is composed of, more precisely, by the minimum of all these links\u2019 available bandwidths. The joint probability distribution representing the functional relationship between links and paths of a topology is very complex. To capture this relationship, we use factor graphs, which allow us to calculate marginals for each path and link more simply.\nWe construct the graphical model using variable and factor nodes. Each link ` and path p have a variable node in the factor graph (x` and yp: the probability that the probabilistic available bandwidth is r), which are interconnected through min factor nodes fyp . Each link variable node is also connected to a factor node fx` that represent prior knowledge about the associated link variable. For each measurement we make, we add a variable node zk equal to the binary outcome of measurement k and connect it the the variable node of the measured path through a factor node fz = L(z|yp), representing the likelihood function. After each measurement, we run the belief propagation algorithm; a procedure that updates the estimated marginal distributions of all variables in the graph based on the newly acquired information. When the algorithm terminates, we can compute marginals for any link and path in the graph.\nIntuitively, when the probing rate rp is well below yp, we expect the probability of observing z = 1 to be very high and, similarly, when rp is well over yp, this probability should be very close to zero. However, when rp is equal to or very close to yp, we expect this probability to be closer to 0.5. Although a simple step function looks like a good match, it is too aggressive as we expect higher levels of noise when we probe around yp. Based on these intuitive expectations and experimental data (Fig. 3), we adopt the likelihood model L(z = 1|yp, r) = logsig(\u2212\u03b1(r\u2212yp)) for the measurements, where \u03b1 is a small positive constant learned empirically. However, to determine the value of \u03b1 we first need to estimate yp. We decide to co-jointly estimate the values of yp along with the constant \u03b1 through a single regression procedure where we determine the best fit by minimizing the MSE.\nThe sigmoid function rapidly decays to zero when the probing rate is greater than the available bandwidth, even for the best possible parameter fit. We wish to be careful and prefer a slightly less aggressive approach where we assign some likelihood to unexpected measurements outcomes at all ingress rates. For that reason, we introduce a small constant \u03ba and bound our likelihood function to lie in the range [\u03ba, 1\u2212 \u03ba].\nWe note that our estimation procedure is not sensitive to the exact choice of \u03b1, which specifies the rate of decay of the sigmoid function. Moreover, in experiments conducted on different topologies, days, and times-of-day, we have observed that the estimated \u03b1 values occupy a small range of values. The values are related to the variability of the path available bandwidths over the measurement interval. These observations suggest that it is possible to execute the training procedure rarely, or to completely forego it and choose a conservative value. The latter strategy does not bias the estimation procedure, but it does slow the rate of convergence. Example: In Figure 2(a), we show an example of a simple logical topology of a network, which is required to determine how path and link variable nodes are connected in the factor graph. In this example, there are six nodes interconnected using N = 5 different links labeled `1, ..., `5 and we consider M = 4 paths (p1, ..., p4) where nodes 1 and 2 are the sources and nodes 5 and 6 are the destinations. In Figure 2(b), we can see the factor graph representation of this logical topology after one measurement has been made of p1.\nWe then construct a likelihood model for the network we used for our experiments using = 5, \u03b4 = 0.5 and a range of values where Bmin = 1 and Bmax = 100. We first gather data from five different paths: 500 measurements from non-consecutive packet trains at each rate between Bmin and Bmax. We then repeat this experiment five times at different periods of the day resulting in 25 sets of 500 measurements. In Fig. 3(b), we depict Pr(zRDT = 1) as a function of rp for four different paths (results did not vary with time of the day). We normalize each of the 25 experiments and combine all the data in a single plot as a function of rp\u2212 y\u0302p. The result is shown in Fig. 3(a) where each data point is the result of averaging all values which had\nthe same value of rp \u2212 yp; all experiments for which the distance between rp and yp is identical."}, {"heading": "C. Active Path Selection", "text": "A conventional approach to sample many paths is using non-adaptive uniform techniques [11]: the path could be chosen either randomly or using an approach like round robin (RR). However, since making each measurement is costly in terms of time and bandwidth, there is an incentive to reduce the total number of measurements. By actively selecting the path and the rate using information collected up to that point, adaptive sampling can provide significant gains in terms of time and resources. The drawback of this approach is that it is difficult to estimate the informativeness of each potential measurement.\nWe now describe two greedy active learning procedures to select the path to probe at each iteration. Both algorithms are probabilistic in nature: they determine the probability that each path is chosen (denoted fkprobe(p), and then the choice is accomplished by making a random selection according to the specified probabilities. The first algorithm is called weighted entropy (WE). Paths with high entropy have more uncertainty and therefore there is more information to gain by measuring those paths. With WE, paths with high entropy are assigned a larger probability of being selected (the probability of probing a path that already satisfies our stopping criteria is zero). We assign a probing probability using the following relation:\nfkprobe(p) =    \u2212 Bmax\u2211 r=Bmin p\u0302(yp = r) \u00b7 log p\u0302(yp = r) \u03b2p > \u03b2\n0 \u03b2p \u2264 \u03b2 We then normalize to ensure \u2211 p\u2208Pf k probe = 1.\nThe second algorithm, called weighted confidence interval (WCI), bases path selection on the current confidence range \u03b2p of each path. A smaller confidence range signifies that most of the distribution is localized in a given region, which indicates a higher level of confidence in the estimate. On the other hand, a large \u03b2i signifies that the distribution is spread out over a greater range of potential values, so it is harder to produce an accurate estimate. Also, since we are using \u03b2p as a stopping criterion, it encourages the algorithm to terminate faster. The path probing probability function for WCI is\nfkprobe(p) = { \u03b2p \u03b2p > \u03b2 0 \u03b2p \u2264 \u03b2\nand we again normalize to ensure the probabilities sum to one."}, {"heading": "D. Active Probing Rate Selection", "text": "Previous approaches bounds to determine the interval within which the available bandwidth lies. To decide on the probing rate, they use either a linear or a binary search approach and choose the mean of the bounds. We adopt a different approach and choose the rate that bisects the distribution: the median of the posterior distribution of the path. By probing at the median, there is equal probability (according to our current knowledge) that the available bandwidth is smaller or greater than the probing rate. We therefore maximize the expected information gain from our measurement; it is equivalent to conducting a probabilistic\nbinary search for the available bandwidth on path p [11]. By using a probabilistic rather than deterministic approach in rate selection, hard decisions (which could be incorrect) are not enforced.\nV. SIMULATION AND EXPERIMENTAL RESULTS"}, {"heading": "A. Simulation Results", "text": "The purpose of the simulations is to explore the efficacy of our proposed learning strategies. These are not network simulations, so they do not test modelling assumptions at all (that is the purpose of the PlanetLab experiments). We use the HOT topology generated using Orbis to run our simulations 2. It includes 939 nodes and 988 links, from which we extract subsets of M = 50, 100, 150, 200, 250 paths. We assign link capacities using a uniform distribution between [1, 100] and generate a total of 500 topologies. At each iteration, probe outcomes are generated according to our likelihood model. As stopping criteria, we use \u03b7 = 0.95, \u03b2 = 10 and a maximum of 10000 measurements. We compare three path selection algorithms (RR, WE and WCI) and also show the average number of measurements and accuracy required when our active learning algorithm is run independently and sequentially on each path (SEQ).\nAn estimate is considered accurate if the real available capacity lies within the confidence interval: lbp \u2264 yp \u2264 ubp. The average accuracy of all methods is satisfactory; it is always higher than the confidence level \u03b7 = 0.95. However, it is in terms of average number of measurements that the adaptive techniques (WE, WCI) stand out (see Fig. 4). The average number of measurements required by WCI is between 46 \u2212 73% lower than the number required by RR and 39 \u2212 55% lower than\n2http://www.sysnet.ucsd.edu/ pmahadevan/topo research/topo.html\nSEQ. Employing the factor graph in a naive manner can be disadvantageous because noisy measurement outcomes can spread uncertainty to other path estimates (see RR). WE and WCI provide important savings in terms of time and measurements without affecting the accuracy, but since WCI is slightly better in terms of average number of measurements, we will use WCI for our online experimentations."}, {"heading": "B. Obtaining and Calculating rp and r\u2032p", "text": "For our online experiments, we have deployed our measurement software coded in C on various nodes on the PlanetLab network3. Although this network was once believed to be too heavily loaded, Spring et al. explained that PlanetLab has evolved and this is no longer true [12]. The authors also describe how other myths, such as load prevents accurate latency measurements and load prevents sending precise packet trains, can be avoided with best practices. To gather measurement data we have implemented software able to transmit and receive sequences of packet trains. A single measurement consists of sending Nt sequences (trains) of Ls UDP packets of Psize bytes at a rate rp and observing the rate r\u2032p at the receiver side. We then take the median of r\u2032p obtained from each of the Nt trains and perform the RDT to obtain z.\nTypically, the receiving rate is calculated by dividing the total number of bytes received by the amount of time that elapsed between the reception of the first and last packet. However, during our measurements, we have observed delays on the sender side (probably due to task interruption) between the departure of two consecutive packets (ti > ti\u22121 + \u03c4 ). These delays would bias the receiving rate if we were to calculate it using this classical method. Therefore, to calculate the rate r\u2032p at the receiver side, we use inter-arrival time between valid packets. Upon reception of the last packet of a train, we construct a set V of all the indices t > 1 of valid packets. A packet is labelled as invalid if the difference between its departure and the departure of the previous packet is greater than \u03c4 . The equation we use to calculate r\u2032p is the following:\nr\u2032p = \u2211 t\u2208V tr(t)\u2212 tr(t\u2212 1) |V | \u00b7 Psize , (6)\n9 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 0 20 40 60 80 100\nPath\nB an\ndw id\nth (\nM bp\ns)\nLower Bound Upper Bound Probed Rate Probe Response\nFig. 5. Bounds of the confidence intervals for a 30 paths topology."}, {"heading": "C. Experimental Results", "text": "We ran an online experiment using a different topology with M = 30 paths4 and N = 65 logical links with the following parameters: \u03b2 = 10 Mbps, \u03b7 = 0.95, Bmin = 1 Mbps, Bmax = 100 Mbps, = 5 and the path selection algorithm is WCI. We show the lower and upper bounds obtained for all M = 30 paths during one experiment in Fig. 5. We also display the outcome of transmission tests conducted at the end of the estimation interval. We performed four tests on four disjoint paths (for a total of 16 tests per run) by sending trains of 2400 packets of 1000 bytes (the equivalent of 60 seconds of video encoded at 320 kbps) and observing the output rate. In each of the tests, the sending rate of the train is different \u2014 the lower bound of the confidence interval lb, the lower bound plus 5 Mbps, the upper bound of the confidence interval ub, and 5 Mbps above the upper bound.\nAn important measurement parameter is the number of packets in each probe train; clearly it is desirable to reduce this number to limit the measurement load, but we anticipate that more rate estimation errors will occur as the probe length is reduced. In Fig. 6(a), we study the impact of the number of packets in a train Ls on the measurement outcome z by collecting traces with 250 packets and then using only a fraction of them to evaluate the egress rate and calculate z. We cluster all 17966 measurements (gathered from 6 nodes during 20 measurement sequences) according to the difference between the probing rate and our estimate of the available bandwidth (here we use the maximum a posteriori (MAP) estimate). Using this data we calculate the empirical probability of observing z = 1. In the noiseless case, assuming perfect estimates of the available bandwidths, this would look like a step function centred at 0. When the probing rate is smaller than the available bandwidth, the incertitude does not vary greatly with the train size Ls. The main difference occurs when the probing rate is greater than the available bandwidth; as we decrease Ls, the incertitude decays much more slowly and in the case of Ls = 10, there is even a 20% chance of obtaining z = 1 when probing 10 Mbps above the estimated available bandwidth. With the exception of this slower decay phase, using 25 and 250 packets for the measurements results in similar behaviour. In Fig. 6(b), we show the average (over twenty experiments with two different same size topologies) number of measurements and bytes per path required to complete the estimation procedure as a function of the train size. Since the number of measurements is constant for all values of Ls, we observe a linear growth in the number of bytes required to achieve the desired accuracy.\nTo evaluate the predictive properties of our algorithm, we calculate the empirical probability (from a total of 80 tests) that the egress rate exceeds the ingress rate less the tolerance factor . The empirical probability, shown in Fig. 6(c), when probing at the upper bound of the confidence interval is close to 0.5, the target \u03b4 for our experiments. This value drops to around 0.1\u2212 0.2 when exceeding the upper bound. Probing at the lower bound leads to an empirical probability of 0.8\u2212 0.9. From these results, we can conclude that from the estimated confidence intervals, we can determine the probability of avoiding congestion for various rates. The fact that performance varies very little with the number of packets in the train indicates that, for this network at least, 25 packets per train would suffice while providing significant savings in terms of bytes used. The results displayed in this figure, along with Fig. 6(a), indicate that our technique slightly underestimates the probabilistic available bandwidths.\n10\nAlthough probabilistic available bandwidth is a different metric than classical available bandwidth, the two metrics are related. It is interesting to compare our estimation methodology with Pathload [4], both to assess measurement overhead and to examine the extent of correlation between the two metrics.. Using the same topology described above (M = 30, N = 65), we run both Pathload sequentially on every single path and our algorithm (WCI and 25 probes/train) and compare our confidence interval to Pathload\u2019s variation range, number of bytes transmitted and time elapsed. The results are summarized in Table I. We can see that WCI provides significant gains in terms of measurement latency (75% reduction in seconds) and overhead (95% reduction in bytes). In terms of confidence intervals, they overlapped for 53% of the paths - 76% if we tolerate a 2Mbps\n11\nerror. Since the metrics are different, a complete correspondence between the estimates is not expected. But despite the fact that they focus on different metrics, both estimation techniques strive to examine the same path property (at what rate can probe trains be sent without inducing congestion). The experiments highlight the correspondence between the estimates and indicate how dramatic the time and measurement overhead savings can be."}, {"heading": "VI. RELATED WORK", "text": "Our proposed algorithm is designed to estimate the probabilistic available bandwidth of multiple paths, and it achieves efficiency by sharing information through a probabilistic graphical model and using active learning to choose the most informative measurements. The metric we estimate is fundamentally different than the traditional available bandwidth metric, defined in terms of unused capacity, but there are strong connections. We now briefly review the major methods that have been proposed for available bandwidth estimation. Almost all of these focus on estimating available bandwidth for a single path; the exception is BRoute, which addresses multiple paths, as discussed below.\nMany approaches and software tools aimed at estimating available bandwidth of end-to-end network paths using active measurements have been proposed over the past few years: Spruce [13], IGI/PTR [14], pathChirp [6], Pathload [4], abget [15] (see [16] for a thorough survey and description of each technique). In self-congestion probing, trains of packets are sent at a known rate on the path of interest and if the rate is greater than the available bandwidth of one or more of the links, then extra arriving traffic will accumulate at the links\u2019 buffer causing an increasing trend in the one-way delays of consecutive packets and an egress rate at the receiver lower than the ingress rate. On the other hand, if the probing rate is lower than the available bandwidth, there will be no noticeable trend in the inter-packet spacing and the egress rate should be approximately equal to the ingress rate. Then, to estimate the available bandwidth, the strategy is to identify where the transition between these two behaviours occurs. In techniques like pathChirp [6] and Pathload [4] the sender varies the probing rate iteratively until it is possible to converge to the available bandwidth of the path. To account for noise and the variability of the available bandwidth, Jain and Dovrolis estimate a variation range for the available bandwidth (instead of a single estimate) based on one-way delays using Pathload [4]. Pathload and pathChirp employ deterministic inference strategies, introducing relatively ad-hoc outlier elimination rules and using averaging to robustify the statistics derived from their measurements.\nLiu et al. study in more depth the transition point and the relation between the input/output ratio and the input rate [5]. They derive a stochastic response curve that is tightly lower bounded by its fluid counterpart (used by previously referenced techniques) and conclude that this transition point is not exact. The idea of stochastic service curves, which expresses the service given to a flow by the network in terms of a probabilistic bound, was also used by Ciucu et al. to provide bounds on end-to-end delay [17]. In the context of available bandwidth estimation, Liebeherr et al. propose an elegant theoretical framework based on min-plus algebra, but only for worst-case deterministic estimations [18].\nOther approaches have been proposed previously to perform network-wide estimations without overloading the network and/or consuming a large amount of resources. Song and Yalagandula proposed S3 to measure real-time end-to-end network properties such as latency and loss rate [3]. They measure only a subset of the network, by choosing paths according to the observed load on the links and at the end nodes, to infer statistics about the entire network. However, their work does not address the problem of estimating available bandwidth. In [2], Hu and Steenkiste introduce BRoute; a scalable available bandwidth estimation system based on route sharing. They assume that most Internet bottlenecks are on path edges and use the fact that links near end-nodes are often shared by many paths. Although some of the intuition behind BRoute and our work is similar, the core implementation differs; it is not based on a probabilistic framework."}, {"heading": "VII. CONCLUSION AND FUTURE WORK", "text": "In this paper, we defined probabilistic available bandwidth, a quantity different from standard available bandwidth, as the highest rate at which data can be sent such that the egress rate is equal to the ingress rate (within a level of tolerance) with probability \u03b4. The methodology we present addresses estimation on multiple paths and is the first to employ probabilistic inference, graphical models, and active learning. We have implemented measurement software and deployed it on the PlanetLab network. We used our software to identify an appropriate likelihood model. We designed a procedure to map a topology to a factor graph format and used a loopy belief propagation algorithm to update estimates of the marginals of the available bandwidths of the paths. We took advantage of the statistics derived from these marginals to select the most informative path and rate at each iteration based on active learning techniques. From our simulations, our active learning approach dramatically reduces the number of measurements (by more than 50%) required to achieve the same level of accuracy as passive approaches such as round robin. We ran online experiments on the PlanetLab network and observed that very few probes are required to perform our estimation procedure accurately."}, {"heading": "A. Future Work and Challenges", "text": "Although these initial results are very encouraging and promising, there are many avenues to explore to improve our method. We need to explore in more depth the trade-off between accuracy and number of measurements and take advantage of the fact that we can achieve the desired level of accuracy with relatively few packets per train. By gaining a better understanding\n12\nof this, we could formulate the problem in terms of optimizing a resource (time, bytes) budget while achieving a required accuracy level. Also, we need to develop an automatic procedure to learn what is the appropriate number of packets in a train for a given network (for some networks we might need long trains, for others short trains might suffice). We are currently investigating an approach that employs chirps in order to scan a wider range of bandwidths with a single measurement [6]. To further reduce the number of measurements required, we wish to use a more informative prior for the links than the uniform distributions we are currently using. By adopting priors that encourage sparse solutions (a small number of tight links), we hope to accelerate our algorithm. Finally, we would also like to deploy our software tool on a different platform than PlanetLab and on a larger number of nodes. We will explore other testing procedures to validate the estimation obtained with our tool."}], "references": [{"title": "Path selection using available bandwidth estimation in overlay-based video streaming", "author": ["M. Jain", "C. Dovrolis"], "venue": "Computer Networks, vol. 52, no. 12, pp. 2411\u20132418, Aug. 2008.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2008}, {"title": "Exploiting internet route sharing for large scale available bandwidth estimation", "author": ["N. Hu", "P. Steenkiste"], "venue": "Proc. ACM SIGCOMM Conf. Internet Measurement (IMC), Oct. 2005.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2005}, {"title": "Real-time end-to-end network monitoring in large distributed systems", "author": ["H.H. Song", "P. Yalagandula"], "venue": "Proc. Int. Conf. Communication Systems Software and Middleware (COMSWARE), Jan. 2007.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2007}, {"title": "End-to-end available bandwidth: measurement methodology, dynamics, and relation with TCP throughput", "author": ["M. Jain", "C. Dovrolis"], "venue": "IEEE/ACM Trans. Networking, vol. 11, no. 4, pp. 537\u2013549, Aug. 2003.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2003}, {"title": "A stochastic foundation of available bandwidth estimation: Multi-hop analysis", "author": ["X. Liu", "K. Ravindran", "D. Loguinov"], "venue": "IEEE/ACM Trans. on Networking, vol. 16, no. 1, pp. 130\u2013143, Feb. 2008.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2008}, {"title": "pathchirp: Efficient available bandwidth estimation for network paths", "author": ["V. Ribeiro", "R. Riedi", "R. Baraniuk", "J. Navratil", "L. Cottrell"], "venue": "Proc. Passive and Active Measurements Conf. (PAM), La Jolla, CA, Apr. 2003.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2003}, {"title": "Ten fallacies and pitfalls on end-to-end available bandwidth estimation", "author": ["M. Jain", "C. Dovrolis"], "venue": "Proc. ACM SIGCOMM Conf. Internet Measurement (IMC), Oct. 2004.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2004}, {"title": "DisCarte: A Disjunctive Internet Cartographer", "author": ["R. Sherwood", "A. Bender", "N. Spring"], "venue": "Proc. SIGCOMM, Seattle, WA, Aug. 2008.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2008}, {"title": "Graphical models for machine learning and digital communication", "author": ["B. Frey"], "venue": null, "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1998}, {"title": "A Bayesian sequential experimental study of learning in games", "author": ["M.A. El-Gamal", "R.D. McKelvey", "T.R. Palfrey"], "venue": "J. Am. Stat. Ass., vol. 88, no. 422, pp. 428\u2013435, Jun. 1993.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1993}, {"title": "Active learning and sampling", "author": ["R. Castro", "R. Nowak"], "venue": "Foundations and Applications of Sensor Management, A. Hero, D. Castanon, D. Cochran, and K. Kastella, Eds. Springer-Verlag, 2007, pp. 177\u2013200.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2007}, {"title": "Using planetlab for network research: myths, realities, and best practices", "author": ["N. Spring", "L. Peterson", "A. Bavier", "V. Pai"], "venue": "ACM SIGOPS Operating System Review, vol. 40, no. 1, pp. 17\u201324, Jan. 2006.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2006}, {"title": "A measurement study of available bandwidth estimation tools", "author": ["J. Strauss", "D. Katabi", "F. Kaashoek"], "venue": "Proc. Internet Measurement Conf. (IMC), Miami Beach, FL, Oct. 2003.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2003}, {"title": "Evaluation and characterization of available bandwidth probing techniques", "author": ["N. Hu", "P. Steenkiste"], "venue": "IEEE J. Selected Areas Communications (JSAC), vol. 21, no. 6, pp. 879\u2013894, Aug. 2003.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2003}, {"title": "Available bandwidth measurement as simple as running wget", "author": ["D. Antoniades", "M. Athanatos", "A. Papadogiannakis", "E. Markatos", "A.D. Keromytis"], "venue": "Proc. Passive and Active Measurement Conf. (PAM), Adelaide, Australia, Mar. 2006.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2006}, {"title": "End-to-end available bandwidth estimation and its applications", "author": ["M. Jain"], "venue": "Ph.D. dissertation, Georgia Institute of Technology, May 2007.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2007}, {"title": "A network service curve approach for the stochastic analysis of networks", "author": ["F. Ciucu", "A. Burchard", "J. Liebeherr"], "venue": "ACM SIGMETRICS Performance Evaluation Review, vol. 33, no. 1, pp. 279\u2013290, June 2005.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2005}, {"title": "A min-plus system interpretation of bandwidth estimation", "author": ["J. Liebeherr", "M. Fidler", "S. Valaee"], "venue": "IEEE Infocom, Anchorage, AK, May 2007, pp. 1127\u20131135.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2007}], "referenceMentions": [{"referenceID": 0, "context": "More specifically, knowing the rate at which data can be sent between two nodes such that the injected traffic induces minimal congestion is very valuable to guide peer selection in peer-to-peer streaming, to choose transmission rates in video streaming or to choose client-server association in content delivery networks [1].", "startOffset": 322, "endOffset": 325}, {"referenceID": 1, "context": "Intuitively, however, it should be possible to accurately and efficiently estimate the available bandwidth on multiple paths in a network by exploiting spatial correlation [2], [3].", "startOffset": 172, "endOffset": 175}, {"referenceID": 2, "context": "Intuitively, however, it should be possible to accurately and efficiently estimate the available bandwidth on multiple paths in a network by exploiting spatial correlation [2], [3].", "startOffset": 177, "endOffset": 180}, {"referenceID": 3, "context": "Similar to other bandwidth estimation techniques, such as Pathload [4], one measurement involves sending a quick burst of traffic along an end-to-end path at a fixed rate, and the measurement outcome indicates whether the probed rate is above or below the available bandwidth on the path.", "startOffset": 67, "endOffset": 70}, {"referenceID": 3, "context": "We use the term \u201cprobabilistic available bandwidth\u201d to highlight the fact that the quantity we strive to estimate is not the same as the standard available bandwidth metric, which is defined in terms of the capacity and utilization of the constituent links of the path [4].", "startOffset": 269, "endOffset": 272}, {"referenceID": 4, "context": "As discussed in [5], there is a modelling assumption underpinning the available bandwidth estimation techniques that are based on the principle of self-induced congestion (sending packet trains and comparing ingress and egress rates) 1.", "startOffset": 16, "endOffset": 19}, {"referenceID": 4, "context": "show that it is only approximate for multi-hop paths and other traffic models [5].", "startOffset": 78, "endOffset": 81}, {"referenceID": 3, "context": "1Neither Pathload [4] nor pathChirp [6], two widely-cited bandwidth estimation schemes, are exactly based on rate comparisons.", "startOffset": 18, "endOffset": 21}, {"referenceID": 5, "context": "1Neither Pathload [4] nor pathChirp [6], two widely-cited bandwidth estimation schemes, are exactly based on rate comparisons.", "startOffset": 36, "endOffset": 39}, {"referenceID": 6, "context": "argue that these tests are not equivalent [7], it is relatively clear that any received packet train that passes the one-way delay test employed by Pathload (i.", "startOffset": 42, "endOffset": 45}, {"referenceID": 5, "context": "Similar comments apply regarding the identification of excursion regions and the resultant available bandwidth estimator employed by pathChirp [6].", "startOffset": 143, "endOffset": 146}, {"referenceID": 7, "context": "We first infer links and the mapping from IP addresses to routers using traceroute (which has been known to inflate the number of observed routers, record incorrect links and bias router degree distributions [8]).", "startOffset": 208, "endOffset": 211}, {"referenceID": 8, "context": "The way information is shared amongst nodes in a factor graph is by using message passing, or belief propagation [9].", "startOffset": 113, "endOffset": 116}, {"referenceID": 9, "context": "To accomplish this, we adopt an active learning approach [10], sequentially choosing which path to probe next based on the measurements already obtained.", "startOffset": 57, "endOffset": 61}, {"referenceID": 10, "context": "A conventional approach to sample many paths is using non-adaptive uniform techniques [11]: the path could be chosen either randomly or using an approach like round robin (RR).", "startOffset": 86, "endOffset": 90}, {"referenceID": 10, "context": "binary search for the available bandwidth on path p [11].", "startOffset": 52, "endOffset": 56}, {"referenceID": 0, "context": "We assign link capacities using a uniform distribution between [1, 100] and generate a total of 500 topologies.", "startOffset": 63, "endOffset": 71}, {"referenceID": 11, "context": "explained that PlanetLab has evolved and this is no longer true [12].", "startOffset": 64, "endOffset": 68}, {"referenceID": 3, "context": "It is interesting to compare our estimation methodology with Pathload [4], both to assess measurement overhead and to examine the extent of correlation between the two metrics.", "startOffset": 70, "endOffset": 73}, {"referenceID": 12, "context": "Many approaches and software tools aimed at estimating available bandwidth of end-to-end network paths using active measurements have been proposed over the past few years: Spruce [13], IGI/PTR [14], pathChirp [6], Pathload [4], abget [15] (see [16] for a thorough survey and description of each technique).", "startOffset": 180, "endOffset": 184}, {"referenceID": 13, "context": "Many approaches and software tools aimed at estimating available bandwidth of end-to-end network paths using active measurements have been proposed over the past few years: Spruce [13], IGI/PTR [14], pathChirp [6], Pathload [4], abget [15] (see [16] for a thorough survey and description of each technique).", "startOffset": 194, "endOffset": 198}, {"referenceID": 5, "context": "Many approaches and software tools aimed at estimating available bandwidth of end-to-end network paths using active measurements have been proposed over the past few years: Spruce [13], IGI/PTR [14], pathChirp [6], Pathload [4], abget [15] (see [16] for a thorough survey and description of each technique).", "startOffset": 210, "endOffset": 213}, {"referenceID": 3, "context": "Many approaches and software tools aimed at estimating available bandwidth of end-to-end network paths using active measurements have been proposed over the past few years: Spruce [13], IGI/PTR [14], pathChirp [6], Pathload [4], abget [15] (see [16] for a thorough survey and description of each technique).", "startOffset": 224, "endOffset": 227}, {"referenceID": 14, "context": "Many approaches and software tools aimed at estimating available bandwidth of end-to-end network paths using active measurements have been proposed over the past few years: Spruce [13], IGI/PTR [14], pathChirp [6], Pathload [4], abget [15] (see [16] for a thorough survey and description of each technique).", "startOffset": 235, "endOffset": 239}, {"referenceID": 15, "context": "Many approaches and software tools aimed at estimating available bandwidth of end-to-end network paths using active measurements have been proposed over the past few years: Spruce [13], IGI/PTR [14], pathChirp [6], Pathload [4], abget [15] (see [16] for a thorough survey and description of each technique).", "startOffset": 245, "endOffset": 249}, {"referenceID": 5, "context": "In techniques like pathChirp [6] and Pathload [4] the sender varies the probing rate iteratively until it is possible to converge to the available bandwidth of the path.", "startOffset": 29, "endOffset": 32}, {"referenceID": 3, "context": "In techniques like pathChirp [6] and Pathload [4] the sender varies the probing rate iteratively until it is possible to converge to the available bandwidth of the path.", "startOffset": 46, "endOffset": 49}, {"referenceID": 3, "context": "To account for noise and the variability of the available bandwidth, Jain and Dovrolis estimate a variation range for the available bandwidth (instead of a single estimate) based on one-way delays using Pathload [4].", "startOffset": 212, "endOffset": 215}, {"referenceID": 4, "context": "study in more depth the transition point and the relation between the input/output ratio and the input rate [5].", "startOffset": 108, "endOffset": 111}, {"referenceID": 16, "context": "to provide bounds on end-to-end delay [17].", "startOffset": 38, "endOffset": 42}, {"referenceID": 17, "context": "propose an elegant theoretical framework based on min-plus algebra, but only for worst-case deterministic estimations [18].", "startOffset": 118, "endOffset": 122}, {"referenceID": 2, "context": "Song and Yalagandula proposed S to measure real-time end-to-end network properties such as latency and loss rate [3].", "startOffset": 113, "endOffset": 116}, {"referenceID": 1, "context": "In [2], Hu and Steenkiste introduce BRoute; a scalable available bandwidth estimation system based on route sharing.", "startOffset": 3, "endOffset": 6}, {"referenceID": 5, "context": "We are currently investigating an approach that employs chirps in order to scan a wider range of bandwidths with a single measurement [6].", "startOffset": 134, "endOffset": 137}], "year": 2010, "abstractText": "Knowing the largest rate at which data can be sent on an end-to-end path such that the egress rate is equal to the ingress rate with high probability can be very practical when choosing transmission rates in video streaming or selecting peers in peer-to-peer applications. We introduce probabilistic available bandwidth, which is defined in terms of ingress rates and egress rates of traffic on a path, rather than in terms of capacity and utilization of the constituent links of the path like the standard available bandwidth metric. In this paper, we describe a distributed algorithm, based on a probabilistic graphical model and Bayesian active learning, for simultaneously estimating the probabilistic available bandwidth of multiple paths through a network. Our procedure exploits the fact that each packet train provides information not only about the path it traverses, but also about any path that shares a link with the monitored path. Simulations and PlanetLab experiments indicate that this process can dramatically reduce the number of probes required to generate accurate estimates.", "creator": "LaTeX with hyperref package"}}}