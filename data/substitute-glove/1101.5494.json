{"id": "1101.5494", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "28-Jan-2011", "title": "Developing a New Approach for Arabic Morphological Analysis and Generation", "abstract": "Arabic histologic psychology instance one of into quality resulting days Arabic Natural Language Processing. In make published everyone either critical changing years Arabic variability effectiveness. This this is technology a Arabic morphological pushdown (AMAUT ). The proposed simple such now morphological analysis so direct XMODEL language. Arabic morphology organization hand set type seen trait communication because makes is based on however essence of required to particular Arabic rarely. We addition this modeled directly develop the Arabic morphological ternary. The proposed fairly came importance benchmarking particular. It able make supposedly by NLP basic making some definitions same typology analysis, papers retrieval, processor translation and denotation suggest. The expansion approach this combined their Xerox Arabic Analyzer made Smrz Arabic Analyzer.", "histories": [["v1", "Fri, 28 Jan 2011 09:58:39 GMT  (705kb)", "http://arxiv.org/abs/1101.5494v1", "18 pages, 15 figures, 7 tables"]], "COMMENTS": "18 pages, 15 figures, 7 tables", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["mourad gridach", "noureddine chenfour"], "accepted": false, "id": "1101.5494"}, "pdf": {"name": "1101.5494.pdf", "metadata": {"source": "CRF", "title": "Developing a New Approach for Arabic Morphological Analysis and Generation", "authors": ["Mourad Gridach", "Noureddine Chenfour", "Mohamed Ben Abdellah"], "emails": ["mourad_i4@yahoo.fr", "chenfour@yahoo.fr"], "sections": [{"heading": null, "text": "Arabic morphological analysis is one of the essential stages in Arabic Natural Language Processing. In this paper we present an approach for Arabic morphological analysis. This approach is based on Arabic morphological automaton (AMAUT). The proposed technique uses a morphological database realized using XMODEL language. Arabic morphology represents a special type of morphological systems because it is based on the concept of scheme to represent Arabic words. We use this concept to develop the Arabic morphological automata. The proposed approach has development standardization aspect. It can be exploited by NLP applications such as syntactic and semantic analysis, information retrieval, machine translation and orthographical correction. The proposed approach is compared with Xerox Arabic Analyzer and Smrz Arabic Analyzer.\nKeywords: Morphological automaton; Arabic language; morphological analysis; morphological generation"}, {"heading": "1. Introduction", "text": "Nowadays, Arabic language faces many challenges. The first important challenge is the requirement to analyze Arabic morphology with high quality because it is considered as the essential stage in many NLP applications such as Information Retrieval and Machine Translation. The second challenge is concerning the use of morphology in machine translation systems. Koehn and Hoang (2007) have shown that factored translation models containing morphological information lead to better translation performance. Morphological analysis becomes more important when translating to or from morphologically rich languages such as Arabic. The third challenge is that morphological analysis is considered as the first step before syntactic analysis.\nArabic is a morphologically complex language. The morphological analysis of any word consists of determining the values of a large number of features, such as basic part-of-speech (i.e., noun, verb, etc.), gender, person, number, voice, information about the clitics, etc. (Habash, 2005). There has been much work on Arabic morphology (see AlSughaiyer and Al-Kharashi, 2004). Since, lots of morphological analysis approaches are available now, some of them have a commercial purpose and the others are available for research and evaluation (Attia, 2006).\nIn this paper we present an approach for Arabic morphological analysis based on Arabic morphological automaton technique. To construct an Arabic morphological automaton, we used particularities of Arabic morphology that are concretized on multilevel: verbs and nouns are also characterized by a specific representation named the matrix \u201croot \u2013 scheme\u201d. Arabic nouns and verbs are derived from roots by applying schemes to these roots to generate Arabic stems and then adding prefixes and suffixes to the stems to form a correct word in Arabic language. Table 1 show some schemes applied to the root \u201cktb\u201d ( \u0622). Our approach is used to develop a morphological analyzer for Arabic language.\nThe structure of the article is as follows. First, in the introduction we discuss the challenges of Arabic language and the importance of morphological analysis as an essential step in Natural Language Processing. We present an overview of Arabic morphology in the second section. We discuss some Arabic morphological analysis approaches related to the presented work in the third section. In the fourth section, we present our lexicon. In section five, we present our approach for Arabic morphological analysis. We present the application of the presented work in Arabic morphological analysis in section six. In the seventh section, we evaluate the proposed technique. In section eight, we discuss the obtained results. Finally, in the last section, we draw some conclusions."}, {"heading": "2. Overview of Arabic morphology", "text": "Morphology is the branch of linguistics that deals with the internal structure of words. It studies word formation, including affixation behavior, roots, and pattern properties. Morphology can be classified as either inflectional or derivational. Inflectional morphology is applied to a given stem with predictable formation. It does not affect the word\u2019s grammatical category, such as noun, verb, etc. Case, gender, number, tense, person, mood, and voice are some examples of characteristics that might be affected by inflection. Derivational morphology, on the other hand, concatenates to a given word a set of morphemes that may affect the syntactic category of the word. The distinction between these two classes is not an easy one to make, and it differs from one language to another. In this section, we deal with Arabic morphology.\nThe origin of Arabic is very different from the other languages especially European languages. It includes 28 letters and they are all considered as consonants. The Arabic writing system is very different from the most of the other languages because it is written from right to left. Arabic morphological representation is rather complex because of some morphological phenomenon like the agglutination phenomenon. Letters change forms according to their position in the word (beginning, middle, end and separate). Table 2 gives an example of different forms of the letter \u201cg\u201d / \u0627/ at different positions.\nIt seems that Arabic traditional grammarians (Ibrahim, 2002) have been persuaded by morphology to classify words into only three types: verbs, nouns and prepositions and particles. Adjectives take almost all the morphological forms of nouns. Compared to other languages, Arabic is mainly derivational while others are concatenative. It is characterized by its very rich derivational morphology, where almost all of words are derived from roots by applying patterns (Darwish, 2002). There is in Arabic around 10000 roots, which are in general made up of three, four, or five letters. The roots with three letters alone generate approximately 85% of the Arabic words (De Roeck, 2000). Concerning the Arabic morphemes, they fall into three categories: templatic morphemes, affixes morphemes, and non-templatic word stems (NTWSs). NTWSs are word stems that are not constructed from a \u201croot \u2013 scheme\u201d combination. Verbs are never NTWSs (Habash, 2006).\nIn this presented work, we have classified the first category of morphemes in two types which are needed to create an Arabic word stem: roots and schemes. The root morpheme is an ordered sequence of valid three or four characters from the alphabet and rarely five characters. The root is not a valid Arabic word (for example /ktb/ / \u0622/). The scheme morpheme is an ordered sequence of characters. Some of these characters are constants and some are variables. The variables characters are to be substituted with the characters of an Arabic root to generate a word called the \u201cstem\u201d. There are different schemes for the triliteral and tetraliteral roots. Table 3 shows schemes for some Arabic verbs classified as original schemes. Note that the scheme is not a valid Arabic word, whereas the stem is a valid word. The word stem is formed by substituting characters of the root into certain verb schemes. The following example shows an example of constructing an Arabic word stem using the root and scheme.\nRoot \u201cktb\u201d /\u0628 \u062a \u0643/ Scheme \u201ctafAcala\u201d /\u064e\u064e \u064e\u064e/ Stem \u201ctakAtaba\u201d /\u064e\u064e \u064e\u064e/\nFor the affixes morphemes, they can be added before or after a root or a stem as a prefix or suffix. For prefixes, they can be added before the stem like the prefix \u201csa\u201d /\u0633/ which used to express the future while suffixes can be added after the stem like the suffix \u201cUna\u201d /\u0646\u0648/. In this paper, we use this classification of Arabic morphemes to concretize our approach for Arabic morphological analysis."}, {"heading": "3. Related work", "text": "Much work has been done in the area of Arabic morphological analysis and generation in a variety of approaches and at different degrees of linguistics depths (Al-Sughaiyer and Al-Kharashi, 2004). The most of the approaches tend to target a specific application (Khoja, 2001; Darwish, 2002; Diab et al., 2007a). The most referenced systems are works done by Habash et al., Smrz, Buckwalter and Beesley. They are available for research and evaluation and well documented. In this section, we discuss these works to clarify their working method and approach in Arabic morphological analysis."}, {"heading": "3.1 MAGEAD: A Morphological Analyzer and Generator for Arabic Dialects", "text": "MAGEAD is one of the existing morphological analyzers for the Arabic language available for research. It\u2019s a functional morphology systems compared to Buckwalter morphological analyzer which models form-based morphology (M. Altantawy et al., 2010). To develop MAGEAD, they use a morphemic representation for all morphemes and explicitly define morphophonemic and orthographic rules to derive the allomorphs. The lexicon is developed by extending Elixir-FM\u2019s lexicon. The advantage of this analyzer is that it processes words from the morphology of the dialects which they considered as a novel work in this domain, but unfortunately this analyzer needs a complete lexicon for the dialects to make the evaluation more interesting and convincing, and to verify these claims."}, {"heading": "3.2 ElixirFM: an Arabic Morphological Analyzer by Otakar Smrz", "text": "ElixirFM is an online Arabic Morphological Analyzer for Modern Written Arabic developed by Otakar Smrz available for evaluation and well documented. This morphological analyzer is written in Haskell, while the interfaces in Perl. ElixirFM is inspired by the methodology of Functional Morphology (Forsberg and Ranta, 2004) and initially relied on the re-processed Buckwalter lexicon (Buckwalter, 2002). It contains two main components: a multi- purpose programming library and a linguistically morphological lexicon (Smrz, 2007). The advantage of this analyzer is that it gives to the user four different modes of operation (Resolve, Inflect, Derive and Lookup) for analyzing an Arabic word or text. But the system is limited coverage because it analyzes only words in the Modern Written Arabic."}, {"heading": "3.3 Buckwalter Arabic Morphological Analyzer", "text": "This analyzer is considered as one of the most referenced in the literature, well documented and available for evaluation. It is also used by Linguistic Data Consortium (LDC) for POS tagging of Arabic texts, Penn Arabic Treebank, and the Prague Arabic Dependency Treebank (Atwell et al., 2004). It takes the stem as the base form and root information is provided. This analyzer contains over 77800 stem entries which represent 45000 lexical items. However, the number of lexical items and stems makes the lexicon voluminous and as result the process of analyzing an Arabic text becomes long."}, {"heading": "3.4 Xerox Arabic Morphological Analysis and Generation", "text": "Xerox Arabic morphological Analyzer is well known in the literature and available for evaluation and well documented. This analyzer is constructed using Finite State Technology (FST) (Beesley, 1996 and 2000). It adopts the root and pattern approach. Besides this, it includes 4930 roots and 400 patterns, effectively generating 90000 stems. The advantages of this analyzer are, on the one hand, the ability of a large coverage. On the other hand, it is based on rules and also provides an English glossary for each word. But the system fails because of some problems such as the overgeneration in word derivation, production of words that do not exist in the traditional Arabic dictionaries (Darwish, 2002) and we can consider the volume of the lexicon as another disadvantage of this analyzer which could affect the analysis process."}, {"heading": "4. Lexicon", "text": "The lexicon is the set of valid lexical forms of a language. As in any morphological analysis approach, the enhancement level of the lexicon determines the quality of the analysis. There are two aspects that contribute to this enhancement level. The first aspect concerns the number of lexicon entries contained in the lexicon. Second aspect concerns the richness in linguistics information contained by the lexicon entries. We mention that large Arabic morphological analyzers used the BAMA lexicon. It was used in the creation of Elixir-FM. Also MAGEAD used it by extending ElixirFM\u2019s lexicon.\nThere has been much work to construct an Arabic lexicon with the optimal way. For an overview see (Al-Sughaiyer and Al-Kharashi, 2004). Currently, another method is used for representing, designing and implementing the lexical resource. This method used the Lexical Markup Framework (LMF). It was used in lots of languages (Indo-European), but for Arabic language this method still in progress towards a standard for representing the Arabic linguistic resource. Lexical Markup Framework (LMF, ISO-24613) is the ISO standard which provides a common standardized framework for the construction of natural language processing lexicons. The US delegation is the first which started the work on LMF in 2003. In early 2004, the ISO/TC37 committee decided to form a common ISO project with Nicoletta Calzolari (Italy) as convenor and Gil Francopoulo (France) and Monte George (US) as editors (Francopoulo and George, 2008).\nTo represent Arabic morphological knowledge with the optimal way, we conceived an innovative language adapted for this specific situation: it is the XMODEL language (XML-based MOrphological DEfinition Language). As a result, all morphological entries are gathered in an XMODEL files. Using the new language helps direct search for information. It allows representing the whole components, properties and morphological rules with a very optimal way. To clarify the last point, we note that our morphological database contains 960 lexicon items (morphological components) and 455 morphological rules to be applied to these morphological components which present a remarkable reduction in the number of entries in the lexicon compared to the existing systems (Xerox and Buckwalter). This representation helps us achieve the following goals:\nA symbolic definition, declarative and therefore progressive of the Arabic morphology. A morphological database independent of processing that will be applied (see later). A considerable reduction of the number of morphological entries. The scheme allows defining the maximum morphological components by means of XMODEL language.\nOur language makes it possible to represent Arabic morphology as morphological classes and rules. Accordingly, our Arabic morphological database will be composed of three parts: morphological classes, morphological properties and morphological rules.\nThe next paragraph presents XMODEL language which allows representing Arabic morphological knowledge and consists of three parts."}, {"heading": "4.1 Morphological component class", "text": "It allows representing all Arabic morphological components. It also permits to gather a set of morphological components having the same nature, the same morphological characteristics and the same semantic actions. Relying on the notion of scheme \u201cealwazn\u201d /\u0646\u0632! \u0627/, this class allows a better optimization hence, a considerable reduction of morphological entries. Figure 1 shows a morphological component class representing four schemes (\u201cfacala\u201d, \u201cfacila\u201d, facula\u201d and faclala\u201d). These schemes are called original schemes. In this morphological component class, they are considered as morphological components."}, {"heading": "4.2 Morphological properties class", "text": "It allows characterizing the different morphological components represented by the morphological class: a morphological property class contains a set of morphological descriptors or morphological values of properties that would be assigned to different morphological components. We mention, for example, the property \u201cGender\u201d which will distinguish between masculine and feminine components. The morphological properties are not related to a specific morphological class which makes it necessary to define them outside the morphological classes. Figure 2 shows an example of morphological properties class that contains two morphological properties (Person and Gender). Each morphological property contains a set of descriptors.\nWe have added the attribute \u201ctype\u201d to work out the problem of the semantic of the morphological descriptors that might be exclusive (the morphological component can not be characterized by the morphological descriptors of the same property as in the case of the \u201cPerson\u201d property) or additive (the morphological component can be characterized by the morphological descriptors of the same property as it is the case in the \u201cGender\u201d property).\nThere are two strategies to characterize the morphological components using the properties:"}, {"heading": "4.2.1 Components property", "text": "A morphological class can use a list of morphological descriptors to define its components. Generally speaking; each morphological component can have its own morphological descriptors. As for the \u201cGender\u201d property, some components of this class can be masculine while the others can be feminine. This type of properties is named the components property. In order to put them into practice, we have introduced the \u201cuses\u201d tag. This means that the different morphological descriptors defined by components property can be used by the different morphological components of the morphological class. Figure 3 shows an example of three components property (Gender, Number and Place). They are used to characterize the two morphological components \u201chAvA\u201d /\u0627\"\u0647/ and \u201cvAlika\u201d /$ \u0630/."}, {"heading": "4.2.2 Classes property", "text": "This one requires assigning a set of morphological components the commons morphological properties. For example, all components are masculine names. This type of property is known as classes property. To concretize the use of classes property, we introduce the \u201cis\u201d tag. Figure 4 shows an example of two classes property (\u201cNumber.NSg\u201d and \u201cGender.GMa\u201d). It means that all the five schemes are singular and have masculine gender. We mention that the same morphological components class can use both of the tags \u201cuses\u201d and \u201cis\u201d."}, {"heading": "4.2.3 Reference property", "text": "Another strong point of the XMODEL language is the introducing of the notion of reference property which has an important role to benefit from the specificities of the Arabic morphology. As for the Arabic language some morphological components might be conjugated forms of other components which we call original components. An example of these forms is the following components \u201cafcalu\u201d, \u201cafcilu \u201c, \u201cafculu\u201d (see figure 6). These components are all conjugated forms of the component \u201cfacala\u201d (see figure 5). We have specified the reference between components using the \u201cref\u201d tag.\nIn order to concretize this reference between components, we have opted the attribute \u201cid\u201d to the original component (see figure 5). This attribute is specified in the \u201ccomponent\u201d tag. The components that are conjugated forms will use this code as an attribute of that tag (the \u201ckey\u201d attribute) to indicate this reference (see figure 6)."}, {"heading": "4.3 Morphological rules class", "text": "Firstly, it should be noted that we developed 455 morphological rules for the Arabic language. They help us combine some morphological components (morphemes) together to generate correct language words. They use the different morphological components classes as well as the morphological properties classes. The morphological rules classes allow us to add new morphological descriptors which do not belong to the union of morphological descriptors of components of rules. As a result, they are considered as a generator of language words. The implementation of the morphological rules class permits to put into practice all the possible concatenations between components. Figure 7 shows a morphological rules class named \u201cprefixesSuffixes\u201d that contains two rules. The two rules allow generating words which begin by the prefix \u201cla\u201d and \u201cbi\u201d.\nThe structuring of our morphological database using XMODEL language allows us to generate the Arabic morphological automaton."}, {"heading": "5. Our approach", "text": "There has been much work on Arabic morphological analysis where lots of approaches are implemented to satisfy that area of research. For an overview of the approaches of Arabic morphological analysis, see (Al-Sughaiyer and AlKharashi, 2004).\nThe method presented is based on Arabic Morphological Automaton (AMAUT). It is considered among the most efficient methods. AMAUT is responsible for both analysis and generation tasks. A word is accepted by an AMAUT if it belongs to a correct word in Arabic. Generally speaking, an Arabic morphological automaton is represented as <Q, \u2211, q0, F, \u03c4>. Where:\n\u2022 Q is a finite set of states of the control unit which represents the states of an AMAUT. \u2022 \u2211 is a finite input tape alphabet symbols. For an AMAUT, it is constituted of the Arabic characters. \u2022 q0 is the start state of the AMAUT. It is constituted of only one start state in the case of a morphological\nautomaton.\n\u2022 F is a subset of Q. It represents the accepting states of the AMAUT. It gives the morphological descriptors (features) that characterize each word analyzed. \u2022 The set \u03c4 also represents the transition function of the AMAUT.\nConsequently, implementing AMAUT needs to use the lexicon discussed in the previous section. We have to extract all the morphological rules from the lexicon and implement an AMAUT for each rule. So to realize that implementing, we have to use some operations such as concatenation and union. In the next paragraphs, we explain how we can use these two operations to generate an AMAUT for a definite morphological rule. The following morphological rule (\u201crule_1\u201d) is responsible to product Arabic numbers that accept the suffix \u201cun\u201d.\nSo to generate the AMAUT representing this morphological rule (\u201crule_1\u201d), we concatenate the first morpheme (key = \u201cCardNumber.CNAccepteSCID\u201d), which represents Arabic numbers that accept suffixes (like \u201cwAHid\u201d /&'\u0627\u0648/, \u201cca^arat\u201d /\u0629)* /, \u201c~amAn\u201d /\u0646 +,/, etc.), with the second one (key = \u201cCasSuffixe.SCD\u201d component = \u201cun\u201d), which represents the suffix \u201cun\u201d. Figure 8 shows the resulting AMAUT obtained from the rule \u201crule_1\u201d.\nIn addition to the concatenation used to concatenate morphemes or morphological automata together, we used the union operation to associate two or several morphological automata generated by the first operation, each one represent a definite morphological rule. Figure 9 concretizes the use of the union operation. It contains a morphological rules class (\u201ccardNbCRules\u201d) that shows an example of two morphological rules (\u201crule_1\u201d and \u201crule_2\u201d) each one represents the Arabic numbers that accept suffixes which will be concatenated with the two suffixes \u201cun\u201d and \u201can\u201d.\nThe AMAUT generated by the morphological rule \u201crule_1\u201d is showed in figure 8. Figure 10 shows an AMAUT generated by the morphological rule \u201crule_2\u201d which represents the Arabic numbers that accept the suffix \u201can\u201d.\nIn figure 9, we have two morphological rules; each one generates an AMAUT. We used the union operation to associate the first AMAUT (represented in figure 8) which represents the rule identified by \u201crule_1\u201d with the second AMAUT (represented in figure 10) which represents the rule identified by \u201crule_2\u201d. Figure 11 shows the resulting AMAUT.\nIn the following paragraphs, we present a detail of how to implement all the AMAUT and the technique used in the implementation.\nSo as to implement an AMAUT, we have classified Arabic words in to two categories: the first category is that which submits to the derivation process, while the second one doesn\u2019t. This derivation process is generated by a set of morphological rules known in the Arabic grammar under the name \u201cqawAcidu eaSSarfi\u201d /\u0641). \u0627 & \u0627!//. They repose on the manipulation of a set of very determined schemes named \u201cealeawzAn\u201d /\u0646\u0627\u0632\u06480\u0627/.\nThe scheme (measure or form) is a general mould composed of an ordered sequence of characters. Some of these\ncharacters are constants (instantiated) and some are variables (uninstantiated) (El-Sadany, 1989). The uninstantiated characters are to be substituted (instantiated) with the characters of an Arabic root to generate a word called the \u201cstem.\u201d There are different schemes for the trilateral and tetraliteral roots. Note that the scheme is not a valid Arabic word, whereas the stem is a valid word.\nAt the graphical level, a scheme generally constitutes of (Tahir et al., 2004):\n\u2022 Three consonants that are represented by the letters \u201cf\u201d /\u0641/, \u201cc\u201d /\u0639/ and \u201cl\u201d /\u0644/ with a possibility to duplicate the last letter \u201cl\u201d as in the schemes case that correspond to a four letters root like \u201cfaclala\u201d / /. \u2022 Some consonants that serve as tools to extend the root like \u201cstafcala\u201d / \u0627/ and \u201ctafAcala\u201d / /. \u2022 An adequate vowels group.\nWe have grouped in the first category of words the following items:\n\u2022 Derived nouns \u201cealaSmAe ealmu^taqqa\u201d / \u0621 + 0\u0627 56 *+ \u0627 /. \u2022 Strong verbs \u201cealeafcAl eaSSaHiyHa\u201d / \u0644 0\u0627 57 7. \u0627 /: these are the verbs that contain no weak letters. In the\nArabic language, there are three weak letters: \u201cw\u201d /\u0648/, \u201cA\u201d /\u0627/ and \u201cy\u201d /\u064a/. \u2022 Weak verbs \u201cealeafcAl ealmuctalla\u201d /5 + \u0627 \u0644 0\u0627/: these are the verbs that contain a weak letter. Weak verbs\nare also classified into three categories (Attia, 2005):\na. Assimilated \u201cealmi~al\u201d /\u0644 9+ \u0627/: a verb that contains an initial weak letter. b. Hollow \u201cealajwaf\u201d /\u0641!:0\u0627/: a verb that contains a middle weak letter.\nc. Defective \u201ceannAqiS\u201d /;/ < \u0627/: a verb that contains a final weak letter.\nWhile the second words category contains three families of words:\n\u2022 The particular nouns \u201cealasmAe ealxASSa\u201d /5= > \u0627 \u0621 + 0\u0627/: these nouns comprise proper nouns, names of cities, names of countries, etc. It also regroups the exclusive nouns \u201ceasmAe ealeisti~nAe\u201d /\u0621 <9 ?\u0627 \u0621 + \u0623/, the interrogative nouns \u201ceasmAe ealeistifhAm\u201d /\u0645 A ?\u0627 \u0621 + \u0623/, the demonstrative nouns \u201ceasmAe ealei^Ara\u201d / \u0621 + \u0623 \u0629\u0631 CD\u0627/, the conditional nouns \u201ceasmAe ea^^art\u201d /\u0637)* \u0627 \u0621 + \u0623/, etc.\n\u2022 The particles \u201cealHurUf\u201d /\u0641\u0648)7 \u0627/ likes for example \u201cHurUfu ealjarri\u201d /)F \u0627 \u0641\u0648)'/, \u201cHurUfu ealjazmi\u201d / \u0641\u0648)' \u0645GF \u0627/, \u201cHurUfu ealcaTfi\u201d /HI \u0627 \u0641\u0648)'/, etc.\n\u2022 The incomplete verbs \u201cealeafcAl eannAqiSa\u201d /5./ < \u0627 \u0644 0\u0627/: this family of verbs contains the family of verb \u201ckAda\u201d /\u062f \u0622/, the family of verb \u201ckAna\u201d /\u0646 \u0622/ and the family of verb \u201cZanna\u201d / K/.\nFinally, after generating a series of AMAUT, their size is about 120 MB. Concerning the number of the entries generated, it\u2019s about 5961 entries, which represent a remarkable reduction of the entries number and makes our approach as one of the best existing approaches in the literature. We could mention that using XMODEL to implement the lexicon could be another advantage that explains the obtained results. To concretize this remarkable implementation, figure 12 shows an AMAUT generated from verbs with the schemes: \u201cfacala\u201d, \u201cfacila\u201d, \u201cfacula\u201d and \u201cfaclala\u201d.\nSo related to the AMAUT generated in figure 12, it contains 19 states including 4 accepting states (\u201919\u2019, \u201816\u2019, \u201817\u2019 and \u201818\u2019) which represent the four schemes. This implementation allows a remarkable reduction concerning the number of the morphological entries and explains the results seen before.\nWe note that developing the Arabic morphological automata is the proposed approach to develop an Arabic morphological analyzer. In the following paragraph we will present the application of our approach in Arabic morphological analysis."}, {"heading": "6. Application in Arabic Morphological Analysis", "text": "In this section, we operate our approach in Arabic morphological analysis. It is based on the Arabic Morphological Automaton (AMAUT) method presented in the previous section. The implementation of our approach has been done using an oriented object framework. It is developed using Java Programming Language and based on a reduced lexicon built using XMODEL language.\nThe use of AMAUT technology makes our system usable as a generator as well as an analyzer, unlike some morphological analyzers which cannot be converted to generators in a straightforward manner (Sforza, 2000; Buckwalter, 2004; Habash, 2004).\nSo as to develop an Arabic morphological analyzer and generator, firstly, we used a lexicon built using the XMODEL language integrating the entries suitable for Arabic language. It regroups three packages: morphological components package that contains verbs, nouns, particles and affixes. The second package includes the morphological rules and the last package is concerned with the morphological properties. Secondly, we used a set of Arabic morphological automata each one represents a very specific morphological category. It is considered as the main idea to develop an Arabic morphological analyzer. Finally, we developed a framework handling the lexicon and the morphological automata.\nThe presented method involves five steps. In this paragraph, we provide a brief description of the principle of this method. As input, the proposed technique accepts an Arabic text. The first step is to apply a tokenization process to the text given. Then, a set of AMAUT are loaded, in a second step. The part-of-speech is determined in the third step. After that, the method determines all possible affixes. Then the next step consists of extracting the morpho-syntactic features according to the valid affixes.\nThe tokenization process consists of extracting all the words from the text given. A set of Arabic morphological automata are loaded from a package that contains all the implemented Arabic morphological automata. Then, the approach determines which AMAUT is suitable for that word. The result may be one or more AMAUT loaded. Then, the method determines the part-of-speech. If the word analyzed is a noun or a verb, the method determines if it contains a scheme. Then, if it is a verb, the method determines the type of the verb (strong, weak, or incomplete), its tense (\u201cmADI\u201d /LM N/, \u201cmuDAric\u201d /\u0639\u0631 ON/ or \u201ceamr\u201d /)N\u0623/), its voice (active or passive), etc. If it is a noun, we determine if it is a derived noun or particular noun. If it is a particle, the method determines if it is a preposition particle /)F \u0627 \u0641\u0648)'/, conjunction particle / HI \u0627 \u0641\u0648)' /, etc. After that, the method applied a process of extracting the possible affixes attached to the word analyzed. The next step consists of extracting the morpho-syntactic features according to the valid affixes and the scheme. Additional information is extracted called in our approach morphological descriptors. They describe the word analyzed and they are very useful especially in Natural Language Processing applications. Finally, the morphological analyzer displays the results in a table where each row contains the word analyzed and all the data characterizing this word (see figure 13 and figure 14).\nConcerning the morpho-syntactic features given by the morphological analysis using the proposed technique, they are very rich regarding the information given to the user (see figure 13 and 14). It concerns the morphological level, the syntactic and semantic level which makes the richness of our system compared to the others system (see the Evaluation section). Here are some important features which will be given by the system.\n\u2022 The word gender: masculine or feminine. \u2022 The word person: first, second or third person. \u2022 The word number: singular, dual or plural. \u2022 The word case: \u201cmarfUc\u201d (\u0639! )N), \u201cmanSUb\u201d (\u0628!.<N), \u201cmajrUr\u201d (\u0631\u0648)FN), \u201cmajzUm\u201d (\u0645\u0648GFN). \u2022 The type of the word: verb, noun or particle. \u2022 If the word is a verb, we give its tense: present (\u201cealmuDAric\u201d: \u0639\u0631 O+ \u0627), past (\u201cealmADI\u201d: LM + \u0627) or imperative\n(\u201cealeamr\u201d: )N0\u0627). We also give its voice: active or passive. \u2022 The scheme of the word is given if available.\nTo concretize these obtained results, we analyze some examples of Arabic verbs and nouns using the proposed technique. These examples are taken from a standard input text provided by ALECSO (Arab League, Educational, Cultural and Scientific Organization) which organized a competition in April 2009 of the Arabic Analyzers in Damascus. The standard input text provided by ALECSO is unvocalized, in this test, we used a vocalized version. This standard input text is provided in this file: http://www.alecso.org.tn/images/stories/OULOUM/MOHALLILAT%20SARFIADAMAS2009/020%20 NIZAR.html.\nFigure 13 and 14 show the morphological analysis results of some words analyzed using the proposed technique. As discussed before, the analyzer displays the Part-of-speech (verb, noun or particle), the original scheme is displayed in column B because Arabic has this particularity which is summarized in that some words might be conjugated forms of other words like \u201cafcalu\u201d, \u201cafcilu \u201c, \u201cafculu\u201d, these three words are all conjugated forms of \u201cfacala\u201d. The gender (masculine or feminine) is displayed in column D, the person (first, second or third person) is displayed in column E, the number (singular, dual or plural) is displayed in column F. For the column G, it concerns some properties that characterize the word analyzed and they are very useful to the user. Some morphological descriptors are displayed in column H. Finally, the column I and J show the affixes attached to the word.\nFinally, the proposed technique for Arabic morphological analysis has many advantages such as:\n\u2022 The separation between the linguist and the developer task. \u2022 We can also reuse our programs in future works. \u2022 Development standardization means in our application that we have build all the applications with the same\nstandards.\n\u2022 The facility of maintenance: it\u2019s easy to add some new features or morphological characteristics to the presented system if the user or the linguist needs them for his Arabic morphological analysis. It\u2019s also easy to\nextend our system to include some new works related to Arabic NLP such as information retrieval, syntactic and semantic analyzers, correction and generation of Arabic texts."}, {"heading": "7. Evaluation", "text": "Firstly, we mention that a standard annotated corpus for Arabic language is not yet available, for this reason the evaluation process will be difficult. To evaluate the presented approach for morphological analysis, we use a corpus taken from a standard input text provided by ALECSO which organized a competition in April 2009 of the Arabic Morphological Analyzers in Damascus. In this section, we evaluate Xerox Arabic Morphological Analyzer, the Arabic Morphological Analyzer by Otakar Smrz and our approach. We have chosen Xerox Morphological Analyzer and the Morphological Analyzer by Otakar Smrz because they are one of the best known morphological analyzers for MSA and they are available and well documented.\nOn the one hand, the first remark when we compare the three morphological analyzers is about the richness of information giving by each one. Using morphological automaton approach and XMODEL language to represent morphological knowledge, our morphological analyzer gives more information about each word analyzed and more precision compared to Xerox Arabic Morphological Analyzer and Smrz\u2019s Analyzer. To clarify this point, we select some Arabic words from ALECSO input text and try to analyze them using the three morphological analyzers.\nTable 4, 5 and 6 show the results of ten different Arabic words analyzed using the three morphological analyzers. We note that the proposed approach provides more information and more precision about the word analyzed compared to the others. Thanks to the power of the morphological automaton for Arabic and XMODEL language which permit to represent the morphological knowledge in an optimal way. This advantage will be very useful especially in the future works which will be done later. It should be noted that the presented work could provide more information about the word analyzed according to the user needs.\nOn the other hand, let us see the evaluation process from another view. We have selected corpora of 975 words taken from ALECSO input text containing different part-of-speech (verbs, nouns and particles). Then, we tested them on each morphological analyzer, after that we draw a detailed analysis for the three analyzers. The corpora contain 975 words divided into 481 nouns, 362 verbs and 132 particles. Table 7 shows number of words which are not found when they are analyzed using the three morphological analyzers:\nThe proposed technique for morphological analysis can reach an average of performance around 90% which will make it one of the best existing approaches for Arabic morphological analysis and it will be very useful for the next future works to be done in NLP. We note that an update of the presented lexicon could resolve these errors seen in table 7."}, {"heading": "8. Discussion", "text": "To compare the proposed technique for Arabic morphological analysis to the other existing approaches, the task becomes difficult because, on the one hand, there is no standard to make the comparison. On the other hand, each system has its own target. For this reason, each approach has some advantages and disadvantages comparing to the others.\nThe proposed technique has some advantages comparing to the other approaches. These advantages are:\n\u2022 Our approach can be used in both analysis and generation \u2022 The use of morphological automaton approach makes the system efficient and very fast \u2022 Our new and innovative language (XMODEL) used to represent the morphological knowledge and the use of\nmorphological automaton permit to avoid a huge problems of ambiguity in Arabic which the most approaches can\u2019t resolve \u2022 The use of XMODEL language permit to reduce the number of the entries in the lexicon which present a big problem in the other approaches \u2022 The updating process of the Arabic morphological database is very easy to develop. This advantage makes our system very flexible \u2022 The major advantage of our system is that it allows, on the one hand, giving the affixes, the stem and the scheme for any word given. On the other hand, it gives morpho-syntactic features about the word analyzed\nand an additional morphological descriptors which permit to characterize every Arabic word\nThis work has some disadvantages compared to some other systems. Firstly, it can\u2019t handle undiacritized texts. Secondly, it doesn\u2019t provide an English glossary and finally, it handles words which do not exist. To clarify the last disadvantage, let us take an example of some invalid words analyzed with our system.\nFigure 15 shows five invalid words analyzed as they are valid words in Arabic. So the next works to be done is to solve this problem. To solve it, we will keep the current design of morphological analysis. Our idea is to use a lexicon of any existing morphological analyzer (for example: Buckwalter\u2019s analyzer, Xerox analyzer etc.) and eliminate the invalid words generated by the morphological automaton. This operation will reduce the number of the invalid words. But, this kind of problems isn\u2019t very serious to take in consideration, because Arabic Language is very rich in words and every year there is some news words added to this language."}, {"heading": "9. Conclusion", "text": "We have described an approach for Arabic morphological analysis. It is called the Arabic Morphological Automaton (AMAUT). We have evaluated the presented approach using Xerox Arabic Morphological Analyzer and Arabic Morphological Analyzer by Otakar Smrz because they are considered as the most referenced approaches for Arabic morphological analysis and they are available for research and evaluation. The use of the Arabic morphological automaton makes the morphological analyzer efficient and very fast. Concerning the development of the lexicon, we\nhave used XMODEL language for representing, designing and implementing the lexical resource. Our approach has another advantage because it\u2019s developed using Java language and XML technology which makes the system portable and reusable."}, {"heading": "876, Prague, Czech Republic.", "text": "Otakar Smrz. (2007), \u2018ElixirFM. Implementation of Functional Arabic Morphology\u2019, In ACL 2007 Proceedings of the Workshop on Computational Approaches to Semitic Languages: Common Issues and Resources, pages 1\u20138, Prague, Czech Republic, 2007.\nTahir Y., Chenfour N., Harti M. (2004), \u2018Mod\u00e9lisation \u00e0 objets d'une base de donn\u00e9es morphologique pour la langue arabe\u2019, JEP-TALN 2004, Traitement Automatique de l\u2019Arabe, F\u00e8s, Maroc.\nAppendix 1. Features signification in morphological analysis\nFeature Description Gfe Feminine Gma Masculine Def Defined Ind Undefined NaS manSUb \u00ab \u0628!.<N \u00bb KaS majrUr \u00ab \u0631\u0648)FN \u00bb Raf marfUc \u00ab \u0639! )N \u00bb Jaz majzUm \u00ab \u0645\u0648GFN \u00bb NSg Singular NDl Dual NPl Plural Pr1 First Person Pr2 Second Person Pr3 Third Person MOD ealmuDAric \u00ab \u0639\u0631 O+ \u0627 \u00bb MAD ealmADI \u00ab LM + \u0627 \u00bb ACT Active PAS Passive AccepteSC Accept Case Suffixes Efc Eismu fAcil \u00ab Y \u0627 \u00bb Emf Eismu mafcUl \u00ab \u0644! N Y \u0627 \u00bb Mmi maSdar mImI \u00ab Y N Y \u0627 \u00bb Zam Zarfu zamAn \u00ab \u0646 N\u0632 \u0641)K \u00bb Mak Zarfu makAn \u00ab \u0646 N \u0641)K \u00bb Mmr maSdar_ealmarrat \u00ab \u0629)+ \u0627 \u0631&.N \u00bb MaS maSdar \u00ab \u0631&.N \u00bb JtS jamcu taksIr li Sifatin \u00ab 5 . ) Z V+: \u00bb Smb SIgatu ealmubalagati \u00ab 5 [+ \u0627 5 = \u00bb Sif Sifatun \u00ab 5 = \u00bb\nAppendix 2. Letter mappings\n\u0627 : A \u0633 : s \u0643 : k \u0628 : B \u0634 : ^ \u0644 : l \u062a : T \u0635 : S \u0645 : m \u062b : ~ \u0636 : D \u0646 : n \u062c : J \u0637 : T \u0640\u0647 : h \u062d : H \u0638 : Z \u0648 : w \u062e : X \u0639 : c \u064a : y \u062f : D \u063a : g \u0649 : A \u0630 : V \u0641 : f \u0629 : t \u0631 : r \u0642 : q \u0621 : e \u0632 : z\nAppendix 3. The English translation of Arabic words\nThe Arabic Word Transliteration English Translation \u0644 0\u0627 57 7. \u0627 ealeafcAl eaSSaHiyHa Strong verbs 5 + \u0627 \u0644 0\u0627 ealeafcAl ealmuctalla Weak verbs 5./ < \u0627 \u0644 0\u0627 ealeafcAl eannAqiSa Defective verbs \u0644 9+ \u0627 ealmi~al Assimilated \u0641!:0\u0627 Ealajwaf Hollow ;/ < \u0627 EannAqiS Defective 5= > \u0627 \u0621 + 0\u0627 ealasmAe ealxASSa Particular nouns \u0621 + 0\u0627 56 *+ \u0627 ealaSmAe ealmu^taqqa Derived nouns \u0645 A ?\u0627 \u0621 + \u0623 easmAe ealeistifhAm Interrogation nouns \u0629\u0631 CD\u0627 \u0621 + \u0623 easmAe ealei^Ara Demonstrative nouns \u0637)* \u0627 \u0621 + \u0623 easmAe ea^^art Condition nouns )F \u0627 \u0641\u0648)' HurUfu ealjarri Preposition particles HI \u0627 \u0641\u0648)' HurUfu ealcaTfi Conjunction particles \u0646 \u0622 KAna Was K Zanna To think \u0639! )N MarfUc Nominative case \u0628!.<N ManSUb Accusative case \u0631\u0648)FN MajrUr Genitive case \u0645\u0648GFN MajzUm Jussive case \u0639\u0631 O+ \u0627 ealmuDAric The Imperfect LM + \u0627 EalmADI The Perfect )N0\u0627 Ealeamr The Imperative )\u064c\u0652=\u0650 Sifrun Zero V\u064eN\u064e Maca With \u0645\u064e N\u064e\u0623\u064e EamAma In front )\u064eC\u0650 \u064e \u0627 ealcA^ira The tenth"}], "references": [{"title": "Arabic morphological analysis techniques: A comprehensive survey", "author": ["I.A. Al-Sughaiyer", "I.A. Al-Kharashi"], "venue": "Journal of the American Society for Information Science and Technology,", "citeRegEx": "Al.Sughaiyer and Al.Kharashi,? \\Q2004\\E", "shortCiteRegEx": "Al.Sughaiyer and Al.Kharashi", "year": 2004}, {"title": "An Ambiguity-Controlled Morphological Analyzer for Modern Standard Arabic Modelling Finite State Networks\u2019, The Challenge of Arabic for NLP/MT", "author": ["E. London. Atwell", "L. Al-Sulaiti", "S. Al-Osaimi", "B. Abu Shawar"], "venue": "CLUK Research Colloquium", "citeRegEx": "Atwell et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Atwell et al\\.", "year": 2006}, {"title": "Arabic Finite-State Morphological Analysis and Generation\u2019, Proceedings of the 16th conference on Computational linguistics, Vol 1. Copenhagen, Denmark: Association for Computational Linguistics, pp 89-94", "author": ["Beesley KR"], "venue": "Beesley KR", "citeRegEx": "KR.,? \\Q1996\\E", "shortCiteRegEx": "KR.", "year": 1996}, {"title": "Buckwalter Arabic morphological analyzer version 2.0", "author": ["A. Soudi", "M. Teruko"], "venue": "LDC Catalog No.: LDC2002L49. Buckwalter T", "citeRegEx": "V. et al\\.,? \\Q2004\\E", "shortCiteRegEx": "V. et al\\.", "year": 2004}, {"title": "Building a Shallow Morphological Analyzer in One Day\u2019, proceedings of the workshop on Computational Approaches to Semitic Languages in the 40th Annual Meeting of the Association for Computational Linguistics (ACL-02)", "author": ["K. Darwish"], "venue": null, "citeRegEx": "Darwish,? \\Q2002\\E", "shortCiteRegEx": "Darwish", "year": 2002}, {"title": "Automated Methods for Processing Arabic Text: From Tokenization to Base Phrase Chunking\u2019, in Arabic Computational Morphology: Knowledge based and Empirical Methods", "author": ["M. Diab", "K. Hacioglu", "D. Jurafsky"], "venue": "IBM System Journal,", "citeRegEx": "Diab et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Diab et al\\.", "year": 2007}, {"title": "ISO/TC 37/SC 4 N453 (N330 Rev.16). Language resource management \u2014 Lexical markup framework (LMF)", "author": ["G. Francopoulo", "M. George"], "venue": "Conference of Functional Programming,", "citeRegEx": "Francopoulo and George,? \\Q2008\\E", "shortCiteRegEx": "Francopoulo and George", "year": 2008}, {"title": "Arabic Tokenization, Part-of-Speech Tagging and Morphological Disambiguation in One Fell Swoop", "author": ["N. Habash", "O. Rambow"], "venue": "In Proceedings of the 43rd Annual Meeting of the Association for Computational Linguistics ACL", "citeRegEx": "Habash and Rambow,? \\Q2005\\E", "shortCiteRegEx": "Habash and Rambow", "year": 2005}, {"title": "Al-Murshid fi Qawa'id Al-Nahw wa Al-Sarf\u2019, The Guide in Syntax and Morphology Rules, Amman, Jordan: Al-Ahliyyah for Publishing and Distribution", "author": ["K. Ibrahim"], "venue": "Khoja, S", "citeRegEx": "Ibrahim,? \\Q2002\\E", "shortCiteRegEx": "Ibrahim", "year": 2002}, {"title": "ElixirFM. Implementation of Functional Arabic Morphology", "author": ["Republic. Otakar Smrz"], "venue": "ACL", "citeRegEx": "Smrz.,? \\Q2007\\E", "shortCiteRegEx": "Smrz.", "year": 2007}], "referenceMentions": [{"referenceID": 8, "context": "It seems that Arabic traditional grammarians (Ibrahim, 2002) have been persuaded by morphology to classify words into only three types: verbs, nouns and prepositions and particles.", "startOffset": 45, "endOffset": 60}, {"referenceID": 4, "context": "It is characterized by its very rich derivational morphology, where almost all of words are derived from roots by applying patterns (Darwish, 2002).", "startOffset": 132, "endOffset": 147}, {"referenceID": 0, "context": "Much work has been done in the area of Arabic morphological analysis and generation in a variety of approaches and at different degrees of linguistics depths (Al-Sughaiyer and Al-Kharashi, 2004).", "startOffset": 158, "endOffset": 194}, {"referenceID": 4, "context": "The most of the approaches tend to target a specific application (Khoja, 2001; Darwish, 2002; Diab et al., 2007a).", "startOffset": 65, "endOffset": 113}, {"referenceID": 9, "context": "It contains two main components: a multi- purpose programming library and a linguistically morphological lexicon (Smrz, 2007).", "startOffset": 113, "endOffset": 125}, {"referenceID": 4, "context": "But the system fails because of some problems such as the overgeneration in word derivation, production of words that do not exist in the traditional Arabic dictionaries (Darwish, 2002) and we can consider the volume of the lexicon as another disadvantage of this analyzer which could affect the analysis process.", "startOffset": 170, "endOffset": 185}, {"referenceID": 0, "context": "For an overview see (Al-Sughaiyer and Al-Kharashi, 2004).", "startOffset": 20, "endOffset": 56}, {"referenceID": 6, "context": "In early 2004, the ISO/TC37 committee decided to form a common ISO project with Nicoletta Calzolari (Italy) as convenor and Gil Francopoulo (France) and Monte George (US) as editors (Francopoulo and George, 2008).", "startOffset": 182, "endOffset": 212}], "year": 2011, "abstractText": "Arabic morphological analysis is one of the essential stages in Arabic Natural Language Processing. In this paper we present an approach for Arabic morphological analysis. This approach is based on Arabic morphological automaton (AMAUT). The proposed technique uses a morphological database realized using XMODEL language. Arabic morphology represents a special type of morphological systems because it is based on the concept of scheme to represent Arabic words. We use this concept to develop the Arabic morphological automata. The proposed approach has development standardization aspect. It can be exploited by NLP applications such as syntactic and semantic analysis, information retrieval, machine translation and orthographical correction. The proposed approach is compared with Xerox Arabic Analyzer and Smrz Arabic Analyzer.", "creator": "PDFCreator Version 1.0.2"}}}