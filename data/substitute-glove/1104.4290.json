{"id": "1104.4290", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "21-Apr-2011", "title": "Algorithms and Complexity Results for Persuasive Argumentation", "abstract": "The cancer of proceedings as composition enterprises and all interaction once developed by Dung (Artificial Intelligence 177, 2011) has ever that of seen important relatively education separating within Artificial Intelligence three Reasoning. A main issue one abstract argumentation systems is the first of consider allowing of rejecting. Value - company empiricism, all current by Bench - Capon (J. Logic Comput. 13, october ), zone Dung ' s formulated. It takes quickly account now stature our among questioning with respect well some 3rd representing an feel: means argument entirely describable previously must example is likewise taking give however frequently audience, it of deem arguing if always, accepted one commitment without all audiences. Deciding whether also consider is suprised actually objectively personally, 21, several resource-intensive nettlesome problems. In fact, early affect been intractable under structural restrictions that render after outside computational prevent for addition - interest - based dialectics systems hazarded. In this piece we investigators pythagorean different of share - same argumentation used new own that acceptance suffer are polynomial - time sure-footed. The math any distinct same would thus organisational easing year terms since set underlying functionality defined instance through benefits - business own. Furthermore way there take the appreciation severe among manageable four seven graduation of accounts - based mechanisms why beyond explicated however far supportable same Dunne (Artificial Intelligence 171, 1960 ).", "histories": [["v1", "Thu, 21 Apr 2011 15:22:36 GMT  (26kb)", "http://arxiv.org/abs/1104.4290v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["eun jung kim", "sebastian ordyniak", "stefan szeider"], "accepted": false, "id": "1104.4290"}, "pdf": {"name": "1104.4290.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Eun Jung Kim", "Sebastian Ordyniak", "Stefan Szeider"], "emails": [], "sections": [{"heading": null, "text": "ar X\niv :1\n10 4.\n42 90\nv1 [\ncs .A\nI] 2\n1 A\npr 2\nDeciding whether an argument is subjectively or objectively accepted, respectively, are computationally intractable problems. In fact, the problems remain intractable under structural restrictions that render the main computational problems for non-value-based argumentation systems tractable. In this paper we identify nontrivial classes of value-based argumentation systems for which the acceptance problems are polynomial-time tractable. The classes are defined by means of structural restrictions in terms of the underlying graphical structure of the value-based system. Furthermore we show that the acceptance problems are intractable for two classes of value-based systems that where conjectured to be tractable by Dunne (Artificial Intelligence 171, 2007)."}, {"heading": "1 Introduction", "text": "The study of arguments as abstract entities and their interaction as introduced by Dung [12] has become one of the most active research branches within Artificial Intelligence and Reasoning, see, e.g., [3, 6, 24]. Argumentation handles possible conflicts between arguments in form of attacks. The arguments may either originate from a dialogue between several agents or from the pieces of information at the disposal of a single agent, this information may even contain contradictions. A main issue for any argumentation system is the selection of acceptable sets of arguments, where an acceptable set of arguments must be in some sense coherent and be able to defend itself against all attacking arguments. Abstract argumentation provides suitable concepts and formalisms to study, represent, and process various reasoning problems most prominently in defeasible reasoning (see, e.g., [23], [8]) and agent interaction (see, e.g., [22]).\nExtending Dung\u2019s concept, Bench-Capon [4] introduced value-based argumentation systems that allow to compare arguments with respect to their relative strength such that an argument cannot successfully attack another argument that is considered of a higher rank. The ranking is specified by the combination of an assignment of values to arguments and an ordering of the values; the latter is called an audience [5]. As laid out by BenchCapon, the role of arguments in this setting is to persuade rather than to prove, demonstrate or refute. Whether an argument can be accepted with respect to all possible or at least one audience allows to formalize the notions of objective acceptance and subjective acceptance, respectively.\n\u2217Ordyniak and Szeider\u2019s research was supported by the European Research Council, grant reference 239962. Kim\u2019s research was partially supported by the EPSRC, grant reference EP/E034985/1.\n\u2020A preliminary and shortened version of this paper appeared in COMMA 2010.\nAn important limitation for using value-based argumentation systems in real-world applications is the computational intractability of the two basic acceptance problems: deciding whether a given argument is subjectively accepted is NP-hard, deciding whether it is objectively accepted is co-NP-hard [15]. Therefore it is important to identify classes of value-based systems that are still useful and expressible but allow a polynomial-time tractable acceptance decision. However, no non-trivial tractable classes of value-based systems have been identified so far, except for systems with a tree structure where the degree of nodes and the number of nodes of degree exceeding 2 are bounded [14]. In fact, as pointed out by Dunne [13], the acceptance problems remain intractable for valuebased systems whose graphical structures form trees, in strong contrast to the main computational problems for non-value-based argumentation that are linear-time tractable for tree systems, or more generally, for systems of bounded treewidth [13] .\nOur Contribution In this paper we introduce nontrivial classes of value-based systems for which the acceptance problems are tractable. The classes are defined in terms of the following notions:\n\u2022 The value-width of a value-based system is the largest number of arguments of the same value.\n\u2022 The extended graph structure of a value-based system has as nodes the arguments of the value-based system, two arguments are joined by an edge if either one attacks the other or both share the same value.\n\u2022 The value graph of a value-based system has as vertices the values of the system, two values v1 and v2 are joined by a directed edge if some argument of value v1 attacks an argument of value v2 [14].\nWe show that the acceptance problems are tractable for the following classes of value-based systems:\n(P1) value-based systems with a bipartite graph structure where at most two arguments share the same value (i.e., systems of value-width 2);\n(P2) value-based systems whose extended graph structure has bounded treewidth; and\n(P3) value-based systems of bounded value-width whose value graphs have bounded treewidth.\nIn fact, we show that both acceptance problems are linear time tractable for the classes (P2) and (P3), the latter being a subclass of the former. Our results suggest that the extended graph structure is a suitable structural representation of value-based argumentation systems. The positive results (P1)\u2013(P3) hold for systems with unbounded number of arguments, attacks and values.\nWe contrast our positive results with negative results that rule out classes conjectured to be tractable. We show that the acceptance problems are (co)-NP-hard for the following classes:\n(N1) value-based systems of value-width 2;\n(N2) value-based systems where the number of attacks between arguments of the same value is bounded (systems of bounded attack-width);\n(N3) value-based systems with bipartite value graphs.\nIn fact, we show that both acceptance problems are intractable for value-based systems of value-width 2 and attack-width 1. Classes (N1) and (N2) were conjectured to be tractable [13], the complexity of (N3) was stated as an open problem [14].\nThe reminder of the paper is organized as follows. In Section 2 we provide basic definitions and preliminaries. In Section 3 we define the parameters value-width and attack-width and establish the results involving systems of value-width 2, we also discuss the relationship between systems of value-width 2 and dialogues [5]. In Section 4 we consider value-based systems with an extended graph structure of bounded treewidth and show linear time tractability. We close in Section 5 with concluding remarks. Some proofs of technical lemmas are given in an appendix.\nThe main results of this paper have been presented in preliminary and shortened form at COMMA\u201910 [21]. Here we provide full proofs, examples, and additional discussions. Further new additions are the results (P3) and (N3) involving value graphs, and the discussion of the relationship between systems of value-width 2 and dialogues."}, {"heading": "2 Arguments, attacks, values, and audiences", "text": "In this section we introduce the objects of our study more formally."}, {"heading": "2.1 Abstract argumentation system", "text": "Definition 1. An abstract argumentation system or argumentation framework is a pair (X,A) where X is a finite set of elements called arguments and A \u2286 X \u00d7X is a binary relation called the attack relation. If (x, y) \u2208 A we say that x attacks y.\nAn abstract argumentation system F = (X,A) can be considered as a directed graph, and therefore it is convenient to borrow notions and notation from the theory of directed graphs [1]. For example we say that a system F = (X,A) is acyclic if (X,A) is a DAG (a directed acyclic graph).\nExample 1. An abstract argumentation system F0 = (X,A) with arguments X = {a, b, c, d, e, f} and attacks A = {(a, d), (a, e), (b, a), (c, d), (d, b), (f, c)} is displayed in Figure 1.\nNext we define commonly used semantics of abstract argumentation systems as introduced by Dung [12]. For the discussion of other semantics and variants, see, e.g., Baroni and Giacomin\u2019s survey [2]. Let F = (X,A) be an abstract argumentation system and S \u2286 X .\n1. S is conflict-free in F if there is no (x, y) \u2208 A with x, y \u2208 S.\n2. S is acceptable in F if for each x \u2208 S and each y \u2208 X with (y, x) \u2208 A there is some x\u2032 \u2208 S with (x\u2032, y) \u2208 A.\n3. S is admissible in F if it is conflict-free and acceptable.\n4. S is a preferred extension of F if S is admissible in F and there is no admissible set S\u2032 of F that properly contains S.\nFor instance, the admissible sets of the abstract argumentation system F0 of Example 1 are the sets \u2205 and {f}, hence {f} is its only preferred extension.\nLet F = (X,A) be an abstract argumentation system and x1 \u2208 X . The argument x1 is credulously accepted in F if x1 is contained in some preferred extension of F , and x1 is skeptically accepted in F if x1 is contained in all preferred extensions of F .\nIn this paper we are especially interested in finding preferred extensions in acyclic abstract argumentation systems. It is well known that every acyclic system F = (X,A) has a unique preferred extension GE(F ), and that GE(F ) can be found in polynomial time (GE(F ) coincides with the \u201cgrounded extension\u201d [12]). In fact, GE(F ) can be found via a simple labeling procedure that repeatedly applies the following two rules to the arguments in X until each of them is either labeled IN or OUT:\n1. An argument x is labeled IN if all arguments that attack x are labeled OUT (in particular, if x is not attacked by any argument).\n2. An argument x is labeled OUT if it is attacked by some argument that is labeled IN.\nThe unique preferred extension GE(F ) is then the set of all arguments that are labeled IN."}, {"heading": "2.2 Value-based systems", "text": "Definition 2. A value-based argumentation framework or value-based system is a tuple F = (X,A, V, \u03b7) where (X,A) is an argumentation framework, V is a set of values, and \u03b7 is a mapping X \u2192 V such that the abstract argumentation system Fv = (\u03b7\u22121(v), { (x, y) \u2208 A | x, y \u2208 \u03b7\u22121(v) }) is acyclic for all v \u2208 V .\nWe call two arguments x, y \u2208 X to be equivalued (in F ) if \u03b7(x) = \u03b7(y).\nThe requirement for Fv to be acyclic is also known as the Multivalued Cycles Assumption, as it implies that any set of arguments that form a directed cycle in F = (X,A) will contain at least two arguments that are not equivalued [4].\nDefinition 3. An audience for a value-based system F is a partial ordering \u2264 on the set V of values of F . An audience \u2264 is specific if it is a total ordering on V .\nFor an audience \u2264 we also define < in the obvious way, i.e., x < y if and only if x \u2264 y and x 6= y.\nDefinition 4. Given a value-based system F = (X,A, V, \u03b7) and an audience \u2264 for F , we define the abstract argumentation system induced by \u2264 from F as F\u2264 = (X,A\u2264) with A\u2264 = { (x, y) \u2208 A | \u00ac(\u03b7(x) < \u03b7(y)) }.\nNote that if \u2264 is a specific audience, then F\u2264 = (X,A\u2264) is an acyclic system and thus, as discussed above, has a unique preferred extension GE(F\u2264).\nExample 2. Consider the value-based system F = (X,A, V, \u03b7) obtained from the abstract argumentation framework F0 of Example 1 by adding the set of values V = {S,E, T } and the mapping \u03b7 with \u03b7(a) = \u03b7(b) = S, \u03b7(c) = \u03b7(d) = E, \u03b7(e) = \u03b7(f) = T . The value-based system F is depicted in Figure 1 where the three ellipses indicate arguments that share the same value.\nDefinition 5. Let F = (X,A, V, \u03b7) be a value-based system. We say that an argument x1 \u2208 X is subjectively accepted in F if there exists a specific audience \u2264 such that x1 is in the unique preferred extension of F\u2264. Similarly, we say that an argument x1 \u2208 X is objectively accepted in F if x1 is contained in the unique preferred extension of F\u2264 for every specific audience \u2264.\nExample 3. Consider our running example, the value-based system F given in Example 2. Suppose F represents the interaction of arguments regarding a city development project, and assume the arguments a, b are related to sustainability issues (S), the arguments c, d are related to economics (E), and the arguments e, f are related to traffic issues (T ).\nNow, consider the specific audience \u2264 that gives highest priority to sustainability, medium priority to economics, and lowest priority to traffic (S > E > T ). This audience gives rise to the acyclic abstract argumentation system F\u2264 obtained from F by deleting the attack (d, b) (as \u03b7(b) = S > E = \u03b7(d), d cannot attack b with respect to the audience) and deleting the attack (f, c) (as \u03b7(c) = E > T = \u03b7(f), f cannot attack c with respect to the audience).\nFigure 2 exhibits the acyclic abstract argumentation systems induced by the six possible specific audiences. The unique preferred extension for each of the six systems is indicated by shaded nodes. We conclude that all arguments of F are subjectively accepted, and e, f are the arguments that are objectively accepted."}, {"heading": "2.3 Computational problems for value-based systems", "text": "We consider the following decision problems.\nSUBJECTIVE ACCEPTANCE\nInstance: A value-based system F = (X,A, V, \u03b7) and a query argument x1 \u2208 X .\nQuestion: Is x1 subjectively accepted in F ?\nOBJECTIVE ACCEPTANCE\nInstance: A value-based system F = (X,A, V, \u03b7) and a query argument x1 \u2208 X .\nQuestion: Is x1 objectively accepted in F ?\nAs shown by Dunne and Bench-Capon [15], SUBJECTIVE ACCEPTANCE is NP-complete and OBJECTIVE ACCEPTANCE is co-NP-complete. Indeed, there are k! possible specific audiences for a value-based system with k values. Hence, even if k is moderately small, say k = 10, checking all k! induced abstract argumentation system becomes impractical. Dunne [14] studied properties of value-based systems that allow to reduce the number of audiences to consider."}, {"heading": "2.4 Graphical models of value-based systems", "text": "In view of the general intractability of SUBJECTIVE ACCEPTANCE and OBJECTIVE ACCEPTANCE, the main decision problems for value-based systems, it is natural to ask which restrictions on shape and structure of valuebased systems allow tractability.\nA natural approach is to impose structural restrictions in terms of certain graphical models associated with value-based systems. We present three graphical models: the graph structure (an undirected graph on the arguments of the value-based system under consideration, edges represent attacks) the value graph (a directed graph on the values of the value-based system under consideration, edges represent attacks) and the extended graph structure (an undirected graph on the arguments of the value-based system under consideration, edges represent attacks and \u201cequivaluedness\u201d). The concept of value graphs was recently introduced and studied by Dunne [14]. The concept of extended graph structures is our new contribution.\nDefinition 6. Let F = (X,A, V, \u03b7) be a value-based system. The graph structure of F is the (undirected) graph GF = (X,E) whose vertices are the arguments of F and where two arguments x, y are joined by an edge (in symbols xy \u2208 E) if and only if X contains the attack (x, y) or the attack (y, x).\nThe value graph of F is the directed graph GvalF = (V,E) whose vertices are the values of F and where two values u, v are joined by a directed edge from u to v (in symbols (u, v) \u2208 E) if and only if there exist some argument x \u2208 X with \u03b7(x) = u, some argument y \u2208 X with \u03b7(y) = v, and (x, y) \u2208 A.\nThe extended graph structure of F is the (undirected) graph GextF = (X,E) whose vertices are the arguments of F and where two arguments x, y are joined by an edge if and only if (x, y) \u2208 A or \u03b7(x) = \u03b7(y).\nFigure 3 shows the value-based system of Example 2 and the three associated graphical models.\nDefinition 7. A value-based system F = (X,A, V, \u03b7) is called bipartite if its graph structure is a bipartite graph, i.e., if X can be partitioned into two conflict-free sets."}, {"heading": "3 Value-width and attack-width", "text": "Dunne [13] suggested to consider restrictions on the number of arguments that share the same value, and the number of attacks between equivalued arguments. We state these restrictions in terms of the following notions.\nDefinition 8. Let F = (X,A, V, \u03b7) be a value-based system. The value-width of F is the largest number of arguments that share the same value, i.e., maxv\u2208V |\u03b7\u22121(v)|. The attack-width of F is the cardinality of the set { (x, y) \u2208 A | \u03b7(x) = \u03b7(y) }.\nFor instance, the value-based system of Example 2 has value-width 2 and attack-width 2. Value-based systems of value-width 1 are not very interesting: Every argument x in such a value-based system is subjectively accepted (x is accepted with respect to any specific audience where \u03b7(x) is largest), and objectively accepted if and only if x is not attacked by any argument y (if y attacks x then x is not accepted with respect to any specific audience where \u03b7(y) is largest). Thus, for value-based systems of value-width 1 the problems SUBJECTIVE and OBJECTIVE ACCEPTANCE are trivial, and the expressive power of such value-based systems is very limited.\nOn the other hand, value-based systems of value-width 3 are already too expressive to allow a tractable acceptance decision: Dunne [13] showed that the problems SUBJECTIVE and OBJECTIVE ACCEPTANCE are intractable (NP-complete and co-NP-complete, respectively) for value-based systems of value-width 3, even if their graph structure is a tree.\nThis leaves the intermediate class of value-based systems of value-width 2 as an interesting candidate for a tractable class. In fact, Dunne [13] conjectured that both acceptance problems are polynomial-time decidable for value-based systems of value-width 2. He also conjectured that the problems are polynomial for value-based systems with an attack-width that is bounded by a constant. We disprove both conjectures and show that the problems remain intractable for value-based systems of value-width 2 and (simultaneously) of attack-width 1.\nOn the positive side, we show that under the additional assumption that the value-based system is bipartite (that entails value-based systems whose graph structures are trees) both acceptance problems can be decided in polynomial time for value-based systems of value-width 2.\nTheorem 1. (A) SUBJECTIVE ACCEPTANCE remains NP-hard for value-based systems of value-width 2 and attack-width 1. (B) OBJECTIVE ACCEPTANCE remains co-NP-hard for value-based systems of value-width 2 and attack-width 1.\nTheorem 2. (A) SUBJECTIVE ACCEPTANCE can be decided in polynomial time for bipartite value-based systems of value-width 2. (B) OBJECTIVE ACCEPTANCE can be decided in polynomial time for bipartite value-based systems of value-width 2.\nIn the remainder of this section we will demonstrate the two theorems."}, {"heading": "3.1 Certifying paths", "text": "The key to the proofs of Theorems 1 and 2 is the notion of a \u201ccertifying path\u201d which defines a certain path-like substructure within a value-based system. We show that in value-based systems of value-width 2, the problems of SUBJECTIVE and OBJECTIVE ACCEPTANCE can be expressed in terms of certifying paths. We then show that in general finding a certifying path in a value-based system of value-width 2 is NP-hard (3SAT can be expressed in terms of certifying paths) but is easy if the system is bipartite.\nDefinition 9. Let F = (X,A, V, \u03b7) be a value-based system of value-width 2. We call an odd-length sequence C = (x1, z1, . . . , xk, zk, t), k \u2265 0, of distinct arguments a certifying path for x1 \u2208 X in F if it satisfies the following conditions:\nC1 For every 1 \u2264 i \u2264 k it holds that \u03b7(zi) = \u03b7(xi).\nC2 For every 1 \u2264 i \u2264 k there exists a 1 \u2264 j \u2264 i such that zi attacks xj .\nC3 For every 2 \u2264 i \u2264 k it holds that xi attacks zi\u22121 but xi does not attack any argument in {zi, x1, . . . , xi\u22121}.\nC4 Argument t attacks zk but it does not attack any argument in {x1, . . . , xk}.\nC5 If there exists an argument z \u2208 X \\ {t} with \u03b7(z) = \u03b7(t) then either t attacks z or z does not attack any argument in {x1, . . . , xk, t}.\nLemma 1. Let F = (X,A, V, \u03b7) be a value-based system of value-width 2 and x1 \u2208 X . Then x1 is subjectively accepted in F if and only if there exists a certifying path for x1 in F .\nThe rather technical proof of this lemma is given in the appendix. We discuss the intuition behind the concept of certifying paths by means of an example.\nExample 4. Consider the value-based system F of Example 2. We want to check whether argument a is subjectively accepted, i.e., to identify a specific audience \u2264 such that a is in the unique preferred extension GE(F\u2264) of F\u2264. Since a is attacked by b and we cannot eliminate this attack (a and b are equivalued), we need to defend a by attacking b. The only possibility for that is to attack b by d. Hence we need to put S < E in our audience. However, since d is attacked by the equivalued argument c, we need to defend it by attacking c by f , hence we need to put S < E < T . Since f is not attacked by any other argument we can stop. Via this process we have produced a certifying path Ca = (a, b, d, c, f), and we can check that Ca indeed satisfies Definition 9. For the other subjectively accepted arguments of F we have the certifying paths Cb = (b), Cc = (c), Cd = (d, c, f), Ce = (e) and Cf = (f).\nIn order to use the concept of certifying paths for objective acceptance, we need the following definition.\nDefinition 10. Let F = (X,A, V, \u03b7) be a value-based system and v \u2208 V a value. We denote by F \u2212 v the valuebased system obtained from F by deleting all arguments with value v and all attacks involving these arguments.\nLemma 2. Let F = (X,A, V, \u03b7) be a value-based system of value-width 2 and x1 \u2208 X . Then x1 is objectively accepted in F if and only if for every argument p \u2208 X that attacks x1 it holds that \u03b7(p) 6= \u03b7(x1) and p is not subjectively accepted in F \u2212 \u03b7(x1).\nAgain, the technical proof is moved to the appendix.\nExample 5. In our example, consider the argument e. We want to check whether e is objectively accepted. Since e is only attacked by a, and since \u03b7(a) 6= \u03b7(e), it remains to check whether a is not subjectively accepted in F \u2212 \u03b7(e). In fact, F \u2212 \u03b7(e) contains no certifying path for a. Hence e is objectively accepted in F ."}, {"heading": "3.2 Hardness for value-based systems of value-width 2", "text": "This subsection is devoted to prove Theorem 1. We devise a polynomial reduction from 3SAT. Let \u03a6 be a 3CNF formula with clauses C1, . . . , Cm and Cj = xj,1 \u2228 xj,2 \u2228 xj,3 for 1 \u2264 j \u2264 m. In the following we construct a value-based system F = (X,A, V, \u03b7) of value-width 2 and attack-width 1 such that the query argument x1 \u2208 X is subjectively accepted in F if and only if \u03a6 is satisfiable. See Figure 4 for an example.\nThe set X contains the following arguments:\n1. a pair of arguments xj , zj for 1 \u2264 j \u2264 m;\n2. a pair of arguments xij , z i j for 1 \u2264 j \u2264 m and 1 \u2264 i \u2264 3;\n3. an argument t.\nThe set A contains the following attacks:\n1. (z1, x1);\n2. (xij , zj) and (z i j , xj) for 1 \u2264 j \u2264 m and 1 \u2264 i \u2264 3;\n3. (xj+1, zij) and (zj+1, x i j) for 1 \u2264 j \u2264 m\u2212 1 and 1 \u2264 i \u2264 3;\n4. (t, zim) for 1 \u2264 i \u2264 3;\n5. (xij , x i\u2032 j\u2032 ) for 1 \u2264 j \u2032 < j \u2264 m and 1 \u2264 i, i\u2032 \u2264 3 whenever xj,i and xj\u2032,i\u2032 are complementary literals.\nThe set V contains one value for each x, z pair, and one value for argument t, i.e., |V | = 4m+ 1. Consequently, the mapping \u03b7 is defined such that \u03b7(xj) = \u03b7(zj) = vj , \u03b7(xij) = \u03b7(z i j) = v i j for 1 \u2264 j \u2264 m, 1 \u2264 i \u2264 3, and\n\u03b7(t) = vt. Evidently F has attack-width 1 and value-width 2, and it is clear that F can be constructed from \u03a6 in polynomial time.\nWe establish part (A) of Theorem 1 by showing the following claim.\nClaim 1. \u03a6 is satisfiable if and only if x1 is subjectively accepted in F .\nProof. First we note that every certifying path for x1 in F must have the form (x1, z1, x i1 1 , z i1 1 , x2, z2, x i2 2 , z i2 2 , x3, z3, . . . , xm, zm, ximm , z im m , t) where ij \u2208 {1, 2, 3} for every 1 \u2264 j \u2264 m and for every pair 1 \u2264 j < j \u2032 \u2264 m there is no attack (x ij\u2032\nj\u2032 , x ij j ) \u2208 A. Hence there exists a certifying path for x1 in F if and only if there exists a set\nL of literals that corresponds to a satisfying truth assignment of \u03a6 (i.e., L contains a literal of each clause of \u03a6 but does not contain a complementary pair of literals).\nIn order to show part (B) of Theorem 1, let F be the value-based system as constructed above and define F \u2032 = (X \u2032, A\u2032, V \u2032, \u03b7\u2032) to be the value-based system with\n1. X \u2032 := X \u222a {x0},\n2. A\u2032 := A \u222a {(x1, x0)},\n3. V \u2032 := V \u222a {v0},\n4. \u03b7\u2032(x0) = v0 and \u03b7\u2032(x) = \u03b7(x) for every x \u2208 X .\nPart (B) of Theorem 1 follows from the following claim which follows from Claim 1 and Lemma 2.\nClaim 2. \u03a6 is satisfiable if and only if x0 is not objectively accepted in F \u2032.\nBy a slight modification of the above reduction we can also show the following, answering a research question recently posed by Dunne [14]. The detailed argument is given in the appendix.\nCorollary 1. SUBJECTIVE and OBJECTIVE ACCEPTANCE remain NP-hard and co-NP-hard, respectively, for value-based systems whose value graphs are bipartite."}, {"heading": "3.3 Certifying paths and dialogues", "text": "Bench-Capon, Doutre, and Dunne [5] developed a general dialogue framework that allows to describe the acceptance of arguments in a value-based system in terms of a game, played by two players, the proponent and the opponent. The proponent tries to prove that a certain argument (or a set of arguments) is accepted, the opponent tries to circumvent the proof. An argument is subjectively accepted if the proponent has a winning strategy, that is, she is able to prove the acceptance regardless of her opponent\u2019s moves.\nIn the following we outline a simplified version of the dialogue framework that applies to value-based systems of value-width 2. We will see that certifying paths correspond to winning strategies for the proponent.\nLet F = (X,A, V, \u03b7) be a value-based system of value-width 2. We have two players, the proponent and the opponent, who make moves in turn, at each move asserting a new argument. This produces a sequence (x1, y1, x2, y2 . . . ) of arguments and a set of audiences \u2264 with \u03b7(x1) = \u03b7(y2) < \u03b7(x2) = \u03b7(y2) < . . . . The proponent has the first move, where she asserts the query argument x1 whose subjective acceptance is under consideration. After each move of the proponent, asserting argument xi, the opponent asserts a new argument yi \u2208 X \\ {x1, y1, . . . , xi\u22121, yi\u22121, xi} which has the same value as xi but is not attacked by xi, and attacks some argument asserted by the proponent. If no such argument yi exists, the proponent has won the game. After each move of the opponent asserting an argument yi, it is again the proponent\u2019s turn to assert a new argument xi+1 \u2208 X \\ {x1, y1, . . . , xi, yi}. This argument xi+1 must attack the opponent\u2019s last argument yi, but must not attack any argument asserted by the proponent. If no such argument xi+1 exists, the proponent has lost the game. Because the value-width of F is assumed to be 2, the opponent has at most one choice for each move. Therefore, the proponent\u2019s wining strategy does not need to consider several possibilities for the opponent\u2019s counter move. Hence, a winning strategy is not a tree but just a path and can be identified with a sequence (x1, y1, . . . , xn\u22121, yn\u22121, xn) that corresponds to a play won by the proponent. It is easy to verify that such a sequence is exactly a certifying path.\nExample 6. Consider again the value-based system F of Example 2. The proponent wants to prove that argument a is subjectively accepted in F and asserts a with her first move. Now, it is the opponent\u2019s turn. He has no other choice but to assert b (the only argument different from a with the same value as a). Now, it is again the proponent\u2019s turn. She must assert an argumentx /\u2208 {a, b} that attacks b but does not attack a. Argument d satisfies this property (it happens that this is the only choice). Next, the opponent asserts c, and the proponent asserts f , and it is again the opponent\u2019s turn. The only argument with the same value as f is argument e, but e does not attack any of the arguments in {a, d, f}. Hence, the proponent wins. The sequence of arguments (a, b, d, c, f) produced by this play is indeed a certifying path for a in F . Hence a is subjectively accepted."}, {"heading": "3.4 Polynomial-time algorithm for bipartite value-based systems of value-width 2", "text": "In this subsection we prove Theorem 2. Throughout this section, we assume that we are given a bipartite valuebased system F = (X,A, V, \u03b7) together with a query argument x1. Furthermore, let Xeven and Xodd be the subsets of X containing all arguments x such that the length of a shortest directed path in F from x to x1 is even and odd, respectively.\nLemma 3. Let C = (x1, z1, . . . , xk, zk, t) be a certifying path for x1 in F . Then { xi | 1 \u2264 i \u2264 k }\u222a{t} \u2286 Xeven and { zi | 1 \u2264 i \u2264 k } \u2286 Xodd.\nProof. The claim follows easily via induction on k by using the properties of a certifying path and the fact that F is bipartite.\nBased on the observation of Lemma 3, we construct an auxiliary directed graph HF := (V,E) as follows. The vertex set of HF is the set V of values of F . There is a directed edge from u to v if and only if there is an argument x \u2208 Xeven with \u03b7(x) = u and an argument z with \u03b7(z) = v such that (x, z) \u2208 A. Note that z \u2208 Xodd since F is bipartite.\nLemma 4. If C = (x1, z1, . . . , xk, zk, t) is a certifying path for x1 in F , then (\u03b7(t), \u03b7(xk), . . . , \u03b7(x1)) is a directed path from \u03b7(t) to \u03b7(x1) in HF .\nProof. By the definition of a certifying path, we have (t, zk) \u2208 A and for every 2 \u2264 i \u2264 k it holds that (xi, zi\u22121) \u2208 A. Lemma 3 implies that for t and xi are contained in Xeven for every 1 \u2264 i \u2264 k, and hence (\u03b7(t), \u03b7(xk)), (\u03b7(xi), \u03b7(xi\u22121)) \u2208 E for every 1 < i \u2264 k.\nLemma 4 tells us that each certifying path in F gives rise to a directed path in HF .\nExample 7. Figure 5 shows a bipartite value-based system F and the associated auxiliary graph HF . The query argument is x1. Hence Xeven = {x1, . . . , x5} and Xodd = {z1, . . . , z5}. The query argument x1 is subjectively accepted in F as C = (x1, z1, x2, z2, x4, z4, x5) is a certifying path for x1 in F . Indeed, C gives rise to the directed path v5, v4, v2, v1 (i.e., \u03b7(x5), \u03b7(x4), \u03b7(x2), \u03b7(x1)) in HF , as promised by Lemma 4.\nIt would be desirable if we could find certifying paths by searching for directed paths in HF . However, not every directed path in HF gives rise to a certifying path in F . To overcome this obstacle, we consider for each value v \u2208 V the subgraph H\u2212vF of HF which is obtained as follows:\nIf there is an argument z \u2208 Xodd \u2229 \u03b7\u22121(v) that is not attacked by some equivalued argument, then for every argument y \u2208 Xeven that is attacked by z we remove the vertex \u03b7(y) from HF .\nFigure 5 shows the graphs H\u2212vF for the value-based system F of Example 7.\nLemma 5. Consider an odd-length sequence C = (x1, z1, . . . , xk, zk, t) of distinct arguments of a bipartite value-based system F of value width 2. Then C is a certifying path for x1 in F if and only if the following conditions hold:\n(1) \u03b7(xi) = \u03b7(zi) for 1 \u2264 i \u2264 k.\n(2) (\u03b7(t), \u03b7(xk), . . . , \u03b7(x1)) is a directed path from \u03b7(t) to \u03b7(x1) in H \u2212\u03b7(t) F .\n(3) None of the sub-sequences \u03b7(xi), . . . , \u03b7(x1) is a directed path from \u03b7(xi) to \u03b7(x1) inH \u2212\u03b7(xi) F for 1 \u2264 i \u2264 k.\nProof. Assume C = (x1, z1, . . . , xk, zk, t) is a certifying path for x1 in F . Property (1) follows from condition C1 of a certifying path, property (2) follows from condition C5 and Lemma 4. Property (3) follows from conditions C2 and C3.\nTo see the reverse assume that C satisfies properties (1)\u2013(3). Condition C1 follows from property (1). Conditions C3, C4 and C5 follow from property (2) and the assumption that F is bipartite. Condition C2 follows from property (3). Hence C is a certifying path for x1 in F .\nIndeed, consider the certifying path C of Example 7 which gives rise to the sequence of values v5, v4, v2, v1. This sequence is a directed path in H\u2212v5F , however v4, v2, v1 is not a directed path in H \u2212v4 F , v2, v1 is not a directed path in H\u2212v2F , and v1 is not a directed path in H \u2212v1 F .\nLemma 5 suggests a simple strategy for finding a certifying path for x1 in F , if one exists. For each value v we search for a directed path vk, . . . , v1 from v = vk to v1 = \u03b7(x1) in H \u2212v F . If we find such a path vk, . . . , v1, we check for each subsequence vi, . . . , v1, 1 \u2264 i < k, whether it is a directed path in H \u2212vi F . If the answer is NO for all i, then vk, . . . , v1 satisfies the conditions of Lemma 5. Hence the sequence of arguments in X whose values form P is a certifying path for x1 in F . If, however, the answer is YES for some i < k, we take the smallest i for which the answer is YES. Now the sequence vi, . . . , v1 satisfies the conditions of Lemma 5 and so gives rise to a certifying path for x1 in F . On the other hand, if there is no value v such that H \u2212v F contains a directed path from v to v1, then there is no certifying path for x1 in F . The pseudo code for this algorithm is given in Figure 6.\nProposition 1. The algorithm DETECT CERTIFYING PATH correctly returns a certifying path for x1 in F = (X,A, V, \u03b7) if one exists and returns NO otherwise in time O(|V |2 \u00b7 (|X |+ |A|+ |V |)).\nProof. The correctness of DETECT CERTIFYING PATH follows from Lemma 5. For v \u2208 V , building H\u2212vF and finding a shortest directed path from v to v1 = \u03b7(x1), if one exists, takes linear time in the input size of F (which we estimate by the term O(|X |+ |A|+ |V |)). As we iterate over all vertices of V , and we check for at most |V | subsequences vi, . . . , v1 whether it is a directed path in H \u2212vi F , the claimed running time follows.\nWe are now ready to combine the above results to a proof of Theorem 2. Statement (A) of the theorem follows from Lemma 1 and Proposition 1. Statement (B) follows from Statement (A) and Lemma 2."}, {"heading": "4 Linear-time algorithm for value-based systems of bounded treewidth", "text": "As mentioned above, it is known that both acceptance problems remain intractable for value-based systems whose graph structure is a tree. This is perhaps not surprising since two arguments can be considered as linked to each other if they share the same value. In fact, such links may form cycles in an otherwise tree-shaped valuebased system. Therefore we propose to consider the extended graph structure of the value-based system (recall Definition 6 in Section 2.4) that takes such links into account. We show that the problems SUBJECTIVE and OBJECTIVE ACCEPTANCE are easy for value-based systems whose extended graph structure is a tree, and more generally, the problems can be solved in linear-time for value-based systems with an extended graph structure of bounded treewidth.\nTreewidth is a popular graph parameter that indicates in a certain sense how similar a graph is to a tree. Many otherwise intractable graph problems (such as 3-COLORABILITY) become tractable for graphs of bounded treewidth. Bounded treewidth (and related concepts like induced width and d-tree width) have been successfully applied in many areas of AI, see, e.g., [18, 11, 10, 20]. Deciding acceptance for argumentation frameworks of bounded treewidth has been investigated by Dunne [13] and by Dvora\u0301k, Pichler, and Woltran [16]. However, for value-based argumentation, the concept of bounded tree-width has not been applied successfully: the basic decision problems for value-based systems remain intractable for value-based systems of value width 3 whose graph structure has treewidth 1 [13]. Hardness even prevails for value-based systems whose value graph has pathwidth 2 [14]. These negative results are contrasted by our Theorem 3, which indicates that the extended graph structure seems to be a suitable and adequate graphical model for value-based systems.\nThe treewidth of a graph is defined using the following notion of a tree decomposition (see, e.g., [7]).\nDefinition 11. A tree decomposition of an (undirected) graph G = (V,E) is a pair (T, \u03c7) where T is a tree and \u03c7 is a labeling function that assigns each tree node t a set \u03c7(t) of vertices of the graph G such that the following conditions hold:\n1. Every vertex of G occurs in \u03c7(t) for some tree node t.\n2. For every edge {u, v} of G there is a tree node t such that u, v \u2208 \u03c7(t).\n3. For every vertex v of G, the tree nodes t with v \u2208 \u03c7(t) form a connected subtree of T .\nThe width of a tree decomposition (T, \u03c7) is the size of a largest bag \u03c7(t) minus 1 among all nodes t of T . A tree decomposition of smallest width is optimal. The treewidth of a graph G is the width of an optimal tree decomposition of G.\nExample 8. Figure 7 exhibits a graph (the extended graph structure of the value-based system of Example 2) and a tree decomposition of it. The width of the tree decomposition is 2, and it is not difficult to see that this is optimal. Hence the treewidth of the graph in the figure is 2."}, {"heading": "4.1 Linear-time tractability for value-based systems with extended graph structures of bounded treewidth", "text": "We are going to establish the following result.\nTheorem 3. The problems SUBJECTIVE and OBJECTIVE ACCEPTANCE can be decided in linear time for valuebased systems whose extended graph structure has bounded treewidth.\nTo achieve tractability we have to pay a price in generality: The mentioned hardness results of [14, 13] imply that if SUBJECTIVE ACCEPTANCE is fixed-parameter tractable for any parameter p, then, unless P = NP, parameter p cannot be bounded by a function of any of the following three parameters: the treewidth of the graph structure, the treewidth of the value graph, and the value-width. This even holds if the bounding function is exponential. Indeed, the treewidth of the extended graph structure can be arbitrarily large for value-based systems where one of these three parameters is bounded by a constant.\nThe reminder of this section is devoted to a proof of Theorem 3. We shall take a logic approach and use the celebrated result of Courcelle [9], which states that all properties that can be expressed in a certain formalism (Monadic Second-Order logic, MSO) can be checked in linear time for graphs (or more generally, for finite structures) of bounded treewidth. Courcelle\u2019s Theorem is constructive in the sense that it not only promises the existence of an algorithm for the particular problem under consideration, but it provides the means for actually producing such an algorithm. The algorithm produced in this general and generic way leaves much room for improvement and provides the basis for the development of problem-specific and more practical algorithms.\nIn the following we use Courcelle\u2019s result as laid out by Flume and Grohe [17]. Let S denote a finite relational structure and \u03d5 a sentence in monadic second-order logic (MSO logic) on S. That is, \u03d5 may contain quantification over atoms (elements of the universe) and over sets of atoms. Furthermore, we associate with the structure S its Gaifman graph G(S), whose vertices are the atoms of S, and where two distinct vertices are joined by an edge if and only if they occur together in some tuple of a relation of S. We define the treewidth of structure S as the treewidth of its Gaifman graph G(S). Now Courcelle\u2019s theorem states that for a fixed MSO sentence \u03d5 and a fixed integer k, one can check in linear time whether \u03d5 holds for a given relational structure of treewidth at most k. The proof of Theorem 3 boils down to the following two tasks:\nTask A. To represent a value-based system F and a query argument x1 by a relational structure S[F, x1] such that bounded treewidth of the extended graph structure of F implies bounded treewidth of S[F, x1].\nTask B. To construct formulas \u03d5s and \u03d5o in MSO logic such that for every value-based system F and every argument x1 of F it holds that \u03d5s is true for S[F, x1] if and only if x1 is subjectively accepted in F , and \u03d5o is true for S[F, x1] if and only if x1 is objectively accepted in F ."}, {"heading": "4.2 Reference graphs", "text": "For many problems it is rather straight-forward to find an MSO formulation so that Courcelle\u2019s Theorem can be applied. In our case, however, we have to face the difficulty that we have to express that \u201ca certain property holds for some total ordering\u201d (subjective acceptance) and \u201ca certain property holds for all total orderings\u201d (objective acceptance), which cannot be directly expressed in MSO. Our solution to this problem lies in the introduction of an auxiliary directed graph R, the reference graph, which will allow us to quantify over total orderings of V . The relational structure S[F, x1] will then be defined to represent F together with R.\nDefinition 12. Let F = (X,A, V, \u03b7) be a value-based system and let \u227a be an arbitrary but fixed total ordering of V . The reference graph R = (V,ER) is the directed graph where V is the set of values of F and ER consists of all directed edges (u, v) for which\n1. u \u227a v in the fixed ordering, and\n2. A contains an attack (x, x\u2032) with \u03b7(x) = u and \u03b7(x\u2032) = v or \u03b7(x) = v and \u03b7(x\u2032) = u.\nFor a subset Q \u2286 ER let R[Q] = (V,ER[Q]) be the directed graph obtained from the reference graph R by reversing all edges in Q, i.e., ER[Q] := { (u, v) | (u, v) \u2208 ER \\Q) } \u222a { (v, u) | (u, v) \u2208 ER \u2229Q }.\nWe also define the abstract argumentation system F [Q] := (X,A[Q]) as the system obtained from F with A[Q] := { (u, v) \u2208 A | (\u03b7(u), \u03b7(v)) /\u2208 ER[Q]) }.\nNote that the reference graph R is by definition acyclic (in contrast to the value graph GvalF whose definition is similar but distinct).\nEvery specific audience \u2264 of F can now be represented by some subset Q \u2286 ER for which the directed graph R[Q] is acyclic, and conversely, every set Q \u2286 ER such that R[Q] is acyclic represents a specific audience \u2264. These observations are made precise in the following lemma whose easy proof is omitted.\nLemma 6. An argument x1 is subjectively accepted in F if and only if there exists a set Q \u2286 ER such that R[Q] is acyclic and x1 is in the unique preferred extension of F [Q]. An argument x1 is objectively accepted in F if and only if for every set Q \u2286 ER such that R[Q] is acyclic it holds that x1 is in the unique preferred extension of F [Q].\nSince we can test for acyclicity with MSO logic (see the next subsection), we can now express subjective and objective acceptance in MSO logic as \u201ca certain property holds for some subset Q of ER for which R[Q] is acyclic\u201d and \u201ca certain property holds for all subsets Q of ER for which R[Q] is acyclic\u201d, respectively. Next we give a more detailed description of how to accomplish the two tasks for our proof."}, {"heading": "4.3 Task A: representing the value-based system", "text": "We define a relational structure S[F, x1] that represents the value-based system F together with the reference graph R = (V,ER). The universe of S[F, x1] is the union of the sets X , V , and ER. S[F, x1] has one unary relation U\u2217a and four binary relations H , T , Ba and B\u03b7 that are defined as follows:\n1. U\u2217a(x) if and only if x = x1 (used to \u201cmark\u201d the query argument).\n2. T(t, (u, v)) if and only if t = u (used to represent the \u201ctail relation\u201d of ER)\n3. H(h, (u, v)) if and only if h = v (used to represent the \u201chead relation\u201d of ER)\n4. Ba(x, y) if and only if (x, y) \u2208 A (used to represent the attack relation).\n5. B\u03b7(x, v) if and only if \u03b7(x) = v (used to represent the mapping \u03b7).\nConsequently, the Gaifman graph of S[F, x1] is the graph G(S[F, x1]) = (VS[F,x1], ES[F,x1]) with VSF = X \u222a V \u222a ER and ESF = { {u, v} | (u, v) \u2208 T \u222a H \u222a Ba \u222a B\u03b7 }, see Figure 8 for an illustration.\nLemma 7. The treewidth of S[F, x1] is at most twice the treewidth of the extended graphs structure of F plus 1.\nThe easy proof is given in the appendix."}, {"heading": "4.4 Task B: expressing acceptance in MSO", "text": "In order to define \u03d5s and \u03d5o we introduce the following auxiliary formulas: A formula TH(t, h, a) that holds if and only if t is the tail and h is the head of a \u2208 ER:\nTH(t, h, a) := T(t, a) \u2227 H(h, a)\nA formula E(t, h,Q) that holds if and only if the directed edge (t, h) is contained in R[Q]:\nE(t, h,Q) := \u2203a [(\u00acQa \u2227 TH(t, h, a)) \u2228 (Qa \u2227 TH(h, t, a))]\nA formula ACYC(Q) that checks whether R[Q] is acyclic. We use the well-known fact that a directed graph contains a directed cycle if and only if there is a nonempty set C of vertices each having an out-neighbor in C (see, e.g., [1]).\nACYC(Q) := \u00ac\u2203C (\u2203xCx \u2227 \u2200t\u2203h[Ct \u2192 (Ch \u2227 E(t, h,Q))])\nA formula B\u2032a(t, h,Q) that holds if and only if t attacks h in F [Q]:\nB\u2032a(t, h,Q) := Ba(t, h) \u2227 \u2203vh\u2203vt [B\u03b7(t, vt) \u2227 B\u03b7(h, vh) \u2227 \u00acE(vh, vt, Q)]\nA formula ADM(S,Q) that checks whether a set S \u2286 X is admissible in F [Q]:\nADM(S,Q) := \u2200x\u2200y [(B\u2032a(x, y,Q) \u2227 Sy) \u2192 (\u00acSx \u2227 \u2203z(Sz \u2227 B \u2032 a(z, x,Q)))]\nNow the formula \u03d5s can be defined as follows:\n\u03d5s := \u2203Q [ACYC(Q) \u2227 (\u2203S(\u2200x(U \u2217 a(x) \u2192 Sx) \u2227 ADM(S,Q)))]\nIt follows from Lemma 6 that \u03d5s is true for S[F, x1] if and only if x1 is subjectively accepted in F . A trivial modification of \u03d5s gives us the desired sentence \u03d5o:\n\u03d5o := \u2200Q [ACYC(Q) \u2192 (\u2203S(\u2200x(U \u2217 a(x) \u2192 Sx) \u2227 ADM(S,Q)))]\nIt follows from Lemma 6 that \u03d5o is true for S[F, x1] if and only if x1 is objectively accepted in F . We summarize the above construction in the next lemma.\nLemma 8. There exists an MSO sentence \u03d5s such that \u03d5s is true for S[F, x1] if and only if x1 is subjectively accepted in F . Similarly, there exists an MSO sentence \u03d5o such that \u03d5o is true for S[F, x1] if and only if x1 is objectively accepted in F .\nIn view of Lemmas 7 and 8, Theorem 3 now follows by Courcelle\u2019s Theorem.\nIf both the treewidth of the value graph and the value-width of an value-based system are bounded, then also the extended graph structure has bounded treewidth, hence we have the following corollary.\nCorollary 2. The problems SUBJECTIVE and OBJECTIVE ACCEPTANCE can be decided in linear time for valuebased systems for which both value-width and the treewidth of their value graphs are bounded.\nProof. Let k and k\u2032 be constants. Let (T, \u03c7) be a tree decomposition of the value graph of a value-based system F of width k and assume the value-width of F is k\u2032. Then (T, \u03c7\u2032) with \u03c7\u2032(t) = \u22c3 v\u2208\u03c7(t) \u03b7\n\u22121(v) is a tree decomposition of the extended graph structure of F . Since |\u03c7\u2032(t)| \u2264 |\u03c7(t)| \u00b7 k\u2032 \u2264 (k + 1)k\u2032 holds for all nodes t of T , it follows that the width of (T, \u03c7\u2032) is bounded by the constant k\u2032\u2032 = (k + 1)k\u2032 \u2212 1. We conclude, in view of Theorem 3, that we can decide both acceptance problems for F in linear time."}, {"heading": "5 Conclusion", "text": "We have studied the computational complexity of persuasive argumentation for value-based argumentation frameworks under structural restrictions. We have established the intractability of deciding subjective or objective acceptance for value-based systems with value-width 2 and attack-width 1, disproving conjectures stated by Dunne. It might be interesting to note that our reductions show that intractability even holds if the attack relation of the value-based system under consideration forms a directed acyclic graph. On the positive side we have shown that value-based systems with value-width 2 whose graph structure is bipartite are solvable in polynomial time. These results establish a sharp boundary between tractability and intractability of persuasive argumentation for valuebased systems with value-width 2. Furthermore we have introduced the notion of the extended graph structure of a value-based system and have shown that subjective and objective acceptance can be decided in linear-time if the treewidth of the extended graph structure is bounded (that is, the problems are fixed-parameter tractable when parameterized by the treewidth of the extended graph structure). This is in strong contrast to the intractability of the problems for value-based systems where the treewidth of the graph structure or the treewidth of their value graph is bounded. Therefore we conclude that the extended graph structure seems to be an appropriate graphical model for studying the computational complexity of persuasive argumentation. It might be interesting for future work to extend this study to other graph-theoretic properties or parameters of the extended graph structure."}, {"heading": "Appendix: Technical proofs", "text": "Proof of Lemma 1. Let C = (x1, z1, . . . , xk, zk, t) be a certifying path for x1 in F . Take a specific audience \u2264 such that \u03b7(x1) < \u00b7 \u00b7 \u00b7 < \u03b7(xk) < \u03b7(t) and all other values in V are smaller than \u03b7(x1). We claim that the unique preferred extension P = GE(F\u2264) of F\u2264 includes {x1, . . . , xk, t} and excludes {z1, . . . , zk}, which means that x1 is subjectively accepted in F . It follows from C5 that t is not attacked by any other argument in F\u2264 and hence t \u2208 P (see also Section 2 for a description of an algorithm to find the unique preferred extension of an acyclic abstract argumentation system). From C4 it follows that zk /\u2208 P . Furthermore, if there exists an argument z 6= t, \u03b7(t) = \u03b7(z) then either (t, z) \u2208 A\u2264 or z does not attack an argument in {x1, . . . , xk, t}. In the first case z /\u2208 P and does not influence the membership in P for any other arguments in X . In the second case z \u2208 P but it does not attack any argument in {x1, . . . , xk, t}. In both cases it follows that xk \u2208 P . Using C3 it follows that zk\u22121 /\u2208 P and since we already know that zk /\u2208 P it follows that xk\u22121 \u2208 P . A repeated application of the above arguments establishes the claim, and hence x1 \u2208 P follows.\nConversely, suppose that there exists a specific audience \u2264 such that x1 is contained in the unique preferred extension P = GE(F\u2264) of F\u2264. We will now construct a certifying path C for x1 in F . Clearly, if there is no z1 \u2208 X \\ {x1} with \u03b7(z1) = \u03b7(x1) and (z1, x1) \u2208 A, then (x1) is a certifying path for x1 in F . Hence, it remains to consider the case where such a z1 exists. Since x1 \u2208 P it follows that z1 /\u2208 P . The sequence (x1, z1) clearly satisfies properties C1\u2013C3. We now show that we can always extend such a sequence until we have found a certifying path for x1 in F . Hence, let S = (x1, z1, . . . , xl, zl) be such a sequence satisfying conditions C1\u2013C3, and in addition assume S satisfies the following two conditions:\nS1 It holds that \u03b7(x1) < \u00b7 \u00b7 \u00b7 < \u03b7(xl).\nS2 For every 1 \u2264 i \u2264 l we have xi \u2208 P and zi /\u2208 P .\nClearly, the sequence (x1, z1) satisfies S1 and S2, hence we can include these conditions in our induction hypothesis. It remains to show how to extend S to a certifying path. Let Y := { y \u2208 P | (y, zl) \u2208 A \u2227 \u03b7(y) > \u03b7(xl) = \u03b7(zl) }. Then Y 6= \u2205 because zl /\u2208 P by condition S2 and the assumption that P is a preferred extension.\nFor each y \u2208 Y let Cy = (x1, z1, . . . , xl, zl, y). If there is an argument y \u2208 Y such that Cy is a certifying path for x1 in F we are done. Hence assume there is no such y \u2208 Y .\nWe choose xl+1 \u2208 Y arbitrarily. Note that Cxl+1 satisfies the condition C4; (xl+1, zl) \u2208 A (as xl+1 \u2208 Y ) and (xl+1, xi) /\u2208 A for 1 \u2264 i \u2264 l (as xl+1, xi \u2208 P and P is conflict-free). Since we assume that Cxl+1 is not a certifying path, Cxl+1 must violate C5.\nIt follows that there exists some argument zl+1 with \u03b7(zl+1) = \u03b7(xl+1) such that (xl+1, zl+1) /\u2208 A and (zl+1, xi) \u2208 A for some 1 \u2264 i \u2264 l+1. We conclude that S\u2032 = (x1, z1, . . . , xl, zl, xl+1, zl+1) satisfies conditions C1\u2013C3 and S1\u2013S2. Hence, we are indeed able to extend S and will eventually obtain a certifying path for x1 in F .\nProof of Lemma 2. Assume that x1 is objectively accepted in F . Suppose there is a p \u2208 X that attacks x1 and \u03b7(p) = \u03b7(x1). If we take a specific audience \u2264 where \u03b7(x1) is the greatest element, then x1 is not in the unique preferred extension of F\u2264, a contradiction to the assumption that x1 is objectively accepted. Hence \u03b7(p) 6= \u03b7(x1) for all arguments p \u2208 X that attack x1. Next suppose there is an argument p \u2208 X that attacks x1 and is subjectively accepted in F \u2212 \u03b7(x1). Let \u2264 be a specific audience such that p is in the unique preferred extension of (F \u2212 \u03b7(x1))\u2264. We extend \u2264 to a total ordering of V ensuring \u03b7(x1) \u2264 \u03b7(p). Clearly x1 is not in the unique preferred extension of F\u2264, again a contradiction. Hence indeed for all p \u2208 X that attack x1 we have \u03b7(p) 6= \u03b7(x1) and p is not subjectively accepted in F \u2212 \u03b7(x1)\nWe establish the reverse direction by proving its counter positive. Assume that x1 is not objectively accepted in F . We show that there exists some p \u2208 X that attacks x1 and where either \u03b7(p) = \u03b7(x1) or p is subjectively accepted in F \u2212 \u03b7(x1). Let \u2264 be a specific audience of F such that x1 is not in the unique preferred extension P = GE(F\u2264) of F\u2264. In view of the labeling procedure for finding P as sketched in Section 2, it follows that there exists some p \u2208 P that attacks x1 with \u03b7(x1) \u2264 \u03b7(p). If \u03b7(x1) = \u03b7(p) then we are done. On the other hand, if \u03b7(p) 6= \u03b7(x1), then p is in the unique preferred extension of (F \u2212 \u03b7(x1))\u2264, and so p is subjectively accepted in F \u2212 \u03b7(x1).\nProof of Corollary 1. We slightly modify the reduction from 3SAT as given in Section 3.2. Let C1, . . . , Cm be the clauses of the 3CNF formula \u03a6. It is well-known that 3SAT remains NP-hard for formulas where each clause is either positive (all three literals are unnegated variables) or negative (all three literals are negated variables), see [19]. Hence we may assume that for some 2 \u2264 k \u2264 m, C1, . . . , Ck are positive clauses and Ck+1, . . . , Cm are negative clauses. Let F and F \u2032 be the two value-based systems corresponding to \u03a6 as constructed in Section 3.2. We obtain from F the value-based system FB by adding a new pair of arguments xB , yB with a new value vB = \u03b7(xB) = \u03b7(yB) and inserting the pair between the pairs xik, z i k and the pair xk+1, zk+1. That is, for 1 \u2264 i \u2264 3 we replace the attacks (xk+1, zik) and (zk+1, x i k) with the attacks (xB , z i k) and (zB, x i k), and we add the attacks (xk+1, zB), (zk+1, xB). By the same modification we obtain from F \u2032 the value-based system F \u2032B . Clearly Claims 1 and 2 still hold for the modified value-based systems, i.e., \u03a6 is satisfiable if and only if x1 is subjectively accepted in F , and \u03a6 is satisfiable if and only if x1 is not objectively accepted in F \u2032.\nIn order to establish the corollary it remains to show that the value graphs of FB and F \u2032B are bipartite. We partition the set of arguments into two sets X0 and X1. X0 contains the values vj for j \u2264 k, the value vB , and the values vij for j > k. X1 contains the values vj for j > k, the values v i j for j \u2264 k, and the value vt. For F \u2032B , X1 contains also the value v0. It is easy to check that there is no attack (a, b) with \u03b7(a), \u03b7(b) \u2208 X0 or \u03b7(a), \u03b7(b) \u2208 X1, hence FB and F \u2032B have bipartite value graphs.\nProof of Lemma 7. Let G\u2032 be the graph obtained from G(S[F, x1]) = (VS[F,x1], ES[F,x1]) by replacing every path of the form (t, (t, h), h) for t, h \u2208 V by an edge {t, h}; i.e., G\u2032 = (V \u2032, E\u2032) where V \u2032 = X \u222a V and E\u2032 = (ES[F,x1] \u2229 { {u, v} | u, v \u2208 X \u222a V }) \u222a { {t, h} | (t, h) \u2208 ER }. Conversely one can obtain G(S[F, x1]) from G\u2032 by subdividing all edges of the form {t, h} for t, h \u2208 V and (t, h) \u2208 ER with a vertex (t, h). However, subdividing edges does not change the treewidth of a graph [7], hence it suffices to show that the treewidth of G\u2032 is at most twice the treewidth of the extended graph structure of F plus 1. Let T = (T, \u03c7) be a tree decomposition of the extended graph structure of F . We observe that T \u2032 = (T, \u03c7\u2032) where \u03c7\u2032(t) = \u03c7(t)\u222a{ \u03b7(v) | v \u2208 X\u2229\u03c7(t) } is a tree decomposition of G\u2032 where |\u03c7\u2032(t)| \u2264 2 \u00b7 |\u03c7(t)| for all nodes t of T ; hence the width of T \u2032 is at most twice the width of T plus 1."}], "references": [{"title": "Digraphs: Theory, Algorithms, Applications", "author": ["J\u00f8rgen Bang-Jensen", "Gregory Gutin"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2001}, {"title": "Semantics of abstract argument systems", "author": ["Pietro Baroni", "Massimiliano Giacomin"], "venue": "Argumentation in Artificial Intelligence,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2009}, {"title": "Argumentation in artificial intelligence", "author": ["T.J.M. Bench-Capon", "Paul E. Dunne"], "venue": "Artificial Intelligence,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2007}, {"title": "Persuasion in practical argument using value-based argumentation frameworks", "author": ["Trevor J.M. Bench-Capon"], "venue": "J. Logic Comput.,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2003}, {"title": "Audiences in argumentation frameworks", "author": ["Trevor J.M. Bench-Capon", "Sylvie Doutre", "Paul E. Dunne"], "venue": "Artificial Intelligence,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2007}, {"title": "Elements of Argumentation", "author": ["Philippe Besnard", "Anthony Hunter"], "venue": null, "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2008}, {"title": "A tourist guide through treewidth", "author": ["H.L. Bodlaender"], "venue": "Acta Cybernetica,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1993}, {"title": "An abstract, argumentation-theoretic approach to default reasoning", "author": ["A. Bondarenko", "P.M. Dung", "R.A. Kowalski", "F. Toni"], "venue": "Artificial Intelligence,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1997}, {"title": "Recognizability and second-order definability for sets of finite graphs", "author": ["Bruno Courcelle"], "venue": "Technical Report I-8634,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1987}, {"title": "Recursive conditioning", "author": ["Adnan Darwiche"], "venue": "Artificial Intelligence,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2001}, {"title": "Bucket elimination: a unifying framework for reasoning", "author": ["Rina Dechter"], "venue": "Artificial Intelligence,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1999}, {"title": "On the acceptability of arguments and its fundamental role in nonmonotonic reasoning, logic programming and n-person games", "author": ["Phan Minh Dung"], "venue": "Artificial Intelligence,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1995}, {"title": "Computational properties of argument systems satisfying graph-theoretic constraints", "author": ["Paul E. Dunne"], "venue": "Artificial Intelligence,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2007}, {"title": "Tractability in value-based argumentation", "author": ["Paul E. Dunne"], "venue": "Proceedings of COMMA 2010,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2010}, {"title": "Complexity in value-based argument systems", "author": ["Paul E. Dunne", "Trevor J.M. Bench-Capon"], "venue": "Logics in Artificial Intelligence, 9th European Conference,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2004}, {"title": "Towards fixed-parameter tractable algorithms for argumentation", "author": ["Wolfgang Dvor\u00e1k", "Reinhard Pichler", "Stefan Woltran"], "venue": "Principles of Knowledge Representation and Reasoning: Proceedings of the Twelfth International Conference,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2010}, {"title": "Parameterized Complexity Theory, volume XIV of Texts in Theoretical Computer Science. An EATCS Series", "author": ["J\u00f6rg Flum", "Martin Grohe"], "venue": null, "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2006}, {"title": "A sufficient condition for backtrack-bounded search", "author": ["Eugene C. Freuder"], "venue": "J. ACM,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1985}, {"title": "Computers and Intractability", "author": ["Michael R. Garey", "David R. Johnson"], "venue": null, "citeRegEx": "19", "shortCiteRegEx": "19", "year": 1979}, {"title": "Bounded treewidth as a key to tractability of knowledge representation and reasoning", "author": ["Georg Gottlob", "Reinhard Pichler", "Fang Wei"], "venue": "In 21st National Conference on Artificial Intelligence and the 18th Innovative Applications of Artificial Intelligence Conference. AAAI Press,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2006}, {"title": "Algorithms and complexity results for persuasive argumentation", "author": ["Eun Jung Kim", "Sebastian Ordyniak", "Stefan Szeider"], "venue": "Computational Models of Argumentation, Proceedings of COMMA 2010,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2010}, {"title": "Properties and complexity of some formal interagent dialogues", "author": ["Simon Parsons", "Michael Wooldridge", "Leila Amgoud"], "venue": "J. Logic Comput.,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2003}, {"title": "How to reason defeasibly", "author": ["John L. Pollock"], "venue": "Artificial Intelligence,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 1992}], "referenceMentions": [{"referenceID": 11, "context": "The study of arguments as abstract entities and their interaction as introduced by Dung [12] has become one of the most active research branches within Artificial Intelligence and Reasoning, see, e.", "startOffset": 88, "endOffset": 92}, {"referenceID": 2, "context": ", [3, 6, 24].", "startOffset": 2, "endOffset": 12}, {"referenceID": 5, "context": ", [3, 6, 24].", "startOffset": 2, "endOffset": 12}, {"referenceID": 22, "context": ", [23], [8]) and agent interaction (see, e.", "startOffset": 2, "endOffset": 6}, {"referenceID": 7, "context": ", [23], [8]) and agent interaction (see, e.", "startOffset": 8, "endOffset": 11}, {"referenceID": 21, "context": ", [22]).", "startOffset": 2, "endOffset": 6}, {"referenceID": 3, "context": "Extending Dung\u2019s concept, Bench-Capon [4] introduced value-based argumentation systems that allow to compare arguments with respect to their relative strength such that an argument cannot successfully attack another argument that is considered of a higher rank.", "startOffset": 38, "endOffset": 41}, {"referenceID": 4, "context": "The ranking is specified by the combination of an assignment of values to arguments and an ordering of the values; the latter is called an audience [5].", "startOffset": 148, "endOffset": 151}, {"referenceID": 14, "context": "An important limitation for using value-based argumentation systems in real-world applications is the computational intractability of the two basic acceptance problems: deciding whether a given argument is subjectively accepted is NP-hard, deciding whether it is objectively accepted is co-NP-hard [15].", "startOffset": 298, "endOffset": 302}, {"referenceID": 13, "context": "However, no non-trivial tractable classes of value-based systems have been identified so far, except for systems with a tree structure where the degree of nodes and the number of nodes of degree exceeding 2 are bounded [14].", "startOffset": 219, "endOffset": 223}, {"referenceID": 12, "context": "In fact, as pointed out by Dunne [13], the acceptance problems remain intractable for valuebased systems whose graphical structures form trees, in strong contrast to the main computational problems for non-value-based argumentation that are linear-time tractable for tree systems, or more generally, for systems of bounded treewidth [13] .", "startOffset": 33, "endOffset": 37}, {"referenceID": 12, "context": "In fact, as pointed out by Dunne [13], the acceptance problems remain intractable for valuebased systems whose graphical structures form trees, in strong contrast to the main computational problems for non-value-based argumentation that are linear-time tractable for tree systems, or more generally, for systems of bounded treewidth [13] .", "startOffset": 333, "endOffset": 337}, {"referenceID": 13, "context": "\u2022 The value graph of a value-based system has as vertices the values of the system, two values v1 and v2 are joined by a directed edge if some argument of value v1 attacks an argument of value v2 [14].", "startOffset": 196, "endOffset": 200}, {"referenceID": 12, "context": "Classes (N1) and (N2) were conjectured to be tractable [13], the complexity of (N3) was stated as an open problem [14].", "startOffset": 55, "endOffset": 59}, {"referenceID": 13, "context": "Classes (N1) and (N2) were conjectured to be tractable [13], the complexity of (N3) was stated as an open problem [14].", "startOffset": 114, "endOffset": 118}, {"referenceID": 4, "context": "In Section 3 we define the parameters value-width and attack-width and establish the results involving systems of value-width 2, we also discuss the relationship between systems of value-width 2 and dialogues [5].", "startOffset": 209, "endOffset": 212}, {"referenceID": 20, "context": "The main results of this paper have been presented in preliminary and shortened form at COMMA\u201910 [21].", "startOffset": 97, "endOffset": 101}, {"referenceID": 0, "context": "An abstract argumentation system F = (X,A) can be considered as a directed graph, and therefore it is convenient to borrow notions and notation from the theory of directed graphs [1].", "startOffset": 179, "endOffset": 182}, {"referenceID": 11, "context": "Next we define commonly used semantics of abstract argumentation systems as introduced by Dung [12].", "startOffset": 95, "endOffset": 99}, {"referenceID": 1, "context": ", Baroni and Giacomin\u2019s survey [2].", "startOffset": 31, "endOffset": 34}, {"referenceID": 11, "context": "It is well known that every acyclic system F = (X,A) has a unique preferred extension GE(F ), and that GE(F ) can be found in polynomial time (GE(F ) coincides with the \u201cgrounded extension\u201d [12]).", "startOffset": 190, "endOffset": 194}, {"referenceID": 3, "context": "The requirement for Fv to be acyclic is also known as the Multivalued Cycles Assumption, as it implies that any set of arguments that form a directed cycle in F = (X,A) will contain at least two arguments that are not equivalued [4].", "startOffset": 229, "endOffset": 232}, {"referenceID": 14, "context": "Question: Is x1 objectively accepted in F ? As shown by Dunne and Bench-Capon [15], SUBJECTIVE ACCEPTANCE is NP-complete and OBJECTIVE ACCEPTANCE is co-NP-complete.", "startOffset": 78, "endOffset": 82}, {"referenceID": 13, "context": "Dunne [14] studied properties of value-based systems that allow to reduce the number of audiences to consider.", "startOffset": 6, "endOffset": 10}, {"referenceID": 13, "context": "The concept of value graphs was recently introduced and studied by Dunne [14].", "startOffset": 73, "endOffset": 77}, {"referenceID": 12, "context": "Dunne [13] suggested to consider restrictions on the number of arguments that share the same value, and the number of attacks between equivalued arguments.", "startOffset": 6, "endOffset": 10}, {"referenceID": 12, "context": "On the other hand, value-based systems of value-width 3 are already too expressive to allow a tractable acceptance decision: Dunne [13] showed that the problems SUBJECTIVE and OBJECTIVE ACCEPTANCE are intractable (NP-complete and co-NP-complete, respectively) for value-based systems of value-width 3, even if their graph structure is a tree.", "startOffset": 131, "endOffset": 135}, {"referenceID": 12, "context": "In fact, Dunne [13] conjectured that both acceptance problems are polynomial-time decidable for value-based systems of value-width 2.", "startOffset": 15, "endOffset": 19}, {"referenceID": 13, "context": "By a slight modification of the above reduction we can also show the following, answering a research question recently posed by Dunne [14].", "startOffset": 134, "endOffset": 138}, {"referenceID": 4, "context": "3 Certifying paths and dialogues Bench-Capon, Doutre, and Dunne [5] developed a general dialogue framework that allows to describe the acceptance of arguments in a value-based system in terms of a game, played by two players, the proponent and the opponent.", "startOffset": 64, "endOffset": 67}, {"referenceID": 17, "context": ", [18, 11, 10, 20].", "startOffset": 2, "endOffset": 18}, {"referenceID": 10, "context": ", [18, 11, 10, 20].", "startOffset": 2, "endOffset": 18}, {"referenceID": 9, "context": ", [18, 11, 10, 20].", "startOffset": 2, "endOffset": 18}, {"referenceID": 19, "context": ", [18, 11, 10, 20].", "startOffset": 2, "endOffset": 18}, {"referenceID": 12, "context": "Deciding acceptance for argumentation frameworks of bounded treewidth has been investigated by Dunne [13] and by Dvor\u00e1k, Pichler, and Woltran [16].", "startOffset": 101, "endOffset": 105}, {"referenceID": 15, "context": "Deciding acceptance for argumentation frameworks of bounded treewidth has been investigated by Dunne [13] and by Dvor\u00e1k, Pichler, and Woltran [16].", "startOffset": 142, "endOffset": 146}, {"referenceID": 12, "context": "However, for value-based argumentation, the concept of bounded tree-width has not been applied successfully: the basic decision problems for value-based systems remain intractable for value-based systems of value width 3 whose graph structure has treewidth 1 [13].", "startOffset": 259, "endOffset": 263}, {"referenceID": 13, "context": "Hardness even prevails for value-based systems whose value graph has pathwidth 2 [14].", "startOffset": 81, "endOffset": 85}, {"referenceID": 6, "context": ", [7]).", "startOffset": 2, "endOffset": 5}, {"referenceID": 13, "context": "To achieve tractability we have to pay a price in generality: The mentioned hardness results of [14, 13] imply that if SUBJECTIVE ACCEPTANCE is fixed-parameter tractable for any parameter p, then, unless P = NP, parameter p cannot be bounded by a function of any of the following three parameters: the treewidth of the graph structure, the treewidth of the value graph, and the value-width.", "startOffset": 96, "endOffset": 104}, {"referenceID": 12, "context": "To achieve tractability we have to pay a price in generality: The mentioned hardness results of [14, 13] imply that if SUBJECTIVE ACCEPTANCE is fixed-parameter tractable for any parameter p, then, unless P = NP, parameter p cannot be bounded by a function of any of the following three parameters: the treewidth of the graph structure, the treewidth of the value graph, and the value-width.", "startOffset": 96, "endOffset": 104}, {"referenceID": 8, "context": "We shall take a logic approach and use the celebrated result of Courcelle [9], which states that all properties that can be expressed in a certain formalism (Monadic Second-Order logic, MSO) can be checked in linear time for graphs (or more generally, for finite structures) of bounded treewidth.", "startOffset": 74, "endOffset": 77}, {"referenceID": 16, "context": "In the following we use Courcelle\u2019s result as laid out by Flume and Grohe [17].", "startOffset": 74, "endOffset": 78}, {"referenceID": 0, "context": ", [1]).", "startOffset": 2, "endOffset": 5}], "year": 2014, "abstractText": "The study of arguments as abstract entities and their interaction as introduced by Dung (Artificial Intelligence 177, 1995) has become one of the most active research branches within Artificial Intelligence and Reasoning. A main issue for abstract argumentation systems is the selection of acceptable sets of arguments. Value-based argumentation, as introduced by Bench-Capon (J. Logic Comput. 13, 2003), extends Dung\u2019s framework. It takes into account the relative strength of arguments with respect to some ranking representing an audience: an argument is subjectively accepted if it is accepted with respect to some audience, it is objectively accepted if it is accepted with respect to all audiences. Deciding whether an argument is subjectively or objectively accepted, respectively, are computationally intractable problems. In fact, the problems remain intractable under structural restrictions that render the main computational problems for non-value-based argumentation systems tractable. In this paper we identify nontrivial classes of value-based argumentation systems for which the acceptance problems are polynomial-time tractable. The classes are defined by means of structural restrictions in terms of the underlying graphical structure of the value-based system. Furthermore we show that the acceptance problems are intractable for two classes of value-based systems that where conjectured to be tractable by Dunne (Artificial Intelligence 171, 2007).", "creator": "dvips(k) 5.98 Copyright 2009 Radical Eye Software"}}}