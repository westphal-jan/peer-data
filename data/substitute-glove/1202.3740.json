{"id": "1202.3740", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "14-Feb-2012", "title": "An Efficient Protocol for Negotiation over Combinatorial Domains with Incomplete Information", "abstract": "We study while change of agent - major groundwork in three-dimensional domains. It being difficult to reach computed agreements in bilateral or entire - distal pursue off from police ' preferences for is possible alternatives similar no most belief. Self - interested agents or years put seek bureaucracy signed was some rarely. In this piece, nobody present it monitoring for initiate been fractals domains which do lead inference police whether 90 optimal agreeing under incomplete information view. Our which protocol enables two brokered cia to cannot viable solutions using distributed searched that visits only a small hilbert whose the way difficult search. Moreover, , proposed protocol that uncertain general however entire similar applicable whether most preference participation styling throughout np-hard domains. We also present failure included experiments nor importantly itself discoveries that computational efficiency thus think approach.", "histories": [["v1", "Tue, 14 Feb 2012 16:41:17 GMT  (492kb)", "http://arxiv.org/abs/1202.3740v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["minyi li", "quoc bao vo", "ryszard kowalczyk"], "accepted": false, "id": "1202.3740"}, "pdf": {"name": "1202.3740.pdf", "metadata": {"source": "CRF", "title": "An Efficient Protocol for Negotiation over Combinatorial Domains with Incomplete Information", "authors": ["Minyi Li"], "emails": [], "sections": [{"heading": null, "text": "We study the problem of agent-based negotiation in combinatorial domains. It is difficult to reach optimal agreements in bilateral or multi-lateral negotiations when the agents\u2019 preferences for the possible alternatives are not common knowledge. Selfinterested agents often end up negotiating inefficient agreements in such situations. In this paper, we present a protocol for negotiation in combinatorial domains which can lead rational agents to reach optimal agreements under incomplete information setting. Our proposed protocol enables the negotiating agents to identify efficient solutions using distributed search that visits only a small subspace of the whole outcome space. Moreover, the proposed protocol is sufficiently general that it is applicable to most preference representation models in combinatorial domains. We also present results of experiments that demonstrate the feasibility and computational efficiency of our approach."}, {"heading": "1 Introduction", "text": "Multi-issue negotiation is one of the most preferred approaches for resolving conflicts in agent society [4]. It is being increasingly used in different multi-agent domains including trading systems, resource allocation, service level agreement negotiations, etc. [4, 9]. When multiple issues are involved in negotiation simultaneously, the agents with divergent preferences can cooperate to reach agreements that are beneficial for each other. But when the preferences of the participating agents are not common knowledge, they often fail to explore win-win possibilities and end up with inefficient results. Therefore, there is a need for negotiation protocols which can lead rational agents to op-\ntimal agreements. By optimal or efficient agreement, we refer to an agreement which is Pareto-optimal (or Pareto-efficient) [7]. An alternative or outcome is Pareto-optimal (or Pareto-efficient) if there exists no other alternative which is at least as good as this alternative for all agents and strictly better for at least one agent.\nIn this paper, we focus on the negotiation problems where the space of alternatives has a combinatorial structure 1. For example, negotiations over multiple indivisible goods or resources (where the number of bundles an agent may obtain is exponential in the number of goods or resources). When the negotiating agents know about the preferences of each other, they can reach an efficient agreement using distributed protocols like one-step monotonic concession protocol or monotonic concession protocol [8], where each agent searches the entire space of possible agreements. Similar scenarios of multi-attribute decision-making with complete information have also been studied in the field of collective decision-making in combinatorial domains, i.e. voting theory and preference aggregation (for instance, [5], [7], [10] etc..), which determines either one, some, or all optimal alternatives from a given collection of the agents preferences according to a given preference aggregation rule. However, most negotiations in real life take place under incomplete information where the agents do not have complete knowledge about the preferences of the opponents. Some protocols for negotiation over multiple indivisible resources in incomplete information scenarios have been proposed by Brams and Taylor [2]. These protocols can produce optimal agreements only for negotiating over multiple uncorrelated resources, i.e., situations where the utility of possessing two resources is the sum of the utilities of possessing each individual resource. The scenarios they considered are similar to the negotiation problem in combinatorial domains\n1The number of possible alternatives is exponential in the number of attributes that are involved in negotiation\nwhere the attributes are all independent. But reallife negotiations typically involve inter-dependent attributes and the decision-making process tends to become much more complex. As an example, a research group plan to order several PCs and the group members need to decide on a standard group PC configuration. The decisions are not independent, because, perhaps, the preferred operating systems may depend on the given processor type. For instance, \u201cI prefer to choose WinXP operating system rather than Linux if an Intel processor is given.\u201d Hence, we cannot decide on the issues separately. However, in the situations of multiple interdependent or correlated issues, these existing protocols can produce very inefficient agreements in negotiation[9].\nOur objective is to design an efficient protocol for agent-based negotiation in combinatorial domains, which can lead participating agents to Pareto-optimal agreements. We consider a completely uncertain negotiation scenario where participating agents do not have any knowledge about the preferences of the other agents; and the agents do not want to reveal their preferences for the possible alternatives during the process of negotiation. We propose a two phase negotiation protocol POANCD (Protocol to reach Optimal agreement in Negotiation over Combinatorial Domains). The first phase of POANCD involves an iterative negotiation process to generate a set of initial agreements that are close to optimal. And then the second phase further enhances the initial agreements to be Pareto-optimal by searching for possible mutually beneficial agreements.\nOur proposed protocol makes a distinct contribution from other existing voting protocols or aggregation mechanisms in the sense that it is under purely incomplete information setting and distributed manner. Moreover, our protocol differs from most of the existing research in the field of utility-based negotiation. Because it can not only handle quantitative preferences, but also works with purely qualitative preference models. It is general enough to allow for a various types of preferences and representation models in combinatorial domains. The preferences can be cardinal (e.g. utilities) or ordinal preferences (preference relations). And the representation models can be based on conditional preferences, for instance CP-nets [1] and its variants, which consist of a structural part that expresses the links between variables, and a \u201ctable\u201d part containing the local preferences; or it can be based on propositional logic (or possibly a fragment of it), for instance prioritized goals, distance-based goals, weighted goals, bidding languages for combinatorial auctions. Another advantage of our proposed protocol is that each agent is required to consider only a small\nsubset of alternatives instead of the entire outcome space. It requires significantly less outcome comparisons compared to exhaustive search in most negotiation instances."}, {"heading": "2 Preliminaries", "text": ""}, {"heading": "2.1 Combinatorial domains", "text": "Let V = {X1, . . . , Xm} be a set of m attributes in a combinatorial domain, For each X \u2208 V, D (X) is the domain of X. A variable X is binary if D (X) = {x, x\u0304}. An alternative is uniquely identified by the combination of its attribute values. Hence, there are D(X1)\u00d7\u00b7 \u00b7 \u00b7\u00d7D(Xm) possible alternatives (outcomes), denoted by O. Elements of O are denoted by o, o\u2032, o\u2032\u2032 etc. and represented by concatenating the values of the variables. For example, if V = {A,B,C}, D(A) = {a, a\u0304}, D(B) = {b, b\u0304} andD(C) = {c, c\u0304}, then the assignment ab\u0304c assigns a to variable A, b\u0304 to B and c to C. If X = {X\u03c31 , . . . , X\u03c3`} \u2286 V, with \u03c31 < \u00b7 \u00b7 \u00b7 < \u03c3` then D (X) denotes D (X\u03c31) \u00d7 \u00b7 \u00b7 \u00b7 \u00d7 D (X\u03c3`) and x (x \u2208 D (X)) denotes an assignment of variable values to X. If X = V, x is a complete assignment (corresponds to a possible outcome); otherwise x is called a partial assignment. If x and y are assignments to disjoint sets X and Y, respectively (X \u2229Y = \u2205), we denote the combination of x and y by xy. If X\u222aY = V, we call xy a completion of assignment x. We denote by Comp(x) the set of completions of x. For any assignment x \u2208 D (X), we denote by x [X] the value x \u2208 D (X) (X \u2208 X) assigned to variable X by that assignment; and x [W] denotes the assignment of variable values w \u2208 D (W) assigned to the set of variables W \u2286 X by that assignment. We allow concatenations of partial assignments. For instance, let V = {A,B,C,D,E, F}, X = {A,B,C}, Y = {D,E}, x = ab\u0304c\u0304, y = d\u0304e, then xyf\u0304 denotes the alternative ab\u0304c\u0304d\u0304ef\u0304 ."}, {"heading": "2.2 Preference in combinatorial domains", "text": "Preference indicates the ranking (or order, precedence) of possible alternatives based on the satisfaction they could provide for an agent. In decision-making theory, the standard way to model the decision maker\u2019s preference is with his preference relations, also called a binary relation [3]. Let o, o\u2032 be two possible outcomes o, o\u2032 \u2208 O. Then \u2019 \u2019 is a preference relation on O such that o o\u2032 if and only if o is at least as preferable as o\u2032 (or, o is weakly preferred to o\u2032). And o is strictly preferred to o\u2032 (notation o o\u2032) if and only if o o\u2032 but o\u2032 o. When o o\u2032 and o\u2032 o, we say that the agent is indifferent between these two outcomes, denoted by o\u2032 \u223c o. Moreover, in combinatorial domains, two out-\ncomes o and o\u2032 can also be incomparable for an agent when o o\u2032 and o\u2032 o, denoted by o Z o\u2032.\nGiven a problem over a combinatorial domain, the direct assessment of the preference relations between alternatives is usually infeasible due to the exponential number of alternatives. AI researchers have been developing languages for representing preferences on such domains in a succinct way, exploiting structural properties such as conditional preferential independence.\nPreferential Independency\nLet X, Y, and Z be nonempty sets that partition V and a preference relation over D (V). X is (conditionally) preferentially independent of Y given Z iff for all x,x\u2032 \u2208 D (X), y,y\u2032 \u2208 D (Y), z \u2208 D (Z):\nxyz x\u2032yz iff xy\u2032z x\u2032y\u2032z\nAmong those preference representation languages in combinatorial domain, CP-net (Conditional Preference Network) is one of the most studied languages.\nCP-nets\nA CP-net N [1] over a set of domain attribute V = {X1, . . . , Xm} is an annotated directed graph G, in which nodes stand for the problem attributes. Each node X is annotated with a conditional preference table CPT (X), which associates a total order X|u with each instantiation u of X\u2019s parents Pa (X), i.e. u \u2208 D (Pa (X)). For instance, let V = {A,B,C}, all three being binary, and assume that the preference of a given agent over all possible outcomes can be defined by a CP-net whose structural part is the directed acyclic graph G = {(C,A) , (C,B) , (A,B)}; this means that the agent\u2019s preference over the values of C is unconditional, preference over the values of A (resp. B) is fully determined given the value of C (resp. the values of C and A). The preference statements contained in the conditional preference tables are written with the usual notation, that is, a\u0304c : b\u0304 b means that when A = a\u0304 and C = c, then B = b\u0304 is preferred to B = b (see for example Figure 1(a)).\nFor clarity of presentation, we attempt to describe our negotiation protocol with acyclic CP-nets, i.e., the relation graph does not contain circle. However, the proposed protocol can be used to handle various preferences models and languages given the corresponding techniques for answering dominance queries2 and outcome optimization queries3. Notice that the negotiation process is elicitation-free: the agents are\n2A dominance query, given two alternatives o and o\u2032, asks whether o is preferred to o\u2032 with respect to an agent\u2019s preferences.\n3An outcome optimization query determines the set\nnever asked to report their preferences. Therefore, the agents are not going to reveal their CP-nets and the structures of their CP-nets do not play any role."}, {"heading": "3 Our proposed negotiation protocol", "text": "In this section we present our proposed protocol: Protocol to reach Optimal agreement in Negotiation over Combinatorial Domains (POANCD). Before we go into technical detail, we first extend the concept of Pareto-optimality and rational agent in negotiation over combinatorial domains with incomparability. Definition 1 (Pareto-optimality). An outcome o is Weakly Pareto-optimal (WPO) if there exists no other outcome o\u2032 such that all agents strictly prefers o\u2032 to o. An outcome o is Pareto-optimal (PO) if there exists no other outcome o\u2032 such that o\u2032 is at least as preferred as o or incomparable with o for all agents, and strictly preferred to o for at least one agent.\nPareto-optimality (PO) implies weak Paretooptimality (WPO). That is, when an alternative is PO, it is also WPO. However, the reverse does not hold: a WPO alternative is not necessarily PO. Definition 2 (Rational agent). A rational agent i will accept an agreement o\u2032 instead of o only if o\u2032 is at least as preferred as o (o\u2032 i o) or incomparable with o (o\u2032 Zi o).\nThat means, an rational agent i will accept an agreement o\u2032 instead of o only if o is not strictly preferred to o\u2032."}, {"heading": "3.1 The framework", "text": "Negotiation tree\nFor a negotiation problem over m attributes V = {X1, . . . , Xm}, we conceptualize the assignment of the\nof non-dominated outcomes among the feasible outcome space with respect to an agent\u2019s preferences.\nattribute values as a tree, known as the negotiation tree. Let k be the maximum size of the attribute domain: \u2200X \u2208 V, |D (X)| \u2264 k, the negotiation tree is then a k-ary tree. The depth of the negotiation tree is m with the root being at depth 0. We assume that the set of attributes are ordered in some way O = X\u03c31 > \u00b7 \u00b7 \u00b7 > X\u03c3m , e.g., a random order chosen by a non-bias natural device. The root node represents an empty assignment; each path to a node at depth ` specifies a unique value assignment assg \u2208 D(X\u03c31)\u00d7 \u00b7 \u00b7 \u00b7 \u00d7D(X\u03c3`) to the set of attributes {X\u03c31 , . . . , X\u03c3`} in that order. Each node at depth m represents one possible alternative (outcome) and the path to reach that node from the root specifies the complete assignment to the set of domain attributes according to that alternative. Such a negotiation tree is shown in Figure 2 for a bilateral negotiation scenario over a set of three attributes V = {A,B,C}, where the agents preferences are presented by the CP-nets depicted in Figure 1.\nA negotiation tree is created iteratively by the negotiating agents in a distributed manner and under incomplete information setting. In each iteration, the only information that each agent obtains is the nodes in the negotiation tree which are currently available for him to make a proposal on. There is no prior information about the preferences of the opponents. Moreover, the proposals made by an agent during negotiation are invisible for its opponents. The procedure starts with a root with an empty assignment. The negotiation tree is then created in a top-down process, where in each iteration of negotiation, each agent can only choose one of the existing leaf nodes in the negotiation tree to make a proposal on. Note that the negotiating agents may make proposals on different nodes in an iteration of negotiation. Note also that each agent is not allowed to make proposals on the same node more than once during the entire negotiation process. Once a leaf node \u03b7 at depth ` (` < m) is agreed by all the participating agents (i.e., every agent has at some point made a proposal on that node during negotiation), the subtree of \u03b7 will be expanded with every possible value assigns to the next attribute X\u03c3`+1 ; and these children nodes will be explored by the agents and be available for them to make proposals on in the next iteration. We formally describe the following definitions of open nodes and agreement nodes in a negotiation tree.\nDefinition 3 (Open node). A node \u03b7 in the negotiation tree is marked as open if and only if it is a leaf node and it is agreed by all the negotiation agents, i.e., every agent has ever made a proposal on this node during negotiation (not necessarily in the current iteration).\nNote that once a node \u03b7 at depth ` (` < m) is marked\nas open in the current iteration, it will be expanded with every possible value assigns to the next attribute X\u03c3`+1 . Thus, in the next iteration, \u03b7 is not an open node any more, because it will no longer be a leaf node. Definition 4 (Agreement node). A node \u03b7 in the negotiation tree is an agreement node if and only if it is an open node at depth m.\nAn initial agreement is reached if there is at least one agreement node in the negotiation tree. The path to reach an agreement node from the root specifies the complete assignment to the set of domain attributes that the agents have agreed on during negotiation.\nBest possible agreement (BPA)\nAt each node \u03b7 of the negotiation tree, each agent i has a best possible agreement on that node, denoted by BPAi (\u03b7), which is the optimistic outcome that agent i can obtain with the values assigned to the attributes along the path from the root to \u03b7 being fixed. Let assg = PATH(\u03b7) be the value assignment specified by the path from the root to \u03b7, then BPAi (\u03b7) is the best outcome among the completions of assg (Comp(assg)) for agent i. Moreover, the best possible agreement (BPA) of the root node for an agent corresponds to the optimal (best) alternative of that agent in the entire outcome space, i.e. each attribute is assigned a most preferred value according to that agent\u2019s preference.\nIn the context of acyclic CP-nets, computing the best possible agreement of a node for an agent is similar to the individual outcome optimization with constraints (i.e., the values assigned to the attributes along the path from the root node to the current node being fixed) [1]. We simply need to sweep through the network from ancestors to descendants, assigning the most preferred value to each remaining attribute X (i.e., the attribute that has not been assigned a value along the path) respecting to the parent context. For instance, consider the agents\u2019 CP-nets in Figure 1 and assume a path assignment for a node \u03b7 is a. According to agent 1\u2019s CP-net in Figure 1(a), we consider an order over attributes from ancestors to descendants: O = C > A > B. We first assign c to C, because c c\u0304. The next variable to be considered is B, because the value of A has already been specified by the path to \u03b7. Then we assign b to B, because b b\u0304 given A = a and C = c. Consequently, BPA1(\u03b7) = abc. Similarly, for agent 2, BPA2(\u03b7) = ab\u0304c\u0304."}, {"heading": "3.2 The process of negotiation", "text": "We now present an example of a bilateral negotiation scenario using POANCD in combinatorial domains. POANCD is defined in two phases. The first phase of\nPOANCD consists of distributed formation of a negotiation tree by the participating agents. After the first phase, the agents will be left with a few initial agreements. In the second phase, the agents will act cooperatively to achieve Pareto-optimal agreement by exploring possible mutually beneficial alternatives.\nFirst phase of POANCD:\nStep 1: A random device chooses an order over the domain attributes, e.g., O = X\u03c31 > \u00b7 \u00b7 \u00b7 > X\u03c3m , such that the negotiation tree is created following that order. Initially, a root node and all its possible |D(X\u03c31)| children nodes (each branch assigns a distinct value to the attribute X\u03c31) are created in the negotiation tree.\nStep 2: Each negotiating agent makes a proposal on an existing leaf node in the negotiation tree. After each agent makes a proposal, let Q denotes the set of nodes marked as open in the current iteration. Note that there would be at most two nodes marked as open in each iteration (|Q| \u2264 2), because we are considering a bilateral negotiation and in each iteration, each agent can only make a proposal on one node 4.\n\u2022 If there exist at least one agreement nodes in the negotiation tree, collect the set of open nodes Q and go to Step 3.\n\u2022 Otherwise, for each \u03b7 \u2208 Q, let ` denotes the depth of \u03b7, and thus the next attribute to be considered in the subtree of \u03b7 is X\u03c3`+1 . Expand \u03b7 with all possible |D(X\u03c3`+1)| children nodes in the negotiation tree; and go back to Step 2.\nRemark. The negotiation process takes place under incomplete information setting and in a distributive environment. In each iteration of negotiation, each agent i only knows a set of nodes (options), denoted by \u2126i, on which he can make proposals, i.e., the set of leaf nodes in the negotiation tree that he has not made a proposal on during the previously rounds. For each node \u03b7 in \u2126i, an agent i will have a best possible agreement (BPA) of \u03b7 (BPAi(\u03b7)), which indicates the optimistic outcome that agent i can obtain following the subtree of \u03b7. An agent can always choose to go backward as long as the BPA of the current node is less preferred than that of another node. Thus, a rational agent will always try to get the most preferred alternative among the possible options. Consequently, we consider the following strategy\n4In a multilateral negotiation, there may be more than two nodes marked as open in an iteration of negotiation.\nin negotiation: chooses a node \u03b7 \u2208 \u2126i whose BPA is the best among the BPAs of the nodes in \u2126i. That means, there does not exist another node \u03b7\u2032 in \u2126i (\u03b7\u2032 , \u03b7), such that BPAi(\u03b7\u2032) i BPAi(\u03b7).\nAs an implementation, each agent can maintain a priority queue of feasible leaf nodes to make proposals on, known as the fringe. The nodes in an agent\u2019s fringe is sorted according to the preference ordering over the BPAs of these nodes for that agent. The more preferred the BPAi(\u03b7) is, the higher priority the node \u03b7 is in the fringe of agent i. In each iteration of negotiation, for each agent i, the first node is removed from the fringe and agent i will make a proposal in the negotiation tree on that node. If there are new nodes created in the negotiation tree (i.e., the children nodes of the open nodes created in the current iteration), each agent will add the new nodes into its fringe according to its own preference ordering on the BPAs. Figure 3 shows an example of two participating agents\u2019 fringes in a bilateral negotiation corresponding to the negotiation scenario depicted in Figure 2. Note that with acyclic CP-nets, the BPA is always unique at each node of the negotiation tree. With other types of preference when there may exist more than one best possible agreements, the BPA can be defined as a set of most preferred outcomes, which will be all added into the fringe. The fringe will be sorted and in the next iteration the agent will choose the first one to make an offer on. Finally notice that even if the BPA of a node is unique, the fringe can also contain incomparable outcomes, i.e., the BPA of different nodes in the tree might be incomparable.\nStep 3: We refer to the set of agreement nodes as A and the set of agreements (complete assignments) corresponding to the agreement nodes in A as I: I = {o\u2217 | o\u2217 = PATH(\u03b7\u2217) and \u03b7\u2217 \u2208 A}, where PATH(\u03b7\u2217) denotes the value assignment to the set of domain attributes specified by the path from the root to \u03b7\u2217. Note that an agreement node is also an open node, thus A \u2286 Q.\n\u2022 If Q = A, the first phase ends and proceed to the second phase.\n\u2022 Otherwise, the set Q must contain one agreement node at depth m, denoted by \u03b7\u2217; and one open node at depth ` (` < m), denoted by \u03b7\u2032. That means, in the last iteration, an agent i makes a proposal on \u03b7\u2217, which has been agreed by the other agent j (i , j) during a previous iteration of negotiation; and the other agent j makes a proposal on \u03b7\u2032,\nwhich has been agreed by agent i in a previous iteration of negotiation. Let o\u2217 be the complete assignment (alternative) specified by the path from the root to the agreement node \u03b7\u2217. Even though \u03b7\u2032 is not an agreement node, there does exist a potential agreement under the subtree of \u03b7\u2032, because both agents have agreed on \u03b7\u2032. Moreover, this potential agreement can not be strictly preferred to o\u2217 for agent j (otherwise, he would have made a proposal on \u03b7\u2032 before he makes a proposal \u03b7\u2217), but may be more preferred than o\u2217 to agent i. However, since there already exists an agreement o\u2217, agent j will not make further concession in the subtree of \u03b7\u2032. Consequently, in order to be fair, we ask agent j, who proposes \u03b7\u2032 in the last iteration, to give out the BPA of \u03b7\u2032 (BPAj(\u03b7\u2032)). Then agent i can either choose to include BPAj(\u03b7\u2032) in the initial agreement set: I = I \u222a {BPAj(\u03b7\u2032)}; or stick with the current set I. Note that agent i will choose to include BPAj(\u03b7\u2032) only if o\u2217 i BPAj(\u03b7\u2032). The first phase ends and proceed to the second phase with a set of initial agreements I.\nSecond phase of POANCD (Enhancement):\nThis phase is also called the enhancement phase, in which the participating agents will act cooperatively to explore possible mutually beneficial agreements and decide on the final agreement. We first introduce the following notations:\n1. let \u2126i denote the set of leaf nodes in the negotiation tree that agent i has not yet made a proposal on during the first phase of negotiation, i.e., the remaining nodes in agent i\u2019s fringe;\n2. For each initial agreement o\u2217 \u2208 I and each negotiating agent i, let:\n\u2022 \u0393i(o\u2217) denote the set of nodes in \u2126i (\u0393i(o\u2217) \u2208 \u2126i) whose BPAs are indifferent or incomparable with o\u2217 for agent i: \u0393i(o\u2217) = {\u03b7 \u2208 \u2126i | BPAi(\u03b7) \u223ci o\u2217 or BPAi(\u03b7) Zi o\u2217}; and \u2022 \u0398i(o\u2217) denote the corresponding set of agent i\u2019s BPAs of the nodes in \u0393i(o\u2217) : \u0398i(o\u2217) = {o | o = BPAi(\u03b7) and \u03b7 \u2208 \u0393i(o\u2217)}.\nNotice that for any node \u03b7 in \u2126i, BPAi(\u03b7) can not be strictly preferred to o\u2217 for agent i. Otherwise, agent i would have made a proposal at \u03b7 before he makes a proposal on the corresponding agreement node of o\u2217.\nIn this phase, for each initial agreement o\u2217, let us define a set \u03a6(o\u2217), which is the set of Pareto-optimal\nalternatives that can possibly replace o\u2217 in I. Originally, \u03a6(o\u2217) = \u2205. Each agent i gives out \u0398i(o\u2217), then the other agent (agent j) can either choose one of the alternatives in \u0398i(o\u2217) to put in \u03a6(o\u2217) or stick with o\u2217. Note that agent j will choose an alternative o\u2032 from \u0398i(o\u2217) to put in \u03a6(o\u2217) only if o\u2217 j o\u2032; and the alternative o\u2032 that agent j chooses would be the best alternative among \u0398i(o\u2217) for agent j. If \u03a6(o\u2217) , \u2205, then o\u2217 in I will be replaced by the outcomes in \u03a6(o\u2217).\nFinally, after the second phase, the set I contains the set of final agreements. If only one element remains in I, it will be selected as the final agreement. Otherwise, any one of them will be chosen randomly as the final agreement.\n3.3 Formal properties of POANCD\nIn this section, we discuss the formal properties of the proposed POANCD negotiation protocol. The objective of an efficient protocol is to lead rational agents to efficient agreements [9]. We present the formal proof of Pareto-optimality of our proposed protocol as follows. Theorem 1. The agreements reached by POANCD is Pareto-optimal.\nIn order to proof this theorem, we first need to proof the following proposition. Proposition 1. The initial agreements reached in the first phase of POANCD is weakly Pareto-optimal.\nProof. Assume first that an initial agreement o\u2217 on node \u03b7\u2217 that the agents reach in the first phase of POANCD is not weakly Pareto-optimal, then there exists another alternative o\u2032, such that for any agent i: o\u2032 i o\u2217. We assume \u03b7\u2032 is a leaf node whose path assignment is coincided with o\u2032. For any agent i, BPAi(\u03b7\u2032) i o\u2032 and thus BPAi(\u03b7\u2032) i o\u2217. Then both agents will make the proposals on \u03b7\u2032 or the nodes in the subtree of \u03b7\u2032 before they make proposals on \u03b7\u2217; and \u03b7\u2217 will not be an agreement node, contradicting the face that o\u2217 is an initial agreements from the first phase of negotiation.\nProof of Theorem 1. From Proposition 1 we know that the initial agreements the agents reach in the first phase of negotiation is weakly Pareto-optimal. In the second phase, the agents are acting cooperatively to reach Pareto-optimal agreements by replacing each inefficient initial agreement o\u2217 with a set of Paretooptimal alternatives \u03a6(o\u2217), such that every alternative o\u2032 \u2208 \u03a6(o\u2217) is indifferent or incomparable with o\u2217 for one agent i, and is more preferred than o\u2217 for the other agent j. Moreover, after an agent i gives out the set \u0398i(o\u2217), if the other agent j would like to replace o\u2217 in I, the alternative he chooses from \u0398i(o\u2217) will be\nthe best one among \u0398i(o\u2217). Consequently, the final agreement reached by POANCD is Pareto-optimal."}, {"heading": "3.4 An illustration", "text": "Now, we demonstrate the execution of POANCD with an example. Assume two agents are negotiating over a set of three binary-valued attributes V = {A,B,C}. The negotiating agents\u2019 preferences are depicted in Figure 1. As all attributes are binary, the negotiation tree is a binary tree. In the first phase, firstly, an ordering over the attributes is randomly generated, e.g., we consider the ordering O = A > B > C following which the negotiation tree will be created. Each node \u03b7 in the negotiation tree associates with a proposal table, in which the first row displays the proposals that the agents make on that node: the left (resp. right) column depicts the proposal that agent 1 (resp. agent 2) makes; each proposal is marked with a number that depicts the number of the current iteration, i.e., a proposal marked by \"(p)\" (resp. \"<p>\"), is the proposal that agent 1 (resp. agent 2) makes in the pth iteration. For explanation purpose, we also attach the best possible agreements (BPA) of both agents at each node in the second row of the table: the left (resp. right) column depicts the BPA of that node of agent 1 (resp. agent 2). However, it is important to note that the information including the proposal that an agent makes and the BPA of a node of that agent is its private information and invisible for its opponent. Figure 2 shows the formation of the negotiation tree in the first phase of POANCD and Figure 3 provides an illustration of the ongoing changes occurs in each agent\u2019s fringe 5. For the purpose of explanation, we also provide both participating agents\u2019 preference orderings over the outcome space in Figure 4, which are induced from the corresponding agents\u2019 CP-nets in Figure 1. However, note that the agents do not need to reason about the preference relations over the entire outcome space during negotiation. They only need to answer a few dominance queries when adding new nodes into their fringes.\nInitially, a root node is created in the negotiation tree. Since the first attribute to be considered is A and D|A| = {a, a\u0304}, two children nodes \u03b71, \u03b72 from the branch a, a\u0304 are created in the negotiation tree. Each agent will create a fringe and add \u03b71 and \u03b72 into its fringe according to their preference orderings on the BPAs of \u03b71 and \u03b72. For instance, BPA1(\u03b71) = abc, BPA1(\u03b72) = a\u0304b\u0304c, because abc 1 a\u0304b\u0304c (see the preference ordering of agent 1 in Figure 4(a)), the order in agent 1\u2019s fringe is \u03b71\u03b72. Similarly, the order in agent 2\u2019s fringe is \u03b71\u03b72.\n5The nodes depicts in red colour are the new nodes created in that iteration.\nIn the 1st iteration, each agent will make a proposal on one of the leaf nodes in the negotiation tree. For instance, the first node \u03b71 in agent 1\u2019s fringe is pop out and agent 1 makes a proposal (1) at \u03b71 in the negotiation tree. Similarly, agent 2 also makes a proposal <1> on node \u03b71. \u03b71 is marked as open in this iteration and Q = {\u03b71}. Since the next attribute to be considered in the subtree of \u03b71 is B and D(B) = {b, b\u0304}. Two children nodes \u03b73, \u03b74 of \u03b71 from the branches b, b\u0304 respectively are created in the negotiation tree. Each agent adds these two nodes into its own fringe according to its preference. For instance, BPA1(\u03b72) = a\u0304b\u0304c, BPA1(\u03b73) = abc, BPA1(\u03b74) = ab\u0304c, and because abc 1 ab\u0304c 1 a\u0304b\u0304c, the fringe of agent 1 is \u03b73\u03b74\u03b72 (Figure 3(a)); similarly the fringe of agent 2 is \u03b74\u03b72\u03b73 (Figure 3(b)). In the 2nd iteration, agent 1 makes a proposal (2) on node \u03b73 and agent 2 makes a proposal <2> on \u03b74. In this iteration, there is no open node (Q = \u2205); agent 1\u2019s fringe is \u03b74\u03b72 and agent 2\u2019s fringe is \u03b72\u03b73. In the 3rd iteration, agent 1 continues to make a proposal (3) on \u03b74 (i.e., the first node in its fringe) and agent 2 makes a proposal <3> on node \u03b72. There is one node marked as open in the current negotiation tree: Q = {\u03b74}, thus we created two children nodes \u03b75, \u03b76 of \u03b74 from the branches assign c and c\u0304 to the next attribute C respectively. Both agents add these two nodes into their fringes for consideration according to their preferences over the BPAs of the nodes: agent 1\u2019s fringe becomes \u03b75\u03b72\u03b76 and agent 2\u2019s fringe becomes \u03b76\u03b75\u03b73. In the 4th iteration, agent 1 makes a proposal (4) on \u03b75 and agent 2 makes a proposal <4> on node \u03b76. No node is marked as open in this iteration of negotiation; agent 1\u2019s fringe is \u03b72\u03b76 and agent 2\u2019s fringe is \u03b75\u03b73. Finally, in the last iteration (the 5th iteration), agent 1 makes a proposal (5) on node \u03b72 and agent 2 makes a proposal <5> on node \u03b75. As such, in this iteration, there are two nodes marked as open: Q = {\u03b72, \u03b75}.\nMoreover, since \u03b75 is an agreement node (i.e., it is at depth 3), Step 2 ends and we proceed to Step 3 of the first phase.\nAs A = {\u03b75} and A , Q, Q contains one agreement node \u03b75 (the path from the root to \u03b75 specifies a complete assignment ab\u0304c); and one open node \u03b72 (the path from the root to \u03b72 specifies a partial assignment a\u0304). Since agent 1 is the proposer of node \u03b72 in the last iteration, it gives out its BPA of \u03b72: BPA1(\u03b72) = a\u0304b\u0304c. For agent 2, as a\u0304b\u0304c 2 ab\u0304c (see the preference ordering of agent 2 in Figure 4(b)), agent 2 will include a\u0304b\u0304c in the set of initial agreements. Consequently, the first phase ends and we proceed to the second phase of POANCD with the set of initial agreements I = {ab\u0304c, a\u0304b\u0304c}.\nOriginally, F = {ab\u0304c, a\u0304b\u0304c}. For the initial agreement ab\u0304c, originally \u03a6(ab\u0304c) = \u2205. For agent 1, there is only one leaf node \u03b76 that he has not yet made a proposal on (\u21261 = {\u03b76}) and BPA1(\u03b76) = ab\u0304c\u0304. Since ab\u0304c 1 ab\u0304c\u0304, there is no node in \u21261 whose BPA is indifference or incomparable with ab\u0304c for agent 1, \u03931(ab\u0304c) = \u2205 and thus \u03981(ab\u0304c) = \u2205. Similarly, for agent 2 whose CP-net induced a strict total preference ordering over the outcome space (see Figure 4(b)), the BPAs of the leaf nodes that he has not yet made proposals on are less preferred than the current agreement ab\u0304c. Hence, \u03932(ab\u0304c) = \u2205 and \u03982(ab\u0304c) = \u2205. Consequently, \u03a6(ab\u0304c) = \u2205 and ab\u0304c will not be replaced. Similarly, for another initial agreement a\u0304b\u0304c, \u03a6(a\u0304b\u0304c) = \u2205 and a\u0304b\u0304c will not be replaced. Consequently, both initial agreements ab\u0304c and a\u0304b\u0304c are Pareto-optimal and we obtain the set of\nfinal agreements F = {ab\u0304c, a\u0304b\u0304c}. As F contains more than one element, we randomly select one of them as the final agreement and the negotiation process ends."}, {"heading": "4 Experiment", "text": "We now describe the results of experiments that show the feasibility and computational efficiency of our proposed POANCD protocol to bilateral negotiation in combinatorial domains with respect to (i) the number of attributes sattr and domain size sds that can be efficiently handled in practice; (ii) the corresponding outcome space sos and the average number of different outcomes (alternatives) sout that each agent needs to consider during the entire negotiation process; (iii) the average number of dominance queries (outcome comparisons) sdq that each agent needs to answer during the entire negotiation process; (iv) the average number of iterations siter that the first phase of the negotiation process involves; and (v) the average execution time stime of the entire negotiation process.\nIn these experiments, we use CP-nets for representing the agents\u2019 preferences in negotiation. We consider a simple CP-net structure, i.e., directed-path singly connected CP-nets; and we restrict the maximum indegree of each node in the generated CP-nets to 5. We generate random preference networks by varying the number of attributes, the structure of the network and the preferences for the attributes. In the negotiation process, we use the individual outcome optimization technique in CP-nets introduced in [1] and the heuristic approach to answer dominance query in CP-nets introduced by Li et al. [6].\nWe first conduct the experiments for binary-valued CP-nets, in which the number of attributes sattr is varying from 2 to 100 and for each number of attributes we run 1000 rounds of experiments by randomly generating two negotiating agents\u2019 preferences. Table 1 shows the experimental result in binary CPnets. The average number of outcomes sout that each agent needs to consider, the average number of dominance queries sdq, the average number of iterations siter and the average execution time stime are increasing as the number of attributes increases. However, we can observe that the proposed negotiation protocol POANCD can efficiently handle large number of attributes in negotiation with binary CP-nets. Compared to the huge outcome space, by using the proposed protocol POANCD, the average number of alternatives sout that each agent needs to consider is significantly reduced (comparing the second and third column of Table 1). When the number of attributes is large (e.g., 100), on average, the number of dominance queries sdq that each agent needs to answer during the entire negotiation process is less than 420 and the first\nphase of negotiation finishes in less than 170 rounds. Moreover, according to the experiment data, when the number of attributes is 100, on average, the entire negotiation process ends in about 30 seconds.\nWe extend the experiment for multi-value CP-nets (see Table 2). For multi-valued CP-nets, we restrict the maximum domain size to 5. We vary the number of attributes sattr from 2 to 25 and for each number of attributes we run 500 rounds of experiments. Similar to the scenario with binary-valued CP-nets, sout, sdq, siter and stime are increasing as the number of attributes increases. However, although with 25 attributes (in which case the maximum domain size is 525), on average, each agent only needs to consider less than 40 alternatives and answer less than 300 dominance queries during the whole negotiation process; the first phase of POANCD finishes in about 50 iterations. Moreover, according to the experimental data, on average the entire negotiation process ends in about 300 seconds with 25 attributes. Note that in multivalue CP-nets, answering dominance queries is much more complex than that in binary-valued CP-nets.\nFrom the experiment, we can conclude that our proposed POANCD protocol is computationally efficient. It allows preferences structures that are quite large and complex to be executed in reasonable time."}, {"heading": "5 Conclusion and Future Work", "text": "In this paper, we propose an efficient distributed negotiation protocol, POANCD, for negotiation in combinatorial domains when the agents do not know the preferences of each other and they do not want to reveal their preferences for the possible alternatives during the process of negotiation. We have theoretically shown that POANCD leads rational agents to Pareto-optimal agree-\nments. We have also experimentally shown the significant reduction of search efforts and the number of dominance queries each participating agent needs to answer by using the proposed protocol.\nA major advantage of POANCD is its extensibility to multilateral negotiation. We have presented POANCD for bilateral negotiation, but extension to multilateral negotiation can be done with minor modifications.\nHowever, the negotiation scenarios with cyclic or inconsistent preferences need to be further explored, because there may be more than one best possible agreement (BPA) of a node in a negotiation tree. Moreover, the fairness issue of the negotiated outcome using the proposed protocol is also an important aspect of future research."}, {"heading": "Acknowledgements", "text": "This work is partially supported by the ARC Discovery Grant DP110103671."}], "references": [{"title": "CP-nets: A tool for representing and reasoning with conditional ceteris paribus preference statements", "author": ["C. Boutilier", "R.I. Brafman", "H.H. Hoos", "D. Poole"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2003}, {"title": "The Win-Win Solution: Guaranteeing Fair Shares to Everybody", "author": ["S.J. Brams", "A.D. Taylor"], "venue": null, "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2000}, {"title": "Raiffa. Decisions with Multiple Objectives: Preferences and Value Tradeoffs. Wiley series in probability and mathematical statistics", "author": ["H.R.L. Keeney"], "venue": null, "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1976}, {"title": "Strategic Negotiation in Multiagent Environments", "author": ["S. Kraus"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2001}, {"title": "Sequential composition of voting rules in multi-issue domains", "author": ["J. Lang", "L. Xia"], "venue": "Mathematical Social Sciences,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2009}, {"title": "Efficient heuristic approach to dominance testing in CP-nets", "author": ["M. Li", "Q.B. Vo", "R. Kowalczyk"], "venue": "In AA- MAS,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2011}, {"title": "Voting and collective choice; some aspects of the theory of group decision-making", "author": ["P.K. Pattanaik"], "venue": null, "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1971}, {"title": "Rules of encounter: designing conventions for automated negotiation among computers", "author": ["J.S. Rosenschein", "G. Zlotkin"], "venue": null, "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1994}, {"title": "An effcient protocol for negotiation over multiple indivisible resources", "author": ["S. Saha", "S. Sen"], "venue": "IJCAI", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2007}, {"title": "Voting on multiattribute domains with cyclic preferential dependencies", "author": ["L. Xia", "V. Conitzer", "J. Lang"], "venue": "In AAAI,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2008}], "referenceMentions": [{"referenceID": 3, "context": "Multi-issue negotiation is one of the most preferred approaches for resolving conflicts in agent society [4].", "startOffset": 105, "endOffset": 108}, {"referenceID": 3, "context": "[4, 9].", "startOffset": 0, "endOffset": 6}, {"referenceID": 8, "context": "[4, 9].", "startOffset": 0, "endOffset": 6}, {"referenceID": 6, "context": "By optimal or efficient agreement, we refer to an agreement which is Pareto-optimal (or Pareto-efficient) [7].", "startOffset": 106, "endOffset": 109}, {"referenceID": 7, "context": "When the negotiating agents know about the preferences of each other, they can reach an efficient agreement using distributed protocols like one-step monotonic concession protocol or monotonic concession protocol [8], where each agent searches the entire space of possible agreements.", "startOffset": 213, "endOffset": 216}, {"referenceID": 4, "context": "voting theory and preference aggregation (for instance, [5], [7], [10] etc.", "startOffset": 56, "endOffset": 59}, {"referenceID": 6, "context": "voting theory and preference aggregation (for instance, [5], [7], [10] etc.", "startOffset": 61, "endOffset": 64}, {"referenceID": 9, "context": "voting theory and preference aggregation (for instance, [5], [7], [10] etc.", "startOffset": 66, "endOffset": 70}, {"referenceID": 1, "context": "ble resources in incomplete information scenarios have been proposed by Brams and Taylor [2].", "startOffset": 89, "endOffset": 92}, {"referenceID": 8, "context": "However, in the situations of multiple interdependent or correlated issues, these existing protocols can produce very inefficient agreements in negotiation[9].", "startOffset": 155, "endOffset": 158}, {"referenceID": 0, "context": "based on conditional preferences, for instance CP-nets [1] and its variants, which consist of a structural part that expresses the links between variables, and a \u201ctable\u201d part containing the local preferences; or it can be based on propositional logic (or possibly a fragment of", "startOffset": 55, "endOffset": 58}, {"referenceID": 2, "context": "In decision-making theory, the standard way to model the decision maker\u2019s preference is with his preference relations, also called a binary relation [3].", "startOffset": 149, "endOffset": 152}, {"referenceID": 0, "context": "A CP-net N [1] over a set of domain attribute V = {X1, .", "startOffset": 11, "endOffset": 14}, {"referenceID": 0, "context": "path from the root node to the current node being fixed) [1].", "startOffset": 57, "endOffset": 60}, {"referenceID": 8, "context": "The objective of an efficient protocol is to lead rational agents to efficient agreements [9].", "startOffset": 90, "endOffset": 93}, {"referenceID": 0, "context": "mization technique in CP-nets introduced in [1] and the heuristic approach to answer dominance query in CP-nets introduced by Li et al.", "startOffset": 44, "endOffset": 47}, {"referenceID": 5, "context": "[6].", "startOffset": 0, "endOffset": 3}], "year": 2011, "abstractText": "We study the problem of agent-based negotiation in combinatorial domains. It is difficult to reach optimal agreements in bilateral or multi-lateral negotiations when the agents\u2019 preferences for the possible alternatives are not common knowledge. Selfinterested agents often end up negotiating inefficient agreements in such situations. In this paper, we present a protocol for negotiation in combinatorial domains which can lead rational agents to reach optimal agreements under incomplete information setting. Our proposed protocol enables the negotiating agents to identify efficient solutions using distributed search that visits only a small subspace of the whole outcome space. Moreover, the proposed protocol is sufficiently general that it is applicable to most preference representation models in combinatorial domains. We also present results of experiments that demonstrate the feasibility and computational efficiency of our approach.", "creator": "TeX"}}}