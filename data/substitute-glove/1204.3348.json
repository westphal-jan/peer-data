{"id": "1204.3348", "review": {"conference": "AAAI", "VERSION": "v1", "DATE_OF_SUBMISSION": "16-Apr-2012", "title": "Symmetry Breaking Constraints: Recent Results", "abstract": "Symmetry and 's important problem began throughout typology problems. One just there dealing, symmetry is to add constraints more eliminate formula_14 solutions. We geological recent unlikely into how hills, focusing especially on two common part purely than: hyperbolic back aspects brought _ in editor multiplicity, and formula_5 breaking certain of eliminating value symmetry", "histories": [["v1", "Mon, 16 Apr 2012 02:56:16 GMT  (25kb)", "http://arxiv.org/abs/1204.3348v1", "To appear in Proceedings of Twenty-Sixth Conference on Artificial Intelligence (AAAI-12)"]], "COMMENTS": "To appear in Proceedings of Twenty-Sixth Conference on Artificial Intelligence (AAAI-12)", "reviews": [], "SUBJECTS": "cs.AI cs.CC", "authors": ["toby walsh"], "accepted": true, "id": "1204.3348"}, "pdf": {"name": "1204.3348.pdf", "metadata": {"source": "CRF", "title": "Symmetry Breaking Constraints: Recent Results", "authors": ["Toby Walsh"], "emails": ["toby.walsh@nicta.com.au"], "sections": [{"heading": null, "text": "ar X\niv :1\n20 4.\n33 48\nv1 [\ncs .A\nI] 1\n6 A\npr 2\n01 2"}, {"heading": "Introduction", "text": "Symmetry occurs in many constraint satisfaction and optimisation problems (Gent, Petrie, and Puget 2006). For example, suppose we have a proper coloring of a graph, and we permute the colors then we will obtain another symmetric coloring. Symmetries are problematic as they increase the size of the search space. We will waste time visiting symmetric solutions. Worse still, we will waste even more time visiting the (many failing) parts of the search tree which are symmetric to already visited states. A common and effective method to deal with symmetry is to add constraints which eliminate some, but not all symmetric solutions (e.g. (Puget 1993; Crawford et al. 1996; Shlyakhter 2001; Aloul, Sakallah, and Markov 2003; Puget 2005c; Law and Lee 2006; Walsh 2006a)). In this paper, we survey recent results on symmetry breaking constraints. We hope that this survey is of wider interest as many of the results are likely to translate to other domains like planning, model checking and heuristic search.\nSymmetry breaking constraints have a number of good and bad properties. On the positive side, a few simple constraints can often eliminate most if not all symmetry in a problem quickly and easily. In addition, propagation between the problem and the symmetry breaking constraints can reduce search considerably. On the negative side, we pick out particular solutions in each symmetry class, and this may conflict with the direction of the\n\u2217Toby Walsh is supported by the Australian Government\u2019s Department of Broadband, Communications and the Digital Economy, the ARC and the Asian Office of Aerospace Research and Development through grant AOARD-104123 and 124056. This paper was invited as a \u201dWhat\u2019s Hot\u201d paper to the AAAI\u201912 Sub-Area Spotlights track. Copyright c\u00a9 2012, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved.\nbranching heuristic. An alternative to posting static symmetry breaking constraints is a more dynamic approach that modifies the search method to ignore symmetric states (Backofen and Will 1999; Gent and Smith 2000; Fahle, Schamberger, and Sellmann 2001; Sellmann and Hentenryck 2005; Puget 2006). The advantage of a dynamic method is that it can reduce the conflict with the branching heuristic. However, we may also get less propagation. The results reported here on static symmetry breaking constraints typically have implications for dynamic methods as most dynamic methods are equivalent to adding static symmetry breaking constraints \u201con the fly\u201d.\nThere are several aspects of symmetry breaking that this survey does not cover. We do not discuss methods to identify symmetry in a problem. See, for instance, (Puget 2005a; Mears et al. 2008). We suppose that the symmetries are known in advance as they often are, and our challenge is merely to deal with them. The survey also does not cover other active area of research like the intersection of symmetry reasoning and nogood learning. See, for instance, (Benhamou et al. 2010; Chu et al. 2011). For background material on constraint satisfaction in general, see a text like (Rossi, van Beek, and Walsh 2006)."}, {"heading": "An Example", "text": "We consider a combinatorial problem studied in several earlier works on symmetry breaking.\nRunning example: The Equidistant Frequency Permutation Array (EFPA) problem (Huczynska et al. 2009) is a challenging problem in coding theory. The goal is to find a set of v code words, each of length q\u03bb such that each word contains \u03bb copies of the symbols 1 to q, and each pair of code words is Hamming distance d apart. For example, for v = 4, \u03bb = 2, q = 3, d = 4, one solution is:\n0 2 1 2 0 1 0 2 2 1 1 0 0 1 0 2 1 2 0 0 1 1 2 2\n(a)\nThis problem has applications in communication theory, and is related to other combinatorial problems like finding orthogonal Latin squares. We can model this problem by a v by q\u03bb array of decision variables with domains 1 to q.\nA symmetry of such a problem is a bijection \u03c3 that maps solutions onto solutions (Cohen et al. 2006). We consider two special classes of symmetries: variable symmetries which act just on variables, and value symmetries which act just on values. Both types of symmetry can be found in our model of the EFPA problem.\nRunning example: This model of the EFPA problem has variable symmetry since we can permute the variables in any two rows, or in any two columns and still have a solution. For example, we can swap the first column with the third without changing the frequency of symbols in each row or the Hamming distance between any two rows:\n1 2 0 2 0 1 2 2 0 1 1 0 0 1 0 2 1 2 1 0 0 1 2 2\n(b)\nThe model also has value symmetry since we can interchange values throughout any solution. For example, the value symmetry \u03b8 swaps the value 0 with 2 throughout solution (a), again without changing the frequency of symbols in each row or the Hamming distance between any two rows:\n2 0 1 0 2 1 2 0 0 1 1 2 2 1 2 0 1 0 2 2 1 1 0 0\n(c)"}, {"heading": "Symmetry Breaking Constraints", "text": "A simple but effective method to deal with symmetry is to add constraints which eliminate some (but not all) symmetric solutions in each symmetry class.\nRunning example: To eliminate the value symmetry in the EFPA problem, we can add a PRECEDENCE constraint (Law and Lee 2004) to ensure that the values in the bottom row occur in order. That is, the value 0 first occurs on the bottom row before 1, and 1 first occurs before 2. The bottom row of solution (a) is 001122 which satisfies this symmetry breaking constraint. The value 0 first occurs in the first position, the value 1 later on in the third position, and the value 2 even later on in the fifth position. Suppose we swap 0 with 2, then the bottom row of solution (a) becomes 221100, the bottom row of (c). This violates the PRECEDENCE symmetry breaking constraint. The value 1 first occurs in the third position, which is before the first occurrence of the value 0 in the fifth position. Hence, by posting this symmetry breaking constraint, we only find solution (a), and the symmetric solution (c) is eliminated.\nTwo important properties of symmetry breaking constraints are soundness and completeness. A set of symmetry breaking constraints is sound iff it leaves at least one solution in each symmetry class, and complete iff it leaves at most one solution in each symmetry class. The PRECEDENCE constraint is, for example, sound and complete. Where do symmetry breaking constraints like this come from in general? The Lex-Leader method offers a generic method for deriving a sound and complete set of symmetry breaking constraints for variable symmetries\n(Crawford et al. 1996) and value symmetries (Walsh 2007). The method picks out the lexicographically smallest solution in each symmetry class. For every symmetry \u03c3, it posts a lexicographical ordering constraint:\n\u3008X1, . . . , Xn\u3009 \u2264lex \u03c3(\u3008X1, . . . , Xn\u3009)\nWhere X1 to Xn is some fixed ordering on the variables in the problem.\nRunning example: Consider again the value symmetry, \u03b8 that swaps 0 and 2. We can describe this by the mapping \u03b8(X) = 2\u2212X . The Lex-Leader method eliminates this symmetry with the ordering constraint:\n\u3008X1, . . . , X24\u3009 \u2264lex \u30082 \u2212X1, . . . , 2\u2212X24\u3009\nWhere X1 to X24 is some ordering of the 24 decision variables modelling our 4 by 6 instance of the EFPA problem. This simplifies to:\n\u3008X1, . . . , X24\u3009 \u2264lex \u30081, . . . , 1\u3009\nSuppose we order the variables in the matrix row-wise from top left to bottom right. Then this constraint would accept solution (a), but eliminate solutions (b) and (c).\nMany static symmetry breaking constraints can be derived from such Lex-Leader constraints. For example, PRECEDENCE constraints to break the symmetry due to interchangeable values can be derived from them (Walsh 2006b). Efficient algorithms have been developed to propagate lexicographical ordering constraints (Frisch et al. 2002; Frisch et al. 2006; Katsirelos, Narodytska, and Walsh 2009; Bessiere et al. 2011)."}, {"heading": "Symmetries of Symmetry Breaking Constraints", "text": "One way of constructing new symmetry breaking constraints is to use symmetry itself (Katsirelos and Walsh 2010). Any symmetry acting on a set of symmetry breaking constraints will itself break the symmetry in a problem. This requires us to define the action of a symmetry on a set of symmetry breaking constraints. We defined symmetry as acting on assignments, mapping solutions to solutions. We can lift this definition to constraints. For example, the action of a variable symmetry on a constraint changes the scope of the constraint (that is, the variables on which the constraint acts).\nTheorem 1 ((Katsirelos and Walsh 2010)) Given a set of symmetries \u03a3 of C, if S is a sound (complete) set of symmetry breaking constraints for \u03a3 then \u03c3(S) for any \u03c3 \u2208 \u03a3 is also a sound (complete) set of symmetry breaking constraints for \u03a3.\nDifferent symmetries pick out different solutions in each symmetry class. In fact, if we have a particular solution in mind, we can pick it out using a suitable symmetry of a set of symmetry breaking constraints. Let sol(C) be the set of solutions of a set of constraints C.\nTheorem 2 ((Katsirelos and Walsh 2010)) Given a set of symmetries \u03a3 of a set of constraints C, a sound set S of symmetry breaking constraints, and any solution A of C, then there is a symmetry \u03c3 \u2208 \u03a3 such that A \u2208 sol(C \u222a \u03c3(S)).\nApplying symmetry to a set of symmetry breaking constraints does not change the symmetries which are eliminated. We say that a set of constraints S breaks a symmetry \u03c3 of a problem C iff there exists a solution A of C \u222a S such that \u03c3(A) is not a solution of C \u222a S, and completely breaks a symmetry \u03c3 iff for each solution A of C \u222a S, \u03c3(A) is not a solution of C \u222aS. Given a symmetry group \u03a3, we say that a set of constraints (completely) breaks \u03a3 iff it breaks every non-identity symmetry in \u03a3.\nTheorem 3 ((Katsirelos and Walsh 2010)) Given a problem C and a symmetry group \u03a3, if S (completely) breaks \u03a3 then \u03c3(S) (completely) breaks \u03a3 for any \u03c3 \u2208 \u03a3.\nWe have used these ideas as the theoretical basis for a hybrid symmetry breaking method that tries to have the best of both worlds, posting static symmetry breaking constraints dynamically during search according to the direction of the branching heuristic (Katsirelos and Walsh 2010)."}, {"heading": "Intractability of Breaking Symmetry", "text": "The symmetry groups seen in practice can be very large. As a result, symmetry breaking can be computationally challenging. For example, if we have a q interchangeable values (as in our EFPA model), then we have q! symmetries. To eliminate each of these symmetries requires a separate Lex-Leader constraint. As a consequence, the Lex-Leader method is not tractable in general. An alternative is to break symmetry partially by posting just a subset of the LexLeader constraints (e.g. (Jefferson and Petrie 2011)).\nCrawford et al. (1996) proved that breaking symmetry completely by adding constraints to eliminate symmetric solutions is computationally intractable in general. More specifically, they prove that, given a matrix model with row and column symmetries, deciding if an assignment is the smallest in its symmetry class is NP-hard where we append rows together and compare them lexicographically. There is, however, nothing special about appending rows together or comparing assignments lexicographically. We could break symmetry with any total ordering over assignments.\nRecently we have shown that, under modest assumptions, breaking symmetry remains intractable if we use a different ordering of variables, or even a different ordering over solutions than the lexicographical ordering. More precisely, we show that the problem is NP-hard for any simple ordering where, given an assignment, we can compute the position in the ordering in polynomial time and, in the reverse, given a position in the ordering, we can compute the associated assignment in polynomial time.\nTheorem 4 ((Walsh 2011)) Given any simple ordering, there exists a symmetry group such that deciding if an assignment is smallest in its symmetry class according to this ordering is NP-hard.\nSince breaking symmetry appears intractable in general, a major research direction is to identify special cases which occur in practice where the symmetry group is more tractable to break. We consider two such cases: row and column symmetry, and value symmetry."}, {"heading": "Row and Column Symmetry", "text": "A matrix of decision variables has row symmetry iff given a solution, any permutation of the rows is also a solution. Similarly, it has column symmetry iff given a solution, any permutation of the columns is also a solution. For example, our model of the EFPA problem has both row and column symmetry. Row and column symmetry occurs in many models with matrices of decision variables (Flener et al. 2001a; Flener et al. 2001b; Flener et al. 2002). We can break row and and column symmetry using the Lex-Leader method. However, this is not practical in general. A n by m matrix has n!m! row and column symmetries, and each symmetry would require a separate lexicographical ordering constraint.\nTo break all row symmetry, we can post a linear number of constraints that lexicographically order the rows. Similarly, to break all column symmetry we can post a linear number of constraints that lexicographically order the columns. When we have both row and column symmetry, we can post a DOUBLELEX constraint that lexicographical orders both the rows and columns (Flener et al. 2002). In fact, DOUBLELEX constraints can be derived from a subset of the constraints introduced by the Lex-Leader method (Flener et al. 2001a). As a result, DOUBLELEX does not break all row and column symmetry. Nevertheless, it is often highly effective in practice.\nRunning example: Consider again solution (a). If we order the rows of (a) lexicographically, we get a solution in which rows and columns are ordered lexicographically:\n0 2 1 2 0 1 0 2 2 1 1 0 0 1 0 2 1 2 0 0 1 1 2 2 order \u21d2 rows 0 0 1 1 2 2 0 1 0 2 1 2 0 2 1 2 0 1 0 2 2 1 1 0 (d)\nSimilarly if we order the columns of (a) lexicographically, we get a different solution in which both rows and columns are again ordered lexicographically:\n0 2 1 2 0 1 0 2 2 1 1 0 0 1 0 2 1 2 0 0 1 1 2 2 order \u21d2 cols 0 0 1 1 2 2 0 1 0 2 1 2 0 1 2 0 2 1 0 2 2 1 1 0 (e)\nAll three solutions are thus in the same row and column symmetry class. Note that both (d) and (e) satisfy the DOUBLELEX constraint. Therefore DOUBLELEX can leave multiple solutions in each symmetry class and is not a complete symmetry breaking method.\nIn fact, DOUBLELEX is a very incomplete method for breaking symmetry. It can leave n! symmetric solutions in an 2n by 2nmatrix model. In addition, it only partially provides tractability. Whilst it is polynomial to check a DOUBLELEX constraint given a complete assignment, it is not tractable to propagate it completely given a partial assignment. That is, pruning all symmetric values is NP-hard.\nTheorem 5 ((Katsirelos, Narodytska, and Walsh 2010)) Propagating the DOUBLELEX constraint is NP-hard.\nWe have identified three tractable cases where we can break all row and column symmetry in polynomial time (Katsirelos, Narodytska, and Walsh 2010): (1) a matrix with\na bounded number of rows (or columns); (2) a 0/1 matrix model where every row sum is 1; (3) an all-different matrix where all entries are different. The first two are perhaps the most interesting and useful cases. We have, for example, used the first case as the basis of a complete method for breaking row and column symmetry. We used this to measure how many symmetries are left by DOUBLELEX in practice. See Table 1 for some results that demonstrate DOUBLELEX actually leaves very few symmetric solutions in practice despite the worst case result that it can leave a factorial number of such solutions. More recently, Yip and Van Hentenryck (2011) have turned this theoretical result into a complete and efficient method for breaking all row and column symmetry in matrix models with a small number of rows (or columns). Another interesting research direction is to identify other constraints that can be effectively added to DOUBLELEX to increase the amount of row and column symmetry broken (Frisch, Jefferson, and Miguel 2003)."}, {"heading": "SnakeLex", "text": "An interesting alternative method for breaking row and column symmetry uses a lexicographical ordering which linearizes the matrix in a snake-like manner instead of rowwise. This method appends the first row to the reverse of the second row, and this is appended to the third row, and then the reverse of the fourth row, and so on. Breaking row and column symmetry with this ordering is intractable, as it is with the more conventional lexicographical ordering where matrices are ordered row-wise.\nTheorem 6 ((Narodytska and Walsh 2012)) Deciding if an assignment is smallest in the snake-lex ordering up to row and column permutation is NP-hard.\nThe SNAKELEX constraint, which is derived from the Lex-Leader method using such a snake-lex ordering, has been shown to a promising alternative to DOUBLELEX\n(Grayland, Miguel, and Roney-Dougal 2009). To break column symmetry, SNAKELEX ensures that the first column is lexicographically smaller than or equal to both the second and third columns, the reverse of the second column is lexicographically smaller than or equal to the reverse of both the third and fourth columns, and so on up till the penultimate column is compared to the final column. To break row symmetry, SNAKELEX ensures that each neighbouring pair of rows, X1,i, . . . , Xn,i and X1,i+1, . . . , Xn,i+1 satisfy the entwined lexicographical ordering:\n\u3008X1,i, X2,i+1, X3,i, X4,i+1, . . .\u3009 \u2264lex\n\u3008X1,i+1, X2,i, X3,i+1, X4,i, . . .\u3009\nDOUBLELEX breaks the subset of the row and column symmetries that swap neighbouring rows and columns. SNAKELEX, by comparison, breaks a strict superset of these symmetries. Not surprisingly, it is a little more expensive to propagate but this greater cost is often worthwhile in pruning search. Like DOUBLELEX, SNAKELEX is also an incomplete symmetry breaking method that can leave an exponential number of symmetric solutions (Katsirelos, Narodytska, and Walsh 2010)."}, {"heading": "Gray Code Ordering", "text": "Another interesting alternative method for breaking symmetry is to eliminate all but the smallest symmetric solution in some other ordering than the lexicographical ordering. For example, we have seen some promise in using the Gray code ordering (Narodytska and Walsh 2012). The Gray code ordering is a total ordering over assignments used in error correcting codes. The 4-bit Gray code orders assignments as follows:\n0000, 0001, 0011, 0010, 0110, 0111, 0101, 0100,\n1100, 1101, 1111, 1110, 1010, 1011, 1001, 1000\nSuch an ordering may pick out different solutions in each symmetry class. This can reduce the conflict between symmetry breaking, the problem constraints and the branching heuristic. The Gray code ordering has some properties that may make it useful for symmetry breaking. For example, neighbouring assignments in the ordering only differ at one position, and flipping one bit reverses the ordering of the subsequent bits. Note that there is no renaming of the variables and values that maps the ordering of solutions in the Gray code ordering onto that of the lexicographical ordering. Nevertheless, breaking row and column symmetry with this ordering over solutions remains intractable.\nTheorem 7 ((Narodytska and Walsh 2012)) Deciding if an assignment is smallest in the Gray code ordering up to row and column permutation is NP-hard.\nExperiments suggest some promise for symmetry breaking methods using the Gray code ordering (Narodytska and Walsh 2012). See Table 2 for some example results on a benchmark domain, the maximum density still life problem. This is prob032 in CSPLib (Gent and Walsh 1999). Given a n by n sub-matrix of the infinite plane, we want to find the maximum density pattern\nwhich does not change from generation to generation. This problem has the 8 symmetries of the square as we can rotate or reflect any still life to obtain a new one. We broke all symmetries in the problem with either the lexicographical or Gray code orderings, finding the smallest (lex, gray) or largest (anti-lex, anti-gray) solution in each symmetry class."}, {"heading": "Value Symmetry", "text": "A second important class of symmetries which are more tractable to break than symmetries in general are value symmetries. When a problem has many value symmetries, the Lex-Leader method again introduces too many symmetry breaking constraints to be practical. Puget has proposed an effective alternative that maps value symmetries into variables symmetries (Puget 2005b). His method channels into some auxiliary variables which, as in (Smith, Stergiou, and Walsh 2000), permit the (symmetry breaking) constraints to be easily specified. Zj records the first index using each value j with constraints of the form:\nXi = j \u21d2 Zj \u2264 i\nZj = i \u21d2 Xi = j\nPuget then breaks the variable symmetry on the Zj by posting binary ordering constraints. For example, if the values 1 to q are interchangeable, we can strictly order the Zj :\nZ1 < Z2 < Z3 < . . . < Zq\nThis ensures that the first occurrence of 1 is before that of 2, that of 2 is before 3, etc. This is the condition enforced by the PRECEDENCE constraint mentioned previously. Puget proved that we can break any number of value symmetries (and not just those due to interchangeable values) with a linear number of ordering constraints on the Zj . This means that we can break any number of value symmetries in polynomial time. Unfortunately, this decomposition into ordering constraints on Zj hinders propagation, and we may not prune all symmetric values. This is not surprising as pruning all symmetric values is intractable in general.\nTheorem 8 ((Walsh 2007)) Given a set of value symmetries and a partial assignment, pruning all symmetric values is NP-hard.\nWe have, however, identified a common case where pruning all symmetric values is tractable. If values partition into a fixed number of sets and values within each set are interchangeable then we can prune all symmetric values in polynomial time using a global REGULAR constraint (Pesant 2004) or\none of its decompositions (Quimper and Walsh 2006; Quimper and Walsh 2007). When there is a single set of interchangeable values, we can prune all symmetric values using a global PRECEDENCE constraint (Law and Lee 2004) or its decomposition (Walsh 2006b)."}, {"heading": "Combinations of Symmetries", "text": "Another important question is how we deal with with combinations of symmetries. We have already seen that we can take a symmetry group that is tractable to break completely (row symmetry), combine it with another symmetry group that is tractable to break completely (column symmetry), and end up with a symmetry group (row and column symmetry) that is intractable to break and where we lack good methods to eliminate all symmetric solutions in general.\nAnother challenging combination is when we have both variable and value symmetries. How do we break both types of symmetry simultaneously? We can use the Lex-Leader method but this is not practical when we have many variable and value symmetries. Unfortunately, Puget\u2019s method for breaking value symmetry on the Zj variables is not compatible in general with breaking variable symmetry via the Lex-Leader method on the Xi variables. This corrects Theorem 6 and Corollary 7 in (Puget 2005b) which claim that the two methods are compatible if we use the same ordering of variables in each method.\nTheorem 9 ((Katsirelos, Narodytska, and Walsh 2010)) There exist problems on which posting lex-leader constraints to break variable symmetries and applying Puget\u2019s method to break value symmetries remove all solutions in a symmetry class irrespective of the orderings on variables used by both methods.\nThere is, however, an important and common case where the two methods for breaking variable and value symmetry are compatible. If values partition into interchangeable sets then it is always consistent to post symmetry breaking constraints using both methods provided we index their variables identically in both cases (Sellmann and Hentenryck 2005; Flener et al. 2006; Law et al. 2007). This is again a case where tractability is limited as pruning all symmetric values is NP-hard."}, {"heading": "Open Problems", "text": "A number of important and challenging questions about symmetry breaking constraints remain including:\nIdentifying tractable cases: Are there other common types of symmetry which occur in practice that are polynomial to break? For instance, suppose we are coloring the edges of a graph, and we have a clique of interchangeable vertices. This induces a particular symmetry on the decision variables representing the colors of the different edges in the graph. How do we efficiently break this large symmetry group?\nExploring other orderings: Are there other orderings besides the lexicographical ordering with which we can break symmetry effectively? We have seen some\npromise for the Gray code ordering. There are, however, many other orderings we could consider. For example, Frisch et al. have proposed the multiset ordering (Frisch et al. 2003). Even though this is only a partial ordering, it has also shown some promise. In addition, can we use a different ordering in each symmetry class?\nReducing branching conflict: One of the major issues with symmetry breaking constraints is that they may conflict with the direction of the branching heuristic. How can we retain the benefits of static symmetry breaking constraints and of dynamic branching heuristics, whilst avoiding such conflict? How do we get the best of static and dynamic symmetry breaking methods? How do we choose static symmetry breaking constraints that align with a dynamic branching heuristic?\nStudying combinations of symmetries: How do we eliminate combinations of symmetries effectively? There are issues of both soundness (which symmetry breaking constraints can be combined together safely?), completeness (how we do eliminate all combinations of symmetry?) and tractability (which symmetry groups that are tractable to break individually combine together to give a symmetry group which is also tractable to break?).\nDominance detection and elimination: in constraint optimisation problems, the notion of dominance plays a very similar role to symmetry. One (partial) solution dominates another if it is sure to be at least as good in quality. How do we identify dominating solutions? Is there a generic method like Lex-Leader for adding constraints that remove dominated solutions? What are interesting and useful tractable cases?"}], "references": [{"title": "Efficient symmetry breaking for Boolean satisfiability", "author": ["Sakallah Aloul", "F. Markov 2003] Aloul", "K. Sakallah", "I. Markov"], "venue": "In Proc. of 18th International Joint Conf. on AI,", "citeRegEx": "Aloul et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Aloul et al\\.", "year": 2003}, {"title": "Excluding symmetries in constraint-based search", "author": ["Backofen", "R. Will 1999] Backofen", "S. Will"], "venue": "Proc. of the 5th International Conf. on Principles and Practice of Constraint Programming,", "citeRegEx": "Backofen et al\\.,? \\Q1999\\E", "shortCiteRegEx": "Backofen et al\\.", "year": 1999}, {"title": "Enhancing clause learning by symmetry in sat solvers", "author": ["Benhamou"], "venue": "In Proc. of 22nd IEEE International Conf. on Tools with Artificial Intelligence (ICTAI 2010),", "citeRegEx": "Benhamou,? \\Q2010\\E", "shortCiteRegEx": "Benhamou", "year": 2010}, {"title": "The alldifferent constraint with precedences", "author": ["Bessiere"], "venue": "Proc. of 8th International Conf. on Integration of AI and OR Techniques", "citeRegEx": "Bessiere,? \\Q2011\\E", "shortCiteRegEx": "Bessiere", "year": 2011}, {"title": "Symmetries and lazy clause generation", "author": ["Chu"], "venue": null, "citeRegEx": "Chu,? \\Q2011\\E", "shortCiteRegEx": "Chu", "year": 2011}, {"title": "Symmetry definitions for constraint satisfaction problems", "author": ["Cohen"], "venue": null, "citeRegEx": "Cohen,? \\Q2006\\E", "shortCiteRegEx": "Cohen", "year": 2006}, {"title": "Symmetry breaking predicates for search problems", "author": ["Crawford"], "venue": "In Proc. of the 5th International Conf. on Knowledge Representation and Reasoning,", "citeRegEx": "Crawford,? \\Q1996\\E", "shortCiteRegEx": "Crawford", "year": 1996}, {"title": "Symmetry breaking", "author": ["Schamberger Fahle", "T. Sellmann 2001] Fahle", "S. Schamberger", "M. Sellmann"], "venue": "Proc. of 7th International Conf. on Principles and Practice of Constraint Programming", "citeRegEx": "Fahle et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Fahle et al\\.", "year": 2001}, {"title": "Symmetry in matrix models. Technical Report APES-30-2001, APES group. Presented at SymCon\u201901 (Symmetry in Constraints), CP2001 post-conference workshop", "author": ["Flener"], "venue": null, "citeRegEx": "Flener,? \\Q2001\\E", "shortCiteRegEx": "Flener", "year": 2001}, {"title": "Matrix modelling. Technical Report APES-36-2001, APES group. Presented at Formul\u201901 Workshop on Modelling and Problem Formulation, CP2001 post-conference workshop", "author": ["Flener"], "venue": null, "citeRegEx": "Flener,? \\Q2001\\E", "shortCiteRegEx": "Flener", "year": 2001}, {"title": "Breaking row and column symmetry in matrix models", "author": ["Flener"], "venue": "In 8th International Conf. on Principles and Practices of Constraint Programming", "citeRegEx": "Flener,? \\Q2002\\E", "shortCiteRegEx": "Flener", "year": 2002}, {"title": "Static and dynamic structural symmetry breaking", "author": ["Flener"], "venue": "In Proc. of 12th International Conf. on Principles and Practice of Constraint Programming", "citeRegEx": "Flener,? \\Q2006\\E", "shortCiteRegEx": "Flener", "year": 2006}, {"title": "Global constraints for lexicographic orderings", "author": ["Frisch"], "venue": "In 8th International Conf. on Principles and Practices of Constraint Programming", "citeRegEx": "Frisch,? \\Q2002\\E", "shortCiteRegEx": "Frisch", "year": 2002}, {"title": "Multiset ordering constraints", "author": ["Frisch"], "venue": "In Proc. of 18th International Joint Conf. on Artificial Intelligence (IJCAI-2003). IJCAI", "citeRegEx": "Frisch,? \\Q2003\\E", "shortCiteRegEx": "Frisch", "year": 2003}, {"title": "Propagation algorithms for lexicographic ordering constraints. Artificial Intelligence 170(10):803\u2013908", "author": ["Frisch"], "venue": null, "citeRegEx": "Frisch,? \\Q2006\\E", "shortCiteRegEx": "Frisch", "year": 2006}, {"title": "Constraints for breaking more row and column symmetries", "author": ["Jefferson Frisch", "A. Miguel 2003] Frisch", "C. Jefferson", "I. Miguel"], "venue": "Proc. of 9th International Conf. on Principles and Practice of Constraint Programming", "citeRegEx": "Frisch et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Frisch et al\\.", "year": 2003}, {"title": "Symmetry breaking in constraint programming", "author": ["Gent", "I. Smith 2000] Gent", "B. Smith"], "venue": "Proc. of ECAI-2000,", "citeRegEx": "Gent et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Gent et al\\.", "year": 2000}, {"title": "CSPLib: a benchmark library for constraints", "author": ["Gent", "I. Walsh 1999] Gent", "T. Walsh"], "venue": "Technical report, Technical report APES-09-1999. A shorter version appears in Proc. of the 5th International Conf. on Principles and Practices of Constraint Programming (CP-99)", "citeRegEx": "Gent et al\\.,? \\Q1999\\E", "shortCiteRegEx": "Gent et al\\.", "year": 1999}, {"title": "Symmetry in constraint programming", "author": ["Petrie Gent", "I. Puget 2006] Gent", "K. Petrie", "J.-F. Puget"], "venue": "In Handbook for Constraint Programming. Elsevier", "citeRegEx": "Gent et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Gent et al\\.", "year": 2006}, {"title": "Snake lex: An alternative to double lex", "author": ["Miguel Grayland", "A. Roney-Dougal 2009] Grayland", "I. Miguel", "C. Roney-Dougal"], "venue": "Proc. of 15th International Conf. on Principles and Practice of Constraint Programming,", "citeRegEx": "Grayland et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Grayland et al\\.", "year": 2009}, {"title": "Modelling equidistant frequency permutation arrays: An application of constraints to mathematics", "author": ["Huczynska"], "venue": "Proc. of 15th International Conf. on Principles and Practice of Constraint Program-", "citeRegEx": "Huczynska,? \\Q2009\\E", "shortCiteRegEx": "Huczynska", "year": 2009}, {"title": "Automatic generation of constraints for partial symmetry breaking", "author": ["Jefferson", "C. Petrie 2011] Jefferson", "K. Petrie"], "venue": "Proc. of 17th International Conf. on Principles and Practice of Constraint Programming (CP", "citeRegEx": "Jefferson et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Jefferson et al\\.", "year": 2011}, {"title": "Symmetries of symmetry breaking constraints", "author": ["Katsirelos", "G. Walsh 2010] Katsirelos", "T. Walsh"], "venue": "In Proc. of the 19th European Conf. on Artificial Intelligence", "citeRegEx": "Katsirelos et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Katsirelos et al\\.", "year": 2010}, {"title": "Combining symmetry breaking and global constraints", "author": ["Narodytska Katsirelos", "G. Walsh 2009] Katsirelos", "N. Narodytska", "T. Walsh"], "venue": "Recent Advances in Constraints,", "citeRegEx": "Katsirelos et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Katsirelos et al\\.", "year": 2009}, {"title": "On the complexity and completeness of static constraints for breaking row and column symmetry", "author": ["Narodytska Katsirelos", "G. Walsh 2010] Katsirelos", "N. Narodytska", "T. Walsh"], "venue": "Proc. of the 16th International Conf. on the Principles and Practice", "citeRegEx": "Katsirelos et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Katsirelos et al\\.", "year": 2010}, {"title": "Global constraints for integer and set value precedence", "author": ["Law", "Y. Lee 2004] Law", "J. Lee"], "venue": "In Proc. of 10th International Conf. on Principles and Practice of Constraint Programming", "citeRegEx": "Law et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Law et al\\.", "year": 2004}, {"title": "Symmetry Breaking Constraints for Value Symmetries in Constraint Satisfaction", "author": ["Law", "Y. Lee 2006] Law", "J. Lee"], "venue": null, "citeRegEx": "Law et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Law et al\\.", "year": 2006}, {"title": "Breaking symmetry of interchangeable variables and values", "author": ["Law"], "venue": "In 13th International Conf. on Principles and Practices of Constraint Programming", "citeRegEx": "Law,? \\Q2007\\E", "shortCiteRegEx": "Law", "year": 2007}, {"title": "A novel approach for detecting symmetries in CSP models", "author": ["Mears"], "venue": null, "citeRegEx": "Mears,? \\Q2008\\E", "shortCiteRegEx": "Mears", "year": 2008}, {"title": "Beyond lex leader: Breaking symmetry with other orderings", "author": ["Narodytska", "N. Walsh 2012] Narodytska", "T. Walsh"], "venue": "Under review for Proc. of the 18th International Conf. on the Principles and Practice of Constraint Programming (CP", "citeRegEx": "Narodytska et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Narodytska et al\\.", "year": 2012}, {"title": "Automatic detection of variable and value symmetries", "author": ["Puget", "J.-F"], "venue": "Proc. of 11th International Conf. on Principles and Practice of Constraint Programming (CP", "citeRegEx": "Puget and J..F.,? \\Q2005\\E", "shortCiteRegEx": "Puget and J..F.", "year": 2005}, {"title": "Breaking symmetries in all different problems", "author": ["Puget 2005c] Puget", "J.-F"], "venue": "In Proc. of 19th International Joint Conf. on AI,", "citeRegEx": "Puget and J..F.,? \\Q2005\\E", "shortCiteRegEx": "Puget and J..F.", "year": 2005}, {"title": "Global grammar constraints", "author": ["Quimper", "Walsh 2006] Quimper", "C.-G", "T. Walsh"], "venue": "In 12th International Conf. on Principles and Practices of Constraint Programming", "citeRegEx": "Quimper et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Quimper et al\\.", "year": 2006}, {"title": "Decomposing global grammar constraints", "author": ["Quimper", "Walsh 2007] Quimper", "C.-G", "T. Walsh"], "venue": "In 13th International Conf. on Principles and Practices of Constraint Programming", "citeRegEx": "Quimper et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Quimper et al\\.", "year": 2007}, {"title": "Structural symmetry breaking", "author": ["Sellmann", "M. Hentenryck 2005] Sellmann", "P.V. Hentenryck"], "venue": "In Proc. of 19th International Joint Conf. on AI (IJCAI", "citeRegEx": "Sellmann et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Sellmann et al\\.", "year": 2005}, {"title": "Using auxiliary variables and implied", "author": ["Stergiou Smith", "B. Walsh 2000] Smith", "K. Stergiou", "T. Walsh"], "venue": null, "citeRegEx": "Smith et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Smith et al\\.", "year": 2000}, {"title": "General symmetry breaking constraints", "author": ["T. Walsh 2006a] Walsh"], "venue": "In Proc. of 12th International Conf. on Principles and Practices of Constraint Programming", "citeRegEx": "Walsh,? \\Q2006\\E", "shortCiteRegEx": "Walsh", "year": 2006}, {"title": "Symmetry breaking using value precedence", "author": ["T. Walsh 2006b] Walsh"], "venue": "In Proc. of the 17th European Conf. on Artificial Intelligence", "citeRegEx": "Walsh,? \\Q2006\\E", "shortCiteRegEx": "Walsh", "year": 2006}, {"title": "Breaking value symmetry", "author": ["T. Walsh"], "venue": "In Proc. of 13th International Conf. on Principles and Practices of Constraint Programming", "citeRegEx": "Walsh,? \\Q2007\\E", "shortCiteRegEx": "Walsh", "year": 2007}, {"title": "On the complexity of breaking symmetry", "author": ["T. Walsh"], "venue": "In Proc. of The 11th International Workshop on Symmetry in Constraint Satisfaction Problems (SymCon\u201911). Held alongside the 1th International Conf. on the Principles and Practice of Constraint Programming (CP", "citeRegEx": "Walsh,? \\Q2011\\E", "shortCiteRegEx": "Walsh", "year": 2011}, {"title": "Symmetry breaking via LexLeader feasibility checkers", "author": ["Yip", "J. Hentenryck 2011] Yip", "P.V. Hentenryck"], "venue": "Proc. of the 22nd International Joint Conf. on Artificial Intelligence", "citeRegEx": "Yip et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Yip et al\\.", "year": 2011}], "referenceMentions": [{"referenceID": 38, "context": "1996) and value symmetries (Walsh 2007).", "startOffset": 27, "endOffset": 39}, {"referenceID": 6, "context": "Crawford et al. (1996) proved that breaking symmetry completely by adding constraints to eliminate symmetric solutions is computationally intractable in general.", "startOffset": 0, "endOffset": 23}, {"referenceID": 39, "context": "Theorem 4 ((Walsh 2011)) Given any simple ordering, there exists a symmetry group such that deciding if an assignment is smallest in its symmetry class according to this ordering is NP-hard.", "startOffset": 11, "endOffset": 23}, {"referenceID": 38, "context": "Theorem 8 ((Walsh 2007)) Given a set of value symmetries and a partial assignment, pruning all symmetric values is NP-hard.", "startOffset": 11, "endOffset": 23}, {"referenceID": 15, "context": "have proposed the multiset ordering (Frisch et al. 2003).", "startOffset": 36, "endOffset": 56}], "year": 2012, "abstractText": "Symmetry is an important problem in many combinatorial problems. One way of dealing with symmetry is to add constraints that eliminate symmetric solutions. We survey recent results in this area, focusing especially on two common and useful cases: symmetry breaking constraints for row and column symmetry, and symmetry breaking constraints for eliminating value symmetry.", "creator": "LaTeX with hyperref package"}}}