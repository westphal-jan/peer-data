{"id": "1302.0785", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "4-Feb-2013", "title": "Beyond Markov Chains, Towards Adaptive Memristor Network-based Music Generation", "abstract": "We undertook takes study of within for of, platynota network full recordings as, just use one the de-facto ' s tools still coming beyond the Markov definite. Seed implemented poisson although created such outlying tools memristor equations, and which are having taking deliver musical melody and ways in gothic over time as making result of feedback into the economic poisson. The spiking acquiring with simple memristor communication are respect and differences with standard to methods some performances longer. The impose well simulating prose memristor networks in berg Neumann use one discussed turn its hardware solution venture brought physical matridigm blocks actually delivered.", "histories": [["v1", "Mon, 4 Feb 2013 18:26:03 GMT  (540kb,D)", "http://arxiv.org/abs/1302.0785v1", "22 pages, 13 pages, conference paper"]], "COMMENTS": "22 pages, 13 pages, conference paper", "reviews": [], "SUBJECTS": "cs.ET cs.AI cs.NE cs.SD", "authors": ["ella gale", "oliver matthews", "ben de lacy costello", "andrew adamatzky"], "accepted": false, "id": "1302.0785"}, "pdf": {"name": "1302.0785.pdf", "metadata": {"source": "CRF", "title": "Beyond Markov Chains, Towards Adaptive Memristor Network-based Music Generation", "authors": ["Ella Gale", "Oliver Matthews", "Ben de Lacy", "Andrew Adamatzky"], "emails": [], "sections": [{"heading": "1 Introduction", "text": "The human universals [2] are traits found in all human cultures since the Upper Paleolithic and are unique to humanity; music is on this list of around 370 concepts and behaviours including examples like: dance, hope, language, fire, fear of death, cooking, prohibition of murder, hairstyles and other behaviours both similarly dramatic and banal. Music\u2019s role in human culture is related to sexual attraction, social cohesion, relaxation and communication (see [8] for a recent review from the anthropological context). It is believed that, like some other human universals, music may be a product of the structure of the mind [2], and thus a by-product of human evolution. However, the popular\n\u2217Corrosponding author\nar X\niv :1\n30 2.\n07 85\nv1 [\ncs .E\nT ]\nidea that music is a universal language or pre-language has been resoundly disproved, as far back as 1940 [24], by cross-cultural studies that showed that the emotional resonance of music is a culturally learned response.\nThe combination of two human universals, anthropomorphisation and tools, would suggest that the best tool would be human-like and thus it\u2019s not surprising that, after the invention of computers, artificial intelligence, A.I., (namely the desire to create an intelligent machine) would be an area of active research. A.I. has had some successes such as learning-classifying systems and neural networks, however the creation of creative A.I.s has had fewer successes, and the harder problem of creating a self-aware and conscious machine intelligence has suffered from even less progress.\nMusic generation is a good problem to tackle if one is interested in making a creative A.I., furthermore, if music does arise as a result of brain structure, then it might be fruitful to approach the problems of neuromorphic engineering (that of making brain-like computers) by creating a composing brain utilising a human-selection process on the output music: it\u2019s easier to recognise a melody than brain-like activity in a neural network. This approach will have the added drawback (or perhaps benefit) of adding a cultural bias to the music.\nThe study of creativity is a large and multidisciplinary area, with competing definitions and a lack of consensus, however, a recent attempt at formalising creativity and describing the actions of creative A.I. agents requires two modes of learning: A. an adaptive predictor or model of the growing data history and B. a reinforcement learner [25]. The agent learns about the world around it, compresses and stores that data and as such makes predictions about the future, this model encodes the known structure of a certain style of music, thus making the output similar to music in the same style, but by using reinforcement learning tuned to novelty, the new music is different enough to be interesting.\nMarkov chains have been well exploited in music generation [19]. The Markov Hypothesis states that a future state of a sequence depends only on the last state. Usually a matrix of note transitions is seeded with a corpus of music of a particular style and music is generated via a random walk. While often effective, it has a number of drawbacks; the biggest is that music has an underlying structure and requires long-term order which contravenes the Markov Hypothesis [10].\nUnconventional computing is a branch of computing that aims to go beyond the von Neumann models of computation and includes, but is not limited to, methods like chemical computation, biological computation, cellular automata, quantum computing, neuronal computing [1]. Various unconventional computing approaches have been applied to music generation, such as\ncellular automata music generation, sonifying Physarum polycephalum and sound synthesis using a neuronal network (wetware). Using memristors is considered a unconventional computing approach due to their novel communication interactions [16] and similarity to the neurons [6, 7].\nMemristors are the recently discovered [26] 4th fundamental circuit element [5]. The memristor changes its resistance as a function of the amount of charge that has passed through it (which is also proportional to voltage). Unlike the other three fundamental circuit elements (the resistor, capacitor and inductor) the memristor is non-linear and possesses a memory. Memristors have also been compared to neurons in the brain due to their spiking response to changes in input.\nFor the auto-generation of music, we are interested in four properties of memristors: their non-linearity, their time-dependence, their memory and their spiking response. As a network of memristors would necessarily possess a memory that goes beyond the previous state 1, music generation using a memristor networks offers us a route to go beyond Markov chaining.\nMemristors have been used as synapse analogues in STDP (Spiking Time Dependent Plasticity) neural networks [18]. Here, we plan to use memristors as the connections between a graph of musical notes, where the memristors can modify their connection weight non-linearly with the number of times one musical note follows on from another in a piece of seed music. This will create a weigthed graph, which can be built in the lab by connecting memristors. In this paper, we shall simulate such a graph by simulating the memristor connections, as in [13].\nA network of memristors can spike, and these spikes are believed to be deterministic and related to the change in voltage across a memristor. These voltage changes and spikes can propagate across a network through time in a complex manner (as the voltage change from one spike will cause a voltage change in memristors further along the network, causing further spikes and so on). Thus, the spike interactions can be used to \u2018play\u2019 music by choosing which notes follow on from one another (in a Markov chain approach).\nThere are two timescales that interact in a memristor network and which can give rise to altering tempo of played notes. The first is the relaxation time of a memristor after its spike (this is related to the memristors memory). The second is related to the length of the wires between the memristor and the time taken for a signal to propagate from one spiking memristor to the rest of the network.\nThese three aspects: the seeded network, the spikes and the time depen-\n1technically the memristor\u2019s memory is dependent on its entire history from \u2212\u221e to now, in practice it is possible to \u2018zero\u2019 a memristor\u2019s memory\ndence can interact to give complex behaviour. However, each spike will alter the structure of the network, allowing the system to change over time, leading to developing new patterns in its musical style to \u2018evolve\u2019 (or possibly allowing it to get stuck in a stable attractor).\nIn this paper, we will discuss the methodology and challenges for building such a network, by simulating a demo network, demonstrating the spikes responses in a simple real memristor network, simulating a simplified version of the spiking seeded network and finally discussing whether such a spiking seeded network can be fully simulated in a computationally tractable way using standard von Neumann architecture."}, {"heading": "2 Building the Memristor Network", "text": ""}, {"heading": "2.1 Setting up the graph", "text": "For this work we will consider a musical range of only two octaves, stretching from C4 to B[5, for a total of 24 notes. As any note could potentially follow on from any other, the graph of all possible links would be a reflexive directed k-graph of 24 nodes and 576 vertices. We show, as an example, a fully connected directed k-graph for 12 notes (an octave) in figure 1. For comparison, a network for a full standard piano would require 88 nodes, requiring 7744 memristors to model, as shown in figure 2. In the real network, a transition (e.g. A5\u2192B[5) would be recorded by an ammeter in series with the memristor).\nSimilarly, the timing of the notes was also constructed by a network. In the actual device, we would expect the memristor spikes to provide the tempo information, for out simplified model a second (much simpler) network built for the tempo analogously as for the notes in the melody. The tempo was broken down into 9 components: semiquaver, quaver, crochet, minim, their dotted versions and the breve.\nThe memristor network would be held at a constant voltage and as the memristor spikes, these spikes then propagate around the network, each spiking memristor is transiently the source of the \u2206V perturbation and each other memristor is the drain. In our simulation, this will be modelled by moving the source to the node associated with the previously played note at each step."}, {"heading": "2.2 Memristive Connections", "text": "The \u2018probability\u2019 of a transition between two notes occurring will be related to the connection weight of that vertex. In the memristor network, the connection weight is the conductivity of the memristor. Figure 2.2 shows the conductivity of am memristive connection increasing under a constant voltage (with a linear conductivity profile shown for comparison). As each transition is either heard or created, the memristor conductance moves up this curve. As music is a directed graph (it matters whether we go from C\u2192A or A\u2192C) there will be a second memristor, wired up the other way round, which goes down the curve. This property means that the reverse transition is less likely if the melody has just performed the transition.\nMemristance is defined [5] as:\nV = M(t)I ,\nwe will use the Mem-Con model of memristance [14]\nM(t) = Me(t) +Rcon(t)\nwhich has the advantage of having been fit to the devices in our lab, so we can later use measured experimental values as in [15]. In this paper, we use reduced units, i.e. the conductance is measured in terms of device properties such as the size and resistivity of the material. The conductivity of a memristor, G(t), is given by\nG(t) = 1\nM(t) ,\nand as the connection weight in the graph is simply the conductivity, it is also represented by G(t)."}, {"heading": "2.3 Seeded graphs", "text": "To seed the melody network, we converted several different pieces of musical melody to a list of notes in the key of C Major, transposing to the key of C and mapping them to the two octave range we have available. To seed the tempo network, the tempo was converted to reduced units where a time of \u20181\u2019 is equal to 1 crochet, this allowed us to normalise for beats-per-minute variations between the seed music. This approach divorces the tempo from the notes, which we felt was accurate as melody rarely correlates the speed of the note to its pitch (however as many a base singer will say, the backing\nbaseline of harmonising choral pieces is usually the beat and thus includes less variations in the tempo).\nFrom a frequency analysis of the number of times a transition happened, a transition matrix was populated with the expected conductance values as based on the memristor conductivity curve in figure 2.2. Different musical seeds created networks with different structures. We chose to investigate three distinct styles of musical melody, namely jazz standards, rock\u2019n\u2019roll as exemplified by Elvis (his faster tracks) and light opera as exemplified by Gilbert and Sullivan. The three Jazz standards were: \u2018How high the moon\u2019,\u2018Ain\u2019t that a kick in the head\u2019, \u2018I\u2019ve got the world on a string\u2019. The Elvis tunes were: \u2018All shook up\u2019, \u2018Burning love\u2019 and \u2018Jailhouse rock\u2019. The chosen Gilbert and Sullivan classics were three solos taken from Pirates of Penzance: \u2018Modern Major General\u2019, \u2018When a felon\u2019 and \u2018Better far to live and die\u2019. Specifically, the primary vocal line was taken for each as the melody.\nFor example fig 4 shows example graphs for the melody lines for the three jazz standards, specifically. The graphs tend to be sparse as a single melody is repetitive and does not cover a huge note-space. The largest connection weights tend to be on or close to the diagonal due to the fact that repetition of a note is common when singing a phrase, and because the further from the diagonal the larger the jump between the notes and the human voice has\ndifficulty with larger jumps."}, {"heading": "3 Music Generation", "text": "Having seeded our network, we will now discuss how to use it to create music. We shall start by examining how memristor networks act, and then consider the approximations that must be made to model them in simulation."}, {"heading": "3.1 Memristor Networks", "text": "Fig 5 shows an example of memristor spikes. There are a recovery time when the system relaxes to it\u2019s long term value. This takes around [20]s and may be tunable by varying device parameters. Generally, the larger \u2206V the larger the spike.\nIntriguingly, these spikes give rise to complex behaviour. Consider the circuit in figure 7 A d.c. voltage source is applied from a Keithley 2400 sourcemeter (drawn as a battery, as is standard in such circuits), for a single memristor this would apply a sharp step function from 0V to the set voltage at the first step and then hold it there. Figure 5 shows the response of a memristor to such a voltage. When there are multiple memristors in a circuit, the spike from the voltage application isn\u2019t there, instead you get complex behavior like that seen in figure 6, this is response of ammeter AT. We suspect that this is due to the sudden voltage step occurring at slightly different times across the 3 memristors. Each current spike causes a change in resistance across the memristor it reaches, which causes a change in voltage \u2206V which then causes another current spike, this can bounce around the network indefinitely if provided with an energy source (namely\nthe applied constant voltage). There are two routes by which the memristors can interact, the first is the creation and movement of current spikes, \u2206qe\u2212 , as in extra charge, q, is drawn from the source, and this alters the resistance. The second is a change in resistance, \u03b4R which causes a change in voltage (as 11\nVA+VB + 1 VC\n, which itself causes a current spike. Figure 8 summarises this\ninterrelation."}, {"heading": "3.2 Time dependence", "text": "The time dependence due to the delay in signal (current) propagation in a memristor network has been discussed. The other relevent time is the relaxation time, \u03c4r. When a memristor representing a transition from X \u2192 Y , where X, Y \u2208 {CD[DE[EFG[GA[AB[B}, spikes and alters its resistance, the reverse transition, that of Y \u2192 X is slightly inhibited because both memristors between nodes X and Y have been altered. The lifetime \u03c4r defines how long the memristors take to equilibrate. Before that point, the spikes are smaller if in the same direction and larger if in the opposite way.\nThese interactions in timing will also cause the spikes to occur at a nonregular rhythm, avoiding boring musical tempo. However, the interactions that give rise to the oscillations lead to concept of a beat."}, {"heading": "4 Modelling a spiking memristor network for", "text": "music creation\nIf we have a seeded memristor network and turn on a constant voltage, we should create spiking network. If each spike is taken as making a transition from one note to another, then the network\u2019s activity will generate music. Also, as the network generates music, it is also learning, so the network will respond to the music it creates and alter the connectivity of the k-graph and thus the music created by the network."}, {"heading": "4.1 Problems with attempting to model a memristor", "text": "network\nThere are two main problems with modelling such a network. The first is the problem of modelling transient \u03b4V . This is relatively easy to solve. In the real network we would set the wired network up and record what it produces. In the simulation, we don\u2019t need a background voltage to power the simulation and can thus set the current note as the source (and itself and all others as a possible drain).\nThe second problem is more intractable. We need to know when and if a memristor will spike. It is not known if the spikes are probabilistic or deterministic in nature; this is a current area of investigation. To model to the system as deterministic, we would need to descretise time very finely and model the state of everything in the network at once. If the system is chaotic or near the edge of chaos (a very real possibility) any approximations or course-graining of the system will result in an extremely inaccurate simulation. Furthermore, it is not currently known what causes the spikes, we suspect that those measured in fig 6 are the addition of spikes from the individual memristors. But we don\u2019t know what causes these individual memristors to spike or not spike. Also, the network as drawn in part one of this paper, is not a standard electronic circuit that can be entirely resolved into series and parallel relationships, making the network as a whole non-simple and difficult to model.\nFinally, for a one octave memristor network we require 144 memristors, to do an entire piano\u2019s range we would need 7,744 (plus 81 for the tempo). We can not necessarily make the approximation of considering one memristors against a \u2018mean-field\u2019 background of the other memristors, due to the almost instantaneous 2 \u2206V , thus even with our simplified version we have a 576-body\n2As energy can not be created or destroyed, a change in voltage should change the voltage drop across the rest of the network instantaneously. Whether this change is actually\nproblem to attempt to calculate. We suggest that solving such a problem with standard von Neumann computer architecture will be computationally intractable (although it is not theoretically impossible).\nOur obvious solution to these issues is to build a non-von Neumann computer architecture, i.e. to actually build a network of 576 memristors. However, before undertaking such an endeavour, it\u2019s worth doing a preliminary, highly simplified simulation to check that a seeded memristor network would be of use to generating music and to see if the non-linearity of the memristor model by itself does not offer interesting aspects to procedural music composition."}, {"heading": "4.2 Using a simplified memristor network model to", "text": "perform non-Markovian music generation on a preseeded network\nAs described in the previous section, the \u2018roving\u2019 \u2206V will be modelled as V against a background of 0V , in that each note will be set to the voltage source in turn. This is a gross simplification of the laws of physics but will serve to course grain the effects of a network. The drain will be connected to the drain of all other nodes (including the drain of that node, which allows for a self\u2192self transition.\nThere is a function p(t) which controls whether a memristor will spike or not. We suspect that the memristor network is deterministic and chaotic in form, but have no current knowledge of this function. Therefore, we shall take the simplification of assuming that the pseudo-random chaos can be coarsely representated as the pseudorandom values from a Gaussian random number generator. Thus, we will talk about the probabilities of a transition between X and Y occurring, p(X\u2192Y ) as being a product of the connection weight and our unknown function p(t), which is itself set as a pseudorandom number, p(x). Thus,\np(X\u2192Y ) = G(X\u2192Y )p(x) .\nAnd the next note, n+ 1, is determined by the maximum of this product over the set of all a possibilities, i.e.:\np(n\u2192+n) = Max[{p(X\u2192Y ) : X, Y \u2208 {C4 : B[5}{p(x)T}] ,\nwhere T is the set of all 576 possible transitions. After a given connection has fired, we slightly increase it\u2019s state along the memristive curve (to reflect the current that flowed through it as part of the\ninstantaneous or proceeds at the speed of light is a question for relativity physicists\nspike) and use this new state for calculating future transitions. To model the relaxation time, the memristor that has spiked on step n is artificially moved down the memristor curve to a quarter of it\u2019s value for step n+ 1 and half for step n + 2, this substantially reduces the likeliness of it firing again until step n + 3 where it is set to its new (increased) weight. To model the reverse note connections (and prevent the over-occurance of the odd musical structure of X \u2192 Y \u2192 X \u2192 Y \u2192 X...\u221e, X, Y \u2208 {C4 : B[5}, the reverse transitions are decremented rather than incremented at step n and similarly reduced to a quarter and half their new value on steps n+ 1 and n+ 2. The music is started on note C4 and the first note of the tune taken from the first transition from that note. 100 notes were generated for each tune.\nFigure 9 shows an example of generated music from the connectivity matrix seeded with \u2019How high the moon\u2019. Despite the simplicity, it sounds like music rather than random notes. The top subfigure shows music output from a static matrix, the bottom shows the effect of allowing the transition matrix to be seeded by the musics it\u2019s generating, and thus can only be seen at the end. This is what we want, as we don\u2019t want the music generator to change too quickly.\nFigure 10 shows further examples of the plasticity of the transition matrix. This figure clearly shows the strong effect of the transition matrix on the music generated, but we can see that over time and repeated generated notes, the melody is changing."}, {"heading": "4.3 Results from our modelled network", "text": "The combined connection matrices for the note connections and note lengths are shown in figures 11 and 12 respectively. Simple examination of these\nmatrices can tell us a few things about the differences between these musical styles. Looking at the tempo changes in figure 12 we see that the jazz standards make the most use of different length notes with the crochet and quaver being the most popular. Both the rock\u2019n\u2019roll and the light classical are \u2018faster\u2019 as they use quavers overwhelmingly (note that this doens\u2019t apply to all music in this genre, we chose rather fast classical and Elvis\u2019 more dancable tunes). Oddly, the light classics had less variation than rock\u2019n\u2019roll in the timing.\nAs the graphs shown in figure 11 are less easy to understand at a glance. Elvis\u2019s rock\u2019n\u2019roll tracks tend to focus on either the lower notes or the higher ones. Both the jazz and the light opera avoids the higher notes. We can look at the reducibility of the connection matrices, which is a measure of the minimum number of connections to represent this music (i.e. pruning the unused connections). For light opera melodies we only need 16, 19 for the rock\u2019n\u2019roll and 20 for the jazz standards (perhaps reflecting that the jazz standards were not the product of a single composer or composition team). The matrices are not symmetrical, but are not far off it and the symmetry can be measured by taking the difference between the transpose and the original matrix. All three styles have a similar symmetry, with the light opera being 83% symmetrical, the jazz standards are 83.3% and the rock\u2019n\u2019roll is the least symmetrical at 85.4%.\nFigure 13 shows the output music from memristor networks as seeded by single songs (on the top three rows) and connection matrices seeded by all three input songs. Each of these graphs was generated with the same pseudo-random generated numbers.\nNote, that the system we have set up has been only used to generated the melody, however the system as set-up can allow multiple simultaneous connections, i.e. chords. In a real memristor network, we would expect multiple connections to spike at the same time, creating chords.\nThe separation of tempo from note, allows us to compose music (using both) and change the performance of the piece using the tempo matrix."}, {"heading": "5 Time variance of this system", "text": "As explained, the time dependence and spiking behaviour will feedback into the structure of the network and thus alter the system over time. This should make a robust and interesting music generating system, but may produce static solutions such as a dead network (no spikes), epilectic network (many spikes in utter synchrony), resting network (spikes in a repetitive, boring, oscillation). As these solutions have not yet been observed in memristor lab tests, we are optimistic about avoiding such solutions. Nonetheless, all three of these stable state solutions can be reset by wiping and reseeding the network."}, {"heading": "6 Conclusions", "text": "We have demonstrated a novel approach to music generation networks that relies on non von Neumann hardware and is computationally intractable to solve. We have shown with our simplifications that it is worth pursuing. We have identified properties of memristors which are useful for such a network and tested simple 3 memristor proof-of-concept prototypes.\nThe problem of building a memristor-based music composer is an interesting one as it involves many of the same challenges as building a memristorbased brain. Perhaps the creation of recognisable music is a good test of the creation of a working brain. Furthermore, the problem of creating music is far more tractable than that of creating a brain, as every human can recognise a good end solution (\u2019Does it sound like music or noise?), whereas no one can really recognise a working intelligence from looking at the spikes in a neuronal network.\nThe creation of a 7,744 memristor network is a little beyond the current state of the art. In our lab, memristors are synthesised by the hundred and have to be wired together by hand. However, such a network is not that far off at places like HP where they have successfully synthesied many thousands of memristors in a neural memristor chip. It is currently outside of the price range of a music composer, but we anticipate the price to come down in the future."}], "references": [{"title": "From Utopian to Genuine Unconventional Computers", "author": ["A. Adamatzky", "C. Teuscher", "editors"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2005}, {"title": "Human Universals", "author": ["D.E. Brown"], "venue": null, "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1991}, {"title": "Unconventional Models of Computation", "author": ["John Casti Christian Calude", "Micheal J. Dinneen", "editors"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1998}, {"title": "Memristor - the missing circuit element", "author": ["L.O. Chua"], "venue": "IEEE Trans. Circuit Theory,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1971}, {"title": "Hodgkin-huxley axon is made of memristors", "author": ["Leon Chua", "Valery Sbitnev", "Hyongsuk Kim"], "venue": "International Journal of Bifurcation and Chaos,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2012}, {"title": "Neurons are poised near the edge of chaos", "author": ["Leon Chua", "Valery Sbitnev", "Hyongsuk Kim"], "venue": "International Journal of Bifurcation and Chaos,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2012}, {"title": "Aluminium electrodes effect the operation of titanium oxide sol-gel memristors. arXiv:1106.6293v1", "author": ["E. Gale", "D. Pearson", "S. Kitson", "A. Adamatzky", "B. de Lacy Costello"], "venue": null, "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2011}, {"title": "Memristor-based information gathering approaches, both ant-inspired and hypothetical", "author": ["Ella Gale", "Ben de Lacy Costello", "Andrew Adamatzky"], "venue": "Nano Communication", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2012}, {"title": "The memory-conservation model of memristance", "author": ["Ella Gale", "Dave Pearson", "Stephen Kitson", "Andrew Adamatzky", "Ben de Lacy Costello"], "venue": "Technical Digest of Frontiers in Electronic Materials,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2012}, {"title": "The effect of electrode size on memristor properties: An experimental and theoretical study", "author": ["Ella M Gale", "Benjamin de Lacy Costello", "Andy Adamatzky"], "venue": "IEEE International Conference on Electronics Design, Systems and Applications (ICEDSA", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2012}, {"title": "Observation and characterization of memristor current spikes and their application to neuromorphic computation", "author": ["Ella M Gale", "Benjamin de Lacy Costello", "Andy Adamatzky"], "venue": "(Sept", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2012}, {"title": "A flexible solution-processed memrister", "author": ["Nadine Gergel-Hackett", "Behrang Hamadani", "Barbara Dunlap", "John Suehle", "Curt Richer", "Christina Hacker", "David Gundlach"], "venue": "IEEE Electron Device Letters,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2009}, {"title": "Evolution of plastic learning in spiking networks via memristive connections", "author": ["D. Howard", "E. Gale", "L. Bull", "B. De Lacy Costello", "A. Adamatzky"], "venue": "IEEE Transactions on Evolutionary Computation,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2012}, {"title": "An Experiment in Musical Composition", "author": ["F.P. Brooks Jr.", "P.G. Neumann A.L. Hopkins Jr.", "W.V. Wright"], "venue": null, "citeRegEx": "19", "shortCiteRegEx": "19", "year": 1992}, {"title": "Computing for Expressive Music Performance", "author": ["A. Kirke", "E. Miranda", "editors"], "venue": null, "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2012}, {"title": "Sounds synthesis with slime mould of physarum polycephalum", "author": ["E. Miranda", "A. Adamatzky", "J. Jones"], "venue": "Journal of Bionic Engineering,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2011}, {"title": "Computer music meets unconventional computing: Towards sound synthesis with in vitro", "author": ["E.R. Miranda", "L. Bull", "F. Gueguen", "I.S. Uroukov"], "venue": null, "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2009}, {"title": "Upset in emotions", "author": ["Robert Morey"], "venue": "Journal of Social Psychology,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 1940}, {"title": "Formal theory of creativity, fun and intrinsic motivation (1990-2010)", "author": ["J. Schmidhuber"], "venue": "IEEE Transactions on Autonomous Mental Development,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2010}, {"title": "Dynamics and applications of non-volatile and locally active memristors", "author": ["Stan Williams"], "venue": null, "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2012}], "referenceMentions": [{"referenceID": 1, "context": "The human universals [2] are traits found in all human cultures since the Upper Paleolithic and are unique to humanity; music is on this list of around 370 concepts and behaviours including examples like: dance, hope, language, fire, fear of death, cooking, prohibition of murder, hairstyles and other behaviours both similarly dramatic and banal.", "startOffset": 21, "endOffset": 24}, {"referenceID": 1, "context": "It is believed that, like some other human universals, music may be a product of the structure of the mind [2], and thus a by-product of human evolution.", "startOffset": 107, "endOffset": 110}, {"referenceID": 17, "context": "idea that music is a universal language or pre-language has been resoundly disproved, as far back as 1940 [24], by cross-cultural studies that showed that the emotional resonance of music is a culturally learned response.", "startOffset": 106, "endOffset": 110}, {"referenceID": 18, "context": "a reinforcement learner [25].", "startOffset": 24, "endOffset": 28}, {"referenceID": 13, "context": "Markov chains have been well exploited in music generation [19].", "startOffset": 59, "endOffset": 63}, {"referenceID": 0, "context": "Unconventional computing is a branch of computing that aims to go beyond the von Neumann models of computation and includes, but is not limited to, methods like chemical computation, biological computation, cellular automata, quantum computing, neuronal computing [1].", "startOffset": 264, "endOffset": 267}, {"referenceID": 10, "context": "Using memristors is considered a unconventional computing approach due to their novel communication interactions [16] and similarity to the neurons [6, 7].", "startOffset": 113, "endOffset": 117}, {"referenceID": 4, "context": "Using memristors is considered a unconventional computing approach due to their novel communication interactions [16] and similarity to the neurons [6, 7].", "startOffset": 148, "endOffset": 154}, {"referenceID": 5, "context": "Using memristors is considered a unconventional computing approach due to their novel communication interactions [16] and similarity to the neurons [6, 7].", "startOffset": 148, "endOffset": 154}, {"referenceID": 3, "context": "Memristors are the recently discovered [26] 4 fundamental circuit element [5].", "startOffset": 74, "endOffset": 77}, {"referenceID": 12, "context": "Memristors have been used as synapse analogues in STDP (Spiking Time Dependent Plasticity) neural networks [18].", "startOffset": 107, "endOffset": 111}, {"referenceID": 7, "context": "In this paper, we shall simulate such a graph by simulating the memristor connections, as in [13].", "startOffset": 93, "endOffset": 97}, {"referenceID": 3, "context": "Memristance is defined [5] as:", "startOffset": 23, "endOffset": 26}, {"referenceID": 8, "context": "we will use the Mem-Con model of memristance [14]", "startOffset": 45, "endOffset": 49}, {"referenceID": 9, "context": "which has the advantage of having been fit to the devices in our lab, so we can later use measured experimental values as in [15].", "startOffset": 125, "endOffset": 129}, {"referenceID": 14, "context": "This takes around [20]s and may be tunable by varying device parameters.", "startOffset": 18, "endOffset": 22}], "year": 2013, "abstractText": "We undertook a study of the use of a memristor network for music generation, making use of the memristor\u2019s memory to go beyond the Markov hypothesis. Seed transition matrices are created and populated using memristor equations, and which are shown to generate musical melodies and change in style over time as a result of feedback into the transition matrix. The spiking properties of simple memristor networks are demonstrated and discussed with reference to applications of music making. The limitations of simulating composing memristor networks in von Neumann hardware is discussed and a hardware solution based on physical memristor properties is presented.", "creator": "LaTeX with hyperref package"}}}