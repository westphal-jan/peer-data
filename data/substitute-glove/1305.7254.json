{"id": "1305.7254", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "30-May-2013", "title": "Harmony search to solve the container storage problem with different container types", "abstract": "This paper forthcoming was mini-series of the folk how algorithm give concerned in storage financing problem taken inbound and round-trip containers. This can is studied decisions multiple container using (extra, open leaving, outside top, weapon, outside and refrigerated) which yourself created situation among experience, be their distribution stability already. The ensures is to even based analogous container arrangement including respects through departure preceding, on incur, instead - handle patrols of flammable. The performance of soon administration nature true evidence comparing soon the findings attracted by genetic formula_1 and LIFO iteratively.", "histories": [["v1", "Thu, 30 May 2013 21:13:25 GMT  (627kb)", "http://arxiv.org/abs/1305.7254v1", "7 pages"]], "COMMENTS": "7 pages", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["i ayachi", "r kammarti", "m ksouri", "p borne lacs", "enit", "tunis-belvedere tunisie lagis", "ecl", "villeneuve d ascq", "france"], "accepted": false, "id": "1305.7254"}, "pdf": {"name": "1305.7254.pdf", "metadata": {"source": "META", "title": "Harmony search to solve the container storage problem with different container types", "authors": ["I. Ayachi"], "emails": [], "sections": [{"heading": null, "text": "algorithm to solve the storage allocation problem for inbound and outbound containers. This problem is studied considering multiple container type (regular, open side, open top, tank, empty and refrigerated) which lets the situation more complicated, as various storage constraints appeared. The objective is to find an optimal container arrangement which respects their departure dates, and minimize the re-handle operations of containers.\nThe performance of the proposed approach is verified comparing to the results generated by genetic algorithm and LIFO algorithm.\nGeneral Terms Container storage problem, metaheuristics.\nKeywords Harmony search, Genetic algorithm, transport scheduling, metaheuristic, optimization, container storage"}, {"heading": "1. INTRODUCTION", "text": "The container storage space allocation is a critical decision in container terminals. It influences the productivity of the unloading process, either for inbound or outbound containers. It\u2019s a complex operation since it is highly inter-related with the routing of yard crane and truck [17]. This paper focuses on optimizing the way of allocating inbound and outbound containers in storage locations, known as the storage space allocation problem (SSAP). This problem is classified as a three dimensions bin-packing problem where containers are the items and storage spaces in the port represent the used bins. It falls into the category of NP hard problems. Generally, this problem is studied considering a single container type. However, this does not stand the problem under its real-life statement as there are multiple container types that should be considered, (refrigerated, open side, empty, dry, open top and tank). This lets the problem more complicated, as various constraints appeared, related to the container type\u2019s requirements (e.g. refrigerated containers must be allocated to the blocks equipped by the power point, on an open top container, we cannot place a container at the top, tank container must be placed on each other, etc.) Making a storage space allocation decision for different types of containers is too complicated especially for large scale instances and it is hard, even impossible, to solve it optimally. Therefore, most of the proposed solution approaches are based on metaheuristics. A metaheuristic is a computational method seeking for a good solution in a reasonable computation time without being able to guaranty optimality. Some of these approaches are based on the gradient method, which presents some limits such as the\nfact that they are often trapped in a local optimal especially for complex optimization problems having several local optimums. Due to this restriction, other metaheuristics are developed based on simulation, to solve complex problems. They imitate natural phenomena such as the genetic algorithm inspired by biological evolutionary process [8], ant colony [5], the harmony search [7], firefly algorithm [21], cuckoo search [20]. There is a large number of metaheuristics and it is difficult to find the appropriate one for a specific problem, especially in the absence of benchmarks. One way to face this dilemma is to use multiple approaches, compare them and select the one generating the best result. In this paper a Harmony Search (HS) algorithm is proposed to solve the problem of storage space allocation of containers with different types. To evaluate the performance of this method, we compare his results with those generated by the genetic algorithm described in [1] and the Last In First Out algorithm. Harmony search algorithm was proposed by [7]. It was successfully applied to solve various engineering optimization problems such as vehicle routing [6], reliability [23], structural optimization [15] and function optimisation [18] The rest of this paper is organized as follows: In section 2, a literature review for the container storage problem is presented. The mathematical formulation of the problem is given, in section 3. Next in section\n4, the Harmony Search algorithm is described. Section 5 is\ndevoted to the description of the Harmony search adaptation to the SSAP. Then, some experiments and results are presented and discussed, in section 6. Section 7 included a comparative study of the proposed approach with the genetic algorithm and the Last in First out (LIFO). Finally, section 8 covers our conclusion."}, {"heading": "2. LITERATURE REVIEW", "text": "The container storage space allocation is the most difficult task in container terminals since inbound and outbound containers are stacked together in the same storage area. After arrival at the terminal, each container picked up by transportation equipment and affected to one of the storage blocks. When the designated ship arrived, containers are unloaded from yard block, transported to the berth and loaded onto the vessel. The chain of operations for import containers are performed in the reverse order [10]. The container storage space allocation problem (SSAP) consists on affecting each container to the most suitable place in the storage area. The containers are often arranged with the objective of reducing the number of handling operations required later on to load/unload containers.\nIn the literature, various papers were proposed, treating different variants of the problem. Some of them will be presented in this section. Kim and Park [11] proposed a heuristic decision rule and a sub-gradient optimization technique to solve the storage space allocation for outbound containers. Their objective was to find an arrangement of the containers that exploits efficiently the storage space and loading operations. Preston and Kozan [19] proposed a genetic algorithm to solve the container location model at seaport terminals. Their objective was to reduce the transfer and the handling time of containers. This approach took the Brisbane port as a case study and generated good results in comparison to the process already used in this port. Kim [12] presented a technique to estimate the rehandlings number for the next pick-up and the total number of rehandles to pick up all inbound containers in a bay. Kim and Kim [13] proposed a cost model to estimate various cost components related to the import container handling and to determine subsequently the storage space and the number of transfer cranes required. Also, in [14], a prediction model of unloading containers times and equipment utilization is presented. Chen and col. [4] combined diverse meta-heuristics (tabu search, simulated annealing and genetic algorithms) to solve the port yard storage optimization problem. It aims to minimize the space allocated to the cargo within a time interval. Lee and col. [16] developed a heuristic algorithm to solve the yard truck scheduling and the storage allocation problems. Their objective is to minimize the weighted sum of total delay of requests and the cost of total travel time of yard trucks. Zhang and col. [22] solved the (SSAP) using a rolling-horizon approach. Both outbound and inbound containers are considered .Their aim was to minimize the total transportation distance of containers between blocks and vessel berthing locations. In [2], a harmony search algorithm is proposed to solve the SSAP where a single container type was considered. Its aim was to reduce the re-handle operations of containers. The results were compared to a genetic algorithm previously applied to the same problem in [9] and recorded good results. Bazzazi and al. [3] extended the SSAP proposed in the literature [22], where different containers types and sizes are considered simultaneously. The authors proposed a genetic algorithm to solve this problem and they supposed that the allowable blocks to which a container type can be allocated are known in advance. Ayachi and col. [1] developed a genetic algorithm to solve the problem of allocating containers of multiple types, in storage spaces in the port. The results generated by the proposed approach were compared to a Last in First out (LIFO) algorithm. In this paper, a harmony search is applied to solve the SSAP considering multiple containers types (refrigerated, open side, empty, dry, open top and tank)."}, {"heading": "3. PROBLEM FORMULATION", "text": "In this section, we detail our evolutionary approach by presenting the adopted mathematical formulation based on the following assumptions."}, {"heading": "3.1 Assumptions", "text": "In this work we suppose that:\n Initially containers are unloaded from the vessel and\ntransmitted to storage area waiting for allocation in the\nallowable places of the storage block.\n To unload a container, all containers above must be re-\nhandled.\n Each container has departure time.\n The initial state of storage blocks, available places, is\nknown and to be considered in the load planning.\n The containers are of different types (dry, open top, open\nside, tank, empty and refrigerated).\n Containers have the same size\nThe storage area in the port is composed of several blocks\nwhich can be equipped by a power point to store reefer\ncontainers or regular blocks for the other container types.\nFigure 1 shows an example of a storage area."}, {"heading": "3.2 Input parameters", "text": "Let\u2019s consider the following variables:\n i : Container index, i = 1, \u2026, Nc  b : storage block index; b = 1, \u2026, NBlock  NBlock = Nstock_reg + Nstock_refrig : le nombre de blocks disponibles\n Nstock_reg : the number of storage blocks for containers don\u2019t requiring a power point\n Nstock_refrig : the number of storage blocks for refrigerated containers.\n Nc : the number of containers to stored.  di : departure date of container i  NcFloor (j,b) : the number containers in the floor j of the block b\n n1 : Maximum containers number on the axis X  n2 : Maximum containers number on the axis Y  n3 : Maximum containers number on the axis Z  NT : the number of container types  Nc(T) : the number of containers of type T, where :\n  \n  \n\n\ncontainerreefer a sit' if 6 container tank a sit' if 5\ncontainer sideopen an sit' if 4 container open topan sit' if 3\ncontainerempty an sit' if 2 containerdry a sit' if 1\nT\n Ncmax: Maximum containers number, with Ncmax =\n(Nstock_reg + Nstock_refrig ) n1.n2.n3"}, {"heading": "3.3 Decision Variable", "text": "For this problem, Ci,t(x, y, z, b) designates the decision variable.\notherwise0\n(1) bblock at the z ,y x,\nposition in the icontainer a is thereif 1\nb)z,y,(x,C ti,  \n \n\n\nx [1,.., n1], y [1,.., n2], z [1,.., n3]"}, {"heading": "3.4 Mathematical formulation", "text": "The main objective of the studied problem is to optimize a fitness function that aims to reduce the number of container rehandlings and then minimize the ship stoppage time.\nThis function can be described as follows:\n     \nT blockN\n1t\nNc(T)\n1i ti,\nN\n1b ib,i\n(2) b)z,y,(x,C )(dmMin\nWhere:\n Mi,b (di) : the minimum number of container rehandles to"}, {"heading": "3.5 Constraints", "text": "The model is subject to the following constraints:\n][1..N b 1],-[1..n j\n(3) b)1),((jNc b)(j,Nc\nblock3\nfloorfloor\n\n\n[1..NT] t [1..Nc], i\n(4) 0 Nc 1j b)1,zy,(x, NT 1r C rj, - b) z, y, (x,C ti,\n\n   \nThe constraint equations (3) and (4) ensure that a floor lower level contains more containers than the one directly above.\n4,3 t [1..Nc], i\n(5) 1\n1j\nb)1,zy,(x, NT\n1r C rj, - b) z, y, (x,C ti,\n\n   \nNc\nThe constraint 5 enssures that an open top container or an\nopen side container can not have another container above.\n[1..Nc] i\n(6) 1 Nc 1j NT 1r b)z,y,m,(x\nz-3n\n1m C rj, - b) z, y, (x,Ci,4\n\n     \nThe constraint 6 indicates that there aren\u2019t any containers at\nthe open side of container type 4 (open side container\n)7( Otherwise,0\nreefer isblock theSi ,1 b)z,y,(x,\ni, C 6    \nThe constraint 7 suggests that a reefer container must be\nallocated to the blocks equipped by the power point.\n 6 4, 3, 2, 1,r [1..Nc], i\n(8) 1 b)1,zy,(x, Nc\n1j C - b) z, y, (x,C rj ,i,5\n\n \nThe constraint 8 indicates that tank containers must be placed on each other"}, {"heading": "4. HARMONY SEARCH", "text": "The harmony search algorithm is developed to imitate the musician behavior. HS is based on the analogy with the music improvisations process seeking for the best harmony. The harmony in music is analogous to the optimization solution vector, and the ideal harmony is analogous to optimal solution. The musical harmony is improved practice after practice using the set of the pitches played by each instrument. Also, the fitness function is improved iteration by iteration using the values assigned for decision variables. Figure 3 shows this analogy. HS does not require initial values for the decision variables. Additionally, it uses a stochastic random search based on the harmony memory considering rate and the pitch adjusting rate so that derivative information is unnecessary. Compared to earlier meta-heuristic optimization algorithms, the HS algorithm imposes fewer mathematical requirements. So, it can be easily adopted for various types of engineering optimization problems [15]\nThe Harmony search algorithm has been successfully applied to vehicle routing problem [6], hydrologic parameter calibration [15] and to the Storage space allocation problem [2] The HS algorithm includes five steps: parameters initialization, the harmony memory (HM) initialization, the new harmony improvisation, the harmony memory update and the check of termination criterion."}, {"heading": "4.1 Parameters initialization", "text": "In this step, the optimization problem is specified:\nMinimize (or Maximize) f (x); xi Xi, i = 1,2,..., N\nWhere:\n f(x) is an objective function\n x is the solution vector composed of decision variables xi  Xi is the set of possible values for each decision variable  Xi = {xi (1), xi (2),..., xi (K)} for discrete variables  N is the number of decision variables\n K is the number of possible value for each discrete variable The algorithm parameters are also specified during this step such as:\n The harmony memory size (HMS) is the number of solution in the memory\n The harmony memory considering rate (HMCR); 0\u2264 HMCR \u22641; his typical values range from 0.7 to 0.99\n The pitch adjustment rate (PAR) : 0\u2264 PAR \u22641; its selected values range is from 0.1 to 0.5\n Improvisations number."}, {"heading": "4.2 Harmony memory initialization", "text": "During this step, a harmony memory of size HMS, shown in equation (9), is randomly generated. Each decision variable (xi) randomly selects a value from its list (Xi). Then, their fitness values are calculated.\n          \n\n          \n\n)f(x x x... xx\n)f(x x x... xx\n... ... ... ... ... .\n... ... ... ... ... .\n... ... ... ... ... .\n)f(x x x... xx\n)f(x x x... xx\nHMSHMS N HMS 1-N HMS 2 HMS 1\n1-HMS1-HMS N 1-HMS 1-N 1-HMS 2 1-HMS 1\n22 N 2 1-N 2 2 2 1\n11 N 1 1-N 1 2 1 1\n(9)"}, {"heading": "4.3 New harmony improvisation", "text": "The harmony memory is initially crammed; a new harmony vector x\u2019 = (x\u20191, x\u20192,.., x\u2019N ) is generated and compared to existing solutions. It\u2019s kept if it\u2019s better than the worst harmony. x' is improvised using the following two rates:\n Harmony memory consideration rate\n Pitch adjustment rate.\nThe value for each decision variable is randomly chosen using a harmony memory consideration rate (HMCR).\nThe value of is selected from the pitches previously stored in HM for this decision variable with a probability HMCR. While it is chosen from the set of all possible values for the corresponding decision variable, with a probability (1- HMCR).\n         HMCR)-(1 w.px HMCR w.px ,...,x,xx x ' 2 i 1 i ' ' ii HMS ii i X\n(10)\nWhile improvising the new harmony, each value chosen from HM is examined to determine whether it should be pitchadjusted. This procedure uses the PAR parameter that sets the rate of adjustment for the pitch chosen from the HM as follows.\n\n \n\n\n \nPAR)-(1HMCR w.px\nPARHMCR w.pbw*rand(()' i x x\n' i\n' i (11)\nThe value of (1-PAR) sets the rate of doing nothing. bw: arbitrary distance bandwidth and rand () is a random number between 0 and 1."}, {"heading": "4.4 Harmony memory update", "text": "The new solution is stored in the harmony memory if it\u2019s better than the worst of the existing solutions and it respects all problem constraints. Steps (4.3) and (4.4) are repeated while the termination criterion (maximum number of improvisations) is not reached."}, {"heading": "5. EVOLUTION PROCEDURE", "text": "In this section, the harmony search algorithm proposed is detailed. An initial harmony memory of size HMS is created. The decision variables Ci,t(x, y, z, b), represent the possible locations for the containers according to the allocated storage area. Ci,t(x, y, z, b) used four dimensions structure representation. These dimensions indicate respectively the container\ncoordinates in the plan (X, Y, Z) and the number of the allocated block. The figure 4 shows an example of solution representation\nThe initial harmony memory is randomly generated and every stored solution must respect all problem constraints (equations (3) to (8)). After that, a new solution is improvised based on the process outlined in section 4.3. This step will be repeated until the termination criterion is satisfied."}, {"heading": "6. EXPERIMENTAL RESULTS", "text": "In this section, experimental results are provided to study the performance of the proposed approach. This algorithm stops when the solution doesn\u2019t improve after Niter iterations. It is assumed that:\n n1, n2 and n3 will be defined by the user,  The containers type NT, the number of each container type Nc(T) and the storage blocks number (Nstock_refrig, Nstock_reg)\nare defined by the user.\n HMCR= 0.95 and PAR = 0.1. Departure dates of container are also indicated by the user."}, {"heading": "6.1 The number of containers type influence", "text": "This part studied the influence of the containers type number\nsince it is an important factor in this problem. The algorithm\nis executed for different values of NT and each time the best\nfitness values of the first (Fi) and the last iterations (Ff) are\ngiven. Also, the execution time (TExe) is indicated. The\npopulation size was set to 50, the stopping criteria (Niter) to\n20, n1 = n2 = n3= 3, Nstock_reg = 4 and Nstock_refrig = 4.\nThe simulation results are illustrated in table 1.\nAccording to these results, it is clear that higher is the number\nof container type important is the execution time and worse is\nthe fitness value. It\u2019s evident since the complexity of the\nproblem is directly related to container type number and their\nstorage constraints."}, {"heading": "NT Nc(T) Fi Ff TExe (s)", "text": ""}, {"heading": "6.2 The harmony memory size influence", "text": "In order to examine the importance of the harmony memory\nsize, we fixed the following parameters:\n Nc(T) = 5 (dry, empty, open top, tank, reefer) with\nNc(1)= 20, Nc(2)= 20 Nc(3)=15, Nc(5)= 10,\nNc(6)=20.\n Niter = 50\n n1 = n2 = n3= 3\n Nstock_reg = 3 , Nstock_refrig = 3\nThe population size (HMS) is varied. His influence on the fitness value is presented in the table 2.\nThe results indicate that higher is the harmony memory size, better is the value of the fitness function."}, {"heading": "7. COMPARATIVE STUDY", "text": "In order to evaluate the results generated by the harmony search approach, a comparative study with a LIFO (Last In First Out) algorithm and the genetic algorithm (GA) is presented. The LIFO algorithm consists on storing in first time the last placed container in a stack. This principle is applied in most port container terminals, where a manual planning based on experience and rules to assign each container to a certain storage block. The Genetic algorithm was proposed to solve the same problem (SSAP for multiple container type) by Ayachi et al., [1] This GA can be described as follows: Initially, a first generation is randomly generated. Then, a two-point crossover operator is performed to two parent selected using the roulette-wheel method. The mutation operator consists of permuting two randomly selected containers having the same type. Five studied cases are defined by varying the containers numbers and types, to verify the performance of the three approaches. Table 3 described these instances.\nFor each case, the problem is solved 15 times and the mean of fitness values (F) and execution times are calculated. In this part, it\u2019s supposed that the population size is set to 30, Niter to 20, n1, n2 and n3= 3, Nstock_reg to 3 and Nstock_refrig to 2. The results showed in table 4 indicate that the fitness value generated by the HS algorithm is largely better for all studied cases for an execution time tolerant and lower than the execution time for GA.\nThis can be explained by the fact that the genetic algorithms evaluate simultaneously several solutions. The GA used\nselection, crossover and mutation operators to generate a better solution. Sometimes, this process is not effective enough to get optimum solution as they might not effectively preserve important patterns in chromosomes. [15] The curve shown in the following figure confirms results described in the table 4.\nHarmony search algorithm seems well suited to complex problem. It generates good results within a tolerable time even with the diversity types of containers and the appearance of many storage constraints."}, {"heading": "8. CONCLUSION", "text": "In this study, a harmony search algorithm is applied to solve the storage space allocation problem for import containers. In real world case, there are various types of container such as refrigerated, open side, empty, dry, open top, tank... Each container type has storage constraints that must be respected in the allocation process of the storage areas, which let the problem more difficult. That is refrigerated containers must be allocated to the blocks equipped by the power point, tank\ncontainers need to be placed on each others, etc. Despite this difficult, the proposed approach generated good results in a reasonable execution time. Experimental study confirms these and shows the effectiveness of the application of harmony search in the resolution of this problem. An important extension of this research would be to formulate the problem as a dynamic storage space allocation in order to solve and to make decision in real time."}, {"heading": "9. REFERENCES", "text": "[1] Ayachi, I., Kammarti, R., Ksouri, M., Borne, P., 2010, A\nGenetic algorithm to solve the container storage space allocation problem, IEEE Trans. International conference on Computational Intelligence and Vehicular System, Seoul, South Korea\n[2] Ayachi I., Kammarti R., Ksouri, M., Borne, P., 2010, Harmony search algorithm for the container storage\nproblem, 8th International Conference of Modeling and Simulation - MOSIM\u201910, Tunisia.\n[3] Bazzazi, M., Safaei, N., Javadian, N., 2009, A genetic algorithm to solve the storage space allocation problem\nin a container terminal, Computers & Industrial Engineering 36 (2009), p. 1711\u20131725.\n[4] Chen, P., Fu, Z., Lim, A., Rodrigues, B., 2004, Port yard storage optimization, IEEE Transactions on Automation\nScience and Engineering. Vol. 1, p. 26 \u2013 37.\n[5] Dorigo, M., Maniezzo, V., Colorni, A., 1996, The ant system: optimization by a colony of cooperating agents,\nIEEE Trans. Systems Man Cybernet Part B, Vol. 26, No.1, p. 2942.\n[6] Geem, Z-W., Lee, K-S., Park, Y., 2005, Application of Harmony Search to Vehicle Routing, Journal of Applied\nSciences, p. 1552-1557.\n[7] Geem, Z.W., Kim, J.H., Loganathan, G.V., 2001, A new heuristic optimization algorithm: harmony search,\nSimulation 76, p. 60-68.\n[8] Holland, J-H., 1975, Adaptation in Natural and artificial Systems, University of Michigan Press, Ann Arbor, MI.\n[9] Kammarti, R., Ayachi, I., Ksouri, M., Borne, P., 2009, Evolutionary Approach for the Containers Bin-Packing\nProblem, Studies in Informatics and Control, Vol. 18, Issue 4.\n[10] Kap Hwan Kim and Hans-Otto G\u00fcnther, Container Terminals and Cargo Systems, Design, Operations\nManagement and Logistics Control Issues, SpringerVerlag Berlin Heidelberg , 2007, pp . 3-14.\n[11] Kim, K-H., Park, K-T., 2003, A note on a dynamic space-allocation method for outbound containers,\nEuropean Journal of Operational Research, p. 92\u2013101\n[12] Kim, K-H., 1997, Evaluation of the number of rehandles in container yards, Computers & Industrial Engineering,\nVol. 32, Issue 4.\n[13] Kim, K-H., Kim, H-B., 1998, The optimal determination of the space requirement and the number of transfer\ncranes for import containers, Computers ind. Engng Vol. 35, p. 427-430\n[14] Kumar, S., Vlacic, L., 2008, Performance Analysis of Container Unloading Operations at the Port of Suva\nUsing a Simplified Analytical Model (SAM), Journal of\nAdvanced Computational Intelligence and Intelligent Informatics, Vol.12 No.4\n[15] Lee, K-S., Geem, Z-W, 2004, A new structural optimization method based on the harmony search\nalgorithm, Computers and Structures, 82: p. 781-798.\n[16] Lee, D-H., Cao, J-X, Shi, Q. ,Chen, J-H., 2009, A heuristic algorithm for yard truck scheduling and storage\nallocation problems, Transportation Research Part E 45, p. 810\u2013820\n[17] Murty K.G., Liu J., Wan Y.W, Zhang C., Tsang M.C.L., Linn R.,2005, A decision support system for operations\nin a container terminal, Journal Decision Support Systems, Volume 39 Issue 3.\n[18] Pan, Q.K., Suganthan P.N., Tasgetiren M.F., Liang J.J.,2010, A self-adaptive global best harmony search\nalgorithm for continuous optimisation problems, Applied Mathematics and Computation, 216, 830-848.\n[19] Preston, P., Kozan, E., 2001, An approach to determine storage locations of containers at seaport terminals,\nComputers & Operations Research, p. 983-995\n[20] Yang, X-S., Deb, S. , 2009, Cuckoo search via Levy flights, World Congress on Nature & Biologically\nInspired Computing (NaBIC 2009)., IEEE Publication, USA. p. 210\u2013214.\n[21] Yang, X.-S., 2008, Nature-Inspired Metaheuristic Algorithms. Luniver Press.\n[22] Zhang, C., Liu, J., Wan, Y-W., Murty, K-G., Linn, R-J., 2003, Storage space allocation in container terminals,\nTransportation Research Part B, 37, p. 883\u2013903.\n[23] Zou, D.X., Gao, L.G., Wu J.H.,Li, S., Li, Y.,2010, A novel global Harmony Search Algorithm for reliability\nproblems, Computers & Industrial Engineering, 58, 307\u2013 316."}], "references": [{"title": "A Genetic algorithm to solve the container storage space allocation problem", "author": ["I. Ayachi", "R. Kammarti", "M. Ksouri", "P. Borne"], "venue": "IEEE Trans. International conference on Computational Intelligence and Vehicular System,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2010}, {"title": "Harmony search algorithm for the container storage problem, 8th International Conference of Modeling and Simulation - MOSIM\u201910, Tunisia", "author": ["Ayachi I", "Kammarti R", "M. Ksouri", "P. Borne"], "venue": null, "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2010}, {"title": "A genetic algorithm to solve the storage space allocation problem in a container terminal", "author": ["M. Bazzazi", "N. Safaei", "N. Javadian"], "venue": "Computers & Industrial Engineering", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2009}, {"title": "Port yard storage optimization", "author": ["P. Chen", "Z. Fu", "A. Lim", "B. Rodrigues"], "venue": "IEEE Transactions on Automation Science and Engineering", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2004}, {"title": "The ant system: optimization by a colony of cooperating agents", "author": ["M. Dorigo", "V. Maniezzo", "A. Colorni"], "venue": "IEEE Trans. Systems Man Cybernet Part B,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1996}, {"title": "Application of Harmony Search to Vehicle Routing", "author": ["Geem", "Z-W", "Lee", "K-S", "Y. Park"], "venue": "Journal of Applied Sciences,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2005}, {"title": "A new heuristic optimization algorithm: harmony search, Simulation", "author": ["Z.W. Geem", "J.H. Kim", "G.V. Loganathan"], "venue": null, "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2001}, {"title": "Adaptation in Natural and artificial Systems, University of Michigan Press, Ann Arbor, MI", "author": ["Holland", "J-H"], "venue": null, "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1975}, {"title": "Evolutionary Approach for the Containers Bin-Packing Problem", "author": ["R. Kammarti", "I. Ayachi", "M. Ksouri", "P. Borne"], "venue": "Studies in Informatics and Control,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2009}, {"title": "Container Terminals and Cargo Systems, Design, Operations Management and Logistics Control Issues", "author": ["Kap Hwan Kim", "Hans-Otto G\u00fcnther"], "venue": null, "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2007}, {"title": "A note on a dynamic space-allocation method for outbound containers", "author": ["Kim", "K-H", "Park", "K-T"], "venue": "European Journal of Operational Research,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2003}, {"title": "Evaluation of the number of rehandles in container yards", "author": ["Kim", "K-H"], "venue": "Computers & Industrial Engineering,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1997}, {"title": "The optimal determination of the space requirement and the number of transfer cranes for import containers, Computers ind", "author": ["Kim", "K-H", "H-B"], "venue": "Engng Vol", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1998}, {"title": "Performance Analysis of Container Unloading Operations at the Port of Suva Using a Simplified Analytical Model (SAM)", "author": ["S. Kumar", "L. Vlacic"], "venue": "Journal of  Advanced Computational Intelligence and Intelligent Informatics,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2008}, {"title": "A new structural optimization method based on the harmony search algorithm", "author": ["Lee", "K-S", "Geem", "Z-W"], "venue": "Computers and Structures,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2004}, {"title": "A heuristic algorithm for yard truck scheduling and storage allocation problems, Transportation", "author": ["Lee", "D-H", "Cao", "J-X", "Q. Shi", "Chen", "J-H"], "venue": "Research Part E", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2009}, {"title": "A self-adaptive global best harmony search algorithm for continuous optimisation problems", "author": ["Pan Q.K", "P.N. Suganthan", "M.F. Tasgetiren", "J.J. Liang"], "venue": "Applied Mathematics and Computation,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2010}, {"title": "An approach to determine storage locations of containers at seaport terminals", "author": ["P. Preston", "E. Kozan"], "venue": "Computers & Operations Research,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2001}, {"title": "Cuckoo search via Levy flights, World Congress on Nature & Biologically Inspired Computing (NaBIC 2009)", "author": ["Yang", "X-S", "S. Deb"], "venue": "IEEE Publication,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2009}, {"title": "Nature-Inspired Metaheuristic Algorithms", "author": ["Yang", "X.-S"], "venue": null, "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2008}, {"title": "A novel global Harmony Search Algorithm for reliability problems, Computers ", "author": ["D.X. Zou", "L.G. Gao", "Wu J.H", "S. Li", "Y. Li"], "venue": "Industrial Engineering,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2010}], "referenceMentions": [{"referenceID": 7, "context": "They imitate natural phenomena such as the genetic algorithm inspired by biological evolutionary process [8], ant colony [5], the harmony search [7], firefly algorithm [21], cuckoo search [20].", "startOffset": 105, "endOffset": 108}, {"referenceID": 4, "context": "They imitate natural phenomena such as the genetic algorithm inspired by biological evolutionary process [8], ant colony [5], the harmony search [7], firefly algorithm [21], cuckoo search [20].", "startOffset": 121, "endOffset": 124}, {"referenceID": 6, "context": "They imitate natural phenomena such as the genetic algorithm inspired by biological evolutionary process [8], ant colony [5], the harmony search [7], firefly algorithm [21], cuckoo search [20].", "startOffset": 145, "endOffset": 148}, {"referenceID": 19, "context": "They imitate natural phenomena such as the genetic algorithm inspired by biological evolutionary process [8], ant colony [5], the harmony search [7], firefly algorithm [21], cuckoo search [20].", "startOffset": 168, "endOffset": 172}, {"referenceID": 18, "context": "They imitate natural phenomena such as the genetic algorithm inspired by biological evolutionary process [8], ant colony [5], the harmony search [7], firefly algorithm [21], cuckoo search [20].", "startOffset": 188, "endOffset": 192}, {"referenceID": 0, "context": "To evaluate the performance of this method, we compare his results with those generated by the genetic algorithm described in [1] and the Last In First Out algorithm.", "startOffset": 126, "endOffset": 129}, {"referenceID": 6, "context": "Harmony search algorithm was proposed by [7].", "startOffset": 41, "endOffset": 44}, {"referenceID": 5, "context": "It was successfully applied to solve various engineering optimization problems such as vehicle routing [6], reliability [23], structural optimization [15] and function optimisation [18] The rest of this paper is organized as follows: In section 2, a literature review for the container storage problem is presented.", "startOffset": 103, "endOffset": 106}, {"referenceID": 20, "context": "It was successfully applied to solve various engineering optimization problems such as vehicle routing [6], reliability [23], structural optimization [15] and function optimisation [18] The rest of this paper is organized as follows: In section 2, a literature review for the container storage problem is presented.", "startOffset": 120, "endOffset": 124}, {"referenceID": 14, "context": "It was successfully applied to solve various engineering optimization problems such as vehicle routing [6], reliability [23], structural optimization [15] and function optimisation [18] The rest of this paper is organized as follows: In section 2, a literature review for the container storage problem is presented.", "startOffset": 150, "endOffset": 154}, {"referenceID": 16, "context": "It was successfully applied to solve various engineering optimization problems such as vehicle routing [6], reliability [23], structural optimization [15] and function optimisation [18] The rest of this paper is organized as follows: In section 2, a literature review for the container storage problem is presented.", "startOffset": 181, "endOffset": 185}, {"referenceID": 9, "context": "The chain of operations for import containers are performed in the reverse order [10].", "startOffset": 81, "endOffset": 85}, {"referenceID": 10, "context": "Kim and Park [11] proposed a heuristic decision rule and a sub-gradient optimization technique to solve the storage space allocation for outbound containers.", "startOffset": 13, "endOffset": 17}, {"referenceID": 17, "context": "Preston and Kozan [19] proposed a genetic algorithm to solve the container location model at seaport terminals.", "startOffset": 18, "endOffset": 22}, {"referenceID": 11, "context": "Kim [12] presented a technique to estimate the rehandlings number for the next pick-up and the total number of rehandles to pick up all inbound containers in a bay.", "startOffset": 4, "endOffset": 8}, {"referenceID": 12, "context": "Kim and Kim [13] proposed a cost model to estimate various cost components related to the import container handling and to determine subsequently the storage space and the number of transfer cranes required.", "startOffset": 12, "endOffset": 16}, {"referenceID": 13, "context": "Also, in [14], a prediction model of unloading containers times and equipment utilization is presented.", "startOffset": 9, "endOffset": 13}, {"referenceID": 3, "context": "[4] combined diverse meta-heuristics (tabu search, simulated annealing and genetic algorithms) to solve the port yard storage optimization problem.", "startOffset": 0, "endOffset": 3}, {"referenceID": 15, "context": "[16] developed a heuristic algorithm to solve the yard truck scheduling and the storage allocation problems.", "startOffset": 0, "endOffset": 4}, {"referenceID": 1, "context": "In [2], a harmony search algorithm is proposed to solve the SSAP where a single container type was considered.", "startOffset": 3, "endOffset": 6}, {"referenceID": 8, "context": "The results were compared to a genetic algorithm previously applied to the same problem in [9] and recorded good results.", "startOffset": 91, "endOffset": 94}, {"referenceID": 2, "context": "[3] extended the SSAP proposed in the literature [22], where different containers types and sizes are considered simultaneously.", "startOffset": 0, "endOffset": 3}, {"referenceID": 0, "context": "[1] developed a genetic algorithm to solve the problem of allocating containers of multiple types, in storage spaces in the port.", "startOffset": 0, "endOffset": 3}, {"referenceID": 14, "context": "So, it can be easily adopted for various types of engineering optimization problems [15]", "startOffset": 84, "endOffset": 88}, {"referenceID": 5, "context": "Analogy between musical improvisations and optimization process [6]", "startOffset": 64, "endOffset": 67}, {"referenceID": 5, "context": "The Harmony search algorithm has been successfully applied to vehicle routing problem [6], hydrologic parameter calibration [15] and to the Storage space allocation problem [2] The HS algorithm includes five steps: parameters initialization, the harmony memory (HM) initialization, the new harmony improvisation, the harmony memory update and the check of termination criterion.", "startOffset": 86, "endOffset": 89}, {"referenceID": 14, "context": "The Harmony search algorithm has been successfully applied to vehicle routing problem [6], hydrologic parameter calibration [15] and to the Storage space allocation problem [2] The HS algorithm includes five steps: parameters initialization, the harmony memory (HM) initialization, the new harmony improvisation, the harmony memory update and the check of termination criterion.", "startOffset": 124, "endOffset": 128}, {"referenceID": 1, "context": "The Harmony search algorithm has been successfully applied to vehicle routing problem [6], hydrologic parameter calibration [15] and to the Storage space allocation problem [2] The HS algorithm includes five steps: parameters initialization, the harmony memory (HM) initialization, the new harmony improvisation, the harmony memory update and the check of termination criterion.", "startOffset": 173, "endOffset": 176}, {"referenceID": 0, "context": ", [1] This GA can be described as follows: Initially, a first generation is randomly generated.", "startOffset": 2, "endOffset": 5}, {"referenceID": 14, "context": "[15] The curve shown in the following figure confirms results described in the table 4.", "startOffset": 0, "endOffset": 4}], "year": 2012, "abstractText": "This paper presents an adaptation of the harmony search algorithm to solve the storage allocation problem for inbound and outbound containers. This problem is studied considering multiple container type (regular, open side, open top, tank, empty and refrigerated) which lets the situation more complicated, as various storage constraints appeared. The objective is to find an optimal container arrangement which respects their departure dates, and minimize the re-handle operations of containers. The performance of the proposed approach is verified comparing to the results generated by genetic algorithm and LIFO algorithm. General Terms Container storage problem, metaheuristics.", "creator": "Microsoft\u00ae Office Word 2007"}}}