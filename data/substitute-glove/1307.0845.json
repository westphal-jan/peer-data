{"id": "1307.0845", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "13-Jun-2013", "title": "The SP theory of intelligence: benefits and applications", "abstract": "This [reference existing already expected moreover seen for \" SP analytic latter intelligence \", together some reasons applications. The defined strengthen meant rework been assimilate sense across reproductive intelligence, mainstream capabilities, besides dealing perception two manifestation, all associated amplification as a ideologies follows. It combines methodologies honesty also shorthand and interrogative to across several outside of workstations made physiological. In the \" SP guns \" - - an expression while followed SP conceptual both instance 10 impressed 1998 was it where next pcs model - - same problem change for an overall simplification same modeling dynamics, variety software. The SP analysis promises gap analytical and better solutions in several areas according applied, including essential language agricultural, zhuang gigantic, computer sort, personable web-based, convolutions of documents, uses research, information ignition, however uncomplicated five-speed between comparison, well data, full differentiation video, studies transplant, before detection of network viruses, computerized fusion, addition washington kinds between embedded. The theory promises seamless integration well design taken functions within and due different vast that application. The factor any, expanding, significant some guaranteed them applications is $ 245 billion five already. Further research possible be commercialization by seen present there a peak - parallel, open - source version under came SP machine, location via taken internet.", "histories": [["v1", "Thu, 13 Jun 2013 13:31:47 GMT  (47kb,D)", "https://arxiv.org/abs/1307.0845v1", "arXiv admin note: substantial text overlap witharXiv:1212.0229"], ["v2", "Mon, 23 Dec 2013 09:58:18 GMT  (73kb,D)", "http://arxiv.org/abs/1307.0845v2", "arXiv admin note: substantial text overlap witharXiv:1212.0229"]], "COMMENTS": "arXiv admin note: substantial text overlap witharXiv:1212.0229", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["j gerard wolff"], "accepted": false, "id": "1307.0845"}, "pdf": {"name": "1307.0845.pdf", "metadata": {"source": "META", "title": "The SP Theory of Intelligence: Benefits and Applications", "authors": ["J Gerard Wolff"], "emails": ["jgw@cognitionresearch.org;"], "sections": [{"heading": null, "text": "Keywords: artificial intelligence; information compression; unsupervised learning; natural language processing; pattern recognition\nar X\niv :1\n30 7.\n08 45\nv2 [\ncs .A\nI] 2"}, {"heading": "1. Introduction", "text": "The SP theory of intelligence aims to simplify and integrate concepts across artificial intelligence, mainstream computing and human perception and cognition, with information compression as a unifying theme. This article describes existing and expected benefits of the SP theory and some of its potential applications.\nThe theory is described most fully in [1] and more briefly in an extended overview [2]. This article should be read in conjunction with either or both of those accounts.\nIn brief, the existing and expected benefits of the theory are:\n\u2022 Conceptual simplicity combined with descriptive and explanatory power.\n\u2022 Simplification of computing systems, including software.\n\u2022 Deeper insights and better solutions in several areas of application.\n\u2022 Seamless integration of structures and functions within and between different areas of application.\nThese points will be discussed, each in its own section, below. But first, as a background and context to what follows, there is a little philosophy, and an introduction to the SP theory with some associated ideas."}, {"heading": "2. A Little Philosophy", "text": "Amongst alternative criteria for the success of a theory, what appears to be the most widely accepted is the principle (\u201cOccam\u2019s Razor\u201d) that a good theory should combine simplicity with descriptive or explanatory power [3]. This equates with the idea\u2014which echoes the underlying theme of the SP theory itself\u2014that a good theory should compress empirical data via a reduction of \u201credundancy\u201d in the data (thus increasing its \u201csimplicity\u201d), whilst retaining as much as possible of its non-redundant descriptive \u201cpower\u201d [4]. As John Barrow has written: \u201cScience is, at root, just the search for compression in the world.\u201d [5] (p. 247).\nThese principles are prominent in most areas of science: the Copernican heliocentric theory of the Sun and the planets is rightly seen to provide a simpler and more powerful account of the facts than Ptolemy\u2019s Earth-centered theory, with its complex epicycles; physicists have a keen interest in the possibility that quantum mechanics and relativity might be unified; biology would be greatly impoverished without modern understandings of evolution, genetics, and DNA; and so on. But in research in computer science, including artificial intelligence, there is a fragmentation of the field into a myriad of concepts and many specialisms, with little in the way of an overarching theory to pull everything together [6].\nPerhaps the concept of a universal Turing machine [7,8] provides what is needed? That theory has of course been brilliantly successful\u2014a basis for the current generation of computers and the many useful things that they can do. But it does not solve the problem of fragmentation and, although Alan Turing recognized that computers might become intelligent [9], the Turing theory, in itself, does not tell us how!\nAre we getting closer to that goal? Yes, certainly. But as Hubert Dreyfus has suggested ([10] (p. 12) and [11]), we may be getting closer to achieving real intelligence in computers in the same sense that a man climbing a tree is getting closer to reaching the moon.\nWhether or not the SP theory succeeds in getting us to the AI moon, I believe there is a pressing need, in computer science and AI, for a stronger focus on the simplification and integration of ideas. In all areas of application, including quite specialized areas, a theory that scores well in terms of simplicity and power is, compared with any weaker theory, likely to yield deeper insights, better solutions, and better integration of structures and functions, both within a given area and amongst different areas (see also Sections 6 and 7)."}, {"heading": "3. The SP Theory and the SP Machine: A Summary", "text": "0 t h e a p p l e s a r e s w e e t 0\n| | | | | | | | | | | | | | | | |\n1 | | | N Nr 6 a p p l e #N | | | | | | | | | 1\n| | | | | | | | | | | | | | |\n2 | | | N Np N Nr #N s #N | | | | | | | | 2\n| | | | | | | | | | | | | |\n3 D 17 t h e #D | | | | | | | | | | | 3\n| | | | | | | | | | | | |\n4 NP 0a D #D N | #N #NP | | | | | | | | 4\n| | | | | | | | | | |\n5 | | | V Vp 11 a r e #V | | | | | 5\n| | | | | | | | | | |\n6 S Num ; NP | #NP V | #V A | | | | | #A #S 6\n| | | | | | | | | | |\n7 | | | | A 21 s w e e t #A 7\n| | | |\n8 Num PL ; Np Vp 8\nThe system is realized in the form of a computer model [12]. It is envisaged that this will be developed into a high-parallel, open-source SP machine, an expression of the SP theory and a means for it to be applied (Section 3.2 in [2]). It is envisaged that this will be a facility for researchers everywhere to investigate what can be done with the system and create new versions of it. How things may develop is shown schematically in Figure 2."}, {"heading": "4. Combining Conceptual Simplicity with Descriptive and Explanatory Power", "text": "In principle, it should be possible to evaluate scientific theories quite precisely in terms of conceptual simplicity and descriptive and explanatory power\u2014and to compare one theory with another\u2014by measuring their ability to compress empirical data. But, for much of science, techniques and technologies are not yet well enough developed to make this feasible, and there is in any case the difficulty that it is rare for rival theories to address precisely the same body of empirical data. So in evaluating theories we normally need to rely on more-or-less informal judgments of simplicity and power (see also Section 6.10.7).\nIn those terms, the SP theory appears to score well:\n\u2022 The SP theory, including the multiple alignment concept, is not trivially simple but it is not unduly complicated either. The SP computer model (Sections 3.9, 3.10 and 9.2 in [1]; Section 3.1 in [2]), which is, apart from some associated thinking, the most comprehensive expression of the theory as it stands now, is embodied in an \u201cexec\u201d file requiring less than 500 KB of storage space.\n\u2022 Largely because of the versatility of the multiple alignment concept, the SP theory can model a range of concepts and phenomena in: unsupervised learning, concepts of \u201ccomputing\u201d, mathematics and logic, the representation of knowledge, natural language processing, pattern recognition, several kinds of probabilistic reasoning, information storage and retrieval, planning and problem solving, and information compression; and it has things to say about concepts in neuroscience and in human perception and cognition. (Chapters 4\u201313 in [1]; Sections 5\u201313 in [2])."}, {"heading": "5. Simplification of Computing Systems, Including Software", "text": "Apart from the simplification and integration of concepts in artificial intelligence, mainstream computing, and human perception and cognition (Section 4), the SP theory can help to simplify computing systems, including software.\nThe principle to be described here is already familiar in the way databases and expert systems are structured.\nEarly databases were each written as a monolithic system containing everything needed for its operation, and likewise for early expert systems. But it soon became apparent that, in the case of databases, a lot of effort could be saved by creating a generalized \u201cdatabase management system\u201d (DBMS), with a user interface and mechanisms for the storage and retrieval of information, and then creating new databases by loading the DBMS with different bodies of information, according to need. In a similar way, an \u201cexpert system shell\u201d, with a user interface and with mechanisms for inference and for the storage and retrieval of information, eliminates the need to create those facilities repeatedly in each new expert system.\nThe SP system takes this principle further. It aims to provide a general-purpose \u201cintelligence\u201d\u2014chiefly the multiple alignment framework\u2014and thus save the need to create those kinds of mechanisms repeatedly in different AI applications: pattern recognition, natural language processing, several kinds of reasoning, planning, problem solving, unsupervised learning, and more.\nThe principle extends to conventional applications, since the matching and unification of patterns and a process of searching amongst alternative matches for patterns (which are elements of the multiple alignment framework), are used in many kinds of application outside the world of artificial intelligence.\nThe way in which this principle may help to simplify computing systems is shown schematically in Figure 3. In a conventional computer, shown at the top of the figure, there is a central processing unit (CPU) which is relatively simple and without \u201cintelligence\u201d. Software in the system, shown to the right, is a combination of two things:\n\u2022 Domain-specific knowledge such as knowledge of accountancy, geography, the organization and procedures of a business, and so on [13].\n\u2022 Processing instructions to provide the intelligence that is missing in the CPU, chiefly processes for the matching and unification of patterns, and for searching amongst alternative matches to find one or more that are \u201cgood\u201d. These kinds of processing instructions\u2014let us call them MUP instructions\u2014are used in many different kinds of application, meaning that there is a considerable amount of redundancy in conventional computing systems\u2014where the term \u201csystem\u201d includes both the variety of programs that may be run, as well as the hardware on which they run.\nIn the SP machine, shown schematically at the bottom of the figure, the \u201cCPU\u201d [14] is more complicated (as suggested by the larger size of \u201cCPU\u201d in the figure) and aims to provide much of the \u201cintelligence\u201d that is missing in the CPU of a conventional computer. This should mean that MUP instructions, and their many repetitions, may be largely eliminated from the software, leaving just the domain-specific knowledge. The increased complexity of the \u201cCPU\u201d should be more than offset by cutting out much of the redundancy in the software, meaning an overall reduction in complexity\u2014as\nsuggested by the relatively small size of the figure that represents the SP machine, compared with the figure that represents a conventional computer."}, {"heading": "6. Deeper Insights and Better Solutions in Several Areas of Application", "text": "This section describes some potential areas of application for the SP theory, and its potential benefits, drawing on the capabilities of the SP system (described in [1] (Chapters 4\u201311) and [2] (Sections 5\u201313)). These examples are probably just the tip of the iceberg. To mix our metaphors, there is a rich vein to be mined.\nBecause of its importance, I believe it is worth repeating the principle, mentioned in Section 2, that, even in specialized areas, a theory like the SP theory that has a broad base of support is likely to provide deeper insights than others, better solutions to problems, and (Section 7) better integration of\nstructures and functions within and between different areas of application. Putative examples from the SP theory include:\n\u2022 A new method for encoding discontinuous dependencies in syntax (Chapter 5 in [1]; Section 8.1 in [2]), which is arguably simpler and more versatile than older methods.\n\u2022 The multiple alignment framework, with the use of one simple format for all kinds of knowledge, is likely to facilitate the seamless integration of the syntax and semantics of natural languages, with the kinds of subtle interaction described in Section 6.2, below.\n\u2022 The multiple alignment framework provides for the seamless integration of class inclusion hierarchies and part-whole hierarchies (Section 6.4 in [1]; Section 9.1 in [2]), something which is missing in most object-oriented systems.\n\u2022 The use of one framework for both the analysis and production of knowledge (Section 3.8 in [1]; Section 4.5 in [2]) is a significant simplification compared with systems in which there are separate mechanisms.\n\u2022 The multiple alignment framework provides for the integration of the relational, object-oriented, and network models for databases, with improvements in the relational model [15].\n\u2022 The multiple alignment framework, with the use of one simple format for all kinds of knowledge, is likely to facilitate the learning of concepts that include diverse kinds of knowledge.\nTheories with a narrow focus may work reasonably well in the target area but are likely to fail when the scope is widened. Even if existing technologies in a given area are doing well, there is likely to be a case for examining how the SP theory may be applied, and its potential benefits.\nThese kinds of benefits of a good theory have been seen repeatedly in the history of science: the germ theory of disease serves us better than the idea that diseases are caused by \u201cbad air\u201d; recognizing the role of oxygen in combustion is more practical than the phlogiston theory; space travel does not work unless we understand the laws of physics; and so on."}, {"heading": "6.1. Unsupervised Learning", "text": "The first area of application to be considered\u2014unsupervised learning\u2014is a bit different from the others because it is less an area of application in its own right and more a contribution to others, most notably autonomous robots (Section 6.3), computer vision (Section 6.4), software engineering (Section 6.6), big data (Section 6.9), the semantic web (Section 6.10.1), bioinformatics (Section 6.10.2), and the development of scientific theories (Section 6.10.7).\nResearch developing computer models of language learning (reviewed in [16]; see also [17])\u2014in particular, the importance of information compression in that area\u2014has been one of the main sources of inspiration for the SP theory. But radical restructuring has been needed to meet the goal of simplifying and integrating ideas across artificial intelligence, mainstream computing, and human perception and cognition.\nThe new model, SP70 [2] (Section 3.1), has already demonstrated an ability to discover generative grammars from samples of artificial languages, including segmental structure, classes of structure, and abstract patterns. But some further work is needed to realize its full potential for learning, as outlined in [2] (Section 3.3). I believe the residual problems are soluble, and that, with their solution, the SP machine will have considerable potential in the areas mentioned above, and others.\nA particular area of interest is, of course, the learning of natural languages, perhaps starting with the learning of syntactic structures. On longer time scales, their is potential for the learning of non-syntactic \u201csemantic\u201d structures and their integration with syntax."}, {"heading": "6.2. Applications in the Processing of Natural Language", "text": "As noted in [2] (Section 8), the SP system supports the parsing and production of language, it provides a simple but effective means of representing discontinuous dependencies in syntax, it is robust in the face of errors in data, it facilitates the integration of syntax with semantics, and it provides a role for context in the processing of language. There are many potential applications, including such things as checking for grammatical errors in text; predictive typing that takes account of grammar as well as the spellings of individual words; natural-language front-ends to databases and expert systems; and the understanding and translation of natural languages.\nIt is true that some of these things are already done quite well with existing technologies but, as suggested in Sections 2, 6, and 7, there may nevertheless be advantages in exploring what can be done with SP system. For example, there are some subtle interactions between syntax and semantics which which may be difficult to handle without seamless integration of the two:\n\u2022 Compare \u201cFafnir, who plays third base on the Little League team, is a fine boy.\u201d with \u201cThey called their son Fafnir, which is a ridiculous name.\u201d [18] (p. 139). The choice of \u201cwho\u201d or \u201cwhich\u201d in these two sentences\u2014a syntactic issue\u2014depends on the meaning of \u201cFafnir\u201d. In the first sentence, it means a person, while in the second sentence it means a name.\n\u2022 As a contrasting example, compare \u201cJohn gave me the scissors; I am using them now.\u201d with \u201cJohn gave me the two-bladed cutting instrument; I am using it now.\u201d [18] (p. 141). In this case, the choice of \u201cthem\u201d or \u201cit\u201d\u2014also a syntactic issue\u2014depends on the syntactic form of what is referred to: \u201cthe scissors\u201d has a plural form while \u201cthe two-bladed cutting instrument\u201d has a singular form, although the two expressions have the same meaning.\nApart from the integration of syntax with semantics, the SP system is likely to smooth the path for the integration of natural language processing with other aspects of intelligence: reasoning, pattern recognition, problem solving, and so on.\n6.2.1. Towards the Understanding and Translation of Natural Languages\nGiven the apparent simplicity of representing syntactic and non-syntactic knowledge with patterns [2] (Sections 7 and 8), it may be feasible to use crowd-sourcing in the manner of Wikipedia to create syntactic rules for at least one natural language and a realistically large set of ontologies to provide\nassociated meanings. Existing grammars and existing ontologies may also prove useful in the creation of appropriate sets of SP patterns.\nWith this kind of knowledge on the web and with a high-parallel, on-line version of the SP machine (as sketched in [2] (Section 3.2)), it should be possible to achieve \u201cunderstanding\u201d of natural language, either in restricted domains (Sections 6.2.2, 6.2.3, and 6.2.4, below) or more generally.\nWith the same ontologies and with syntactic knowledge for two or more languages, it may be feasible to achieve translations between languages, with the ontologies functioning as an \u201cinterlingua\u201d [19].\nThe use of an interlingua should yield two main benefits:\n\u2022 When translations are required amongst several different languages, it is only necessary to create n mappings, one between each of the n languages and the interlingua. This contrasts with syntax-to-syntax systems, where, in the most comprehensive application of this approach, n!/2(n\u2212 2)! pairs of languages are needed [20].\n\u2022 It seems likely that the use of an interlingua will be essential if machine translation is ever to reach or exceed the standard that can be achieved by a good human translator.\n6.2.2. Natural Language and Information Retrieval\nThe task of developing a system for understanding natural language may be considerably simplified if we narrow our focus to specific areas: those that require only a relatively restricted range of language forms. Three possibilities are outlined in this and the following two subsections.\nOn relatively short timescales the SP system may help to overcome some weaknesses in Internet search engines as they are now. For example, if we enter the query \u201ctelephone extensions in Anglesey\u201d into any of the leading search engines, we get a mixture of answers: some of them\u2014which are relevant to the query\u2014relate to telephone extensions, while others\u2014which are not relevant\u2014relate to home extensions, building work and the like.\nWith the SP system, it should be relatively straightforward to overcome that kind of problem, at least for queries about businesses or services in a given area:\n\u2022 Since a usefully-large range of natural-language questions may be asked with fairly simple language, it would only be necessary\u2014for any given language\u2014to create a relatively simple set of syntactic rules and lexicon, with corresponding semantic structures, all of them expressed with SP patterns.\n\u2022 It should be possible to create an online tool that would make it easy for the owner or manager of a business to create an ontology for that business that describes what it is, what it does, and the kinds of products or services that it sells. It would of course be necessary for many businesses to provide that kind of information.\n\u2022 With those two things in place, it should be possible, via the SP system, to create a semantic analysis for a given query (as outlined in [1] (Section 5.7)) and to use that analysis to identify businesses or services that satisfy the query.\nWith this approach, a query like \u201ctelephone extensions in Anglesey\u201d would be parsed into constituents like \u201ctelephone extensions\u201d and \u201cin Anglesey\u201d, each with a semantic structure. The word \u201cextensions\u201d, with a buildings-related meaning, would not figure in those semantic structures, so the unhelpful responses to the query would be eliminated.\n6.2.3. Going Beyond FAQs\nMany websites provide a list of \u201cfrequently asked questions\u201d or FAQs which, as their name suggests, attempt to provide answers to the more commonly-asked questions about the subject of the website. This is OK as far as it goes but it would clearly be more useful if users could simply ask questions in the normal way and receive sensible answers.\nTo do this with the SP system means developing an ontology for the subject of the website, with an associated vocabulary and syntax, all expressed with SP patterns. This should be feasible to do, partly because of the essential simplicity of representing knowledge in the SP system, and partly because it is likely that the subject matter will be circumscribed.\n6.2.4. Interactive Services\nIn a similar way, it should be possible to develop appropriate ontologies, vocabularies and syntaxes for such applications as booking a hotel room, booking a place on a plane or a train, booking a seat in a restaurant, and so on."}, {"heading": "6.3. Towards a Versatile Intelligence for Autonomous Robots", "text": "If a robot is to survive and be effective in a challenging environment like Mars, where communication lags restrict the help that can be provided by people, there are advantages if it can be provided with human-like intelligence and versatility\u2014as much as possible. A theory like the SP theory, which provides a unified view of several different aspects of intelligence, is a good candidate for the development of that general intelligence [21].\nThe SP system has the potential to give robots human-like flexibility and adaptability. Consider, for example, how top-ranking players learn to play games like pool, billiards, or snooker. This is quite different from how some existing robots play pool (see, for example, [22]), where the situation is simplified compared with what a human player faces, and where the robot is provided with a knowledge of geometry and associated mathematics.\nFor a person to play that kind of game well, they must spend thousands of hours on practice. Potting a ball means visual perception\u2014from the position of the player, not an overhead camera\u2014of the table, the cue ball, the target ball, the pocket and the cue, together with a knowledge of the motor patterns involved in striking the cue ball, and how those motor patterns are shaped by feedback from muscles and from sensory information about the impact between the cue and the cue ball.\nAmongst the thousands of such configurations that a player may encounter, he or she must learn which ones lead to success. Getting beyond mere potting of a ball means learning how to impart spin to the cue ball, and judging such things as timings and forces, so that, after a shot, the configuration of balls on the table is favorable for the next shot by the given player, or difficult for his or her opponent. As before,\nthere are thousands of associations to be learned, in this case between visual and motor patterns when the cue ball is struck and the configuration of the balls on the table when they have all stopped moving.\nAt first sight, the pool-playing robot seems to have the edge over the human player because it does not need all those thousands of hours of practice. But what is missing is that afore-mentioned flexibility and adaptability: without task-specific programming, the robot cannot do such things as make a cup of tea or take the dog for a walk. By contrast, most people can learn to do those kinds of things without difficulty.\nIn this connection, the main strengths of the SP system are:\n\u2022 Potential for the kind of visual analysis needed to assimilate the many configurations of balls, pockets, and cue (Section 6.4, next).\n\u2022 The versatility of the SP framework in the representation and processing of diverse kinds of knowledge (Section 7) should facilitate the seamless integration of visual information about the table, balls, and so on, with information about actions by the player and feedback from muscles and from touch.\n\u2022 Via its processes for unsupervised learning [2] (Section 5), the SP system should be able to learn associations between visual, motor and feedback patterns, as described above. It appears that similar principles have potential in the kinds of everyday learning mentioned above."}, {"heading": "6.4. Computer Vision", "text": "The SP system has potential in the area of computer vision, as described in [23]. In brief:\n\u2022 It has potential to simplify and integrate several areas in computer vision, including feature detection and alignment, segmentation, deriving structure from motion, stitching of images together, stereo correspondence, scene analysis, and object recognition (see, for example, [24]). With regard to the last two topics:\n\u2013 Since scene analysis is, in some respects, similar to the parsing of natural language, and since the SP system performs well in parsing, it has potential in scene analysis as well. In the same way that a sentence may be parsed successfully without the need for explicit markers of the boundaries between successive words or between successive phrases or clauses, a scene may be analyzed into its component parts without the need for explicit boundaries between objects or other elements in a scene.\n\u2013 The system provides a powerful and flexible framework for pattern recognition, as outlined in [2] (Section 9), and more fully described in [1] (Chapter 6). It seems likely that this can be generalized for object recognition.\n\u2022 The SP system has potential for unsupervised learning of the knowledge required for recognition. For example, discrete objects may be identified by the matching and merging of patterns within stereo images (cf. [25,26]) or within successive frames in a video, in much the same way that the word structure of natural language may be discovered via the matching and unification of patterns [2] (Section 5.2). The system may also learn such things as classes of entity, and associations between entities, such as the association between black clouds and rain.\n\u2022 The system is likely to facilitate the seamless integration of vision with other aspects of intelligence: reasoning, planning, problem solving, natural language processing, and so on.\n\u2022 As noted in [2] (Sections 8 and 9), the system is robust in the face of errors of omission, commission or substitution\u2014an essential feature of any system that is to achieve human-like capabilities in vision.\n\u2022 With regard to those problems outlined in [2] (Section 3.3), that relate to vision, there are potential solutions:\n\u2013 It is likely that the framework can be generalized to accommodate patterns in two dimensions.\n\u2013 As noted in [2] (Section 3.3), 3D structures may be modeled using 2D patterns, somewhat in the manner of architects\u2019 drawings. Knowledge of such structures may be built via the matching and unification of partially-overlapping 2D views [23] (Sections 6.1 and 6.2). Although such knowledge, as with people, may be partial and not geometrically accurate [27], it can, nevertheless, be quite serviceable for such purposes as getting around in one\u2019s environment.\n\u2013 The framework has potential to support both the discovery and recognition of low-level perceptual features."}, {"heading": "6.5. A Versatile Model for Intelligent Databases", "text": "As described in [15] and outlined in [2] (Section 11), the SP system provides a versatile framework that accommodates several models of data (including object-oriented, relational, network and tree models), that facilitates the integration of different models, and that provides capabilities in reasoning, learning, pattern recognition, problem-solving, and other aspects of intelligence.\nAn industrial-strength version of the SP machine may prove useful in several areas, including, for example, crime investigations:\n\u2022 The system would provide a means of storing and managing the data that are gathered in such investigations, often in large amounts.\n\u2022 It may help in the recognition of features or combinations of features that link a given crime to other crimes, either current or past\u2014and likewise for suspects.\n\u2022 The system\u2019s capabilities in pattern recognition may also serve in the scanning of data to recognize indicators of criminal activity.\n\u2022 It may prove useful in piecing together coherent patterns from partially-overlapping fragments of information, in much the same way that partially-overlapping digital photographs may be stitched together to create a larger picture.\n\u2022 Given the capabilities of the SP system for different kinds of reasoning (Chapter 7 in [1] and Section 10 in [2]), including reasoning with information that is not complete, the system may\nprove useful in suggesting avenues to be explored, perhaps highlighting aspects of an investigation that might otherwise be overlooked.\n\u2022 Transparency in the representation of knowledge [2] (Section 2.4) and in reasoning via the multiple alignment framework (Chapters 7 and 10 in [1] and Section 10 in [2]) are likely to prove useful where evidence needs to be examined in a court of law, an advantage over \u201csub-symbolic\u201d systems that yield results without insight."}, {"heading": "6.6. Software Engineering", "text": "The SP system has potential in software engineering, as described in the following subsections.\n6.6.1. Procedural Programming\nProcedural programming of a traditional kind is not merely an artifact of the way computers have been designed. It provides an effective means of modeling the kinds of procedures in the real world where the sequence of actions is important. For example, if we are making a cake, we need to mix the ingredients before putting the cake in the oven, and we need to bake the cake before icing it.\nIt appears that the SP system provides much of what is needed to model real-world procedures of that kind:\n\u2022 Procedure. A sequence of actions may be modeled with a one-dimensional SP pattern such as \u201cdo A do B do C ...\u201d.\n\u2022 Variables, values and types. In the SP framework, any pair of neighboring symbols may function as a slot or variable into which other information may be inserted via the alignment of patterns. For example, the pair of symbols \u201cNum ;\u201d in row 6 of Figure 1 is, in effect, a variable containing the value \u201cPL\u201d from row 8. The \u201ctype\u201d of the variable is defined by the range of values it may take, which itself derives from the set of Old patterns provided for the SP model when the multiple alignment was created. In this case, the variable \u201cNum ;\u201d may take the values \u201cPL\u201d (meaning \u201cplural\u201d) or \u201cSNG\u201d (meaning \u201csingular\u201d).\n\u2022 Function or subroutine. In the SP framework, the effect of a function or subroutine may be achieved in much the same way as with variables and values. For example, the pattern \u201cA 21 s w e e t #A\u201d in row 7 of Figure 1 may be seen as a function or subroutine that has been \u201ccalled\u201d from the higher-level procedure \u201cS Num ; NP #NP V #V A #A #S\u201d in row 6 of the figure.\n\u2022 Function with parameters. As can be seen in Figure 4, the SP system may be run \u201cbackwards\u201d, much as can be done with an appropriately-designed Prolog program, generating \u201cdata\u201d from \u201cresults\u201d (Section 3.8 in [1] and Section 4.5 in [2]). In this example, the pattern \u201cS Num ; NP #NP V #V A #A #S\u201d may be seen as a \u201cfunction\u201d, and symbols like \u201cPL 0a 17 ...\u201d in row 0 may be seen as \u201cvalues\u201d for the \u201cparameters\u201d of the function.\n\u2022 Conditional statements. The effect of the values just described is to select elements of the multiple alignment: \u201cPL\u201d selects the pattern \u201cNum PL ; Np Vp\u201d, \u201c0a\u201d selects \u201cNP 0a D #D N #N #NP\u201d, and so on. Each of these selections achieves the effect of a conditional statement in a conventional program: \u201cIf \u2018PL\u2019 then choose \u2018Num PL ; Np Vp\u2019 \u201d; \u201cIf \u20180a\u2019 then choose \u2018NP 0a D #D N #N #NP\u2019 \u201d; and so on.\n\u2022 Object-oriented design. The SP system provides for object-oriented design with class hierarchies (including cross-classification), part-whole hierarchies, and inheritance of attributes (Section 6.4 in [1]; Section 9.1 in [2]). In view of the importance of object-oriented design in software engineering, this capability in the SP system is likely to prove useful for applications in that area.\nTo help smooth the path to working in the SP framework, there may be a case, at least in the early stages, for providing \u201csyntactic sugar\u201d to make things look more like conventional programming.\n6.6.2. No Compiling or Interpretation\nA potential advantage of the SP system compared with conventional systems is that there would not be any need for compiling or interpretation, meaning the translation of source code into machine code. Any SP program would simply be a set of SP patterns that would be processed directly by the SP machine.\nIt is true that the current SP computer model is compiled in the conventional way, and the same is likely to be true of any versions of the SP machine that are hosted on a conventional computing system. But the processes of building multiple alignments and creating new knowledge structures does not require compiling or interpretation as normally understood.\n6.6.3. Sequential and Parallel Processing\nIn considering the application of sequential and parallel processing in the SP system, we need to distinguish between the workings of the SP machine and real-world processes (such as baking a cake or managing an industrial plant) to which the SP system may be applied:\n\u2022 The workings of the SP machine. In the projected SP machine [2] (Section 3.2), it is envisaged that, while the ordering of symbols would be respected when one pattern is matched with another, the process of matching two patterns may be done left-to-right, right-to-left, or with many symbols matched in parallel. Likewise, many pairs of patterns may be matched in parallel.\n\u2022 Sequencing and parallelism in real-world processes. Although the SP machine may be flexible in the way parallelism is applied to the matching of patterns, the system needs to respect sequencing and parallelism in the real-world processes to which the system may be applied. In broad terms, this may be achieved via the SP patterns themselves:\n\u2013 A sequence of operations may be modeled via the left-to-right sequence of symbols in a one-dimensional SP pattern, with \u201csubroutines\u201d if required, as outlined in Section 6.6.1.\n\u2013 Since SP patterns at the \u201ctop\u201d level are independent of each other, they may serve to model processes that may run in parallel.\nNaturally, a realistic model of any real-world project is likely to need additional information about such things as timings, dependencies between processes, and resources required.\n6.6.4. Automatic Programming\nWith some improvements to the learning processes in the SP model (Section 9.5 in [1]; Section 5.1.4 in [2]), there is potential to by-pass at least some of the labor-intensive and costly hand-crafting of computer programs which is currently the mainstay of software engineering:\n\u2022 Learning of ontologies. Knowledge of significant categories\u2014people, buildings, vehicles, and so on\u2014may be built up incrementally from information that users supply to the system. There is potential for the automatic structuring of such information in terms of class hierarchies and part-whole hierarchies.\n\u2022 Learning of procedures. In a similar way, procedural knowledge may be built up from information supplied by users, and, via learning, such procedural knowledge may be structured automatically and generalized [28]. Likewise, for \u201cprogramming by demonstration\u201d in robotics [29].\nSince knowledge in the SP system is intended to be transparent and comprehensible by people [2] (Section 2.4), it should be relatively straightforward to make adjustments and corrections to learned structures.\n6.6.5. Verification and Validation\nAs was suggested in Section 5, the SP system may reduce or eliminate MUP instructions and their repetition in different applications. To the extent that that proves possible, we may reduce the opportunities for errors to be introduced. There is a corresponding potential to reduce or eliminate the need for \u201cverification\u201d in software development, and for improvements in the quality of software.\nThe SP machine also has potential in \u201cvalidation\u201d: helping to ensure that what is being developed is what is required. If domain-specific knowledge, including the requirements for a software system, can be loaded directly into an SP machine, without the need for the traditional kind of programming, this will help to ensure that what the system does is what the users want. Users may have tighter control than is traditional over what a system does, with more freedom to make changes when required [30].\n6.6.6. Technical Debt\nBy reducing the complexity of the software development process and by enabling users to have more direct control over how things work, the SP machine may also help to reduce or eliminate the problem of \u201ctechnical debt\u201d, the way in which conventional systems can accumulate a backlog of \u201chousekeeping\u201d tasks and become unmanageably complex with the passage of time."}, {"heading": "6.7. Information Compression", "text": "Given the central importance of information compression in the SP theory, one would naturally expect the SP machine to prove useful in that area of application. In effect, the multiple alignment framework serves, inter alia, to integrate three techniques for information compression: chunking-with-codes, schema-plus-correction, and run-length coding [1] (Section 2.2.9).\nThere is potential for the SP system to achieve relatively high levels of lossless compression for two main reasons:\n\u2022 It is intended that, normally, the SP machine will perform a relatively thorough search of the space of alternative unifications of patterns and achieve correspondingly high levels of compression.\n\u2022 If, as anticipated with some further development, the system will be able to learn discontinuous dependencies in data (see [2] (Section 3.3)), it will tap into sources of redundancy that appear to be outside the scope of traditional methods for compression of information.\nIn general, information compression can bring benefits in: economies in storage; speeding up transmission of information or reducing the demand for bandwidth, or some combination of the two (Section 6.7.1); providing a basis for inference (as described in [2] (Sections 2.1, 4.4, 10), and elsewhere in that article); and greater efficiency in processing with corresponding gains in energy efficiency (Section 6.7.2).\n6.7.1. Economies in the Transmission of Information\nA compressed version of a body of information, I , may be seen to comprise two parts:\n\u2022 A \u201cgrammar\u201d for I (which we may call G) containing patterns, at one or more levels of abstraction, that occur repeatedly in I .\n\u2022 An \u201cencoding\u201d of I in terms of the grammar (which we may call E), including non-repeating information in I .\nWhere there is significant redundancy in I\u2014which is true of most kinds of natural-language text and most kinds of images, especially moving images\u2014E is likely to be much smaller than G. A grammar for I may also support the lossless compression of other bodies of information, provided they contain the same kinds of structures as I .\nThese things can provide the means of transmitting information very economically:\n\u2022 A receiver (such as a TV set or a computer receiving web pages over the Internet) may be equipped with a grammar for the kind of information it is designed to receive, and some version of the SP system.\n\u2022 Instead of transmitting \u201craw\u201d data, or data that has been compressed in the traditional manner (containing both G and E), the encoding by itself would be sufficient.\n\u2022 Using the SP system, the original data may be reconstructed fully, without any loss of information, by decoding the transmitted information (E) in terms of the stored copy of G.\nA simple version of this idea, using a dictionary of words as a \u201cgrammar\u201d for ordinary text, is already recognized (e.g., [31] and Chapter 11 in [32]). The apparent advantage of the SP system is the creation of more sophisticated grammars yielding higher levels of compression, and the application of the idea to kinds of information\u2014such as moving images\u2014where an ordinary dictionary would not work.\nSince ordinary TVs work well without this kind of mechanism, some people may argue that there is no need for anything different. But:\n\u2022 The growing popularity of video, TV and films on mobile services is putting pressure on mobile bandwidth [33], and increases in resolution will mean increasing demands for bandwidth via all transmission routes.\n\u2022 It is likely that some of the bandwidth for terrestrial TV will be transferred to mobile services [34], creating an incentive to use the remaining bandwidth efficiently.\n\u2022 There would be benefits in, for example, the transmission of information from a robot on Mars, or any other situation where a relatively large amount of information needs to be transmitted as quickly as possible over a relatively low-bandwidth channel.\n6.7.2. Potential for Gains in Efficiency in Processing and in the Use of Energy\nIf, for example, we wish to search a large body of data, I , for instances of a pattern like \u201cTreaty on the Functioning of the European Union\u201d, and to conduct similar searches for other patterns, there can be savings in processing if:\n1. I is compressed by finding recurrent patterns in I , like \u201cTreaty on the Functioning of the European Union\u201d, and replacing each instance of a given pattern by a relatively short code such as \u201cTFEU\u201d, or, more generally, compressing I via grammar discovery and encoding as described in [1] (Chapter 9 and Section 3.5) and [2] (Sections 4 and 5).\n2. Searching is done with \u201cTFEU\u201d instead of \u201cTreaty on the Functioning of the European Union\u201d, or, more generally, searching is done with a compressed representation of the search pattern via the encoding processes in the SP system.\nAlthough the first \u201cencoding\u201d step requires processing, that one-time cost can be more than offset by consequent savings in many searches. The savings arise because of the reduced size of I and because of the relatively small size of a code like \u201cTFEU\u201d compared with the pattern that it represents.\nSince searching lies at the heart of how the SP system works, gains in the efficiency of searching should mean gains in the overall efficiency of processing in the SP system. There should be corresponding reductions in the use of energy."}, {"heading": "6.8. Medical Diagnosis", "text": "The way in which the SP system may be applied in medical diagnosis is described in [35]. The expected benefits of the SP system in that area of application include:\n\u2022 A format for representing diseases that is simple and intuitive.\n\u2022 An ability to cope with errors and uncertainties in diagnostic information.\n\u2022 The simplicity of storing statistical information as frequencies of occurrence of diseases.\n\u2022 The system provides a method for evaluating alternative diagnostic hypotheses that yields true probabilities.\n\u2022 It is a framework that should facilitate the unsupervised learning of medical knowledge and the integration of medical diagnosis with other AI applications.\nThe main emphasis in [35] is on medical diagnosis as pattern recognition. But the SP system may also be applied to causal diagnosis ([1] (Section 7.9) and [2] (Section 10.5)) which, in a medical context, may enable the system to reason that \u201cThe patient\u2019s fatigue may be caused by anemia which may be caused by a shortage of iron in the diet\u201d."}, {"heading": "6.9. Managing \u201cBig Data\u201d and Gaining Value from It", "text": "The SP system has potential in the management and analysis of the large volumes of data that are now produced in many fields (\u201cbig data\u201d), as discussed in [36] and summarized here.\nThe system may help overcoming the problem of variety in big data: the many different formats for knowledge and consequent problems in analysis. In view of the versatility of SP patterns, within the SP framework, to represent diverse kinds of knowledge [2] (Section 7), there is potential for them to serve as a universal format for knowledge and to facilitate the processing of diverse kinds of knowledge. The SP framework may also provide a mechanism for translating the original data into the universal format.\nIn the interpretation of data, the SP system has capabilities that include such things as the parsing and production of language, pattern recognition, and various kinds of probabilistic reasoning. But potentially the most useful facility with big data would be scanning for patterns, with recognition of family-resemblance or polythetic categories, at multiple levels of abstraction and with part-whole hierarchies, with inductive prediction and the calculation of associated probabilities, with a role for context in recognition, and robust in the face of errors of omission, commission or substitution. There are potential applications in several areas including, security, finance, meteorology, and astronomy.\nWith solutions to residual problems in unsupervised learning [2] (Sections 3.3 and 5.1.4), it seems likely that the SP machine, via the \u201cDONSVIC\u201d principle [2] (Section 5.2), will prove useful in discovering \u201cinteresting\u201d or \u201cuseful\u201d structures in big data, including significant entities, class-inclusion structures, part-whole structures, rules, regularities and associations, and discontinuous dependencies in data. The use of one simple format for different kinds of knowledge is likely to facilitate the learning of concepts that combine diverse kinds of knowledge.\nBecause of its potential for information compression (Section 6.7), the SP system may achieve useful reductions in the volume of big data and thus facilitate its storage and management. There is potential for substantial economies in the transmission of big data (Section 6.7.1), and for the efficient processing of compressed data, without the need for decompression (Section 6.7.2). And unlike conventional systems for compression of information, the SP system has capabilities in several aspects of intelligence."}, {"heading": "6.10. Other Areas of Application", "text": "Some other areas of application where there is potential for the SP system are grouped here because, so far, that potential has not yet been much explored. But any of them may turn out to be significant.\n6.10.1. Knowledge, Reasoning, and the Semantic Web\nThe SP framework may contribute to the development of the \u201csemantic web\u201d\u2014a \u201cweb of data\u201d to provide machine-understandable meaning for web pages [37\u201339]. In this connection, the main attractions of the system appear to be:\n\u2022 Simplicity, versatility and integration in the representation of knowledge. The SP system combines simplicity in the underlying format for knowledge with the versatility to represent several different kinds of knowledge\u2014and it facilitates the seamless integration of those different kinds of knowledge [2] (Section 7).\n\u2022 Versatility in reasoning. The system provides for several kinds of reasoning and their inter-working (Chapter 7 in [1] and Section 10 in [2]).\n\u2022 Natural language understanding. As suggested in Section 6.2, the SP system has potential for the understanding of natural language. If that proves possible, semantic structures may be derived from textual information in web pages, without the need, in those web pages, for the separate provision of ontologies or the like.\n\u2022 Automatic learning of ontologies. As suggested in [2] (Section 5.2), the SP system has potential, via the DONSVIC principle, for the extraction of interesting or useful structures from data. These may include the kinds of ontologies which have been a focus of interest in the development of the semantic web.\n\u2022 Uncertainty and vagueness. The SP system is inherently probabilistic and it is robust in the face of incomplete information and errors of commission or substitution. These capabilities appear promising as a means of coping with uncertainty and vagueness in the semantic web [40].\n6.10.2. Bioinformatics\nAs described in [2] (Section 4), a central idea in the SP system is the concept of multiple alignment, borrowed from bioinformatics but with important differences from how that concept is normally understood in research in biochemistry.\nNotwithstanding those differences, or perhaps because of them, the SP system has potential for the analysis of DNA sequences and amino-acid sequences in any or all of the following ways:\n\u2022 The formation of alignments amongst two or more sequences, much as in multiple alignment as currently understood in bioinformatics.\n\u2022 The discovery or recognition of recurrent patterns in DNA or amino-acid sequences, including discontinuous patterns.\n\u2022 The discovery of correlations between genes, or combinations of genes, and any or all of: diseases; signs or symptoms of diseases; or any other feature or combination of features of people, other animals, or plants.\n6.10.3. Maintaining Multiple Versions and Parts of a Document or Web Page\nThe multiple alignment concept provides a means of maintaining multiple versions of any document or web page, such as, for example, versions in different languages. Parts which are shared amongst different versions\u2014such as pictures or diagrams\u2014may be kept separate from parts that vary amongst different versions\u2014such as text in a specific language. As with other kinds of data, the framework provides the means of maintaining hierarchies of classes (with cross classification if that is required) and of maintaining part-whole hierarchies and their integration with class hierarchies [2] (Section 9.1).\nUpdates to high-level classes appear directly in all lower-level classes without the need for information to be copied amongst different versions.\nOf course, these kinds of things can be done in other ways. The strength of the SP framework is its versatility, reducing the need for ad hoc solutions in different areas.\n6.10.4. Detection of Computer Viruses\nThe detection of already-known computer viruses and other malware can be more subtle and difficult than simply looking for exact matches for the \u201csignatures\u201d of viruses. The offending code may be rather similar to perfectly legitimate code and it may be contained within a compressed (\u201cpacked\u201d) executable file.\nHere, the SP system and its capabilities for pattern recognition and learning may prove useful:\n\u2022 Recognition in the SP system is probabilistic, it does not depend on the presence or absence of any particular feature or combination of features, and it can cope with errors.\n\u2022 By compressing known viruses into a set of SP patterns, the system can reduce the amount of information needed to specify viruses and, as a consequence, it can reduce the amount of processing needed for the detection of viruses.\n6.10.5. Data Fusion\nThere are many situations where it can be useful to merge or integrate two or more sources of information, normally when there is some commonality amongst the different sources. For example, in ecological research there may be a need to integrate different sources of information about the movement around the world of whales or other creatures; and in the management of a website, there may be a need to consolidate a set of web pages that are saying similar things.\nAt first sight, the SP system appears to be tailor made for this area of application. After all, the merging of fully or partially matching patterns lies at the heart of the SP system. But, as with big data (Section 6.9), the variety of different formats for knowledge can pose problems.\nA possible solution, as with big data, is to translate different kinds of knowledge into a universal format. As before, the SP framework may provide that universal format and a mechanism for the translation.\n6.10.6. New Kinds of Computer\nIn research to develop new kinds of computer, such as optical or chemical computers, it is commonly assumed that the first step must be to create the optical or chemical equivalent of a transistor or logic gate, probably because of the significance of those kinds of structures in the evolution of electronic computers as we know them today.\nBut the SP theory, with its emphasis on information compression via the matching and unification of patterns, suggests new approaches to the development of new technologies for computing, perhaps by-passing some of the structures and concepts that have been prominent in the development of electronic computers.\nA potential benefit is that, with that primary focus on the matching and unification of patterns, it may prove easier to take advantage of the potential for high levels of parallelism in optical or chemical computers, or new kinds of electronic computers.\n6.10.7. Development of Scientific Theories\nAlthough Occam\u2019s Razor is widely recognized as a touchstone of good science and, as noted earlier, John Barrow has written that \u201cScience is, at root, just the search for compression in the world.\u201d [5] (p. 247), there seems to have been relatively little interest\u2014apart from some work on principles of \u201cminimum length encoding\u201d (see, for example, [41\u201343])\u2014in making a connection between the practice of information compression and the development of scientific theories.\nA possible reason is that most compression algorithms yield an encoding of the target data which is, from a human perspective, remarkably opaque: the output is normally smaller that the input\u2014a useful result\u2014but the encoding does not normally contain structures or relations that are meaningful for people. As noted in [2] (Section 13), this is probably because compression algorithms are normally designed to be quick-and-dirty, aiming for speed on low-powered computers, with a low priority for finding structures that yield high levels of compression; and, in accordance with the previously-mentioned DONSVIC principle, it appears to be those structures that are most meaningful for people.\nPerhaps this does not matter. In a \u201cpracticalities-not-insight\u201d approach to artificial intelligence that appears to be favored by some researchers, results that are useful in practice are given a higher priority than \u201cexplanation\u201d or \u201cunderstanding\u201d [44].\nWith the SP system, there appears to be potential for something different and ultimately more acceptable as a way doing science: the possibility of creating a \u201cdiscovery machine\u201d [45] (p. 108ff.), deriving scientific theories from data, automatically or semi-automatically, and for obtaining analyses that people will regard as meaningful and insightful and which are also useful and practical. There is also potential for the quantitative evaluation of theories, as mentioned in Section 4.\nIn this area, reasons for optimism include:\n\u2022 An \u201cup market\u201d emphasis in the SP program on finding structures that are good in terms of information compression.\n\u2022 The DONSVIC principle, mentioned above\u2014the discovery of natural structures via information compression [2] (Section 5.2). Structures that are good in terms of information compression seem generally to be structures that people regard as natural and meaningful.\n\u2022 The versatility of the multiple alignment concept in the representation and processing of structures that are meaningful to people."}, {"heading": "7. Seamless Integration of Structures and Functions within and between Different Areas of Application", "text": "This section emphasizes again the importance of how the SP system may integrate structures and functions both within and between different areas of application. Instead of what can sometimes be awkward marriages between incompatible systems, there can be smooth interworking of, for example, pattern recognition, reasoning, and learning; of different kinds of reasoning; of different kinds of knowledge; and so on.\nAs previously noted, this facilitation of integration arises from: the use of one simple format for different kinds of knowledge; the use of one system\u2014the multiple alignment framework\u2014for the processing of knowledge; and the over-arching principle of information compression by the matching and unification of patterns.\nAs we have seen, the system provides for the integration of syntax and semantics in natural language processing; for the same kind of processing to achieve both the analysis and the production of language; for the integration of class-inclusion hierarchies, part-whole hierarchies, and other forms of knowledge; and for the integration of different aspects of intelligence in any combination: natural language processing, pattern recognition, different kinds of reasoning, unsupervised learning, and so on.\nThese kinds of integration are probably necessary to achieve human-like versatility and flexibility in the workings of computers."}, {"heading": "8. Conclusions", "text": "The SP theory of intelligence combines conceptual simplicity with descriptive and explanatory power in several areas, including concepts of \u201ccomputing\u201d, the representation of knowledge, natural language processing, pattern recognition, several kinds of reasoning, the storage and retrieval of information, planning and problem solving, unsupervised learning, information compression, neuroscience, and human perception and cognition.\nIn the SP machine there is potential for the simplification of computing systems, including software, with corresponding savings in the time, effort and cost in the development of applications, and other benefits related to information compression.\nAs a theory with a broad base of support, the SP theory promises deeper insights and better solutions in several areas of application, including unsupervised learning, natural language processing, autonomous robots, computer vision, intelligent databases, software engineering, information compression, medical diagnosis, and big data; and perhaps also in areas such as the semantic web, bioinformatics, structuring of\ndocuments, the detection of computer viruses, data fusion, new kinds of computer, and the development of scientific theories.\nThe SP theory should facilitate the integration of structures and functions, both within a given area and amongst different areas\u2014a likely pre-requisite for the achievement of human-like versatility and flexibility in the way computers work.\nThese potential benefits and applications are not merely of theoretical interest. If, as a conservative estimate, they were to add 5% to the value of annual worldwide IT investments [46], they would be worth $190 billion each year, and increasing with the continuing growth of IT.\nAs suggested in [2] (Section 3.2) and in Section 3 of this article, further development would be assisted by the creation of a high-parallel, open source version of the SP machine, available to researchers throughout the world to examine what can be done with the system and to create new versions of it."}, {"heading": "Acknowledgements", "text": "I am grateful to anonymous referees for many useful comments, and to Daniel Wolff for pointing out the potential of the SP system in the detection of computer viruses and in the management and analysis of big data.\nConflicts of Interest\nThe author declares no conflict of interest.\nReferences and Notes\n1. Wolff, J.G. Unifying Computing and Cognition: The SP Theory and Its Applications; CognitionResearch.org: Menai Bridge, UK, 2006. 2. Wolff, J.G. The SP theory of intelligence: An overview. Information 2013, 4, 283\u2013341. 3. According to this criterion, a good theory in a given area lies somewhere between things which are\nsimple but very general\u2014Such as the laws of arithmetic\u2014And over-specific \u201ctheories\u201d that simply repeat what it is they are meant to explain. 4. Hence the name \u201cSP\u201d. 5. Barrow, J.D. Pi in the Sky; Penguin Books: Harmondsworth, UK, 1992. 6. Similar things were said by Allen Newell about research in human perception and cognition, in\nhis well-known essay on why \u201cYou can\u2019t play 20 questions with nature and win\u201d ([47]. See also [48,49]). And writing about machine technologies to augment our senses, John Kelly and Steve Hamm say \u201c... there\u2019s a strong tendence [for scientists] to view each sensory field in isolation as specialists focus only on a single sensory capability. Experts in each sense don\u2019t read journals devoted to the others, and they don\u2019t attend one another\u2019s conferences. ...\u201d [45] (p. 74). 7. Turing, A.M. On computable numbers, with an application to the Entscheidungsproblem. Proc. Lond. Math. Soc. 1936, 42, 230\u2013265.\n8. Turing, A.M. On computable numbers, with an application to the Entscheidungsproblem. A correction. Proc. Lond. Math. Soc. 1936, 42, 544\u2013546.\n9. Turing, A.M. Computing machinery and intelligence. Mind 1950, 59, 433\u2013460. 10. Dreyfus, H.L. What Computers Can\u2019t Do: A Critique of Artificial Reason; Harper and Row: New York, NY, USA, 1972; Revised in 1979. 11. Dreyfus, H.L. What Computers Still Can\u2019t Do; MIT Press: New York, NY, USA, 1992. 12. The latest version is SP70. 13. Even in systems such as DBMSs or expert-system shells, mentioned above, the domain-specific knowledge which is loaded into the system may be regarded as part of the software. 14. The reason for putting \u201cCPU\u201d in quote marks in the lower part of Figure 3 is that an SP machine\nmay not have a discrete central processing unit like a conventional computer. The SP system is probably better suited to a \u201cdata-centric\u201d style [45] (pp. 87\u201393), with a closer integration of data and processing than in conventional computers.\n15. Wolff, J.G. Towards an intelligent database system founded on the SP theory of computing and cognition. Data Knowl. Eng. 2007, 60, 596\u2013624. 16. Wolff, J.G. Learning syntax and meanings through optimization and distributional analysis. In Categories and Processes in Language Acquisition; Levy, Y., Schlesinger, I.M., Braine, M.D.S., Eds.; Lawrence Erlbaum: Hillsdale, NJ, USA, 1988; pp. 179\u2013215. 17. Available online: www.cognitionresearch.org/lang learn.html (accessed on 19 December 2013). 18. McCawley, J.D. The Role of Semantics in a Grammar. In Universals in Linguistic Theory; Lecture\nNotes in Artificial Intelligence; Bach, E., Harms, R.T., Eds.; Holt, Rinehart and Winston, Inc.: New York, NY, USA, 1968; pp. 125\u2013169.\n19. See, for example, \u201cInterlingual machine translation\u201d, Wikipedia, available online: http://bit.ly/RlTcHU, retrieved 31 May 2013. 20. That number may be reduced if one or more languages are used as stepping stones to the translation of others. 21. This reference to autonomous robots does not in any way endorse or defend the unethical or illegal use of airborne drones or other autonomous robots to cause death, injury, or damage to property. 22. Archibald, C.; Altman, A.; Greenspan, M.; Shoham, Y. Computational pool: A new challenge for game theory pragmatics. AI Mag. 2010, 31, 33\u201341. 23. Wolff, J.G. Application of the SP theory of intelligence to the understanding of natural vision and the development of computer vision 2013. CognitionResearch.org, Menai Bridge, UK, unpublished work, 2013. 24. Szeliski, R. Computer Vision: Algorithms and Applications; Springer: London, UK, 2011. 25. As with information compression, a focus on the isolation of discrete objects in binocular vision\nis distinct from the more usual interest in the way that slight differences between the two images enables us to see the scene in depth.\n26. Marr, D.; Poggio, T. A computational theory of human stereo vision. Proc. R. Soc. Lond. B 1979, 204, 301\u2013328.\n27. The Ames room illusion shows that human vision does not always yield an accurate knowledge of 3D structures (see, for example, Wikipedia, available online: http://en.wikipedia.org/wiki/Ames room, retrieved 4 December 2013). 28. Related work includes \u201cprocess mining\u201d as in, for example, the \u201cProM\u201d system, available online: http://bit.ly/13iS2Ch. 29. See, for example, \u201cProgramming by demonstration\u201d, Wikipedia, available online: http://bit.ly/121GrKJ, retrieved 6 June 2013. 30. Notice that the distinction, just referenced, between domain-specific knowledge and MUP instructions is different from the often-made distinction between declarative programming and imperative or procedural programming. It is envisaged that the SP machine would reduce or eliminate the MUP instructions in software but that it would be able to model both the declarative \u201cwhat\u201d and (Section 6.6.1) the procedural \u201chow\u201d of the real world. 31. Giltner, M.; Mueller, J.C.; Fiest, R.R. Data Compression, Encryption, and in-Line Transmission System. U.S. Patent 4,386,416, 31 May 1983. 32. Storer, J.A. Data Compression: Methods and Theory; Computer Science Press: Rockville, MD, USA, 1988. 33. See, for example, \u201cData jam threat to UK mobile networks\u201d, BBC News, 16 November 2012, available online: http://bbc.in/T5g14s. 34. See, for example, \u201cTVs will need retuning again to make room for mobile services\u201d, The Guardian, 16 November 2012, available online: http://bit.ly/ZZ9N8C. 35. Wolff, J.G. Medical diagnosis as pattern recognition in a framework of information compression by multiple alignment, unification and search. Decis. Support Syst. 2006, 42, 608\u2013625. 36. Wolff, J.G. The management and analysis of big data, and the SP theory of intelligence 2013. CognitionResearch.org, Menai Bridge, UK, unpublished work, 2013. 37. Berners-Lee, T.; Hendler, J.; Lassila, O. The Semantic Web. Scientific American, 17 May 2001, pp. 35\u201343. 38. Shadbolt, N.; Hall, W.; Berners-Lee, T. The semantic web revisited. IEEE Intell. Systems 2006, 21, 96\u2013101. 39. See also W3C information about the semantic web at http://bit.ly/1bX7Nv. 40. Lukasiewicz, T.; Straccia, U. Managing uncertainty and vagueness in description logics for the Semantic Web. Web Semant. Sci. Serv. Agents World Wide Web 2008, 6, 291\u2013308. 41. Solomonoff, R.J. A formal theory of inductive inference. Parts I and II. Inf. Control 1964, 7, 1\u201322, 224\u2013254. 42. Wallace, C.S.; Boulton, D.M. An information measure for classification. Comput. J. 1968, 11, 185\u2013195. 43. Rissanen, J. Modelling by the shortest data description. Autom. J. IFAC 1978, 14, 465\u2013471. 44. See, for example, \u201cNot like us: Artificial minds we can\u2019t understand\u201d, New Scientist, 10 August\n2013, available online: http://bit.ly/15m1cnm. As noted in Section 6.5 of this article, transparency in the SP system, in both the representation of knowledge and in reasoning, may prove useful where evidence needs to be examined in a court of law.\n45. Kelly, J.E.; Hamm, S. Smart Machines: IBM\u2019s Watson and the Era of Cognitive Computing; Columbia University Press: New York, NY, USA, 2013. 46. Expected to be $3.8 trillion by 2014 (\u201cGartner: Big data will help drive IT spending to $3.8 trillion in 2014\u201d, InfoWorld, 3 January 2013, available online: http://bit.ly/Z00SBr). 47. Newell, A. You Can\u2019t Play 20 Questions with Nature and Win: Projective Comments on the Papers in This Symposium. In Visual Information Processing; Chase, W.G., Ed.; Academic Press: New York, NY, USA, 1973; pp. 283\u2013308. 48. Newell, A. Pre\u0301cis of Unified Theories of Cognition. Behav. Brain Sci. 1992, 15, 425\u2013437. 49. Newell, A. Unified Theories of Cognition; Harvard University Press: Cambridge, MA,\nUSA, 1990.\nc\u00a9 2013 by the author; licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution license (http://creativecommons.org/licenses/by/3.0/)."}], "references": [{"title": "Pi in the Sky", "author": ["J.D. Barrow"], "venue": "Penguin Books: Harmondsworth,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1992}, {"title": "On computable numbers, with an application to the Entscheidungsproblem", "author": ["A.M. Turing"], "venue": "Proc. Lond. Math. Soc", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1936}, {"title": "On computable numbers, with an application to the Entscheidungsproblem", "author": ["A.M. Turing"], "venue": "A correction. Proc. Lond. Math. Soc. 1936,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1936}, {"title": "Computing machinery and intelligence", "author": ["A.M. Turing"], "venue": "Mind 1950,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1950}, {"title": "What Computers Can\u2019t Do: A Critique of Artificial Reason", "author": ["H.L. Dreyfus"], "venue": null, "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1972}, {"title": "What Computers Still Can\u2019t Do", "author": ["H.L. Dreyfus"], "venue": null, "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1992}, {"title": "Towards an intelligent database system founded on the SP theory of computing and cognition", "author": ["J.G. Wolff"], "venue": "Data Knowl. Eng. 2007,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2007}, {"title": "Learning syntax and meanings through optimization and distributional analysis", "author": ["J.G. Wolff"], "venue": "In Categories and Processes in Language Acquisition; Levy, Y.,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 1988}, {"title": "The Role of Semantics in a Grammar. In Universals in Linguistic Theory; Lecture Notes in Artificial Intelligence", "author": ["J.D. McCawley"], "venue": null, "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1968}, {"title": "Computational pool: A new challenge for game theory pragmatics", "author": ["C. Archibald", "A. Altman", "M. Greenspan", "Y. Shoham"], "venue": "AI Mag. 2010,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2010}, {"title": "Application of the SP theory of intelligence to the understanding of natural vision and the development of computer vision", "author": ["J.G. Wolff"], "venue": null, "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2013}, {"title": "Computer Vision: Algorithms and Applications", "author": ["R. Szeliski"], "venue": null, "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2011}, {"title": "A computational theory of human stereo vision", "author": ["D. Marr", "T. Poggio"], "venue": "Proc. R. Soc. Lond. B", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 1979}, {"title": "Data Compression, Encryption, and in-Line Transmission System", "author": ["M. Giltner", "J.C. Mueller", "R.R. Fiest"], "venue": "U.S. Patent 4,386,416,", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 1983}, {"title": "Data Compression: Methods and Theory; Computer Science Press: Rockville, MD", "author": ["J.A. Storer"], "venue": null, "citeRegEx": "32", "shortCiteRegEx": "32", "year": 1988}, {"title": "Medical diagnosis as pattern recognition in a framework of information compression by multiple alignment, unification and search", "author": ["J.G. Wolff"], "venue": "Decis. Support Syst. 2006,", "citeRegEx": "35", "shortCiteRegEx": "35", "year": 2006}, {"title": "The management and analysis of big data, and the SP theory of intelligence", "author": ["J.G. Wolff"], "venue": null, "citeRegEx": "36", "shortCiteRegEx": "36", "year": 2013}, {"title": "The Semantic Web", "author": ["T. Berners-Lee", "J. Hendler", "O. Lassila"], "venue": "Scientific American,", "citeRegEx": "37", "shortCiteRegEx": "37", "year": 2001}, {"title": "The semantic web revisited", "author": ["N. Shadbolt", "W. Hall", "T. Berners-Lee"], "venue": "IEEE Intell. Systems 2006,", "citeRegEx": "38", "shortCiteRegEx": "38", "year": 2006}, {"title": "Managing uncertainty and vagueness in description logics for the Semantic Web", "author": ["T. Lukasiewicz", "U. Straccia"], "venue": "Web Semant. Sci. Serv. Agents World Wide Web 2008,", "citeRegEx": "40", "shortCiteRegEx": "40", "year": 2008}, {"title": "A formal theory of inductive inference", "author": ["R.J. Solomonoff"], "venue": "Parts I and II. Inf. Control 1964,", "citeRegEx": "41", "shortCiteRegEx": "41", "year": 1964}, {"title": "An information measure for classification", "author": ["C.S. Wallace", "D.M. Boulton"], "venue": "Comput. J. 1968,", "citeRegEx": "42", "shortCiteRegEx": "42", "year": 1968}, {"title": "Modelling by the shortest data description", "author": ["J. Rissanen"], "venue": "Autom. J. IFAC 1978,", "citeRegEx": "43", "shortCiteRegEx": "43", "year": 1978}, {"title": "Smart Machines: IBM\u2019s Watson and the Era of Cognitive Computing; Columbia", "author": ["J.E. Kelly", "S. Hamm"], "venue": null, "citeRegEx": "45", "shortCiteRegEx": "45", "year": 2013}, {"title": "Can\u2019t Play 20 Questions with Nature and Win: Projective Comments on the Papers in This Symposium", "author": ["Newell", "A. You"], "venue": "In Visual Information Processing;", "citeRegEx": "47", "shortCiteRegEx": "47", "year": 1973}, {"title": "Pr\u00e9cis of Unified Theories of Cognition", "author": ["A. Newell"], "venue": "Behav. Brain Sci. 1992,", "citeRegEx": "48", "shortCiteRegEx": "48", "year": 1992}, {"title": "Unified Theories of Cognition; Harvard University Press: Cambridge, MA, USA, 1990. c  \u00a9 2013 by the author; licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution license (http://creativecommons.org/licenses/by/3.0/)", "author": ["A. Newell"], "venue": null, "citeRegEx": "49", "shortCiteRegEx": "49", "year": 2013}], "referenceMentions": [{"referenceID": 0, "context": "\u201d [5] (p.", "startOffset": 2, "endOffset": 5}, {"referenceID": 1, "context": "Perhaps the concept of a universal Turing machine [7,8] provides what is needed? That theory has of course been brilliantly successful\u2014a basis for the current generation of computers and the many useful things that they can do.", "startOffset": 50, "endOffset": 55}, {"referenceID": 2, "context": "Perhaps the concept of a universal Turing machine [7,8] provides what is needed? That theory has of course been brilliantly successful\u2014a basis for the current generation of computers and the many useful things that they can do.", "startOffset": 50, "endOffset": 55}, {"referenceID": 3, "context": "But it does not solve the problem of fragmentation and, although Alan Turing recognized that computers might become intelligent [9], the Turing theory, in itself, does not tell us how! Are we getting closer to that goal? Yes, certainly.", "startOffset": 128, "endOffset": 131}, {"referenceID": 4, "context": "But as Hubert Dreyfus has suggested ([10] (p.", "startOffset": 37, "endOffset": 41}, {"referenceID": 5, "context": "12) and [11]), we may be getting closer to achieving real intelligence in computers in the same sense that a man climbing a tree is getting closer to reaching the moon.", "startOffset": 8, "endOffset": 12}, {"referenceID": 6, "context": "\u2022 The multiple alignment framework provides for the integration of the relational, object-oriented, and network models for databases, with improvements in the relational model [15].", "startOffset": 176, "endOffset": 180}, {"referenceID": 7, "context": "Research developing computer models of language learning (reviewed in [16]; see also [17])\u2014in particular, the importance of information compression in that area\u2014has been one of the main sources of inspiration for the SP theory.", "startOffset": 70, "endOffset": 74}, {"referenceID": 8, "context": "\u201d [18] (p.", "startOffset": 2, "endOffset": 6}, {"referenceID": 8, "context": "\u201d [18] (p.", "startOffset": 2, "endOffset": 6}, {"referenceID": 9, "context": "This is quite different from how some existing robots play pool (see, for example, [22]), where the situation is simplified compared with what a human player faces, and where the robot is provided with a knowledge of geometry and associated mathematics.", "startOffset": 83, "endOffset": 87}, {"referenceID": 10, "context": "The SP system has potential in the area of computer vision, as described in [23].", "startOffset": 76, "endOffset": 80}, {"referenceID": 11, "context": "In brief: \u2022 It has potential to simplify and integrate several areas in computer vision, including feature detection and alignment, segmentation, deriving structure from motion, stitching of images together, stereo correspondence, scene analysis, and object recognition (see, for example, [24]).", "startOffset": 289, "endOffset": 293}, {"referenceID": 12, "context": "[25,26]) or within successive frames in a video, in much the same way that the word structure of natural language may be discovered via the matching and unification of patterns [2] (Section 5.", "startOffset": 0, "endOffset": 7}, {"referenceID": 10, "context": "Knowledge of such structures may be built via the matching and unification of partially-overlapping 2D views [23] (Sections 6.", "startOffset": 109, "endOffset": 113}, {"referenceID": 6, "context": "As described in [15] and outlined in [2] (Section 11), the SP system provides a versatile framework that accommodates several models of data (including object-oriented, relational, network and tree models), that facilitates the integration of different models, and that provides capabilities in reasoning, learning, pattern recognition, problem-solving, and other aspects of intelligence.", "startOffset": 16, "endOffset": 20}, {"referenceID": 6, "context": "Databases provide the mainstay of many software engineering projects and, as described in Chapter 6 in [1], Section 11 in [2] and [15], the SP system promises benefits in that area.", "startOffset": 130, "endOffset": 134}, {"referenceID": 13, "context": ", [31] and Chapter 11 in [32]).", "startOffset": 2, "endOffset": 6}, {"referenceID": 14, "context": ", [31] and Chapter 11 in [32]).", "startOffset": 25, "endOffset": 29}, {"referenceID": 15, "context": "The way in which the SP system may be applied in medical diagnosis is described in [35].", "startOffset": 83, "endOffset": 87}, {"referenceID": 15, "context": "The main emphasis in [35] is on medical diagnosis as pattern recognition.", "startOffset": 21, "endOffset": 25}, {"referenceID": 16, "context": "The SP system has potential in the management and analysis of the large volumes of data that are now produced in many fields (\u201cbig data\u201d), as discussed in [36] and summarized here.", "startOffset": 155, "endOffset": 159}, {"referenceID": 17, "context": "The SP framework may contribute to the development of the \u201csemantic web\u201d\u2014a \u201cweb of data\u201d to provide machine-understandable meaning for web pages [37\u201339].", "startOffset": 145, "endOffset": 152}, {"referenceID": 18, "context": "The SP framework may contribute to the development of the \u201csemantic web\u201d\u2014a \u201cweb of data\u201d to provide machine-understandable meaning for web pages [37\u201339].", "startOffset": 145, "endOffset": 152}, {"referenceID": 19, "context": "These capabilities appear promising as a means of coping with uncertainty and vagueness in the semantic web [40].", "startOffset": 108, "endOffset": 112}, {"referenceID": 0, "context": "\u201d [5] (p.", "startOffset": 2, "endOffset": 5}, {"referenceID": 20, "context": "247), there seems to have been relatively little interest\u2014apart from some work on principles of \u201cminimum length encoding\u201d (see, for example, [41\u201343])\u2014in making a connection between the practice of information compression and the development of scientific theories.", "startOffset": 141, "endOffset": 148}, {"referenceID": 21, "context": "247), there seems to have been relatively little interest\u2014apart from some work on principles of \u201cminimum length encoding\u201d (see, for example, [41\u201343])\u2014in making a connection between the practice of information compression and the development of scientific theories.", "startOffset": 141, "endOffset": 148}, {"referenceID": 22, "context": "247), there seems to have been relatively little interest\u2014apart from some work on principles of \u201cminimum length encoding\u201d (see, for example, [41\u201343])\u2014in making a connection between the practice of information compression and the development of scientific theories.", "startOffset": 141, "endOffset": 148}, {"referenceID": 23, "context": "With the SP system, there appears to be potential for something different and ultimately more acceptable as a way doing science: the possibility of creating a \u201cdiscovery machine\u201d [45] (p.", "startOffset": 179, "endOffset": 183}, {"referenceID": 24, "context": "Similar things were said by Allen Newell about research in human perception and cognition, in his well-known essay on why \u201cYou can\u2019t play 20 questions with nature and win\u201d ([47].", "startOffset": 173, "endOffset": 177}, {"referenceID": 25, "context": "See also [48,49]).", "startOffset": 9, "endOffset": 16}, {"referenceID": 26, "context": "See also [48,49]).", "startOffset": 9, "endOffset": 16}, {"referenceID": 23, "context": "\u201d [45] (p.", "startOffset": 2, "endOffset": 6}, {"referenceID": 23, "context": "The SP system is probably better suited to a \u201cdata-centric\u201d style [45] (pp.", "startOffset": 66, "endOffset": 70}], "year": 2013, "abstractText": "This article describes existing and expected benefits of the SP theory of intelligence, and some potential applications. The theory aims to simplify and integrate ideas across artificial intelligence, mainstream computing, and human perception and cognition, with information compression as a unifying theme. It combines conceptual simplicity with descriptive and explanatory power across several areas of computing and cognition. In the SP machine\u2014an expression of the SP theory which is currently realized in the form of a computer model\u2014there is potential for an overall simplification of computing systems, including software. The SP theory promises deeper insights and better solutions in several areas of application including, most notably, unsupervised learning, natural language processing, autonomous robots, computer vision, intelligent databases, software engineering, information compression, medical diagnosis and big data. There is also potential in areas such as the semantic web, bioinformatics, structuring of documents, the detection of computer viruses, data fusion, new kinds of computer, and the development of scientific theories. The theory promises seamless integration of structures and functions within and between different areas of application. The potential value, worldwide, of these benefits and applications is at least $190 billion each year. Further development would be facilitated by the creation of a high-parallel, open-source version of the SP machine, available to researchers everywhere.", "creator": "LaTeX with hyperref package"}}}