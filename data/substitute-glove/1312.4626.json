{"id": "1312.4626", "review": {"conference": "ICML", "VERSION": "v1", "DATE_OF_SUBMISSION": "17-Dec-2013", "title": "Compact Random Feature Maps", "abstract": "Kernel approximation control randomized guest illustrations has officials slumped close always of expect. In in work, indeed believe would six approaches three non-negative optimized finite work print that are rank underused, although therefore do follow mechanisms seen capacity own called projected character operate would. To discussed this make, did adopting compact simple feature maps (CRAFTMaps) up cross-sectional univariate coarsely more straightforwardly of accurately. We neither the error stretched of CRAFTMaps forefront their superior kernels reconstruction as compared with has expected correlation money-making. We watching never structured random matrices used be used immediately efficiently advantages CRAFTMaps, included present a piece - pass centrifugation useful CRAFTMaps soon learn non - linear profile - as classifiers. We present evolutionary then ones standard data - pieces however performance difficult without independent - including - the - decorative indication.", "histories": [["v1", "Tue, 17 Dec 2013 03:33:08 GMT  (4447kb,D)", "http://arxiv.org/abs/1312.4626v1", "9 pages"]], "COMMENTS": "9 pages", "reviews": [], "SUBJECTS": "stat.ML cs.LG", "authors": ["raffay hamid", "ying xiao", "alex gittens", "dennis decoste"], "accepted": true, "id": "1312.4626"}, "pdf": {"name": "1312.4626.pdf", "metadata": {"source": "META", "title": "Compact Random Feature Maps", "authors": ["Raffay Hamid", "Ying Xiao"], "emails": ["raffay@gmail.com", "ying.xiao@gatech.edu", "agittens@ebay.com", "ddecoste@ebay.com"], "sections": [{"heading": "1. Introduction", "text": "Kernel methods allow implicitly learning nonlinear functions using explicit linear feature spaces (Scho\u0308lkopf et al., 1999). These explicit feature spaces are typically high dimensional, and often pose what is called the curse of dimensionality. One solution to this problem is the well known kernel trick (Aizerman et al., 1964), where instead of directly learning a hyperplane classifier in Rd, one considers a non-linear mapping \u03a6 : Rd \u2192 H, such that for all x,y \u2208 Rd, \u3008\u03a6(x),\u03a6(y)\u3009H = K(x,y) for some kernel\nK(x,y). One then learns a classifier H : x 7\u2192 wT\u03a6(x) for some w \u2208 H.\nIt has been observed however that with increase in training data size, the support of the vector w can undergo unbounded growth, which can result in increased training as well as testing time (Steinwart, 2003) (Bengio et al., 2006). Previous approaches to address this curse of support have mostly focused on embedding the non-linear feature space H into a low dimensional Euclidean space while incurring an arbitrarily small distortion in the inner product values (Rahimi & Recht, 2007) (Kar & Karnick, 2012) (Pham & Pagh, 2013). One way to do this is to construct a randomized feature map Z : Rd \u2192 RD such that for all x,y \u2208 Rd, \u3008Z(x),Z(y)\u3009 = K(x,y). Each component of Z(x) can be computed by first projecting x onto a set of randomly generated d dimensional vectors sampled from a zero-mean distribution, followed by computing the dot-products of the projections. While randomized feature maps are applicable to approximate the more general class of dot-product kernels, in this work we focus on analyzing polynomial kernels, where K(x,y) is of the form (\u3008x,y\u3009+q)r, with q \u2208 N0 and r \u2208 R+.\nIt has been shown that |\u3008Z(x),Z(y)\u3009 \u2212 K(x,y)| reduces exponentially as a function of D (Kar & Karnick, 2012) (Pham & Pagh, 2013). However in practice, to approximate K(x,y) well, D can still need to be increased to values that may not be amenable from the perspective of learning a classifier in RD. This is especially true for higher values of r. Furthermore, we show that the feature spaces constructed by random feature maps are over complete and rank deficient. This rank deficiency can in turn result in the under-utilization of the projected feature space from a learning perspective where the model parameters learned in RD can have a\nar X\niv :1\n31 2.\n46 26\nv1 [\nst at\n.M L\n] 1\n7 D\nsignificant number of components very close to zero.\nThis presents us with the dilemma whether to create feature maps that approximate exact kernel values accurately, or ones that enable efficient classifier learning. To resolve this dilemma, we propose compact random feature maps (CRAFTMaps) as a more concise representation of random feature maps that can approximate polynomial kernels more accurately. We show that the information content of Z : Rd \u2192 RD can be captured more compactly by generating an alternate random feature map Q : RD \u2192 RE, such that E < D, and \u3008Q(Z(x)), Q(Z(y))\u3009 approximates \u3008Z(x),Z(y)\u3009. CRAFTMaps are therefore constructed by first up projecting the original data non-linearly to RD in order to minimize |\u3008Z(x),Z(y)\u3009 \u2212 K(x,y)|. This is followed by linearly down projecting the upprojected vectors to RE with E < D in order to capture the underlying structure in RD more compactly. We present both analytical as well as empirical evidence of the fact that the \u201cup/down\u201d projections employed by CRAFTMaps approximate K(x,y) better than a direct random polynomial feature map Z : Rd \u2192 RE.\nThe additional cost of down projecting from RD to RE incurred by CRAFTMaps is well-justified by the efficiency gains they offer in terms of training in RE. To further improve the efficiency of CRAFTMaps, we show how they can be generated using structured random matrices, in particular Hadamard transform, that reduces the cost of multiplying two n\u00d7n matrices from O(n3) to O(n2log(n)). This gain is exploited for both up as well as down projection steps of CRAFTMaps. Note that while down-projection using structured random matrices is straight forward (Tropp, 2011), we need to incorporate a few novel modifications to previous structured random projection approaches before they can be used for the up-projection step (see \u00a7 3.5).\nThe compactness of CRAFTMaps makes them particularly suitable for using Hessian based methods to learn classifiers in a single pass over the data. Moreover, we show how CRAFTMaps can be used to learn multi-class classifiers in a streaming manner, using the previously proposed framework of error correcting output codes (ECOCs) (Dietterich & Bakiri, 1994), to minimize the least square error between the predicted and the true class labels. This combination of CRAFTMaps and ECOCs is particularly powerful as it can be formalized as a matrix-matrix multiplication, and can therefore maximally exploit the multi-core processing power of modern hardware using BLAS3 (Golub & Van Loan, 2012). Finally, by requiring minimal communication among mappers, this framework is well-suited for map-reduce based settings."}, {"heading": "2. Related Work", "text": "Extending the kernel machines framework to large scale learning has been explored in a variety of ways (Bottou et al., 2007). The most popular of these approaches are decomposition methods for solving Support Vector Machines (Platt, 1999) (Chang & Lin, 2011). While in general extremely useful, these methods do not always scale well to problems with more than a few hundreds of thousand data-points.\nTo solve this challenge, several schemes have been proposed to explicitly approximate the kernel matrix, including low-rank approximations (Blum, 2006) (Bach & Jordan, 2005), sampling individual entries (Achlioptas et al., 2002), or discarding entire rows (Drineas & Mahoney, 2005). Similarly, fast nearest neighbor lookup methods have been used to approximate multiplication operations with the kernel matrix (Shen et al., 2005). Moreover, formulations leveraging concepts from computational geometry have been explored to obtain efficient approximate solutions for SVM learning (Tsang et al., 2006).\nAn altogether different approximation approach that has recently gained much interest is to approximate the kernel function directly as opposed to explicitly operating on the kernel matrix. This can be done by embedding the non-linear kernel space into a low dimensional Euclidean space while incurring an arbitrarily small additive distortion in the inner product values (Rahimi & Recht, 2007). By relying only on the embedded space dimensionality, this approach presents a potential solution to the aforementioned curse of support, and is similar in spirit to previous efforts to avoid the curse of dimensionality in nearest neighbor problems (Indyk & Motwani, 1998).\nBesides (Rahimi & Recht, 2007), there have been several approaches proposed to approximate other kernels such as group invariant (Li et al., 2010), intersection (Maji & Berg, 2009), and RBF kernels (Vempati et al., 2010). More recently, there has been an interest in approximating polynomial kernels using random feature maps (Kar & Karnick, 2012) and random tensor products (Pham & Pagh, 2013). Our work builds on these approaches and provides a more compact representation of approximating polynomial kernels more accurately."}, {"heading": "3. Compact Random Feature Maps", "text": "We begin by demonstrating that previous approaches for approximating polynomial kernels (Kar & Karnick, 2012) (Pham & Pagh, 2013) construct rank-deficient spaces. As a solution to this challenges, we present the framework of CRAFTMaps, followed by proving their\nAlgorithm 1 \u2013 Random Feature Maps (RFM)\nInput: Kernel parameters q and r, output dimensionality D, sampling parameter p > 0 Output: Random feature map Z : Rd \u2192 RD such that \u3008Z(x),Z(y)\u3009 \u2248 K(x,y) 1: Set f(x) =\n\u221e\u2211 n=0 anx n where an = fn(0) n!\n2: for each i = 1 to D do 3: Set N \u2208 N0 for P [N = n] = 1pn+1 4: Sample w1, \u00b7 \u00b7 \u00b7,wN \u2208 {\u22121, 1}d\n5: Set Zi : x 7\u2192 \u221a aNpN+1 N\u220f j=1 wTj x 6: Construct Z : x 7\u2192 1\u221a D (Z1, \u00b7 \u00b7 \u00b7, ZD)\nerror bounds and explaining how to generate them efficiently using randomized Hadamard transform."}, {"heading": "3.1. Preliminaries", "text": "Following (Kar & Karnick, 2012), consider a positive definite kernel K : (x,y) 7\u2192 f(\u3008x,y\u3009), where f admits a Maclaurin expansion with only non-negative coefficients, i.e., f(x) = \u2211\u221e n=0 anx\nn, where an \u2265 0. An example of such a kernel is the polynomial kernel K(x,y) = (\u3008x,y\u3009+q)r, with q \u2208 N0 and r \u2208 R+. By defining estimators for each individual term of the kernel expansion, one can approximate the exact kernel dot-products. To this end, let w \u2208 Rd be a Rademacher vector, i.e., each of its components are chosen independently using a fair coin toss from the set {\u22121, 1}. It can be shown that the feature map Z : Rd \u2192 RD, Z : x 7\u2192 \u221a aNpN+1 \u220fN j=1 w T j x gives an unbiased estimate of the polynomial kernel. Here P[N = n] = 1/(pn+1), and w1, \u00b7 \u00b7 \u00b7,wN are N independent Rademacher vectors. Generating D such feature maps independently and concatenating them together constructs a multi-dimensional feature map Z : Rd \u2192 RD,Z : x 7\u2192 1/ \u221a D(Z1(x), \u00b7 \u00b7 \u00b7, ZD(x)), such that E (\u3008Z(x),Z(y)\u3009) = K(x,y). The procedure for generating random feature maps for polynomial kernels is listed in Algorithm 1 and illustrated in Figure 1.\n\n1 3 10 9 7\n1 3 10 9 7 a = {0, 0, 2}n q = 0, r = 2, D = 4\n2 -10 -28 16 -4 24 -14 2\n-10 -224 -48 -14\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1\n-1 -1 -1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1\n\n\n\n\nInput Vector Random Projections Projection Products\nRandom Feature\nMap\nD\nr\nD d\nd\nFigure 1. shows Algorithm 1 projecting a 5 dimensional input vector to a random feature map for a 2nd order homogenous polynomial kernel in 4 dimensions.\nAlgorithm 2 \u2013 CRAFTMaps using RFM\nInput: Kernel parameters q and r, up and down projection dimensionalities D and E such that E < D, sampling parameter p > 0 Output: CRAFTMap G : Rd \u2192 RE, such that \u3008G(x),G(y)\u3009 \u2248 K(x,y)\n1: Up Project: Using Algorithm 1, construct random feature map Z : Rd \u2192 RD, such that \u3008Z(x),Z(y)\u3009 \u2248 K(x,y) 2: Down Project: Using Johnson-Lindenstrauss random projection, linearly down-project Z to construct G : RD \u2192 RE such that \u3008G(Z(x)),G(Z(y)\u3009 \u2248 \u3008Z(x),Z(y)\u3009."}, {"heading": "3.2. Limitations of Random Feature Maps", "text": "Random feature maps are an efficient means to approximate the underlying eigen structure of the exact kernel space. However, their efficiency can come at the cost of their rank deficiency. Consider for instance Figure 2(a) where the black graph shows the log-scree plot of the exact 7th order polynomial kernel (q = 1) obtained using 1000 randomly selected set of points from MNIST data. The red graph shows the log-scree plot for the random feature map (Kar & Karnick, 2012) in a 212 dimensional space. It can be observed that the red plot is substantially lower than the black one for majority of the spectrum range. Note that this rank deficiency is also true for the space generated by random tensor products (Pham & Pagh, 2013) whose log-scree plot is shown in green in Figure 2(a).\nThis rank deficiency can result in the under-utilization of the projected feature space. Figure 2(b) shows the histogram of the linear weight vector learned in a 212 dimensional random feature map (Kar & Karnick, 2012) for a 7th order polynomial kernel (q = 1). The plot was obtained for 1000 randomly selected points from MNIST data for two class-sets. The spike at zero shows that a majority of the learned weight components do not play any role in classification."}, {"heading": "3.3. CRAFTMaps using Up/Down Projections", "text": "To address the limitations of random feature maps, we propose CRAFTMaps as a more accurate approximation of polynomial kernels. The intuition behind CRAFTMaps is to first capture the eigen structure of the exact kernel space comprehensively, followed by representing it in a more concise form. CRAFTMaps are therefore generated in the following two steps:\nUp Projection: Since the difference between \u3008Z(x),Z(y)\u3009 and K(x,y) reduces exponentially as a function of the dimensionality of Z (Kar & Karnick,\n2012) (Pham & Pagh, 2013), we first up project the original data non-linearly from Rd to a substantially higher dimensional space RD to maximally capture the underlying eigen structure of the exact kernel space.\nDown Projection: Since the randomized feature map Z : Rd \u2192 RD generated as a result of the upprojection step is fundamentally rank-deficient (\u00a7 3.2), we linearly down project Z to a lower-dimensional map G : RD \u2192 RE, such that E < D, and \u3008G(Z(x)), G(Z(y))\u3009 \u2248 \u3008Z(x),Z(y)\u3009. The procedure to generate CRAFTMaps is listed in Algorithm 2. Note that while Algorithm 2 uses random feature maps (Kar & Karnick, 2012) for up-projection, one could also use tensor products (Pham & Pagh, 2013) instead to generate Z.\nThe rank improvement brought about by using CRAFTMaps for random feature maps and tensor sketch is shown in Figure 2-a by the dotted red and green plots respectively. The improved utilization of the projected space of random feature maps due to CRAFTMaps is demonstrated in Figure 2(c)."}, {"heading": "3.4. Error Bounds for CRAFTMaps", "text": "Recall that the following result obtained using an application of the Hoeffding inequality (Hoeffding, 1963) is central to the analysis of (Kar & Karnick, 2012):\nPr (|\u3008Z(x),Z(y)\u3009 \u2212K(x,y)| > \u03b5) \u2264 2 exp ( \u2212D\u03b5 2\n8C2\u2126\n) (1)\nWe first examine this inequality more closely for homogenous polynomial kernels K(x,y) = \u3008x,y\u3009r for all points on the unit sphere. In that case we have,\nC2\u2126 = (pf(pR 2))2 =\n( 1\n2r+1\n)2 d2r (2)\nwhere R = max \u2016x\u2016`1 = \u221a d and a suitable choice for p is 1/2. We only get a non-trivial bound when D & \u03b5\u22122d2r. Note however that if we used explicit kernel expansion, we would need substantially fewer features (at most ( d+r\u22121 r ) ). The same holds for (Pham & Pagh, 2013) since they apply the same Hoeffding inequality, and the analysis produces the same asymptotics.\nWe therefore first present an improved error analysis of (Kar & Karnick, 2012), focusing on homogeneous polynomial kernels. We then use this analysis to prove error bounds of CRAFTMaps. Note that these bounds are independent of the dimensionality of the input space, which is a significant improvement over both (Kar & Karnick, 2012) and (Pham & Pagh, 2013).\nLemma 3.1. Fix an integer r \u2265 2, and define SD as:\nSD = D\u2211 i=1 r\u220f j=1 \u3008x, \u03c9i,j\u3009\u3008x\u2032, \u03c9i,j\u3009\nwhere x,x\u2032 are vectors of unit Euclidean length, and \u03c9i,j \u223c N (0, Id) are independent Gaussian vectors. Then whenever D \u2265 3 \u00b7 4r+2\u03b5\u22122,\nPr (\u2223\u2223\u2223\u2223 1DSD \u2212 \u3008x,x\u2032\u3009r \u2223\u2223\u2223\u2223 \u2265 \u03b5) \u2264 cr exp ( \u22121 2 ( D\u03b52 11 ) 1 2r+2 ) where 0 < c < 0.766 is a universal constant.\nProof: Let Yi = \u220fr j=1\u3008x, \u03c9i,j\u3009\u3008x\u2032, \u03c9i,j\u3009, then the deviation of SD from its mean is estimated by the rate at which the tails of Yi decay, which is in turn determined by the rates at which the moments of Yi grow. We first verify that the expectation of the summands indeed equals \u3008x,x\u2032\u3009r:\nE (Yi) = r\u220f j=1 E ( xT\u03c9i,j\u03c9 T i,jx \u2032) = \u3008x,x\u2032\u3009r\nSimilarly, the kth moment of Yi can be determined as: E ( |Yi|k ) = r\u220f j=1 E ( |tr ( xT\u03c9i,j\u03c9 T i,jx \u2032) |k)\n\u2264 r\u220f j=1 [\u2225\u2225x\u2032xT\u2225\u2225k 2 E ( tr ( xT\u03c9i,j\u03c9 T i,jx )k)]\n= r\u220f j=1 E ( |\u03c9Ti,jx|2k ) = r\u220f j=1 E ( |\u03b3j |2k ) = [( 1\n2\n)k (2k)!\nk!\n]r \u2264 ( \u221a 2)r ( 2k\ne\n)rk \u2264 crkrk\nHere \u03b3j \u223c N (0, 1), c = \u221a\n2(2/e)k, and the last three expressions above follow from the formula for the moments of a standard Gaussian random variables (Patel\n& Read, 1996). We now estimate moments of feature map approximation error.\nQ = 1\nDk E (\u2223\u2223\u2223 D\u2211 i=1 (Yi \u2212 E (Yi)) \u2223\u2223\u2223k)\nAssuming k \u2265 2, and using Marcinkiewicz\u2013Zygmund inequality (Burkholder, 1988) we have:\nQ \u2264 (\nk\u221a D\n)k E ( |Yi \u2212 E (Yi) |k ) A standard estimate of the right-hand quantity using Jenson\u2019s inequality allows us to conclude that\nQ \u2264 (\n2k\u221a D\n)k E ( |Yi|k ) \u2264 cr ( 2k\u221a\nD\n)k krk\nFinally, we apply Markov\u2019s inequality to bound the tails of the approximation error:\nPr (\u2223\u2223\u2223\u2223\u2223 1D D\u2211 i=1 Yi \u2212 \u3008x,x\u2032\u3009r \u2223\u2223\u2223\u2223\u2223 \u2265 \u03b5 ) \u2264 Q \u03b5k \u2264 cr ( 2k \u03b5 \u221a D )k krk\n= cr exp ( k [ log(2kr+1)\u2212 log(\u03b5 \u221a D) ])\nFixing \u03b1 > 0 and assuming that D > e2\u03b14r+2\u03b5\u22122 and k = b(\u03b52De\u22122\u03b1/4)1/(2r+2)c ensures that\nlog(2kr+1)\u2212 log(\u03b5 \u221a D) \u2264 \u2212\u03b1\nand k \u2265 2, so our earlier assumption when applying Marcinkiewicz\u2013Zygmund inequality is valid. Thus\nPr (\u2223\u2223\u2223\u2223\u2223 1D D\u2211 i=1 Yi \u2212 \u3008x,x\u2032\u3009r \u2223\u2223\u2223\u2223\u2223 \u2265 \u03b5 ) \u2264 cr exp ( \u2212\u03b1 ( D\u03b52 4e2\u03b1 )\u03c1) where \u03c1 = 1/(2r+ 2) and c \u2264 \u221a\n2(2/e)2 < 0.766. Take \u03b1 = 1/2 to reach the bound in the theorem.\nApplying Lemma 3.1, the following corollary follows:\nCorollary 3.2. Let X \u2282 Rd be a set of n unit vectors. Let \u03c9i,j \u223c N(0, Id) be a set of r \u00b7D independent Gaussian random vectors. If D & 4r+1 log(n)2r+2\u03b5\u22122 then we have with high probability:\u2223\u2223\u2223\u2223\u2223\u2223 1D D\u2211 i=1 r\u220f j=1 \u3008x, \u03c9i,j\u3009 \u3008x\u2032, \u03c9i,j\u3009 \u2212 \u3008x,x\u2032\u3009 r\n\u2223\u2223\u2223\u2223\u2223\u2223 \u2264 \u03b5 which holds simultaneously \u2200 x,x\u2032 \u2208 X.\nProof: We apply the Lemma 3.1 along with the trivial union bound over O(n2) points. Thus, we require\nexp(log(n2)\u2212 (D\u03b52)1/(2r+2)) to be small. In this case, picking D \u2265 log(n2)(2r+2)\u03b5\u22122 suffices.\nAn alternate way to view this is to fix D, in which case the final approximation error will be bounded by:\n\u03b5 . log(n2)r+1/ \u221a D (3)\nWe can combine this with a usual JohnsonLindenstrauss (Johnson & Lindenstrauss, 1984) random projection as follows:\nTheorem 3.3. Let X \u2282 Rd be a set of n unit vectors. Suppose we map these vectors using a random feature map Z : Rd \u2192 RD composed with a JohnsonLindenstrauss map Q : RD \u2192 RE, where D \u2265 E, to obtain Z\u2032, then the following holds: \u2223\u2223\u3008x,x\u2032\u3009r \u2212 \u3008Z\u2032(x),Z\u2032(y)\u3009\u2223\u2223 . 2r+1 log(n)r+1 D1/2 + log(n)1/2 E1/2\nwith high probability \u2200 x,x\u2032 \u2208 X simultaneously.\nProof: A Johnson-Lindenstrauss projection from RD to RE preserves with high probability all pairwise inner products of the n points {Z(x) : x \u2208 X} in RD to within an additive factor of \u03b5\u2032 . log(n)1/2/E1/2. Applying the triangle inequality:\n|\u3008x,y\u3009r \u2212 \u3008Z\u2032(x),Z\u2032(y)\u3009| \u2264 |\u3008x,y\u3009r \u2212 \u3008Z(x),Z(y)\u3009|+ |\u3008Z(x),Z(y)\u3009 \u2212 \u3008Z\u2032(x),Z\u2032(y)\u3009| := \u03b5+ \u03b5\u2032\nReferring to Equation 3 to bound \u03b5, we obtain the final error bound:\n\u03b5+ \u03b5\u2032 . 2r+1 log(n)r+1\nD1/2 +\nlog(n)1/2\nE1/2\nIn particular, the error is lower than random feature maps (Kar & Karnick, 2012) whenever:\n2r+1 log(n)r+1\nD1/2 +\nlog(n)1/2\nE1/2 .\n2r+1 log(n)r+1\nE1/2\nFixing D = g(r)E for some constant g(r) \u2265 1, CRAFTMaps provide a better error bound when:\ng(r) &\n( log(n)r+1/2\nlog(n)(r+1/2) \u2212 2\u2212(r+1)\n)2 \u2248 1"}, {"heading": "3.5. Efficient CRAFTMaps Generation", "text": "Recall that for Hessian based optimization of linear regression problems, the dominant cost of O(nD2) is spent calculating the Hessian. By compactly representing random feature maps in RE as opposed to RD for E < D, CRAFTMaps provide a factor of D2/E2\ngain in the complexity of Hessian computation. A straightforward version of CRAFTMaps would incur an additional cost of O(nDE) for the down-projection step. However, since for problems at scale n >> D, the gains CRAFTMaps provide for classifier learning over random feature maps is well worth the relatively small additional cost they incur.\nThese gains can be further improved by using structured random matrices for the up/down projections of CRAFTMaps. One way to do this is to use the Hadamard matrix as a set of orthonormal bases, as opposed to using a random bases-set sampled from a zero mean distribution. The structured nature of Hadamard matrices enables efficient recursive matrixmatrix multiplication that only requires O(n2log(n)) operations compared to the O(n3) operations needed for the product of two n \u00d7 n non-structured matrices. Constructing CRAFTMaps using Hadamard transform can therefore reduce the complexity of up projection from O(nDd) to O(nDlog(d)), and that of down projection from O(nD2) to O(nDlog(D)) respectively. To employ Hadmard matrices for efficient CRAFTMaps generation, we use the sub-sampled randomized Hadamard transform (SRHT) (Tropp, 2011).\nWhile SRHT can be used directly for the downprojection step, we need to incorporate a few novel modifications to it before it can be used for upprojection. In particular, given a kernel function K : (x,y) 7\u2192 f(\u3008x,y\u3009) and a d dimensional1 vector x, we first construct T = d \u2211D i=1 Ni)/de copies of x, where N is defined in Algorithm 1. Each copy xt is multiplied by a diagonal matrix Mt whose entries are set to +1 or \u22121 with equal probability. Each matrix Mtxt is implicitly multiplied by the d \u00d7 d Hadamard matrix H. All rows of HMtxt for all t = {1, \u00b7 \u00b7 \u00b7,T} are first concatenated, and then randomly permuted, to be finally used according to Algorithm 1 to non-linearly up-project x from Rd to RD (see Figure 3)."}, {"heading": "4. Classification Using ECOCs", "text": "To solve multi-class classification problems, we use error correcting output codes (ECOCs) (Dietterich & Bakiri, 1994) which employ a unique binary \u201ccodeword\u201d of length c for each of the k classes, and learn c binary functions, one for each bit position in the codewords. For training, using an example from class i, the required outputs of the c binary functions are specified by the codeword for class i. Given a test instance x, each of the c binary functions are evaluated to compute a c-bit string s. This string is compared to the k codewords, assigning x to the class whose codeword is\n1As Hadamards exist in powers of 2, usually x needs to be zero-padded to the closest higher power of 2.\nclosest to s according to some distance.\nOverall, given d dimensional data from k classes, we first use up/down projections to construct its CRAFTMap representation in RE. We then use the framework of ECOCs to learn c binary linear regressors in RE. We perform multi-fold cross validation on the training data to select one regularization parameter \u03bb that is used for all the c codeword classifiers. To test a d dimensional example, it is first up/down projected to RE, and then passed through ECOCs to be classified to one of the k classes."}, {"heading": "5. Experiments and Results", "text": "We now present reconstruction and classification results of CRAFTMaps on multiple data-sets."}, {"heading": "5.1. Reconstruction Error", "text": "Figure 4 shows the normalized root mean square (nrms) errors obtained while reconstructing the polynomial kernel with r = 7 and q = 1 using random feature maps (Kar & Karnick, 2012) and tensor sketching (Pham & Pagh, 2013) versus their respective CRAFTMap representations. Results over 6 different data-sets are presented. All graphs in each plot were obtained using 10 folds of 1000 randomly selected data points from a particular data-set. As shown, CRAFTMaps provide a significant reconstruction improvements for random maps and tensor sketching.\nFigure 5 shows the reconstruction improvements due to CRAFTMaps as a function of polynomial degree. These results were obtained using 10 sets of 1000 randomly picked points from MNIST data. As shown, CRAFTMaps consistently improve the reconstruction error over a range of polynomial degrees."}, {"heading": "5.2. Classification Error", "text": "Table 1 shows the test classification errors obtained using random feature maps (Kar & Karnick, 2012) and\ntensor sketching (Pham & Pagh, 2013) versus their CRAFTMap representations. Results over 4 different data-sets are presented, on which CRAFTMaps consistently delivered improved classification performance.\nWe now explain results for CRAFTMaps on MNIST data for small and substantially large projected feature spaces. We also explain CRAFTMaps results on very large amounts of training data using MNIST8M.\nSmall Feature Spaces: Table 1-a shows MNIST results on feature space sizes 300 to 700 dimensions. Note that for RE < d (which for MNIST is 784 ), the random feature maps cannot use the H-0/1 heuristic of (Kar & Karnick, 2012). CRAFTMaps however do not have this limitation as even for E < d, D can still be >> d. This allows CRAFTMaps to use the H-0/1 heuristic in RD, which in turn reflects in RE. This results in substantial classification gains achieved by CRAFTMaps for small-sized feature spaces, and highlights their usefulness in applications with low memory footprint such as mobile phone apps.\nLarge Feature Spaces: Table 1-b shows the MNIST results on feature space sizes 212 to 216 dimensions. It can be seen that CRAFTMaps consistently gave improved test error and achieved 1.12% test classification rate using the original 60K training data (unitlength normalized, non-jittered and non-deskewed).\nResults on MNIST8M Data Figure 6 shows the performance of CRAFTMaps in comparison to random feature maps for a given sized RE (214) as the number of examples vary from 60 thousand to 8.1 million. This experiment uses the same set of 10 thousand test points as used for the experiments with MNIST data. It can be seen that CRAFTMaps on random feature maps converge the fastest, and consistently gives better classification performance compared to the other representations. These results were obtained using a polynomial kernel with r = 7, q = 1, D = 217,\nE = 214, and ECOCs equal to 200. As we increase E to 216 and D to 219 using CRAFTMaps on RFM for 7th order polynomial kernel (q = 1), we achieved test classification error of 0.91% on MNIST8M data-set."}, {"heading": "5.3. Run-Time Analysis", "text": "Figure 7 shows the log-log scatter plot of the compute times (projection + Hessian) for random feature maps (Kar & Karnick, 2012), tensor sketching (Pham & Pagh, 2013), and CRAFTMaps using random feature maps (with H-01 heuristic). These times were recorded for MNIST data using a 40-core machine. Notice that CRAFTMaps show significant per unittime classification improvements towards the right end of the x-axis. This is because as the size of the projected space increases, the Hessian computation cost becomes dominant. This naturally gives CRAFTMaps an edge given their ability to encode information more compactly. The performance gain of CRAFTMaps are expected to grow even more as training size increases."}, {"heading": "6. Conclusions and Future Work", "text": "In this work, we proposed CRAFTMaps to approximate polynomial kernels more concisely and accurately compared to previous approaches. We theoretically proved error bounds of CRAFTMaps and presented empirical results to demonstrate their effectiveness.\nAn important context where CRAFTMaps are particularly useful is the map-reduce setting. By computing a single Hessian matrix (with different gradients for each ECOC) in a concise feature space, CRAFTMaps provide an effective way to learn multi-class classifiers in a single-pass over large amounts of data. Moreover, their ability to compactly capture the eigen structure of the kernel space makes CRAFTMaps suitable for smaller scale applications such as mobile phone apps."}], "references": [{"title": "Sampling Techniques for Kernel Methods", "author": ["D. Achlioptas", "F. McSherry", "B. Sch\u00f6lkopf"], "venue": "In Advances in Neural Information Processing Systems", "citeRegEx": "Achlioptas et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Achlioptas et al\\.", "year": 2002}, {"title": "Theoretical foundations of the potential function method in pattern recognition learning", "author": ["A. Aizerman", "E.M. Braverman", "L.I. Rozoner"], "venue": "Automation and Remote Control,", "citeRegEx": "Aizerman et al\\.,? \\Q1964\\E", "shortCiteRegEx": "Aizerman et al\\.", "year": 1964}, {"title": "Predictive low-rank decomposition for kernel methods", "author": ["F.R. Bach", "M.I. Jordan"], "venue": "In Proceedings of the 22nd International Conference on Machine Learning,", "citeRegEx": "Bach and Jordan,? \\Q2005\\E", "shortCiteRegEx": "Bach and Jordan", "year": 2005}, {"title": "The Curse of Highly Variable Functions for Local Kernel Machines", "author": ["Y. Bengio", "O. Delalleau", "N. Le Roux"], "venue": "In Advances in Neural Information Processing Systems", "citeRegEx": "Bengio et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Bengio et al\\.", "year": 2006}, {"title": "Random Projection, Margins, Kernels, and Feature-Selection", "author": ["A. Blum"], "venue": "In Subspace, Latent Structure and Feature Selection. Springer,", "citeRegEx": "Blum,? \\Q2006\\E", "shortCiteRegEx": "Blum", "year": 2006}, {"title": "Sharp inequalities for martingales and stochastic integrals", "author": ["D.L. Burkholder"], "venue": "Asterisque,", "citeRegEx": "Burkholder,? \\Q1988\\E", "shortCiteRegEx": "Burkholder", "year": 1988}, {"title": "LIBSVM: A Library for Support Vector Machines", "author": ["C. Chang", "C. Lin"], "venue": "ACM Transactions on Intelligent Systems and Technology,", "citeRegEx": "Chang and Lin,? \\Q2011\\E", "shortCiteRegEx": "Chang and Lin", "year": 2011}, {"title": "Solving Multiclass Learning Problems via Error-Correcting Output Codes", "author": ["T.G. Dietterich", "G. Bakiri"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "Dietterich and Bakiri,? \\Q1994\\E", "shortCiteRegEx": "Dietterich and Bakiri", "year": 1994}, {"title": "On the Nystr\u00f6m method for approximating a Gram matrix for improved kernel-based learning", "author": ["P. Drineas", "M.W. Mahoney"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "Drineas and Mahoney,? \\Q2005\\E", "shortCiteRegEx": "Drineas and Mahoney", "year": 2005}, {"title": "Matrix Computations", "author": ["G.H. Golub", "C.F. Van Loan"], "venue": null, "citeRegEx": "Golub and Loan,? \\Q2012\\E", "shortCiteRegEx": "Golub and Loan", "year": 2012}, {"title": "Probability Inequalities for Sums of Bounded Random Variables", "author": ["W. Hoeffding"], "venue": "Journal of the American Satistical Association,", "citeRegEx": "Hoeffding,? \\Q1963\\E", "shortCiteRegEx": "Hoeffding", "year": 1963}, {"title": "Approximate Nearest Neighbor: Towards Removing the Curse of Dimensionality", "author": ["P. Indyk", "R. Motwani"], "venue": "In Proceedings of the 30th annual ACM Symposium on the Theory of Computing,", "citeRegEx": "Indyk and Motwani,? \\Q1998\\E", "shortCiteRegEx": "Indyk and Motwani", "year": 1998}, {"title": "Extensions of Lipschitz mappings into a Hilbert space", "author": ["W.B. Johnson", "J. Lindenstrauss"], "venue": "In Conference on Modern Analysis and Probability,", "citeRegEx": "Johnson and Lindenstrauss,? \\Q1984\\E", "shortCiteRegEx": "Johnson and Lindenstrauss", "year": 1984}, {"title": "Random Feature Maps for Dot Product Kernels", "author": ["P. Kar", "H. Karnick"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "Kar and Karnick,? \\Q2012\\E", "shortCiteRegEx": "Kar and Karnick", "year": 2012}, {"title": "Random Fourier Approximations for Skewed Multiplicative Histogram Kernels", "author": ["F. Li", "C. Ionescu", "C. Sminchisescu"], "venue": "In Pattern Recognition. Springer,", "citeRegEx": "Li et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Li et al\\.", "year": 2010}, {"title": "Max-Margin Additive Classiers for Detection", "author": ["S. Maji", "A.C. Berg"], "venue": "In IEEE 12th International Conference on Computer Vision and Pattern Recognition,", "citeRegEx": "Maji and Berg,? \\Q2009\\E", "shortCiteRegEx": "Maji and Berg", "year": 2009}, {"title": "Fast and Scalable Polynomial Kernels via Explicit Feature Maps", "author": ["N. Pham", "R. Pagh"], "venue": "In Proceedings of the 19th International Conference on Knowledge Discovery and Data Mining,", "citeRegEx": "Pham and Pagh,? \\Q2013\\E", "shortCiteRegEx": "Pham and Pagh", "year": 2013}, {"title": "Using Analytic QP and Sparseness to Speed Training of Support Vector Machines", "author": ["J.C. Platt"], "venue": "In Advances in Neural Information Processing Systems", "citeRegEx": "Platt,? \\Q1999\\E", "shortCiteRegEx": "Platt", "year": 1999}, {"title": "Random Features for LargeScale Kernel Machines", "author": ["A. Rahimi", "B. Recht"], "venue": "In Advances in Neural Information Processing Systems", "citeRegEx": "Rahimi and Recht,? \\Q2007\\E", "shortCiteRegEx": "Rahimi and Recht", "year": 2007}, {"title": "Advances in Kernel Methods: Support Vector Learning", "author": ["B. Sch\u00f6lkopf", "C.J.C. Burges", "Smola", "A.J. (eds"], "venue": null, "citeRegEx": "Sch\u00f6lkopf et al\\.,? \\Q1999\\E", "shortCiteRegEx": "Sch\u00f6lkopf et al\\.", "year": 1999}, {"title": "Fast Gaussian Process Regression using KD-Trees", "author": ["Y. Shen", "A. Ng", "M. Seeger"], "venue": "In Advances in Neural Information Processing Systems", "citeRegEx": "Shen et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Shen et al\\.", "year": 2005}, {"title": "Sparseness of Support Vector Machines", "author": ["I. Steinwart"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "Steinwart,? \\Q2003\\E", "shortCiteRegEx": "Steinwart", "year": 2003}, {"title": "Improved analysis of the subsampled randomized Hadamard transform", "author": ["J.A. Tropp"], "venue": "Advances in Adaptive Data Analysis,", "citeRegEx": "Tropp,? \\Q2011\\E", "shortCiteRegEx": "Tropp", "year": 2011}, {"title": "Core vector machines: Fast SVM training on very large data sets", "author": ["I.W. Tsang", "J.T. Kwok", "P. Cheung"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "Tsang et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Tsang et al\\.", "year": 2006}, {"title": "Generalized RBF feature maps for efficient detection", "author": ["S. Vempati", "A. Vedaldi", "A. Zisserman", "C.V. Jawahar"], "venue": "In 21st British Machine Vision Conference,", "citeRegEx": "Vempati et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Vempati et al\\.", "year": 2010}], "referenceMentions": [{"referenceID": 19, "context": "Kernel methods allow implicitly learning nonlinear functions using explicit linear feature spaces (Sch\u00f6lkopf et al., 1999).", "startOffset": 98, "endOffset": 122}, {"referenceID": 1, "context": "One solution to this problem is the well known kernel trick (Aizerman et al., 1964), where instead of directly learning a hyperplane classifier in R, one considers a non-linear mapping \u03a6 : R \u2192 H, such that for all x,y \u2208 R, \u3008\u03a6(x),\u03a6(y)\u3009H = K(x,y) for some kernel K(x,y).", "startOffset": 60, "endOffset": 83}, {"referenceID": 21, "context": "It has been observed however that with increase in training data size, the support of the vector w can undergo unbounded growth, which can result in increased training as well as testing time (Steinwart, 2003) (Bengio et al.", "startOffset": 192, "endOffset": 209}, {"referenceID": 3, "context": "It has been observed however that with increase in training data size, the support of the vector w can undergo unbounded growth, which can result in increased training as well as testing time (Steinwart, 2003) (Bengio et al., 2006).", "startOffset": 210, "endOffset": 231}, {"referenceID": 22, "context": "Note that while down-projection using structured random matrices is straight forward (Tropp, 2011), we need to incorporate a few novel modifications to previous structured random projection approaches before they can be used for the up-projection step (see \u00a7 3.", "startOffset": 85, "endOffset": 98}, {"referenceID": 17, "context": "The most popular of these approaches are decomposition methods for solving Support Vector Machines (Platt, 1999) (Chang & Lin, 2011).", "startOffset": 99, "endOffset": 112}, {"referenceID": 4, "context": "To solve this challenge, several schemes have been proposed to explicitly approximate the kernel matrix, including low-rank approximations (Blum, 2006) (Bach & Jordan, 2005), sampling individual entries (Achlioptas et al.", "startOffset": 139, "endOffset": 151}, {"referenceID": 0, "context": "To solve this challenge, several schemes have been proposed to explicitly approximate the kernel matrix, including low-rank approximations (Blum, 2006) (Bach & Jordan, 2005), sampling individual entries (Achlioptas et al., 2002), or discarding entire rows (Drineas & Mahoney, 2005).", "startOffset": 203, "endOffset": 228}, {"referenceID": 20, "context": "Similarly, fast nearest neighbor lookup methods have been used to approximate multiplication operations with the kernel matrix (Shen et al., 2005).", "startOffset": 127, "endOffset": 146}, {"referenceID": 23, "context": "Moreover, formulations leveraging concepts from computational geometry have been explored to obtain efficient approximate solutions for SVM learning (Tsang et al., 2006).", "startOffset": 149, "endOffset": 169}, {"referenceID": 14, "context": "Besides (Rahimi & Recht, 2007), there have been several approaches proposed to approximate other kernels such as group invariant (Li et al., 2010), intersection (Maji & Berg, 2009), and RBF kernels (Vempati et al.", "startOffset": 129, "endOffset": 146}, {"referenceID": 24, "context": ", 2010), intersection (Maji & Berg, 2009), and RBF kernels (Vempati et al., 2010).", "startOffset": 59, "endOffset": 81}, {"referenceID": 10, "context": "Recall that the following result obtained using an application of the Hoeffding inequality (Hoeffding, 1963) is central to the analysis of (Kar & Karnick, 2012):", "startOffset": 91, "endOffset": 108}, {"referenceID": 5, "context": "Assuming k \u2265 2, and using Marcinkiewicz\u2013Zygmund inequality (Burkholder, 1988) we have:", "startOffset": 59, "endOffset": 77}, {"referenceID": 22, "context": "To employ Hadmard matrices for efficient CRAFTMaps generation, we use the sub-sampled randomized Hadamard transform (SRHT) (Tropp, 2011).", "startOffset": 123, "endOffset": 136}], "year": 2013, "abstractText": "Kernel approximation using randomized feature maps has recently gained a lot of interest. In this work, we identify that previous approaches for polynomial kernel approximation create maps that are rank deficient, and therefore do not utilize the capacity of the projected feature space effectively. To address this challenge, we propose compact random feature maps (CRAFTMaps) to approximate polynomial kernels more concisely and accurately. We prove the error bounds of CRAFTMaps demonstrating their superior kernel reconstruction performance compared to the previous approximation schemes. We show how structured random matrices can be used to efficiently generate CRAFTMaps, and present a single-pass algorithm using CRAFTMaps to learn non-linear multi-class classifiers. We present experiments on multiple standard data-sets with performance competitive with state-of-the-art results.", "creator": "LaTeX with hyperref package"}}}