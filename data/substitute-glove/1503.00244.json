{"id": "1503.00244", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-Mar-2015", "title": "23-bit Metaknowledge Template Towards Big Data Knowledge Discovery and Management", "abstract": "The latest become over Big Data its to only increasing he sense endless. The suggests is energized realizing knowledge both part acclaim likely which quickly by widespread pools which Big Data. Today tell still ones through the entrepreneurial year another Dr. Usama Fayyad which soon undergraduate health fellows substantive since but seminars instances taken Knowledge Discovery while Databases (KDD) meanwhile 60 one civil ago. Indeed, are hundred precise with. outlook day Big Data valuation. In could, later continued importance of the subsystem of conventional perspective, numbers, database concrete and process-oriented extruded meant create beyond increasingly popular laboratory - Data Mining and Knowledge Discovery. The over powered neuroscience motives are geared towards helping meant extract insightful moral from even larger publications of application at growth rates brought speed. As the rising levels this popularity, the need for single quite functionality solution for knowledge conducted wants taken necessary. In ever research which, but certain include first report or economic of 72 bit - questions up a Metaknowledge computation for Big Data Processing and bottom-up nature. This research aims intended assure, construction that a study. yet to validity turn time advantageous indicator that much Knowledge Discovery around Big Data.", "histories": [["v1", "Sun, 1 Mar 2015 09:41:11 GMT  (1096kb)", "http://arxiv.org/abs/1503.00244v1", "IEEE Data Science and Advanced Analytics (DSAA'2014)"]], "COMMENTS": "IEEE Data Science and Advanced Analytics (DSAA'2014)", "reviews": [], "SUBJECTS": "cs.DB cs.AI", "authors": ["nima bari", "roman vichr", "kamran kowsari", "simon y berkovich"], "accepted": false, "id": "1503.00244"}, "pdf": {"name": "1503.00244.pdf", "metadata": {"source": "CRF", "title": "23-bit Metaknowledge Template Towards Big Data Knowledge Discovery and Management", "authors": ["Nima Bari", "Roman Vichr", "Kamran Kowsari", "Simon Berkovich"], "emails": ["nbari@gwmail.gwu.edu,", "romanv@exprentis.com,", "berko@gwu.edu"], "sections": [{"heading": null, "text": "Keywords\u2014 23-Bit Meta-knowledge template; Big Data Processing and Analytics; Meta-feature Selection, Knowledge Discovery; Metalearning System.\nI. INTRODUCTION Researchers and developers are currently aware of the difficulty in processing data as the datasets become larger and gain complexity. There are challenges associated with the influx of Big Data. For instance, according to [2], most businesses' metadata is arrayed across applications, databases, and \"tribal knowledge\u201d and managed by enterprises have no \"formal metadata management system processes in place. Therefore, in theory there's a centralized mission but in practice there's a partition which separates Information Technology from Business. Hence, Metaknowledge drives the accuracy of reports, validates data transformations, ensures accuracy of calculations and enforces consistent definitions of business terms across multiple business users. Combined with the challenges Big Data proposes as it relates to time and memory complexities, new ideas for smart and insightful knowledge discovery are desperately needed. For this reason, Metaknowledge templates provide a visual representation of a process from its conceptualization to theory to implementation. The methodology can be applied to any dataset using tools employed for the goal of reaching an intended result. For the purpose of this presentation, we will refer to our sample dataset\n(Cinema Movies) which will navigate the processes outlined in the Metaknowledge template from preprocessing to the 23-bit Golay clustering. It is important to mention two important points: 1- The development of the 23 bits question template is not done arbitrarily but is done through a Metalearning process of Big Data Metaknowledge for feature selection and transformation. In addition to this, the process of formulating these 23 questions must fulfill the requirement of a) bias elimination and subjectivity and b) maximize probability of achieving the most accurate results; 2- the 23-bit template methodology can be applied and utilized for any domain knowledge, however, the specific 23-Bit questions are generated and applied for domain specificity to eliminate bias and maximize probability.\nFrom another perspective, the Metalearning system plays a pragmatic role in optimizing the usage of Data Mining and Machine Learning tools. As a result, it turns their usage into a profitable business. Indeed, a Meta learning system builds upon the repetitive use of a predictive model over tasks to steer profits. Subject to data and statistics, this system has proved to provide major contribution to the successful adaptation of models to ever-changing needs. More specifically, a Meta Learning system deploys its unique pattern recognition function across tasks and ultimately serves as a control measure to the process of exploiting cumulative expertise [12].\nII. METAKNOWLEDGE AND METALEARNING Metaknowledge is simply knowledge about knowledge. It allows data items to be examined inwardly for extraction of knowledge which can be used later. Furthermore, Metaknowledge can be utilized by an application or program allowing enhanced analysis of an initial data item for more informed results. From the Big Data point of view, the result is a data item representative of some formation, and the Metaknowledge is the information concerning the formation itself [3] (unclear). Early on, researchers in Artificial Intelligence mainly focused on developing one problemsolving paradigm that would be widely accepted and applicable. By the late 1960\u2019s, it was evident that such a paradigm is impossible to create because of the need to store large and domain specific knowledge [3]. For example, knowledge-based systems, which have been developed and captured amorphous data derived from tasks targeting specific areas like gaming, speech recognition, math, and chemistry, [4,5,6] etc. The large scale of task to collect the knowledge for these systems and the utilization and management of these\nlarge repositories has created a major research problem [3]. In addition, how to use and represent knowledge have both been problematic. Many encoding methods have been developed to direct and apply knowledge. Historically these tasks have been geared towards utilizing and applying knowledge for a particular domain [7, 8, 9, 10, 11]. Metalearning is by far an efficient tool to troubleshoot problems associated with the application of Data Mining (DM) and Machine Learning (ML) tools. Such troubleshooting effects are particularly witnessed in areas such as regression and classification. From a practical standpoint, the successful use of Data Mining and Machine Learning tools is inextricably linked to the proper selection of a predictive model(s) ; a model that fits to the model of application. It is very important to note that a lack of assistance in the process of model selection and combination or wrong Metafeatures can result in a wide range of obstacles to end-users [12]. These obstacles, including a user lack of expertise to choose the right model, tend to hinder both the cost-effectiveness and ease of the use of technology. In addition, end-users often face the limitations of models that operate on a trial-error basis. In order to tackle these barriers, a Metalearning system ensures both the automatic and systematic learning of user guidance. Unlike others systems, this learning system perfectly matches a specific task to a model or a combination of models [12].\nFrom another perspective, the Metalearning system plays a pragmatic role in optimizing the usage of Data Mining and Machine Learning tools. More specifically, a Metalearning system deploys its unique pattern recognition function across tasks and ultimately serves as a control measure to the process of exploiting cumulative expertise through models [12].\nIII. 23- BIT METAKNOWLEDGE VECTOR TEMPLATE FOR BIG DATA INSIGHTFUL PROCESSING AND CLUSTERING\nResearchers and developers have been challenged in efficiently utilizing the hidden information from Metadata that comes with Big Data. Also called meaning of data, this hidden information can be localized through a simple observation of the desired clustering (posteriori), without prior knowledge of the applied clustering criteria. The computational Big data processing and clustering technique suggested here as a 23-bit template will allow the information retrieval of this valuable and insightful information[13]. The 23 meta-knowledge template processing technique to represent a record and to introduce its binary representation offers a unique added value such that it provides clusters of inter-related data objects quickly and in a linear timeframe. The database is scanned together by answering the 23 questions template (derived from Metaknowledge) in order to provide meaningful clusters of records. The 23-bit questions\u2019 Metaknowledge is inspired from the popular 20 questions game [14]. The 23 questions are structured so that each can be answered with either a yes (1) or no (0). In other words, given a template called T=q1, q2, q3\u2026q23, q is a single question representing a bit along the 23-bit vector. The assertion is that a 23 bit vector template is considered sufficient to characterize\nany type of information. While putting in place 23-bit templates on all sorts of high level activities, this suggested technology is subject to distinct structuring of ontology interpretation; an unprecedented breakthrough that did not take place during the science of language[14].\nThe Metaknowledge template approach interestingly allows the possibility to categorize an object based upon inherent characteristics such as image geometry, semantic interrelationships, and so on. It is very important to recall that today\u2019s main form of research is written-based. As a result, other types of research have become too complex to conduct since they fail to successfully pass the process of generating meaningful clusters. When other research fails, the Golay Coding approach becomes very useful. The challenge that arises from an extension of the conventional searching methodology hinges upon developing constructive attributes that are in turn used to develop the Metaknowledge of 23-bit vector templates [13].\nThe selection of 23-bit templates is not random. This is an outcome of a unique structure of the world- a mathematical oddity associated with exclusive properties of the perfect Golay code [23, 12, 7]. Several possible adaptations of the code-word construction have been investigated in [15]. The experimental results in [22] show, that with 23 bit binary codeword; a possible 277 representations with Hamming Distance 0,1,2 can be found. Per [22] the algorithm complexity is at O(n) at FuzzyFind Dictionary (FFD) and O(1) to access FFD. In order to take advantage of this approach the 23 bit [1,0] representation 23 attributes (Metafeatures) are determined per 23-bit vector. That 23-buit vector carries the Metaknowledge descriptor of the record itself in a given domain. This representation leads to creation of Goley Coding Hashes to index record and Goley Transformation Tables to represent a record for access [22]. Therefore the discovery and derivation of 23-bit attribute vector is essential to characterize the record itself.\nIn the following section we will give examples and show how we were able to generate these 23 bit record of binary questions/answers representing Metaknowledge of the given domain based on the Metalearning process for Metafeature attribute selection and consequent transformation.\nIV. META-KNOWLEDGE DISCOVERY, ATTRIBUTE/FEATURE DERIVATION\nDuring the determination of questions to classify the stream of data we attempted to establish a framework-like process to avoid the pitfalls of representing meta-knowledge through possible domain knowledge, which is tempting on a small subset of data. Instead we adapted machine learning and data mining framework to derive and discover meta-knowledge contained in raw data. This Metaknowledge will allow us to classify input streams of data using Golay code to represent record as derived binary 23 bit vector for the purpose of indexing and accessing it.\nAs we evaluate various algorithms for Metaknowledge characterization [4], [5], it allows for 23-bit binary attribute representation in a vector for processing through a Goley Code algorithm. The record\u2019s vector is representative of Metafeatures. The Metafeatures are corresponding to a best fit series of questions (23 questions representing 23 Metafeature attributes of Metaknowledge). The single Metafeature attribute representation corresponds to a single bit in Golay code\u2019s 23-bit vector. This vector is utilized for the creation of Goley Coding Hashes to index records and Goley Transformation Table to access them [22].\nThe classification Algorithms used are summarized in the table below for the purpose of discovery.\nThe sequence of algorithms applied provide guidance to determine Metaknowledge (for example, an indication of strength of relationships between attributes, ability to derive specific and concrete Metafeatures) [4], [5]. It also helps us make assertions about values (thresholds of boundaries) of feature questions. These questions are to be used as a foundation to represent the Metaknowledge in binary 23-bit\nword.\nA. Classification Margin As noted in [6], pp.34, several of the papers focus on applying algorithms to discover and extract Metaknowledge (sentence unclear). The [6] refers to a measurement of classification, which depends on number examples, algorithm error, and the parameter k as a user defined parameter determining size of the margin (perception of confidence). Such measures were helpful in comparing and quantifying differences among algorithms used and would be helpful in our next step to move to a semi-automated approach of Metaknowledge discovery translated into a series of questions for binary representation of a class based on Golay code.\nThe [6] presents a formula to determine what algorithm is performing well in Metaknowledge discovery. This can be used when multiple ranges of algorithms are used to determine the most suited Metafeatures for a given problem and domain.\nThe \u201cformula\u201d is to support the notion of qualification of \u201cperforming\u201d well for an algorithm (while not applicable to all of them like scatter plots), which allows to set a margin for the set of algorithms utilized.\nB. Classification Framework We approach the problem first as a problem with a welldefined outcome (given the domain of movies, that is represented as Oscar Wins with Yes or No answers). This approach allows us to represent effectively a knowledge and corresponding record as binary Golay code word. That is translated into input in the Golay code as a sequence of 23 bit questions with binary [1, 0] answers. The attribute value is then set to 1 to represent \u201ctrue\u201d answer and set to \u201c0\u201d to represent negative answer. We make the assertion that by defining the problem as a problem with binary outcome (in this case represented by Oscar Wins) we make a discovery of Metaknowledge and Metaknowledge more standardized andrepeatable.. The outcome is then 23-bit binary vector representing record.\nFor our purpose we utilized extracted sample records from IMDB movie source [7], which contain a set of raw movie data points. These data points contained at the beginning unknown Metaknowledge, which had to be discovered (fragment). The framework of discovery is discussed in Section C. Through applied framework we attempted to increase information entropy of the record while minimizing the degree of freedom in given meta-feature attributes (which is done through the binary representation).\nWe also assert that the discovered Metaknowledge from a given data sample can be applied to all records in the domain. Applying Bayes algorithm assumption of inferring a \u201ccomplete\u201d knowledge from raw or Metafeatures knowledge to classify a full record accurately [9] we see the chance of getting result \u201cA\u201d given a positive test for \u201cX\u201d, where X is not\na zero.\nThe prior knowledge of movie sample records (while attractive on small subset of records) was represented as binary questions of what exact actor or director received an Oscar win. It initially appeared as the right classifier to use. However, in the consequent evaluation to generate Metafeatures by algorithm(s) (Table I.) these turned out to represent minimal information entropy about the data record and were rather classified as weak Metaknowledge features.\n1) Enhanced datasets ( a posterior Metaknowledge). Since the raw data did not contain Metafeatures for the purpose of deriving a posterior meta-knowledge we re-applied algorithms in Table I. We made this assertion with the purpose of deriving new additional features under the assumption of Shannon\u2019s distribution of information entropy [8]. Each metafeature is represented as [1, 0] and consequently the distribution information is as \u201clog of 2\u201d. Therefore all probability of distribution pi is positive or NULL, and consequently the SUM (pi.) = 1 (formula below [8], [22]).\nThis principle justifies lowering the degree of freedom in meta-feature attribute, while increasing predictability of quasioutcome. This allows us to apply Golay code as a means of classification and improve overall efficiency of given processing time.\nC. Classification Result (all graphs/explanations) Discovery of enhanced attributes - Enhanced datasets (a\nposterior meta-knowledge)\nFigure 1.: Scatter Plot (correlation of Oscars vs rtCriticsScore by mpaaRating)\nFigure 2.: Scatter Plot (correlation of OscarWins, rtAudienceScore, Wins)\nThe correlation graph Fig\u2026. below shows a correlation graph (repetitive) between critic\u2019s Score and Audience Score grouped by Oscars attribute (where a number corresponds to the number of Oscars awards received). The area above the 80th percentile is the area of interest showing strong correlation between high CriticsScore, AudienceScore and Oscar wins.\nTraditionally the distribution of pattern in records is assessed using histograms or cumulative distribution function (CDF). We approached it by using Q-Q (Quantile-Quantile) plots. The Figure 4 shows Q-Q plot of imdbRating shows correlation to outcome with rating above 6 and below 8.8 fitting linear model (wording).\nThe Q-Q plot of imdbRating shows a range of 5.8 to 9 as the main range leading to outcome of tested Oscar award (as shown above Figure 3.) (sentence unclear). It shows imdbRating attribute as one to rely on in deriving the binary question. In the next step we subject this attribute to model testing (the case of overfitting is not that critical because we test feasibility and importance of meta-feature). We used this to derive a threshold value to tune a binary question to provide binary answer. Similarly we applied Q-Q plot to \u201cmovies.AudienceScore\u201d, which shown the range between 55 to 95 percentile mainstream with likelihood of classification to receive an Oscar award. Consequently, one can construct a binary answer question derive a Metafeature attribute classification, for example \u201cWas the movie.AudienceScore above 55?. The answer can be Yes or No represented as [1,0] for the purpose of constructing a binary vector. The Q-Q plot Figure 5 was used to confirm our assertion that it is correct to classify the as problem with binary outcome [1, 0]. The zero [0] is clearly defined and distinct outcome (fragment). Therefore the outcome of \u201c1\u201d is assigned to any movie that was awarded an Oscar in any movie category.\nBased on the sequence of evaluations we determined, for example, the following attributes to be useful and benefiting our quasi model. It was criticsScore and imdbRating both being correlated to group defined as \u201cWins_GT4\u201d, which had a value \u201c1\u201d for number of wins > 4 and \u201c0\u201d for wins <0, i.e. representing a question with [Yes,No] answer. The \u201cwins_GT4 \u201cis an example of a derived attribute based on the Metaknowledge in raw data. The graph \u2026\u2026 below shows the area in yellow, which is the area of strongest correlation between imdbRating and scriticsScore given \u201cWins_GT4\u201d = 1\u201d.\nThe resulting Metafeature attribute derived was \u201cWhat was the number of wins GT 4?\u201d, which could then we answered as Yes, No [1,0] for the purpose of Golay code representation.\nWe applied several variations of decision trees to test metafeature attributes and to revalidate the thresholds used in discovery of these Metafeatures. For this purpose we focus on terminal nodes of a decision tree. This way we derive a rule for threshold of a new metaattribute. The figure below shows the \u201cregression tree\u201d for Model C which utilized several discovered meta-feature attributes like \u201cNominations_gt20\u201d, \u201cNumber_wins_GT15\u201d, or \u201cimdb_rating>=7.5\u201d.\n1) Decision Trees We also applied a conditional tree model technique to the input set of attributes (questions) that were evaluated for the best fit and to determine terminal nodes.\nThe Golay code work is represented as a set of 23 attributes (parameters) to be represented as Yes, No [1,0] and the \u201cdecision tree\u201d algorithms well suited for determination of Metafeatures through deriving conditions of terminal nodes on\nclassification of data. We made a claim that the issue of overfitting into quasi model here does not pose a problem for classification.\n2) SVM (Support Vector Machine) The SVM method was effective in determining what initial\nset of features like \u2018Francis_Fisher' and 'David_O_Russell' and 'Box_office_sales_GT50_LE120mil' were determined as not suited to represent record. However the CrititicsScore_GT40 as meta-feature was identified as high impact on outcome as well as Audience_Score_GT60 and Nominations_gt20 and Wins_GT4. The method was well suited to discover hidden meta-knowledge pattern and to confirm the selected Metafeatures.\n3) GLM (General Linear Model) This technique is used to quickly discover attribute and metafeature is strongly impacting the outcome (wording).\nThe reason is to test easily and efficiently what meta-feature is to be evaluated more thoroughly (needs more explanation). In one run we subjected to GLM method test the whole set of 26 attributes that were subjects the of GLM method evaluation to confirm significant impact of attributes with [1,0] classification (i.e. low degree of freedom) on the intended outcome. The GLM method provided a quick assessment of the attributes derived from raw data as well as discovered meta-feature attributes and their impact on simulated outcome (Oscar wins in our considered dataset).\nD. Classification Conclusions and Summary Table II is a summary and reflects the results of the applied framework to the raw data. It enlists an example of metafeature attributes.\nThe derived set of Metaknowledge of the domains leads to selection of the best questions representative of the records (Table II.) and the given domain and leads to 23-bit binary attribute vector representation (Figure 8), which is fed into Goley Code based algorithm to generate Goley Coding Hashes to index records and Goley Transformation Tables to access the records. Figure 8.: Goley code 23-bit attribute vector representation.\nV. CONCLUSION AND FUTURE WORK The established framework was instrumental to discover Metaknowledge and to derive Metafeatures for binary vector representation of attributes to process in Goley Code.\nWe assert that such framework and Metaknowledge discovery approaches combined with Goley Code processing can be reliably applied in general to Big Data problem (indexing, clustering, and access). The correct derivation of Metafeature attributes for 23-bit vector representation is critical to proper indexing, clustering and access. The Metafeature related conclusions can then be extrapolated to Big Data based on sampling theories [18, 20] in a domain specific \u201cpoint of view\u201d. Such extrapolation of Metafeature characteristics to Big Data represented as a 23-bit binary vector in Golay code will lead to reliable classification regardless.\nWe make the assertion that for the purpose of qualifying algorithm (like Golay code in our case) the problem is best approached as a problem with binary [1, 0] outcome.\nWhile some techniques, like decision trees, bring the notion of quasi-complete data separation issues, and thus questionablele validity of the model fit, it is not perceived as a negative impact in this case during the discovery of the Metafeatures to represent records (too many words, simplify). Simply, we desire to maximize (minimize?) over-fitting to avoid focusing on lesser impact Metafeatures. Therefore we are able to discover the driving meta-knowledge (driving patterns, factors and attributes) to represents the record in Golay code.\nThe Automation of evaluation performing algorithms detects \u201coptimization and performance\u201d in regards to bit classification attributes on the fly for a final set of meta-knowledge 23 attributes. Those are then used as input template of 23 questions to classify input stream of data using Golay code.\nThe framework (sequence of algorithms) to evaluate and characterize meta-knowledge appears stable and reliable, to produce reliable classifiers in the form of questions, each representing a single bit of Golay code.\nThe next step is to provide a theoretical background to the\nmeta-knowledge characteristics discovery which minimizes the error in classification and show how Golay code can ensure stable and consistent classification despite possible errors (mischaracterization) in few bits of the word itself.\nAcknowledgment \u00a0\nWe would like to sincerely thank Professor Simon Berkovich for his guidance and a special thanks to our friend and collaborator Dr. Roman Vichr.\nReferences \u00a0 [1] Fayyad, Usama, Gregory Piatetsky-Shapiro, and Padhraic Smyth. \"From\ndata mining to knowledge discovery in databases.\" AI magazine 17.3 (1996): 37.\n[2] Anindya Sircar, Gaurav Rastogi, Kochikar, Raj Joshi, Ranganath M, Simon Towers, Subu Goparaju. \u201c Big Data: Challenges and opportunities.\u201d Infosys Labs Briefings Vol 11 No1 (2013) .\n[3] Randall Davis and Bruce C. \u201cMetal-Level Knowledge : Overview and Applications\u201d. Buchanan Computer Science Department Stanford University Stanford, California 94305\n[4] Lesser V R, Fennell R D, Erman L D, Reddy D R, Organization of the HEARSAY II speech understanding system, IEEE Transactions, ASSP23, February 1975, pp 11-23.\n[5] Mathlab Group, MACSYMA reference manual, 1974, MIT. [6] Feigenbaum E A, et. al., On generality and problem solving, in MI6, pp\n165-190, Edinburgh University Press, 1971. [7] Samuel A L, Some studies in machine learning using the game of\ncheckers II - recent progress, IBM Jnl Res and Devel, 11:601-617. [8] Schank R C, Abelson R P, Scripts, plans and knowledge, Proc 4th\nIJCAI, pp 151-157. [9] Winograd T, Understanding Natural Language, Academic Press, 1972. [10] Fennell R D, Multiprocess software architecture for Al problem solving,\nPhD Thesis, Computer Science Department, CMU, May 1975. [11] Feigenbaum E A, et. al., On generality and problem solving, in MI6, pp\n165-190, Edinburgh University Press, 1971 [12] Vilalta, Ricardo, et al. \"Using Meta-Learning to Support Data Mining.\"\nIJCSA 1.1 (2004): 31-45. [13] Berkovich, Simon, and Duoduo Liao. \"On clusterization of big data\nstreams.\" Proceedings of the 3rd International Conference on Computing for Geospatial Research and Applications. ACM, 2012.\n[14] Nima Bari, Duoduo Liao, Simon Berkovich. \u201c Organization of Metaknowledge in the Form of 23-bit Templates for Big Data Processing. Proceedings of the 5th International Conference on Computing for Geospatial Research and Applications. 2014.\n[15] Michael Jay Strauss, \u201cProcedural enhancements to some approximate searching techniques\u201d, Doctoral Dissertation, The George Washington University,February2008.http://www.docstoc.com/docs/46996224/Proce dural- enhancements-to-some-approximate-searching-techniques\n[16] P. Brazdil, J. Gama, and B. Henery. Characterizing the applicability of classification algorithms using meta-level learning. In F. Bergadano and L. De Raedt, editors, Proceedings of the European Conference on Machine Learning (ECML94), pages 83-102. Springer-Verlag, 1994\n[17] www.imdb.com [18] Gerald Kowalski, Information Retreival Architecture and Algorithms,\nSpringer, ISBN 978-1-4419-77115-1, pps 305 [19] Jean-Bernard Brissaud , The meaning of Entropy, Entropy 2005, 7(1),\npp67-96, http://www.mdpi.org/entropy/papers/e7010068.pdf [20] P. Brazdil, C. Giraud-Carrier, C. Soares, R. Vilalta. Metalearning\n(Applications to Data Mining), Springer-Verlag 2009, ISBN 978-3-540- 73262-4.\n[21] C. Soares, P. Brazdil, and P. Kuba. A meta-leanring method to select the kernel width in support of vector regression. Mechine Learning, 54:195- 209, 2004.\n[22] Kamran Kowsari \u201cInvestigation of FuzzyFind Searching with Golay Code Transformations\u201d, M.Sc. Thesis, The George Washington University, Department of Computer Science, 2014"}], "references": [{"title": "From data mining to knowledge discovery in databases.\" AI magazine", "author": ["Fayyad", "Usama", "Gregory Piatetsky-Shapiro", "Padhraic Smyth"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1996}, {"title": "Big Data: Challenges and opportunities.", "author": ["Anindya Sircar", "Gaurav Rastogi", "Kochikar", "Raj Joshi", "Ranganath M", "Simon Towers", "Subu Goparaju"], "venue": "Infosys Labs Briefings Vol", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2013}, {"title": "Organization of the HEARSAY II speech understanding system, IEEE Transactions, ASSP", "author": ["R Lesser V", "D Fennell R", "D Erman L", "R Reddy D"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1975}, {"title": "On generality and problem solving, in MI6, pp 165-190", "author": ["Feigenbaum E A", "et. al"], "venue": null, "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1971}, {"title": "Understanding Natural Language", "author": ["T Winograd"], "venue": null, "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1972}, {"title": "Multiprocess software architecture for Al problem solving", "author": ["D Fennell R"], "venue": "PhD Thesis,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1975}, {"title": "On generality and problem solving, in MI6, pp 165-190", "author": ["Feigenbaum E A", "et. al"], "venue": null, "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1971}, {"title": "Using Meta-Learning to Support Data Mining.\" IJCSA", "author": ["Vilalta", "Ricardo"], "venue": null, "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2004}, {"title": "On clusterization of big data streams.", "author": ["Berkovich", "Simon", "Duoduo Liao"], "venue": "Proceedings of the 3rd International Conference on Computing for Geospatial Research and Applications. ACM,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2012}, {"title": "Organization of Metaknowledge in the Form of 23-bit Templates for Big Data Processing", "author": ["Nima Bari", "Duoduo Liao", "Simon Berkovich"], "venue": "Proceedings of the 5th International Conference on Computing for Geospatial Research and Applications", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2014}, {"title": "Procedural enhancements to some approximate searching techniques\u201d, Doctoral Dissertation, The George Washington University,February2008.http://www.docstoc.com/docs/46996224/Proce dural- enhancements-to-some-approximate-searching-techniques", "author": ["Michael Jay Strauss"], "venue": null, "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2008}, {"title": "Characterizing the applicability of classification algorithms using meta-level learning", "author": ["P. Brazdil", "J. Gama", "B. Henery"], "venue": "Proceedings of the European Conference on Machine Learning", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 1994}, {"title": "Metalearning (Applications to Data Mining)", "author": ["P. Brazdil", "C. Giraud-Carrier", "C. Soares", "R. Vilalta"], "venue": null, "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2009}, {"title": "A meta-leanring method to select the kernel width in support of vector regression", "author": ["C. Soares", "P. Brazdil", "P. Kuba"], "venue": "Mechine Learning,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2004}, {"title": "Investigation of FuzzyFind Searching with Golay Code Transformations", "author": ["Kamran Kowsari"], "venue": "M.Sc. Thesis,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2014}], "referenceMentions": [{"referenceID": 0, "context": "discussed in the introductory explanations of Knowledge Discovery in Databases (KDD) [1] predicted nearly two decades ago.", "startOffset": 85, "endOffset": 88}, {"referenceID": 1, "context": "For instance, according to [2], most businesses' metadata is arrayed across applications, databases, and \"tribal knowledge\u201d and managed by enterprises have no \"formal metadata management system processes in place.", "startOffset": 27, "endOffset": 30}, {"referenceID": 7, "context": "More specifically, a Meta Learning system deploys its unique pattern recognition function across tasks and ultimately serves as a control measure to the process of exploiting cumulative expertise [12].", "startOffset": 196, "endOffset": 200}, {"referenceID": 2, "context": "For example, knowledge-based systems, which have been developed and captured amorphous data derived from tasks targeting specific areas like gaming, speech recognition, math, and chemistry, [4,5,6] etc.", "startOffset": 190, "endOffset": 197}, {"referenceID": 3, "context": "For example, knowledge-based systems, which have been developed and captured amorphous data derived from tasks targeting specific areas like gaming, speech recognition, math, and chemistry, [4,5,6] etc.", "startOffset": 190, "endOffset": 197}, {"referenceID": 4, "context": "Historically these tasks have been geared towards utilizing and applying knowledge for a particular domain [7, 8, 9, 10, 11].", "startOffset": 107, "endOffset": 124}, {"referenceID": 5, "context": "Historically these tasks have been geared towards utilizing and applying knowledge for a particular domain [7, 8, 9, 10, 11].", "startOffset": 107, "endOffset": 124}, {"referenceID": 6, "context": "Historically these tasks have been geared towards utilizing and applying knowledge for a particular domain [7, 8, 9, 10, 11].", "startOffset": 107, "endOffset": 124}, {"referenceID": 7, "context": "It is very important to note that a lack of assistance in the process of model selection and combination or wrong Metafeatures can result in a wide range of obstacles to end-users [12].", "startOffset": 180, "endOffset": 184}, {"referenceID": 7, "context": "Unlike others systems, this learning system perfectly matches a specific task to a model or a combination of models [12].", "startOffset": 116, "endOffset": 120}, {"referenceID": 7, "context": "More specifically, a Metalearning system deploys its unique pattern recognition function across tasks and ultimately serves as a control measure to the process of exploiting cumulative expertise through models [12].", "startOffset": 210, "endOffset": 214}, {"referenceID": 8, "context": "The computational Big data processing and clustering technique suggested here as a 23-bit template will allow the information retrieval of this valuable and insightful information[13].", "startOffset": 179, "endOffset": 183}, {"referenceID": 9, "context": "The 23-bit questions\u2019 Metaknowledge is inspired from the popular 20 questions game [14].", "startOffset": 83, "endOffset": 87}, {"referenceID": 9, "context": "place during the science of language[14].", "startOffset": 36, "endOffset": 40}, {"referenceID": 8, "context": "vector templates [13].", "startOffset": 17, "endOffset": 21}, {"referenceID": 7, "context": "This is an outcome of a unique structure of the world- a mathematical oddity associated with exclusive properties of the perfect Golay code [23, 12, 7].", "startOffset": 140, "endOffset": 151}, {"referenceID": 10, "context": "Several possible adaptations of the code-word construction have been investigated in [15].", "startOffset": 85, "endOffset": 89}, {"referenceID": 14, "context": "The experimental results in [22] show, that with 23 bit binary codeword; a possible 277 representations with Hamming Distance 0,1,2 can be found.", "startOffset": 28, "endOffset": 32}, {"referenceID": 14, "context": "Per [22] the algorithm complexity is at O(n) at FuzzyFind Dictionary (FFD) and O(1) to access FFD.", "startOffset": 4, "endOffset": 8}, {"referenceID": 0, "context": "In order to take advantage of this approach the 23 bit [1,0] representation 23 attributes (Metafeatures) are determined per 23-bit vector.", "startOffset": 55, "endOffset": 60}, {"referenceID": 14, "context": "This representation leads to creation of Goley Coding Hashes to index record and Goley Transformation Tables to represent a record for access [22].", "startOffset": 142, "endOffset": 146}, {"referenceID": 2, "context": "As we evaluate various algorithms for Metaknowledge characterization [4], [5], it allows for 23-bit binary attribute representation in a vector for processing through a Goley Code algorithm.", "startOffset": 69, "endOffset": 72}, {"referenceID": 14, "context": "This vector is utilized for the creation of Goley Coding Hashes to index records and Goley Transformation Table to access them [22].", "startOffset": 127, "endOffset": 131}, {"referenceID": 0, "context": "Yes/No [1, 0].", "startOffset": 7, "endOffset": 13}, {"referenceID": 2, "context": "The sequence of algorithms applied provide guidance to determine Metaknowledge (for example, an indication of strength of relationships between attributes, ability to derive specific and concrete Metafeatures) [4], [5].", "startOffset": 210, "endOffset": 213}, {"referenceID": 3, "context": "As noted in [6], pp.", "startOffset": 12, "endOffset": 15}, {"referenceID": 3, "context": "The [6] refers to a measurement of classification, which depends on number examples, algorithm error, and the parameter k as a user defined parameter determining size of the margin (perception of confidence).", "startOffset": 4, "endOffset": 7}, {"referenceID": 3, "context": "The [6] presents a formula to determine what algorithm is performing well in Metaknowledge discovery.", "startOffset": 4, "endOffset": 7}, {"referenceID": 0, "context": "That is translated into input in the Golay code as a sequence of 23 bit questions with binary [1, 0] answers.", "startOffset": 94, "endOffset": 100}, {"referenceID": 4, "context": "Applying Bayes algorithm assumption of inferring a \u201ccomplete\u201d knowledge from raw or Metafeatures knowledge to classify a full record accurately [9] we see the chance of getting result \u201cA\u201d given a positive test for \u201cX\u201d, where X is not", "startOffset": 144, "endOffset": 147}, {"referenceID": 0, "context": "Each metafeature is represented as [1, 0] and consequently the distribution information is as \u201clog of 2\u201d.", "startOffset": 35, "endOffset": 41}, {"referenceID": 14, "context": ") = 1 (formula below [8], [22]).", "startOffset": 26, "endOffset": 30}, {"referenceID": 0, "context": "The answer can be Yes or No represented as [1,0] for the purpose of constructing a binary vector.", "startOffset": 43, "endOffset": 48}, {"referenceID": 0, "context": "The Q-Q plot Figure 5 was used to confirm our assertion that it is correct to classify the as problem with binary outcome [1, 0].", "startOffset": 122, "endOffset": 128}, {"referenceID": 0, "context": "The resulting Metafeature attribute derived was \u201cWhat was the number of wins GT 4?\u201d, which could then we answered as Yes, No [1,0] for the purpose of Golay code representation.", "startOffset": 125, "endOffset": 130}, {"referenceID": 0, "context": "The Golay code work is represented as a set of 23 attributes (parameters) to be represented as Yes, No [1,0] and the \u201cdecision tree\u201d algorithms well suited for determination of Metafeatures through deriving conditions of terminal nodes on classification of data.", "startOffset": 103, "endOffset": 108}, {"referenceID": 0, "context": "In one run we subjected to GLM method test the whole set of 26 attributes that were subjects the of GLM method evaluation to confirm significant impact of attributes with [1,0] classification (i.", "startOffset": 171, "endOffset": 176}, {"referenceID": 12, "context": "The Metafeature related conclusions can then be extrapolated to Big Data based on sampling theories [18, 20] in a domain specific \u201cpoint of view\u201d.", "startOffset": 100, "endOffset": 108}, {"referenceID": 0, "context": "We make the assertion that for the purpose of qualifying algorithm (like Golay code in our case) the problem is best approached as a problem with binary [1, 0] outcome.", "startOffset": 153, "endOffset": 159}], "year": 2014, "abstractText": "the global influence of Big Data is not only growing but seemingly endless. The trend is leaning towards knowledge that is attained easily and quickly from massive pools of Big Data. Today we are living in the technological world that Dr. Usama Fayyad and his distinguished research fellows discussed in the introductory explanations of Knowledge Discovery in Databases (KDD) [1] predicted nearly two decades ago. Indeed, they were precise in their outlook on Big Data analytics. In fact, the continued improvement of the interoperability of machine learning, statistics, database building and querying fused to create this increasingly popular scienceData Mining and Knowledge Discovery. The next generation computational theories are geared towards helping to extract insightful knowledge from even larger volumes of data at higher rates of speed. As the trend increases in popularity, the need for a highly adaptive solution for knowledge discovery will be necessary. In this research paper, we are introducing the investigation and development of 23 bit-questions for a Metaknowledge template for Big Data Processing and clustering purposes. This research aims to demonstrate the construction of this methodology and proves the validity and the beneficial utilization that brings Knowledge Discovery from Big Data. Keywords\u2014 23-Bit Meta-knowledge template; Big Data Processing and Analytics; Meta-feature Selection, Knowledge Discovery; Metalearning System.", "creator": "Word"}}}