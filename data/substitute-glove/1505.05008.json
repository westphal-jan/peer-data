{"id": "1505.05008", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "19-May-2015", "title": "Boosting Named Entity Recognition with Neural Character Embeddings", "abstract": "Most according - both - all - gallery hunter entity upon (NER) sensors rely on later similar of woodworking features taken place the bulk form only NLP tasks common from main - example - appeal (POS) synchronizing having bible imposture. In this once we propose its aramaic - mainstream NER system make using therefore learned features every. Our self instance marketing two, CharWNN deeper neural news, originally utilizing familiar - overall only roles - interest representations (8,000-10) to typically sequential applicable. We perform although extensive number of brain hand two paperback ypm rest other with various: HAREM I klamath, , incorporates writing its Portuguese; each new SPA CoNLL - 2002, through contains poems in Spanish. Our experimental results vegetation usually started after benefit another intelligences tells non-rational also NER. Moreover, we meaningful that part same neural wireless which, same helped solely for POS reload come be step state - of - but - art announcement given sanskrit - independet NER, some early same jihadism - parameters, and simply determined woodcarvings music. For second HAREM I corpus, CharWNN plumpness another civil - of - the - landscape itself both 27. 90 points new the F1 - wasted for the total thing (two NE school ), only 's respectively. no. climbed far the F1 own later selective illustrates (23 NE performing ).", "histories": [["v1", "Tue, 19 May 2015 14:21:37 GMT  (126kb,D)", "http://arxiv.org/abs/1505.05008v1", "10 pages"], ["v2", "Mon, 25 May 2015 11:35:32 GMT  (125kb,D)", "http://arxiv.org/abs/1505.05008v2", "9 pages"]], "COMMENTS": "10 pages", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["cicero nogueira dos santos", "victor guimar\\~aes"], "accepted": false, "id": "1505.05008"}, "pdf": {"name": "1505.05008.pdf", "metadata": {"source": "CRF", "title": "Boosting Named Entity Recognition with Neural Character Embeddings", "authors": ["C\u0131\u0301cero Nogueira dos Santos", "Victor Guimar\u00e3es"], "emails": ["cicerons@br.ibm.com,", "victorguimaraes@id.uff.br"], "sections": [{"heading": "1. Introduction", "text": "Named entity recognition is a natural language processing (NLP) task that consists of finding names in a text and classifying them among several predefined categories of interest such as person, organization, location and time. Although machine learning based systems have been the predominant approach to achieve state-of-the-art results for NER, most of these NER systems rely on the use of costly handcrafted features and on the output of other NLP tasks [Tjong Kim Sang 2002, Tjong Kim Sang and De Meulder 2003, Doddington et al. 2004, Finkel et al. 2005, Milidiu\u0301 et al. 2007]. On the other hand, some recent work on NER have used deep learning strategies which minimize the need of these costly features [Chen et al. 2010, Collobert et al. 2011, Tang et al. 2014]. However, as far as we know, there are still no work on deep learning approaches for NER that use character-level embeddings.\nIn this paper we approach language-independent NER using CharWNN, a recently proposed deep neural network (DNN) architecture that jointly uses word-level and character-level embeddings to perform sequential classification\nar X\niv :1\n50 5.\n05 00\n8v 1\n[ cs\n.C L\n] 1\n9 M\nay 2\n[dos Santos and Zadrozny 2014]. CharWNN employs a convolutional layer that allows effective character-level feature extraction from words of any size. This approach has proven to be very effective for language-independent POS tagging [dos Santos and Zadrozny 2014].\nWe perform an extensive number of experiments using two annotated corpora: HAREM I corpus, which contains texts in Portuguese; and the SPA CoNLL-2002, which contains texts in Spanish. In our experiments, we compare the performance of the joint and individual use of character-level and word-level embeddings. We provide information on the impact of unsupervised pre-training of word embeddings in the performance of our proposed NER approach. Our experimental results evidence that CharWNN is effective and robust for Portuguese and Spanish NER. Using the same CharWNN configuration used by dos Santos and Zadrozny (2014) for POS Tagging, we achieve state-of-the-art results for both corpora. For the HAREM I corpus, CharWNN outperforms the state-ofthe-art system by 7.9 points in the F1-score for the total scenario (ten NE classes), and by 7.2 points in the F1 for the selective scenario (five NE classes). This is a remarkable result for a NER system that uses only automatically learned features.\nThis work is organized as follows. In Section 2, we briefly describe the CharWNN architecture. Section 3 details our experimental setup and Section 4 discuss our experimental results. Section 5 presents our final remarks."}, {"heading": "2. CharWNN", "text": "CharWNN extends Collobert et al.\u2019s (2011) neural network architecture for sequential classification by adding a convolutional layer to extract character-level representations [dos Santos and Zadrozny 2014]. Given a sentence, the network gives for each word a score for each class (tag) \u03c4 \u2208 T . As depicted in Figure 1, in order to score a word, the network takes as input a fixed-sized window of words centralized in the target word. The input is passed through a sequence of layers where features with increasing levels of complexity are extracted. The output for the whole sentence is then processed using the Viterbi algorithm [Viterbi 1967] to perform structured prediction. For a detailed description of the CharWNN neural network we refer the reader to [dos Santos and Zadrozny 2014]."}, {"heading": "2.1. Character- and Word-level Representations", "text": "As illustrated in Figure 1, the first layer of the network transforms words into real-valued feature vectors (embeddings). These embeddings are meant to capture morphological, syntactic and semantic information about the words. We use a fixed-sized word vocabulary V wrd, and we consider that words are composed of characters from a fixed-sized character vocabulary V chr. Given a sentence consisting of N words {w1, w2, ..., wN}, every word wn is converted into a vector un = [rwrd; rwch], which is composed of two sub-vectors: the word-level embedding rwrd \u2208 Rdwrd and the character-level embedding rwch \u2208 Rclu of wn. While word-level embeddings capture syntactic and semantic information, character-level embeddings capture morphological and shape information. Word-level embeddings are encoded by column vectors in an embedding matrix Wwrd \u2208 Rdwrd\u00d7|V wrd|, and retrieving the embedding of a particular word consists in a simple matrix-vector multiplication. The character-level embedding of each word is computed using a convolutional layer [Waibel et al. 1989, Lecun et al. 1998]. In Figure 1, we\nillustrate the construction of the character-level embedding for the word Bennett only. However, the same process is used to construct the character-level embedding of each word in the input."}, {"heading": "2.2. Scoring and Structured Inference", "text": "We follow Collobert et al.\u2019s [Collobert et al. 2011] window approach to score all tags T for each word in a sentence. This approach follows the assumption that in sequential classification the tag of a word depends mainly on its neighboring words. Given a sentence with N words {w1, w2, ..., wN}, which have been converted to joint word-level and character-level embedding {u1, u2, ..., uN}, to compute tag scores for the n-th word wn in the sentence, we first create a vector z resulting from the concatenation of a sequence of kwrd embeddings, centralized in the n-th word, z = ( un\u2212(kwrd\u22121)/2, ..., un+(kwrd\u22121)/2\n)T . We use a special padding token for the words with indices outside of the sentence boundaries. Next, the vector z is processed by two usual neural network layers, which extract one more level of representation and compute the scores:\ns(wn) = W 2h(W 1z + b1) + b2 (1)\nwhere matrices W 1 \u2208 Rhlu\u00d7kwrd(dwrd+clu) and W 2 \u2208 R|T |\u00d7hlu , and vectors b1 \u2208 Rhlu and b2 \u2208 R|T | are parameters to be learned. The transfer function h(.) is the hyperbolic tangent. The size of the context window kwrd and the number of hidden units hlu are hyper-parameters to be chosen by the user.\nLike in [Collobert et al. 2011], CharWNN uses a prediction scheme that takes into account the sentence structure. The method uses a transition score Atu for jumping from\ntag t \u2208 T to u \u2208 T in successive words, and a score A0t for starting from the t-th tag. Given the sentence [w]N1 = {w1, w2, ..., wN}, the score for tag path [t]N1 = {t1, t2, ..., tN} is computed as follows:\nS ( [w]N1 , [t] N 1 , \u03b8 ) = N\u2211 n=1 ( Atn\u22121tn + s(wn)tn ) (2)\nwhere s(wn)tn is the score given for tag tn at word wn and \u03b8 is the set of all trainable network parameters ( Wwrd,W chr,W 0, b0,W 1, b1,W 2, b2, A ) . After scoring each word in the sentence, the predicted sequence is inferred with the Viterbi algorithm."}, {"heading": "2.3. Network Training", "text": "We train CharWNN by minimizing a negative likelihood over the training set D. In the same way as in [Collobert et al. 2011], we interpret the sentence score (2) as a conditional probability over a path. For this purpose, we exponentiate the score (2) and normalize it with respect to all possible paths. Taking the log, we arrive at the following conditional log-probability:\nlog p ( [t]N1 |[w]N1 , \u03b8 ) = S ( [w]N1 , [t] N 1 , \u03b8 ) \u2212 log  \u2211 \u2200[u]N1 \u2208TN eS([w] N 1 ,[u] N 1 ,\u03b8)  (3) The log-likelihood in Equation 3 can be computed efficiently using dynamic pro-\ngramming [Collobert 2011]. We use stochastic gradient descent (SGD) to minimize the negative log-likelihood with respect to \u03b8. We use the backpropagation algorithm to compute the gradients of the neural network. We implemented CharWNN using the Theano library [Bergstra et al. 2010]."}, {"heading": "3. Experimental Setup", "text": ""}, {"heading": "3.1. Unsupervised Learning of Word Embeddings", "text": "The word embeddings used in our experiments are initialized by means of unsupervised pre-training. We perform pre-training of word-level embeddings using the skip-gram NN architecture [Mikolov et al. 2013] available in the word2vec 1 tool.\nIn our experiments on Portuguese NER, we use the word-level embeddings previously trained by [dos Santos and Zadrozny 2014]. They have used a corpus composed of the Portuguese Wikipedia, the CETENFolha2 corpus and the CETEMPublico3 corpus.\nIn our experiments on Spanish NER, we use the Spanish Wikipedia. We process the Spanish Wikipedia corpus using the same steps used by [dos Santos and Zadrozny 2014]: (1) remove paragraphs that are not in Spanish; (2) substitute non-roman characters by a special character; (3) tokenize the text using a tokenizer that we have implemented; (4) remove sentences that are less than 20 characters long (including white spaces) or have less than 5 tokens; (5) lowercase all words and substitute each numerical digit by a 0. The resulting corpus contains around 450 million tokens.\n1http://code.google.com/p/word2vec/ 2http://www.linguateca.pt/cetenfolha/ 3http://www.linguateca.pt/cetempublico/\nFollowing [dos Santos and Zadrozny 2014], we do not perform unsupervised learning of character-level embeddings. The character-level embeddings are initialized by randomly sampling each value from an uniform distribution: U (\u2212r, r), where\nr =\n\u221a 6\n|V chr|+ dchr ."}, {"heading": "3.2. Corpora", "text": "We use the corpus from the first HAREM evaluation [Santos and Cardoso 2007] in our experiments on Portuguese NER. This corpus is annotated with ten named entity categories: Person (PESSOA), Organization (ORGANIZACAO), Location (LOCAL), Value (VALOR), Date (TEMPO), Abstraction (ABSTRACCAO), Title (OBRA), Event (ACONTECIMENTO), Thing (COISA) and Other (OUTRO). The HAREM corpus is already divided into two subsets: First HAREM and MiniHAREM. Each subset corresponds to a different Portuguese NER contest. In our experiments, we call HAREM I the setup where we use the First HAREM corpus as the training set and the MiniHAREM corpus as the test set. This is the same setup used by dos Santos and Milidiu\u0301 (2012). Additionally, we tokenize the HAREM corpus and create a development set that comprises 5% of the training set. Table 1 present some details of this dataset.\nIn our experiments on Spanish NER we use the SPA CoNLL-2002 Corpus, which was developed for the CoNLL-2002 shared task [Tjong Kim Sang 2002]. It is annotated with four named entity categories: Person, Organization, Location and Miscellaneous. The SPA CoNLL-2002 corpus is already divided into training, development and test sets. The development set has characteristics similar to the test corpora.\nWe treat NER as a sequential classification problem. Hence, in both corpora we use the IOB2 tagging style where: O, means that the word is not a NE; B-X is used for the leftmost word of a NE type X; and I-X means that the word is inside of a NE type X. The IOB2 tagging style is illustrated in the following example.\nWolff/B-PER ,/O currently/O a/O journalist/O in/O Argentina/B-LOC ,/O played/O with/O Del/B-PER Bosque/I-PER in/O the/O final/O years/O of/O\nthe/O seventies/O in/O Real/B-ORG Madrid/I-ORG"}, {"heading": "3.3. Model Setup", "text": "In most of our experiments, we use the same hyperparameters used by dos Santos and Zadrozny (2014) for part-of-speech tagging. The only exception is the learning rate for SPA CoNLL-2002, which we set to 0.005 in order to avoid divergence. The hyperparameter values are presented in Table 2. We use the development sets to determine the number of training epochs, which is six for HAREM and sixteen for SPA CoNLL-2002.\nWe compare CharWNN with two similar neural network architectures: CharNN and WNN. CharNN is equivalent to CharWNN without word embeddings, i.e., it uses\ncharacter-level embeddings only. WNN is equivalent to CharWNN without characterlevel embeddings, i.e., it uses word embeddings only. Additionally, in the same way as in [Collobert et al. 2011], we check the impact of adding to WNN two handcrafted features that contain character-level information, namely capitalization and suffix. The capitalization feature has five possible values: all lowercased, first uppercased, all uppercased, contains an uppercased letter, and all other cases. We use suffix of size three. In our experiments, both capitalization and suffix embeddings have dimension five. The hyperparameters values for these two NNs are shown in Table 2."}, {"heading": "4. Experimental Results", "text": ""}, {"heading": "4.1. Results for Spanish NER", "text": "In Table 3, we report the performance of different NNs for the SPA CoNLL-2002 corpus. All results for this corpus were computed using the CoNLL-2002 evaluation script4. CharWNN achieves the best precision, recall and F1 in both development and test sets. For the test set, the F1 of CharWNN is 3 points larger than the F1 of the WNN that uses two additional handcrafted features: suffixes and capitalization. This result suggests that, for the NER task, the character-level embeddings are as or more effective as the two character-level features used in WNN. Similar results were obtained by dos Santos and Zadrozny (2014) in the POS tagging task.\nIn the two last lines of Table 3 we can see the results of using word embeddings and character-level embeddings separately. Both, WNN that uses word embeddings only and CharNN, do not achieve results competitive with the results of the networks that jointly use word-level and character-level information. This is not surprising, since it is already known in the NLP community that jointly using word-level and character-level features is important to perform named entity recognition.\nIn Table 4, we compare CharWNN results with the ones of a state-of-the-art system for the SPA CoNLL-2002 Corpus. This system was trained using AdaBoost and is described in [Carreras et al. 2002]. It employs decision trees as a base learner and uses handcrafted features as input. Among others, these features include gazetteers with people names and geographical location names. The AdaBoost based system divide the NER task into two intermediate sub-tasks: NE identification and NE classification. In the first sub-task, the system identifies NE candidates. In the second sub-task, the system classifies the identified candidates. In Table 4, we can see that even using only automatically\n4http://www.cnts.ua.ac.be/conll2002/ner/bin/conlleval.txt\nlearned features, CharWNN achieves state-of-the-art results for the SPA CoNLL-2002. This is an impressive result, since NER is a challenging task to perform without the use of gazetteers."}, {"heading": "4.2. Results for Portuguese NER", "text": "In Table 5, we report the performance of different NNs for the HAREM I corpus. The results in this table were computed using the CoNLL-2002 evaluation script. We report results in two scenarios: total and selective. In the total scenario, all ten categories are taken into account when scoring the systems. In the selective scenario, only five chosen categories (Person, Organization, Location, Date and Value) are taken into account. We can see in Table 5, that CharWNN and WNN that uses two additional handcrafted features have similar results. We think that by increasing the training data, CharWNN has the potential to learn better character embeddings and outperform WNN, like happens in the SPA CoNLL-2002 corpus, which is larger than the HAREM I corpus. Again, CharNN and WNN that uses word embeddings only, do not achieve results competitive with the results of the networks that jointly use word-level and character-level information.\nIn order to compare CharWNN results with the one of the state-of-the-art system, we report in tables 6 and 7 the precision, recall, and F1 scores computed with the evaluation scripts from the HAREM I competition5 [Santos and Cardoso 2007], which uses a scoring strategy different from the CoNLL-2002 evaluation script.\n5http://www.linguateca.pt/primeiroHAREM/harem Arquitectura.html\nIn Table 6, we compare CharWNN results with the ones of ETLCMT , a state-ofthe-art system for the HAREM I Corpus [dos Santos and Milidiu\u0301 2012]. ETLCMT is an ensemble method that uses Entropy Guided Transformation Learning (ETL) as the base learner. The ETLCMT system uses handcrafted features like gazetteers and dictionaries as well as the output of other NLP tasks such as POS tagging and noun phrase (NP) chunking. As we can see in Table 6, CharWNN outperforms the state-of-the-art system by a large margin in both total and selective scenarios, which is an remarkable result for a system that uses automatically learned features only.\nIn Table 7, we compare CharWNN results by entity type with the ones of ETLCMT . These results were computed in the selective scenario. CharWNN produces a much better recall than ETLCMT for the classes LOC, PER and ORG. For the ORG entity, the improvement is of 21 points in the recall. We believe that a large part of this boost in the recall is due to the unsupervised pre-training of word embeddings, which can leverage large amounts of unlabeled data to produce reliable word representations."}, {"heading": "4.3. Impact of unsupervised pre-training of word embeddings", "text": "In Table 8 we assess the impact of unsupervised pre-training of word embeddings in CharWNN performance for both SPA CoNLL-2002 and HAREM I (selective). The results were computed using the CoNLL-2002 evaluation script. For both corpora, CharWNN results are improved when using unsupervised pre-training. The impact of unsupervised pre-training is larger for the HAREM I corpus (13.2 points in the F1) than for the SPA CoNLL-2002 (4.3 points in the F1). We believe one of the main reasons of this difference in the impact is the training set size, which is much smaller in the HAREM I corpus."}, {"heading": "5. Conclusions", "text": "In this work we approach language-independent NER using a DNN that employs wordand character-level embeddings to perform sequential classification. We demonstrate that\nthe same DNN which was successfully applied for POS tagging can also achieve state-ofthe-art results for NER, using the same hyper-parameters, and without any handcrafted features. Moreover, we shade some light on the contribution of neural character embeddings for NER; and define new state-of-the-art results for Portuguese and Spanish NER."}], "references": [{"title": "Theano: a CPU and GPU math expression compiler", "author": ["Bergstra"], "venue": "In Proceedings of the Python for Scientific Computing Conference (SciPy)", "citeRegEx": "Bergstra,? \\Q2010\\E", "shortCiteRegEx": "Bergstra", "year": 2010}, {"title": "Named entity extraction using adaboost", "author": ["Carreras"], "venue": "In Proceedings of CoNLL-2002,", "citeRegEx": "Carreras,? \\Q2002\\E", "shortCiteRegEx": "Carreras", "year": 2002}, {"title": "Using deep belief nets for chinese named entity categorization", "author": ["Chen"], "venue": "In Proceedings of the Named Entities Workshop,", "citeRegEx": "Chen,? \\Q2010\\E", "shortCiteRegEx": "Chen", "year": 2010}, {"title": "Natural language processing (almost) from scratch", "author": ["Collobert"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "Collobert,? \\Q2011\\E", "shortCiteRegEx": "Collobert", "year": 2011}, {"title": "The automatic content extraction (ace) program tasks, data, and evaluation", "author": ["Doddington"], "venue": "In Proceedings of the Fourth International Conference on Language Resources and Evaluation", "citeRegEx": "Doddington,? \\Q2004\\E", "shortCiteRegEx": "Doddington", "year": 2004}, {"title": "Entropy Guided Transformation Learning - Algorithms and Applications", "author": ["dos Santos", "C.N. Milidi\u00fa 2012] dos Santos", "R.L. Milidi\u00fa"], "venue": null, "citeRegEx": "Santos et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Santos et al\\.", "year": 2012}, {"title": "Learning character-level representations for part-of-speech tagging", "author": ["dos Santos", "C.N. Zadrozny 2014] dos Santos", "B. Zadrozny"], "venue": "In Proceedings of the 31st International Conference on Machine Learning, JMLR: W&CP", "citeRegEx": "Santos et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Santos et al\\.", "year": 2014}, {"title": "Incorporating nonlocal information into information extraction systems by gibbs sampling", "author": ["Finkel"], "venue": "In Proceedings of the 43rd Annual Meeting on Association for Computational Linguistics,", "citeRegEx": "Finkel,? \\Q2005\\E", "shortCiteRegEx": "Finkel", "year": 2005}, {"title": "Gradientbased learning applied to document recognition", "author": ["Lecun"], "venue": "In Proceedings of the IEEE,", "citeRegEx": "Lecun,? \\Q1998\\E", "shortCiteRegEx": "Lecun", "year": 1998}, {"title": "Efficient estimation of word representations in vector space", "author": ["Mikolov"], "venue": "In Proceedings of Workshop at International Conference on Learning Representations", "citeRegEx": "Mikolov,? \\Q2013\\E", "shortCiteRegEx": "Mikolov", "year": 2013}, {"title": "Machine learning algorithms for portuguese named entity recognition", "author": ["Milidi\u00fa"], "venue": "Revista Iberoamericana de Inteligencia Artificial,", "citeRegEx": "Milidi\u00fa,? \\Q2007\\E", "shortCiteRegEx": "Milidi\u00fa", "year": 2007}, {"title": "Reconhecimento de entidades mencionadas em portugu\u00eas", "author": ["Santos", "D. Cardoso 2007] Santos", "N. Cardoso"], "venue": null, "citeRegEx": "Santos et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Santos et al\\.", "year": 2007}, {"title": "Evaluating word representation features in biomedical named entity recognition", "author": ["Tang"], "venue": "tasks. BioMed Research International,", "citeRegEx": "Tang,? \\Q2014\\E", "shortCiteRegEx": "Tang", "year": 2014}, {"title": "Introduction to the conll-2002 shared task: Language-independent named entity recognition", "author": [], "venue": "In Proceedings of CoNLL-2002,", "citeRegEx": "Sang,? \\Q2002\\E", "shortCiteRegEx": "Sang", "year": 2002}, {"title": "Introduction to the conll-2003 shared task: Language-independent named entity recognition", "author": ["Tjong Kim Sang", "F. De Meulder"], "venue": "Proceedings of CoNLL-2003,", "citeRegEx": "Sang et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Sang et al\\.", "year": 2003}, {"title": "Error bounds for convolutional codes and an asymptotically optimum decoding algorithm", "author": ["J. A"], "venue": "[Viterbi", "citeRegEx": "A.,? \\Q1967\\E", "shortCiteRegEx": "A.", "year": 1967}, {"title": "Phoneme recognition using time-delay neural networks", "author": ["Waibel"], "venue": "IEEE Transactions on Acoustics, Speech and Signal Processing,", "citeRegEx": "Waibel,? \\Q1989\\E", "shortCiteRegEx": "Waibel", "year": 1989}], "referenceMentions": [{"referenceID": 15, "context": "We perform an extensive number of experiments using two annotated corpora: HAREM I corpus, which contains texts in Portuguese; and the SPA CoNLL-2002, which contains texts in Spanish. In our experiments, we compare the performance of the joint and individual use of character-level and word-level embeddings. We provide information on the impact of unsupervised pre-training of word embeddings in the performance of our proposed NER approach. Our experimental results evidence that CharWNN is effective and robust for Portuguese and Spanish NER. Using the same CharWNN configuration used by dos Santos and Zadrozny (2014) for POS Tagging, we achieve state-of-the-art results for both corpora.", "startOffset": 76, "endOffset": 622}, {"referenceID": 3, "context": "CharWNN extends Collobert et al.\u2019s (2011) neural network architecture for sequential classification by adding a convolutional layer to extract character-level representations [dos Santos and Zadrozny 2014].", "startOffset": 16, "endOffset": 42}, {"referenceID": 3, "context": "The log-likelihood in Equation 3 can be computed efficiently using dynamic programming [Collobert 2011].", "startOffset": 87, "endOffset": 103}, {"referenceID": 10, "context": "This is the same setup used by dos Santos and Milidi\u00fa (2012). Additionally, we tokenize the HAREM corpus and create a development set that comprises 5% of the training set.", "startOffset": 46, "endOffset": 61}, {"referenceID": 15, "context": "In Table 3, we report the performance of different NNs for the SPA CoNLL-2002 corpus. All results for this corpus were computed using the CoNLL-2002 evaluation script4. CharWNN achieves the best precision, recall and F1 in both development and test sets. For the test set, the F1 of CharWNN is 3 points larger than the F1 of the WNN that uses two additional handcrafted features: suffixes and capitalization. This result suggests that, for the NER task, the character-level embeddings are as or more effective as the two character-level features used in WNN. Similar results were obtained by dos Santos and Zadrozny (2014) in the POS tagging task.", "startOffset": 65, "endOffset": 623}], "year": 2017, "abstractText": "Most state-of-the-art named entity recognition (NER) systems rely on the use of handcrafted features and on the output of other NLP tasks such as part-of-speech (POS) tagging and text chunking. In this work we propose a language-independent NER system that uses automatically learned features only. Our approach is based on the CharWNN deep neural network, which uses word-level and character-level representations (embeddings) to perform sequential classification. We perform an extensive number of experiments using two annotated corpora in two different languages: HAREM I corpus, which contains texts in Portuguese; and the SPA CoNLL-2002, which contains texts in Spanish. Our experimental results shade light on the contribution of neural character embeddings for NER. Moreover, we demonstrate that the same neural network which has been successfully applied for POS tagging can also achieve state-of-the-art results for language-independet NER, using the same hyper-parameters, and without any handcrafted features. For the HAREM I corpus, CharWNN outperforms the state-of-the-art system by 7.9 points in the F1-score for the total scenario (ten NE classes), and by 7.2 points in the F1 for the selective scenario (five NE classes).", "creator": "LaTeX with hyperref package"}}}