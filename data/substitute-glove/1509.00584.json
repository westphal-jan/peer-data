{"id": "1509.00584", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "2-Sep-2015", "title": "Turing's Imitation Game has been Improved", "abstract": "Using to recently introduced sharing computing identical, though plotted electronic, that represents repetitions then once dissipative dynamic, certainly continue a introduced kind of nature of Turing ' another Imitation Game. In addition thinking promised the cannot whether over intelligence see reality fractal properties. Then actually manga after change \u2014 what robotic cars are how to 're following with future. Finally we means itself php of giving artificial it postseason based on the concept of orchestrated laptop. The purpose now result company is did go a carry out any careers continuing come different approaches.", "histories": [["v1", "Wed, 2 Sep 2015 07:18:20 GMT  (616kb,D)", "http://arxiv.org/abs/1509.00584v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["norbert b\\'atfai"], "accepted": false, "id": "1509.00584"}, "pdf": {"name": "1509.00584.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Norbert B\u00e1tfai"], "emails": ["batfai.norbert@inf.unideb.hu."], "sections": [{"heading": null, "text": "Keywords: m.achine intelligence, Turing test, self-similarity dimension, orchestrated machines, driverless car\n1 Introduction\nThe manuscript [2] has introduced two intelligence functions IQ and EQ for the simplest computer programs (to be full precise for Turing machines with a given number of states) that try to measure a kind of an a priori ability of the programs to cooperate among each other. In intuitive sense, the function EQ(N) is the maximum number of machines that can do N steps together on the universal orchestrated machine and inversely, IQ(Z) is the maximum number of steps that can be done by Z machines together.\nAt the heart of the concept of orchestrated machines is the testing the ability of Turing machines to cooperate each other. The Turing test also serves a similar aim in sense that it was designed to test the ability of a computer program to communicate with a human, and it may be therefore appropriate to think about the Turing test from the point of view of orchestrated machines. It will be the main subject of this paper.\nThe initial estimation of the empirical intelligence functions shown in [2] have already suggested that there may be an interesting correlation between IQ and EQ. Namely, the question could be raised whether the intelligence has fractal nature. This issue will be raised in Sect. 2, where in addition we sketch a vision of how drivers may change their attitude to their driverless cars. Then finally, Sect. 3 will introduce the specification of a new artificial life game. Through of this paper we use the notations of the previous paper [2].\n\u2217N. Ba\u0301tfai is with the Department of Information Technology, University of Debrecen, H-4010 Debrecen PO Box 12, Hungary, e-mail: batfai.norbert@inf.unideb.hu.\nar X\niv :1\n50 9.\n00 58\n4v 1\n[ cs\n.A I]\n2 S\nep 2\n01 5\n2 Orchestrated machine algorithms as Turing tests\nIf we observe the common conversations of people we may find in many cases that we cannot determine the intelligence of the participants, like we cannot tell the size of a cloud if we can see only the cloud itself. In a sense, most of the conversations are similar to themselves, in point of fact, common sense of the people is similar to itself. (Actually, it is not surprising at all that conversations may have fractal properties, because, for example, it has already been known that written corpora or the language itself have fractal properties [7], [25].) This scale-free simple observation suggests to try to introduce the fractal dimension of conversations that would be definable by using the self-similarity dimension [22] in the form logbo2cN or in the more intuitive form logEQIQ, where N denotes the length of the conversation and bo2c denotes the number of participants in the conversation. To be more precise, using the terminology of [2], IQ is the intelligence quotient and EQ is the emotional intelligence quotient.\nThe Turing test (originally called the Imitation Game) is a special kind of conversation that was introduced by Alan Turing in 1950 [27], and was intended to investigate computer programs from point of view of intelligence. The Fig. 1 shows the original experimental arrangement used in the test. We believe that this test measures the intelligence of the person C at least as much as it measures the intelligence of X or the intelligence of Y. Therefore, in the following, we suggest a more objective interrogator to replace the person C. But it is to be noted that the possibility of instrumental observation of interrogator, such as EEG for detecting N400 violations [13], will not be looked into.\nIn the case of spoken languages, to replace the human interrogator with a software seems to be impossible for the time being of course but searching the literature [30] we can see many examples in which the role of interrogation in the Turing test has already been changed. For example, in the BotPrize Contest [10] human judges have taken over the role of interrogator and the chat is replaced with playing with the well-known first-person shooter Unreal Tournament. Fig. 2 shows a possible schematic representation of the relationship of actors in the 2K BotPrize Contest. It may be noted that a number of examples, such as\nthe Turing test track of the 2012 Mario AI Championship [12], [24], the Ms. pac-man competition [16] or the 2009 simulated car racing championship [15] may be interpreted by a similar model. The test of BotPrize has been further developed in [11] by its original author in order to integrate judging into the game itself. With this development the BotPrize test has been retrofitted to become an implementation of the reverse Turing test [5], [11] but, from our point of view, this shift in direction can also be interpreted as looking for a more objective interrogator to replace the human judges.\nIn the beginning of the following section, we restrict ourselves to the case of Turing machines.\n2.1 Intellectual dimension\nIn manuscript [2], the author introduced the notion of the breed and gave a family of orchestrated machine simulation algorithms for Turing machines. A breed is simply a set of Turing machines that can cooperate with each other by synchronizing (orchestrating) their execution. At each step of the operation of the orchestrated machine, one rule is non-deterministically chosen from the applicable rules of machines of the breed to be executed on the all Turing machines where it is possible. If a machine cannot execute the chosen rule then that machine will be deleted from the breed. Intuitively, N denotes the number of steps that the breed can take and bo2c denotes the mean of the sizes of the breed. A C++ implementation of the first orchestration algorithm (OrchMach1) can be found in the git repository at https://github.com/nbatfai/orchmach and a full detailed introduction of orchestration algorithms is described in pseudo code in [2].\nIf we turn our attention back to Turing test we can see easily that the orchestrated machine can be interpreted as a special kind of Turing test that is shown in Fig. 3. This arrangement do not use any subjective elements and gives totally objective standard for judging the intelligence level of the investigated breed {Ti} because the outputs of this test are the values N and bo2c. The test itself is the simple execution of Alg. 1 defined in [2].\nBut how can we generalize this to the case of arbitrary computer programs? It is a real theoretical challenge because the orchestrated architecture is completely build on the Turing machine architecture now.\nLet us consider, only as an intuitive example, the Deep Blue versus Garry Kasparov chess match (1997 rematch, Game 5, see http://en.wikipedia.org/ wiki/Deep_Blue_versus_Garry_Kasparov) finished in draw after 49 moves of play. In this case, N is equal to 49, bo2c is equal to 2 so the intellectual dimension of this game equals log249 = 5.61471. Fig. 4 raises the question whether an ordinary interrogator could determine which of X and Y are Garry Kasparov and Deep Blue in Turing\u2019s Imitation Game? In this regard, it should be noted that Kasparov felt that Deep Blue had human-like behavior [9]. In this sense, Kasparov may qualify as an interrogator. But other conceptual problems may also be raised in relation to the test. For example, in our opinion, if a computer program (marked by letter A in Fig. 1) passed the Turing test then it would take over the role of the interrogator (marked by C). What happens if this C=A interrogator asks the question, do you have an infinite loop? With this modification, we can define the interrogation as a decision problem.\nIn spite of the success of developments in the field of Turing tests such as Weisenbaum\u2019s Eliza [29] or Loebner Prize [26] awarded computer programs it is a plain fact that Turing\u2019s prediction still has not come true. We still do not have computer programs that participate in and understand conversations as humans do. From the beginning there are opinions voiced that artificial intelligence is not going to the right direction [6]. It is quite easy to believe that classic \u2013 that is, written from scratch by human programmers \u2013 computer programs such as C++, Lisp, Python, Java or Turing programs cannot pass the test. All of these programs are designed to be run within an entirely isolated environment. All of their parts are designed directly, by human experts, to fulfill their exact predetermined purpose and they do not contain any historical accidental elements. In contrast, living systems such as natural languages have no pre-planned parts and come into existence as a result of accidental processes [20]. The concept of orchestrated machines lies between these two extremes using elements from both. On the one hand, the input of the orchestrated machine is a set of ordi-\nnary Turing machines. It can be seen as a designed feature. But on the other hand the executions of input Turing machines can influence, improve or confuse the operations of each other. This operation \u201csimulates\u201d a dissipative-like behavior. It can be seen as an accidental feature.\nEssentially the problem is how to apply the orchestrated machine algorithms such as OrchMach1 to high level programming languages. Lets consider a set of Lisp programs. As a first step we would have come up with a new algorithm to orchestrate the Lisp programs like the OrchMach1 does with Turing machines. Then we would have to write an interpreter to implement it. Unfortunately, the first step is not trivial. It seems easier to solve it at a higher abstraction level. Thus in this section we try to give a simple orchestration algorithm for intelligent software agents. Similarly to Turing machine breeds, agent breeds are simply finite sets of specialized intelligent software agents. This abstract machine is called agent breed and it is shown in Fig. 5, where the regular part of the terminology is taken from the book [23]. Only as an intuitive example consider some conversational agents. Let Agent1 be the Weisenbaum\u2019s Eliza program, and let Agent2 be an AIML-based (Artificial Intelligence Markup Language, [28]) chatbot, and so on. An agent halts if it cannot give an adequate answer to some question. For example, the original Eliza will always stop at the first step, because it only transforms its input into an answer without using any internal representation of the conversation [21]. The AIML-based programs will trivially stop if they interpret the pattern <pattern>\u2217</pattern> without any <topic> or <that> elements.\nThe concept of agent breeds shown in Fig. 5 allows us to automatically develop the intelligent agents. Simply we can search for such type of agent breeds that can maximize logKN , where N equals the number of percept-action pairs. Here we may note that Winograd Schema Challenge-based tests [14], [1] may allow us to automate the percepts. At this moment we are working on the high level design of a project, called \u201cMan\u2019s best friend\u201d. This software project will be based on the agent breed concept. It is introduced in the Sect. 2.2. For Turing machine breeds a similar research project has already been initiated, it is presented in Sect. 3.\nIn our previous paper [2], we raised the question of whether there is an interesting relation between the two intelligence functions IQ and EQ. The empirical estimates of these functions shown in Fig. 5. of [2] suggests that IQ and EQ functions may follow a Pareto distribution or power law:\nIQ(bo2c) \u223c (EQ(N))D\nand using Theorem 5 of [2] it follows that\nN \u2264 IQ(bo2c) \u223c (EQ(N))D\nbo2c \u2264 EQ(N) \u223c (IQ(bo2c))\u2212D .\nThis is of course only a conjecture. The quantities logbo2cN and logEQIQ are called intellectual dimension. A chess example for this definition has already been given earlier in this section. As another intuitive example, now consider Penrose and Hameroff\u2019s Orch OR model of consciousness [8]. According to this model, a human brain has 40 conscious moments per second. These moments are produced by roughly 20.000 neurons [8, p. 61]. So we may write that the intellectual dimension of this neural network is equal to log2.304\u221710620000 = 1.479293 and the intellectual dimension of the corresponding microtubular network that is contained by this neural network is equal to log2.304\u2217106(2\u22171011) = 0.5630002, where 2.304 \u2217 106 is the number of moments in the 16 hours of awake in a day. Similar speculative intellectual dimension computations will be introduced in the next section for robocars.\n2.2 Man\u2019s best friend\nBut why would we look for intelligent agent breed shown in Fig. 5? We need a challenge to motivate us. The spread of driverless robocars will be a significant milestone in the development of artificial intelligence. Several new notions, such as robotaxi and sleeper car, were born in this research and development area [18]. The explosive development of driverless cars invites the obvious question: will it be possible to replace the enjoyment of driving a human-driven car? Actually, we think that this question to be answered is easier than we expected. Look at the parking of a shopping center on a Friday afternoon, parked cars fill the spaces wherever we look. Very soon now these cars will be equipped with the very latest sensors. At present, cars have \u201cnatural\u201d actuators such as motors and wheels and will have considerable computing capability. We believe all of these will offer the ideal environment to develop a Human-Level AI and will provide a renewed impetus for the study of Turing test. By our approach the first mass produced driverless cars must have roughly the same intelligence as dogs. In this interpretation, these smart cars will become man\u2019s best friend in the near future. In the following the conversation-based user interfaces of cars are referred to as \u201cMan\u2019s best friend\u201d-like systems.\nIn the case of the search for Turing machine breeds we have already initiated a similarly structured project called GoDNGoD, but while it is based on a game, the development of the \u201cMan\u2019s best friend\u201d should be envisioned as an open source industrial project. Our immediate research goal in this project is to create a framework in which we can automatically search for such agent breeds that will be able to orchestrate conversational Lisp agents to maximize their intellectual dimension. It should be noted here that percepts of the architecture in Fig. 5 can be supported by Winograd Schema Challenge-based tests [14]. In another attempt to create a \u201cMan\u2019s best friend\u201d-type chat system [3] we try to use classical techniques such as Q-learning. In either case, we plan to introduce some kind of orchestrated machines and intellectual dimension based variant of the Imitation Game for benchmarking of the chat systems to be developed.\n3 GoDNGoD\nMany people collect specimens of insect or butterfly species. The game GoDNGoD gives the opportunity to collect Turing machine breeds, in such sense that they can be regarded as digital organisms. For example, a contained Turing machine may be thought of as an organelle. Two sample specimens of Turing machine breeds called \u201cBreedi Turingi\u201d and \u201cTuringus Tri Breedus\u201d are shown in Fig. 7.\nThe name GoDNGoD stands for a recursive acronym for \u201cGoDNGoD is Not GoD\u201d, where GoD = Game of Darwin.\nThe game consists of two parts. The one part is a volunteer computing system that uses computational capabilities of volunteers to simulate (orchestrate) Turing machine breeds. It is based on the project https://github.com/ nbatfai/orchmach that has been further developed to search automatically for breeds that promise to be interesting. We use simple evolutionary-like mechanism for searching among some well-known (such as Marxen and Buntrock\u2019s Busy Beaver champion machines [17], Uhing\u2019s machines or Schult\u2019s machines\n[19]) and 20.000 other halting Turing machines. We search for such type of breeds that can maximize their intellectual dimension. The exact list of the machines and the precise description of the searching process can be found in the source files. For example, the R plots of an experiment that we got from using the code https://github.com/nbatfai/orchmach/blob/master/ orchmach1-exp2-evol.cpp can be seen in Fig 6. This experiment found a 10-dimensional breed shown in right side of Fig. 7 in detail.\nThe other one is an administrative and visualization part. It is built on the top of the previous layer. The main task of it is to record the breeds and especially to delete breeds found to be infinite. The visualization interface shown in Fig. 7. Our immediate research goal in this game is to use an artificial neural network for performing Turing breeds classification automatically. This layer has not been available yet for public use.\n4 Conclusion\nIn the near future we are going to develop \u201cMan\u2019s best friend\u201d-like systems that will be based on some orchestration architecture. A benefit, and goal, of this paper is provide a link between the theoretical background of orchestrated\nmachines [2] and the practical applications. To support it, we have introduced the artificial life game GoDNGoD. In addition, as a possible \u201ckiller application\u201d for artificial intelligence we have described and brainstormed a vision of whether it will be possible to replace the enjoyment of driving a human-driven car. We have introduced a fractal-like measure called intellectual dimension that can intuitively examine the cooperation of conversational agents. We are going to compute and examine variants of it for benchmarking of the \u201cMan\u2019s best friend\u201d-like systems to be developed.\nAcknowledgment\nThe computations used in the preliminary experiments of this paper were partially performed on the NIIF High Performance Computing supercomputer at University of Debrecen.\nReferences\n[1] Evan Ackerman. Can Winograd Schemas Replace Turing Test for Defining Human-Level AI?, 2014.\n[2] N. Ba\u0301tfai. Are there intelligent turing machines? ArXiv e-prints, abs/1503.03787, 2015.\n[3] N. Ba\u0301tfai. A disembodied developmental robotic agent called Samu Ba\u0301tfai. Work in Progress, 2015.\n[4] Norbert Ba\u0301tfai. On the Running Time of the Shortest Programs. ArXiv e-prints, CoRR, abs/0908.1159, 2009.\n[5] Allison L. Coates, Richard J. Fateman, and Henry S. Baird. Pessimal Print: A Reverse Turing Test. In ICDAR, pages 1154\u20131158. IEEE Computer Society, 2001.\n[6] Hubert L. Dreyfus. What Computers Still Can\u2019T Do: A Critique of Artificial Reason. MIT Press, 1992.\n[7] Iwona Grabska-Gradzinska, Andrzej Kulig, Jaroslaw Kwapien, Pawel Oswiecimka, and Stanislaw Drozdz. Multifractal analysis of sentence lengths in English literary texts. ArXiv e-prints, abs/1212.3171, 2012.\n[8] Stuart Hameroff and Roger Penrose. Consciousness in the universe: A review of the Orch OR theory . Physics of Life Reviews, 11(1):39 \u2013 78, 2014.\n[9] Larry Hauser. Look who\u2019s moving the goal posts now. Minds and Machines, 11(1):41\u201351, 2001.\n[10] Philip Hingston. A Turing Test for Computer Game Bots. IEEE Trans. Comput. Intellig. and AI in Games, 1(3):169\u2013186, 2009.\n[11] Philip Hingston. A new design for a Turing Test for Bots. In Georgios N. Yannakakis and Julian Togelius, editors, CIG, pages 345\u2013350. IEEE, 2010.\n[12] Sergey Karakovskiy and Julian Togelius. The Mario AI Benchmark and Competitions. IEEE Trans. Comput. Intellig. and AI in Games, 4(1):55\u2013 67, 2012.\n[13] Marta Kutas and S. A. Hillyard. Reading senseless sentences: Brain potentials reflect semantic incongruity. Science, 207(4427):203\u2013205, 1980.\n[14] Hector J. Levesque. The Winograd Schema Challenge. In AAAI Spring Symposium: Logical Formalizations of Commonsense Reasoning. AAAI, 2011.\n[15] Daniele Loiacono, Pier Luca Lanzi, Julian Togelius, Enrique Onieva, David A. Pelta, Martin V. Butz, Thies D. Lnneker, Luigi Cardamone, Diego Perez, Yago Sez, Mike Preuss, and Jan Quadflieg. The 2009 simulated car racing championship. IEEE Trans. Comput. Intellig. and AI in Games, 2(2):131\u2013147, 2010.\n[16] Simon M. Lucas. Ms pac-man competition. SIGEVOlution, 2(4):37\u201338, 2007.\n[17] Heiner Marxen, Specs Gmbh, Jrgen Buntrock, and Technische Universitiit Berlin. Attacking the busy beaver 5. Bull EATCS, 40:247\u2013251, 1990.\n[18] P. Mcfedries. Your Inevitable Robocar Future. Spectrum, IEEE, 52(4):28, 2015.\n[19] P. Michel. The Busy Beaver Competition: a historical survey. ArXiv eprints, 2009.\n[20] John von Neumann. The Computer and the Brain. Yale University Press, 1958.\n[21] Peter Norvig. Paradigms of Artificial Intelligence Programming: Case Studies in Common Lisp. Morgan Kaufmann Publishers Inc., 1992.\n[22] Heinz-Otto Peitgen, Hartmut Ju\u0308rgens, and Dietmar Saupe. Chaos and fractals - new frontiers of science. Springer, 1992.\n[23] Stuart Russell and Peter Norvig. Artificial Intelligence: A Modern Approach. Prentice Hall Press, 3rd edition, 2009.\n[24] Noor Shaker, Julian Togelius, Georgios N. Yannakakis, Likith Poovanna, Vinay Sudha Ethiraj, Stefan J. Johansson, Robert G. Reynolds, Leonard Kinnaird-Heether, Tom Schumann, and Marcus Gallagher. The turing test track of the 2012 Mario AI Championship: Entries and evaluation. In CIG, pages 1\u20138. IEEE, 2013.\n[25] Benny Shanon. Fractal patterns in language. New Ideas in Psychology, 11(1):105 \u2013 109, 1993.\n[26] Stuart M. Shieber. Lessons from a Restricted Turing Test. ArXiv e-prints, abs/cmp-lg/9404002, 1994.\n[27] A. M. Turing. Computing machinery and intelligence. Mind, 59(236):433\u2013 460, 1950.\n[28] Richard Wallace. The elements of AIML style, 2004.\n[29] Joseph Weizenbaum. Computer Power and Human Reason: From Judgment to Calculation. W. H. Freeman & Co., 1976.\n[30] G. N. Yannakakis and J. Togelius. A Panorama of Artificial and Computational Intelligence in Games. IEEE Trans. Comput. Intellig. and AI in Games, PP(99), 2014."}], "references": [{"title": "Can Winograd Schemas Replace Turing Test for Defining Human-Level AI", "author": ["Evan Ackerman"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2014}, {"title": "Are there intelligent turing machines", "author": ["N. B\u00e1tfai"], "venue": "ArXiv e-prints,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2015}, {"title": "A disembodied developmental robotic agent called Samu B\u00e1tfai", "author": ["N. B\u00e1tfai"], "venue": "Work in Progress,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2015}, {"title": "On the Running Time of the Shortest Programs", "author": ["Norbert B\u00e1tfai"], "venue": "ArXiv e-prints, CoRR,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2009}, {"title": "Pessimal Print: A Reverse Turing Test. In ICDAR, pages 1154\u20131158", "author": ["Allison L. Coates", "Richard J. Fateman", "Henry S. Baird"], "venue": "IEEE Computer Society,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2001}, {"title": "What Computers Still Can\u2019T Do: A Critique of Artificial Reason", "author": ["Hubert L. Dreyfus"], "venue": null, "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1992}, {"title": "Multifractal analysis of sentence lengths in English literary texts", "author": ["Iwona Grabska-Gradzinska", "Andrzej Kulig", "Jaroslaw Kwapien", "Pawel Oswiecimka", "Stanislaw Drozdz"], "venue": "ArXiv e-prints,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2012}, {"title": "Consciousness in the universe: A review of the Orch OR theory", "author": ["Stuart Hameroff", "Roger Penrose"], "venue": "Physics of Life Reviews,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2014}, {"title": "Look who\u2019s moving the goal posts now", "author": ["Larry Hauser"], "venue": "Minds and Machines,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2001}, {"title": "A Turing Test for Computer Game Bots", "author": ["Philip Hingston"], "venue": "IEEE Trans. Comput. Intellig. and AI in Games,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2009}, {"title": "A new design for a Turing Test for Bots", "author": ["Philip Hingston"], "venue": null, "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2010}, {"title": "The Mario AI Benchmark and Competitions", "author": ["Sergey Karakovskiy", "Julian Togelius"], "venue": "IEEE Trans. Comput. Intellig. and AI in Games,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2012}, {"title": "Reading senseless sentences: Brain potentials reflect semantic incongruity", "author": ["Marta Kutas", "S.A. Hillyard"], "venue": null, "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1980}, {"title": "The Winograd Schema Challenge", "author": ["Hector J. Levesque"], "venue": "In AAAI Spring Symposium: Logical Formalizations of Commonsense Reasoning. AAAI,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2011}, {"title": "The 2009 simulated car racing championship", "author": ["Daniele Loiacono", "Pier Luca Lanzi", "Julian Togelius", "Enrique Onieva", "David A. Pelta", "Martin V. Butz", "Thies D. Lnneker", "Luigi Cardamone", "Diego Perez", "Yago Sez", "Mike Preuss", "Jan Quadflieg"], "venue": "IEEE Trans. Comput. Intellig. and AI in Games,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2010}, {"title": "Your Inevitable Robocar Future", "author": ["P. Mcfedries"], "venue": "Spectrum, IEEE,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2015}, {"title": "The Busy Beaver Competition: a historical survey", "author": ["P. Michel"], "venue": "ArXiv eprints,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2009}, {"title": "The Computer and the Brain", "author": ["John von Neumann"], "venue": null, "citeRegEx": "20", "shortCiteRegEx": "20", "year": 1958}, {"title": "Paradigms of Artificial Intelligence Programming: Case Studies in Common Lisp", "author": ["Peter Norvig"], "venue": null, "citeRegEx": "21", "shortCiteRegEx": "21", "year": 1992}, {"title": "Chaos and fractals - new frontiers of science", "author": ["Heinz-Otto Peitgen", "Hartmut J\u00fcrgens", "Dietmar Saupe"], "venue": null, "citeRegEx": "22", "shortCiteRegEx": "22", "year": 1992}, {"title": "Artificial Intelligence: A Modern Approach", "author": ["Stuart Russell", "Peter Norvig"], "venue": null, "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2009}, {"title": "The turing test track of the 2012 Mario AI Championship: Entries and evaluation", "author": ["Noor Shaker", "Julian Togelius", "Georgios N. Yannakakis", "Likith Poovanna", "Vinay Sudha Ethiraj", "Stefan J. Johansson", "Robert G. Reynolds", "Leonard Kinnaird-Heether", "Tom Schumann", "Marcus Gallagher"], "venue": "In CIG,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2013}, {"title": "Fractal patterns in language", "author": ["Benny Shanon"], "venue": "New Ideas in Psychology,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 1993}, {"title": "Lessons from a Restricted Turing Test", "author": ["Stuart M. Shieber"], "venue": "ArXiv e-prints,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 1994}, {"title": "Computing machinery and intelligence", "author": ["A.M. Turing"], "venue": "Mind, 59(236):433\u2013", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 1950}, {"title": "Computer Power and Human Reason: From Judgment to Calculation", "author": ["Joseph Weizenbaum"], "venue": null, "citeRegEx": "29", "shortCiteRegEx": "29", "year": 1976}, {"title": "A Panorama of Artificial and Computational Intelligence in Games", "author": ["G.N. Yannakakis", "J. Togelius"], "venue": "IEEE Trans. Comput. Intellig. and AI in Games,", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2014}], "referenceMentions": [{"referenceID": 1, "context": "achine intelligence, Turing test, self-similarity dimension, orchestrated machines, driverless car 1 Introduction The manuscript [2] has introduced two intelligence functions IQ and EQ for the simplest computer programs (to be full precise for Turing machines with a given number of states) that try to measure a kind of an a priori ability of the programs to cooperate among each other.", "startOffset": 129, "endOffset": 132}, {"referenceID": 1, "context": "The initial estimation of the empirical intelligence functions shown in [2] have already suggested that there may be an interesting correlation between IQ and EQ.", "startOffset": 72, "endOffset": 75}, {"referenceID": 1, "context": "Through of this paper we use the notations of the previous paper [2].", "startOffset": 65, "endOffset": 68}, {"referenceID": 6, "context": "(Actually, it is not surprising at all that conversations may have fractal properties, because, for example, it has already been known that written corpora or the language itself have fractal properties [7], [25].", "startOffset": 203, "endOffset": 206}, {"referenceID": 22, "context": "(Actually, it is not surprising at all that conversations may have fractal properties, because, for example, it has already been known that written corpora or the language itself have fractal properties [7], [25].", "startOffset": 208, "endOffset": 212}, {"referenceID": 19, "context": ") This scale-free simple observation suggests to try to introduce the fractal dimension of conversations that would be definable by using the self-similarity dimension [22] in the form logbo2cN or in the more intuitive form logEQIQ, where N denotes the length of the conversation and bo2c denotes the number of participants in the conversation.", "startOffset": 168, "endOffset": 172}, {"referenceID": 1, "context": "To be more precise, using the terminology of [2], IQ is the intelligence quotient and EQ is the emotional intelligence quotient.", "startOffset": 45, "endOffset": 48}, {"referenceID": 24, "context": "The Turing test (originally called the Imitation Game) is a special kind of conversation that was introduced by Alan Turing in 1950 [27], and was intended to investigate computer programs from point of view of intelligence.", "startOffset": 132, "endOffset": 136}, {"referenceID": 12, "context": "But it is to be noted that the possibility of instrumental observation of interrogator, such as EEG for detecting N400 violations [13], will not be looked into.", "startOffset": 130, "endOffset": 134}, {"referenceID": 26, "context": "In the case of spoken languages, to replace the human interrogator with a software seems to be impossible for the time being of course but searching the literature [30] we can see many examples in which the role of interrogation in the Turing test has already been changed.", "startOffset": 164, "endOffset": 168}, {"referenceID": 9, "context": "For example, in the BotPrize Contest [10] human judges have taken over the role of interrogator and the chat is replaced with playing with the well-known first-person shooter Unreal Tournament.", "startOffset": 37, "endOffset": 41}, {"referenceID": 11, "context": "the Turing test track of the 2012 Mario AI Championship [12], [24], the Ms.", "startOffset": 56, "endOffset": 60}, {"referenceID": 21, "context": "the Turing test track of the 2012 Mario AI Championship [12], [24], the Ms.", "startOffset": 62, "endOffset": 66}, {"referenceID": 14, "context": "pac-man competition [16] or the 2009 simulated car racing championship [15] may be interpreted by a similar model.", "startOffset": 71, "endOffset": 75}, {"referenceID": 10, "context": "The test of BotPrize has been further developed in [11] by its original author in order to integrate judging into the game itself.", "startOffset": 51, "endOffset": 55}, {"referenceID": 4, "context": "With this development the BotPrize test has been retrofitted to become an implementation of the reverse Turing test [5], [11] but, from our point of view, this shift in direction can also be interpreted as looking for a more objective interrogator to replace the human judges.", "startOffset": 116, "endOffset": 119}, {"referenceID": 10, "context": "With this development the BotPrize test has been retrofitted to become an implementation of the reverse Turing test [5], [11] but, from our point of view, this shift in direction can also be interpreted as looking for a more objective interrogator to replace the human judges.", "startOffset": 121, "endOffset": 125}, {"referenceID": 1, "context": "1 Intellectual dimension In manuscript [2], the author introduced the notion of the breed and gave a family of orchestrated machine simulation algorithms for Turing machines.", "startOffset": 39, "endOffset": 42}, {"referenceID": 1, "context": "com/nbatfai/orchmach and a full detailed introduction of orchestration algorithms is described in pseudo code in [2].", "startOffset": 113, "endOffset": 116}, {"referenceID": 1, "context": "1 defined in [2].", "startOffset": 13, "endOffset": 16}, {"referenceID": 8, "context": "4 raises the question whether an ordinary interrogator could determine which of X and Y are Garry Kasparov and Deep Blue in Turing\u2019s Imitation Game? In this regard, it should be noted that Kasparov felt that Deep Blue had human-like behavior [9].", "startOffset": 242, "endOffset": 245}, {"referenceID": 25, "context": "In spite of the success of developments in the field of Turing tests such as Weisenbaum\u2019s Eliza [29] or Loebner Prize [26] awarded computer programs it is a plain fact that Turing\u2019s prediction still has not come true.", "startOffset": 96, "endOffset": 100}, {"referenceID": 23, "context": "In spite of the success of developments in the field of Turing tests such as Weisenbaum\u2019s Eliza [29] or Loebner Prize [26] awarded computer programs it is a plain fact that Turing\u2019s prediction still has not come true.", "startOffset": 118, "endOffset": 122}, {"referenceID": 5, "context": "From the beginning there are opinions voiced that artificial intelligence is not going to the right direction [6].", "startOffset": 110, "endOffset": 113}, {"referenceID": 17, "context": "In contrast, living systems such as natural languages have no pre-planned parts and come into existence as a result of accidental processes [20].", "startOffset": 140, "endOffset": 144}, {"referenceID": 20, "context": "5, where the regular part of the terminology is taken from the book [23].", "startOffset": 68, "endOffset": 72}, {"referenceID": 18, "context": "For example, the original Eliza will always stop at the first step, because it only transforms its input into an answer without using any internal representation of the conversation [21].", "startOffset": 182, "endOffset": 186}, {"referenceID": 13, "context": "Here we may note that Winograd Schema Challenge-based tests [14], [1] may allow us to automate the percepts.", "startOffset": 60, "endOffset": 64}, {"referenceID": 0, "context": "Here we may note that Winograd Schema Challenge-based tests [14], [1] may allow us to automate the percepts.", "startOffset": 66, "endOffset": 69}, {"referenceID": 1, "context": "In our previous paper [2], we raised the question of whether there is an interesting relation between the two intelligence functions IQ and EQ.", "startOffset": 22, "endOffset": 25}, {"referenceID": 1, "context": "of [2] suggests that IQ and EQ functions may follow a Pareto distribution or power law: IQ(bo2c) \u223c (EQ(N)) and using Theorem 5 of [2] it follows that N \u2264 IQ(bo2c) \u223c (EQ(N)) bo2c \u2264 EQ(N) \u223c (IQ(bo2c)) .", "startOffset": 3, "endOffset": 6}, {"referenceID": 1, "context": "of [2] suggests that IQ and EQ functions may follow a Pareto distribution or power law: IQ(bo2c) \u223c (EQ(N)) and using Theorem 5 of [2] it follows that N \u2264 IQ(bo2c) \u223c (EQ(N)) bo2c \u2264 EQ(N) \u223c (IQ(bo2c)) .", "startOffset": 130, "endOffset": 133}, {"referenceID": 7, "context": "As another intuitive example, now consider Penrose and Hameroff\u2019s Orch OR model of consciousness [8].", "startOffset": 97, "endOffset": 100}, {"referenceID": 15, "context": "Several new notions, such as robotaxi and sleeper car, were born in this research and development area [18].", "startOffset": 103, "endOffset": 107}, {"referenceID": 13, "context": "5 can be supported by Winograd Schema Challenge-based tests [14].", "startOffset": 60, "endOffset": 64}, {"referenceID": 2, "context": "In another attempt to create a \u201cMan\u2019s best friend\u201d-type chat system [3] we try to use classical techniques such as Q-learning.", "startOffset": 68, "endOffset": 71}, {"referenceID": 16, "context": "[19]) and 20.", "startOffset": 0, "endOffset": 4}, {"referenceID": 3, "context": "A panel contains a fancy name, basic information such as intellectual dimension, N and o2, the name of the observer, the included Turing machines with the notations of [4] (here there is a number after the equal sign that shows how many times the given machine was selected for execution) and finally an OpenStreetMap snippet of latitude and longitude where the breed was found.", "startOffset": 168, "endOffset": 171}, {"referenceID": 1, "context": ") machines [2] and the practical applications.", "startOffset": 11, "endOffset": 14}], "year": 2015, "abstractText": "Using the recently introduced universal computing model, called orchestrated machine, that represents computations in a dissipative environment, we consider a new kind of interpretation of Turing\u2019s Imitation Game. In addition we raise the question whether the intelligence may show fractal properties. Then we sketch a vision of what robotic cars are going to do in the future. Finally we give the specification of an artificial life game based on the concept of orchestrated machines. The purpose of this paper is to start the search for possible relationships between these different topics.", "creator": "LaTeX with hyperref package"}}}