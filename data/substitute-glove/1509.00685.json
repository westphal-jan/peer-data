{"id": "1509.00685", "review": {"conference": "EMNLP", "VERSION": "v1", "DATE_OF_SUBMISSION": "2-Sep-2015", "title": "A Neural Attention Model for Abstractive Sentence Summarization", "abstract": "Summarization information thursday text extraction is biologically limited, but generation - classical abstractive method others less argue to build. In this this, we reductions a fully indicators - driven complicated to abstractive manslaughter summarization. Our determining utilizes place leading attention - independent similar could reduces each mentioned it followed 1100 commodious only next automatically custody. While present redesigned 's structurally so, every can easily to trained end - to - now under scales must set larger exceed of training suggests. The design shows considerable improvement yields early under DUC - 2004 while military far into several while baselines.", "histories": [["v1", "Wed, 2 Sep 2015 13:20:40 GMT  (353kb,D)", "http://arxiv.org/abs/1509.00685v1", "Proceedings of EMNLP 2015"], ["v2", "Thu, 3 Sep 2015 19:55:45 GMT  (352kb,D)", "http://arxiv.org/abs/1509.00685v2", "Proceedings of EMNLP 2015"]], "COMMENTS": "Proceedings of EMNLP 2015", "reviews": [], "SUBJECTS": "cs.CL cs.AI", "authors": ["alexander m rush", "sumit chopra", "jason weston"], "accepted": true, "id": "1509.00685"}, "pdf": {"name": "1509.00685.pdf", "metadata": {"source": "CRF", "title": "A Neural Attention Model for Sentence Summarization", "authors": ["Alexander M. Rush", "Sumit Chopra"], "emails": ["srush@seas.harvard.edu", "spchopra@fb.com", "jase@fb.com"], "sections": [{"heading": "1 Introduction", "text": "Summarization is an important challenge of natural language understanding. The aim is to produce a condensed representation of an input text that captures the core meaning of the original. Most successful summarization systems utilize extractive approaches that crop out and stitch together portions of the text to produce a condensed version. In contrast, abstractive summarization attempts to produce a bottom-up summary, aspects of which may not appear as part of the original.\nWe focus on the task of sentence-level summarization. While much work on this task has looked at deletion-based sentence compression techniques (Knight and Marcu (2002), among many others), studies of human summarizers show that it is common to apply various other operations while condensing, such as paraphrasing, generalization, and reordering (Jing, 2002). Past work has modeled this abstractive summarization problem either using linguistically-inspired constraints (Dorr et al., 2003; Zajic et al., 2004) or with syntactic transformations of the input text (Cohn and\nLapata, 2008; Woodsend et al., 2010). These approaches are described in more detail in Section 6.\nWe instead explore a fully data-driven approach for generating abstractive summaries. Inspired by the recent success of neural machine translation, we combine a neural language model with a contextual input encoder. Our encoder is modeled off of the attention-based encoder of Bahdanau et al. (2014) in that it learns a latent soft alignment over the input text to help inform the summary (as shown in Figure 1). Crucially both the encoder and the generation model are trained jointly on the sentence summarization task. The model is described in detail in Section 3. Our model also incorporates a beam-search decoder as well as additional features to model extractive elements; these aspects are discussed in Sections 4 and 5.\nThis approach to summarization, which we call Attention-Based Summarization (ABS), incorporates less linguistic structure than comparable abstractive summarization approaches, but can easily\nar X\niv :1\n50 9.\n00 68\n5v 1\n[ cs\n.C L\n] 2\nS ep\n2 01\n5\nscale to train on a large amount of data. Since our system makes no assumptions about the vocabulary of the generated summary it can be trained directly on any document-summary pair.1 This allows us to train a summarization model for headline-generation on a corpus of article pairs from Gigaword (Graff et al., 2003) consisting of around 4 million articles. An example of generation is given in Figure 2, and we discuss the details of this task in Section 7.\nTo test the effectiveness of this approach we run extensive comparisons with multiple abstractive and extractive baselines, including traditional syntax-based systems, integer linear programconstrained systems, information-retrieval style approaches, as well as statistical phrase-based machine translation. Section 8 describes the results of these experiments. Our approach outperforms a machine translation system trained on the same large-scale dataset and yields a large improvement over the highest scoring system in the DUC-2004 competition."}, {"heading": "2 Background", "text": "We begin by defining the sentence summarization task. Given an input sentence, the goal is to produce a condensed summary. Let the input consist of a sequence of M words x1, . . . ,xM coming from a fixed vocabulary V of size |V| = V . We will represent each word as an indicator vector xi \u2208 {0, 1}V for i \u2208 {1, . . . ,M}, sentences as a sequence of indicators, and X as the set of possible inputs. Furthermore define the notation x[i,j,k] to indicate the sub-sequence of elements i, j, k.\nA summarizer takes x as input and outputs a shortened sentence y of length N < M . We will assume that the words in the summary also come from the same vocabulary V and that the output is\n1In contrast to a large-scale sentence compression systems like Filippova and Altun (2013) which require monotonic aligned compressions.\na sequence y1, . . . ,yN . Note that in contrast to related tasks, like machine translation, we will assume that the output length N is fixed, and that the system knows the length of the summary before generation.2\nNext consider the problem of generating summaries. Define the set Y \u2282 ({0, 1}V , . . . , {0, 1}V ) as all possible sentences of length N , i.e. for all i and y \u2208 Y , yi is an indicator. We say a system is abstractive if it tries to find the optimal sequence from this set Y ,\narg max y\u2208Y s(x,y), (1)\nunder a scoring function s : X \u00d7Y 7\u2192 R. Contrast this to a fully extractive sentence summary3 which transfers words from the input:\narg max m\u2208{1,...M}N s(x,x[m1,...,mN ]), (2)\nor to the related problem of sentence compression that concentrates on deleting words from the input:\narg max m\u2208{1,...M}N ,mi\u22121<mi s(x,x[m1,...,mN ]). (3)\nWhile abstractive summarization poses a more difficult generation challenge, the lack of hard constraints gives the system more freedom in generation and allows it to fit with a wider range of training data.\nIn this work we focus on factored scoring functions, s, that take into account a fixed window of previous words:\ns(x,y) \u2248 N\u22121\u2211 i=0 g(yi+1,x,yc), (4)\n2For the DUC-2004 evaluation, it is actually the number of bytes of the output that is capped. More detail is given in Section 7.\n3Unfortunately the literature is inconsistent on the formal definition of this distinction. Some systems self-described as abstractive would be extractive under our definition.\nwhere we define yc , y[i\u2212C+1,...,i] for a window of size C.\nIn particular consider the conditional logprobability of a summary given the input, s(x,y) = log p(y|x; \u03b8). We can write this as:\nlog p(y|x; \u03b8) \u2248 N\u22121\u2211 i=0 log p(yi+1|x,yc; \u03b8),\nwhere we make a Markov assumption on the length of the context as size C and assume for i < 1, yi is a special start symbol \u3008S\u3009.\nWith this scoring function in mind, our main focus will be on modelling the local conditional distribution: p(yi+1|x,yc; \u03b8). The next section defines a parameterization for this distribution, in Section 4, we return to the question of generation for factored models, and in Section 5 we introduce a modified factored scoring function."}, {"heading": "3 Model", "text": "The distribution of interest, p(yi+1|x,yc; \u03b8), is a conditional language model based on the input sentence x. Past work on summarization and compression has used a noisy-channel approach to split and independently estimate a language model and a conditional summarization model (Banko et al., 2000; Knight and Marcu, 2002; Daume\u0301 III and Marcu, 2002), i.e.,\narg max y log p(y|x) = arg max y log p(y)p(x|y)\nwhere p(y) and p(x|y) are estimated separately. Here we instead follow work in neural machine translation and directly parameterize the original distribution as a neural network. The network contains both a neural probabilistic language model and an encoder which acts as a conditional summarization model."}, {"heading": "3.1 Neural Language Model", "text": "The core of our parameterization is a language model for estimating the contextual probability of the next word. The language model is adapted from a standard feed-forward neural network language model (NNLM), particularly the class of NNLMs described by Bengio et al. (2003). The full model is:\np(yi+1|yc,x; \u03b8) \u221d exp(Vh + Wenc(x,yc)), y\u0303c = [Eyi\u2212C+1, . . . ,Eyi],\nh = tanh(Uy\u0303c).\nThe parameters are \u03b8 = (E,U,V,W) where E \u2208 RD\u00d7V is a word embedding matrix, U \u2208 R(CD)\u00d7H , V \u2208 RV\u00d7H , W \u2208 RV\u00d7H are weight matrices,4 D is the size of the word embeddings, and h is a hidden layer of size H . The black-box function enc is a contextual encoder term that returns a vector of size H representing the input and current context; we consider several possible variants, described subsequently. Figure 3a gives a schematic representation of the decoder architecture."}, {"heading": "3.2 Encoders", "text": "Note that without the encoder term this represents a standard language model. By incorporating in enc and training the two elements jointly we crucially can incorporate the input text into generation. We discuss next several possible instantiations of the encoder.\nBag-of-Words Encoder Our most basic model simply uses the bag-of-words of the input sentence embedded down to size H , while ignoring properties of the original order or relationships between neighboring words. We write this model as:\nenc1(x,yc) = p >x\u0303,\np = [1/M, . . . , 1/M ],\nx\u0303 = [Fx1, . . . ,FxM ].\nWhere the input-side embedding matrix F \u2208 RH\u00d7V is the only new parameter of the encoder and p \u2208 [0, 1]M is a uniform distribution over the input words.\n4Each of the weight matrices U, V, W also has a corresponding bias term. For readability, we omit these terms throughout the paper.\nFor summarization this model can capture the relative importance of words to distinguish content words from stop words or embellishments. Potentially the model can also learn to combine words; although it is inherently limited in representing contiguous phrases.\nConvolutional Encoder To address some of the modelling issues with bag-of-words we also consider using a deep convolutional encoder for the input sentence. This architecture improves on the bag-of-words model by allowing local interactions between words while also not requiring the context yc while encoding the input.\nWe utilize a standard time-delay neural network (TDNN) architecture, alternating between temporal convolution layers and max pooling layers.\n\u2200j, enc2(x,yc)j = max i x\u0303Li,j , (5) \u2200i, l \u2208 {1, . . . L}, x\u0303lj = tanh(max{x\u0304l2i\u22121, x\u0304l2i}), (6) \u2200i, l \u2208 {1, . . . L}, x\u0304li = Qlx\u0303l\u22121[i\u2212Q,...,i+Q], (7)\nx\u03030 = [Fx1, . . . ,FxM ]. (8)\nWhere F is a word embedding matrix and QL\u00d7H\u00d72Q+1 consists of a set of filters for each layer {1, . . . L}. Eq. 7 is a temporal (1D) convolution layer, Eq. 6 consists of a 2-element temporal max pooling layer and a pointwise non-linearity, and final output Eq. 5 is a max over time. At each layer x\u0303 is one half the size of x\u0304. For simplicity we assume that the convolution is padded at the boundaries, and that M is greater than 2L so that the dimensions are well-defined.\nAttention-Based Encoder While the convolutional encoder has richer capacity than bag-ofwords, it still is required to produce a single representation for the entire input sentence. A similar issue in machine translation inspired Bahdanau et al. (2014) to instead utilize an attention-based contextual encoder that constructs a representation based on the generation context. Here we note that if we exploit this context, we can actually use a rather simple model similar to bag-of-words:\nenc3(x,yc) = p >x\u0304,\np \u221d exp(x\u0303Py\u0303\u2032c), x\u0303 = [Fx1, . . . ,FxM ],\ny\u0303\u2032c = [Gyi\u2212C+1, . . . ,Gyi],\n\u2200i x\u0304i = i+Q\u2211\nq=i\u2212Q x\u0303i/Q.\nWhere G \u2208 RD\u00d7V is an embedding of the context, P \u2208 RH\u00d7(CD) is a new weight matrix parameter mapping between the context embedding and input embedding, and Q is a smoothing window. The full model is shown in Figure 3b.\nInformally we can think of this model as simply replacing the uniform distribution in bag-of-words with a learned soft alignment, P, between the input and the summary. Figure 1 shows an example of this distribution p as a summary is generated. The soft alignment is then used to weight the smoothed version of the input x\u0304 when constructing the representation. For instance if the current context aligns well with position i then the words xi\u2212Q, . . . ,xi+Q are highly weighted by the encoder. Together with the NNLM, this model can be seen as a stripped-down version of the attention-based neural machine translation model.5"}, {"heading": "3.3 Training", "text": "The lack of generation constraints makes it possible to train the model on arbitrary input-output pairs. Once we have defined the local conditional model, p(yi+1|x,yc; \u03b8), we can estimate the parameters to minimize the negative loglikelihood of a set of summaries. Define this training set as consisting of J input-summary pairs (x(1),y(1)), . . . , (x(J),y(J)). The negative loglikelihood conveniently factors6 into a term for each token in the summary:\nNLL(\u03b8) = \u2212 J\u2211\nj=1\nlog p(y(j)|x(j); \u03b8),\n= \u2212 J\u2211\nj=1 N\u22121\u2211 i=1 log p(y (j) i+1|x (j),yc; \u03b8).\nWe minimize NLL by using mini-batch stochastic gradient descent. The details are described further in Section 7.\n5To be explicit, compared to Bahdanau et al. (2014) our model uses an NNLM instead of a target-side LSTM, source-side windowed averaging instead of a source-side bidirectional RNN, and a weighted dot-product for alignment instead of an alignment MLP.\n6This is dependent on using the gold standard contexts yc. An alternative is to use the predicted context within a structured or reenforcement-learning style objective."}, {"heading": "4 Generating Summaries", "text": "We now return to the problem of generating summaries. Recall from Eq. 4 that our goal is to find,\ny\u2217 = arg max y\u2208Y N\u22121\u2211 i=0 g(yi+1,x,yc).\nUnlike phrase-based machine translation where inference is NP-hard, it actually is tractable in theory to compute y\u2217. Since there is no explicit hard alignment constraint, Viterbi decoding can be applied and requires O(NV C) time to find an exact solution. In practice though V is large enough to make this difficult.\nAn alternative approach is to approximate the arg max with a strictly greedy or deterministic decoder. While decoders of this form can produce very bad approximations, they have shown to be relatively effective and fast for neural MT models (Sutskever et al., 2014).\nA compromise between exact and greedy decoding is to use a beam-search decoder (Algorithm 1) which maintains the full vocabulary V while limiting itself to K potential hypotheses at each position of the summary. The beam-search algorithm is shown here:\nAlgorithm 1 Beam Search Input: Parameters \u03b8, beam size K, input x Output: Approx. K-best summaries \u03c0[0]\u2190 { } S = V if abstractive else {xi | \u2200i} for i = 0 to N \u2212 1 do\n. Generate Hypotheses N \u2190 { [y,yi+1] | y \u2208 \u03c0[i],yi+1 \u2208 S } . Hypothesis Recombination\nH \u2190 { y \u2208 N | s(y,x) > s(y\u2032,x)\n\u2200y\u2032 \u2208 N s.t. yc = y\u2032c } . Filter K-Max \u03c0[i+ 1]\u2190 K-arg max\ny\u2208H g(yi+1,yc,x) + s(y,x)\nend for return \u03c0[N ]\nAs with Viterbi this beam search algorithm is much simpler than beam search for phrase-based MT. Because there is no explicit constraint that each source word be used exactly once there is no need to maintain a bit set and we can simply move from left-to-right generating words. The beam search algorithm requires O(KNV ) time. From a computational perspective though, each round of beam search is dominated by computing p(yi|x,yc) for each of the K hypotheses. These\ncan be computed as a mini-batch, which in practice greatly reduces the factor of K."}, {"heading": "5 Extension: Extractive Tuning", "text": "While we will see that the attention-based model is effective at generating summaries, it does miss an important aspect seen in the human-generated references. In particular the abstractive model does not have the capacity to find extractive word matches when necessary, for example transferring unseen proper noun phrases from the input. Similar issues have also been observed in neural translation models particularly in terms of translating rare words (Luong et al., 2014).\nTo address this issue we experiment with tuning a very small set of additional features that tradeoff the abstractive/extractive tendency of the system. We do this by modifying our scoring function to directly estimate the probability of a summary using a log-linear model, as is standard in machine translation:\np(y|x; \u03b8, \u03b1) \u221d exp(\u03b1> N\u22121\u2211 i=0 f(yi+1,x,yc)).\nWhere \u03b1 \u2208 R5 is a weight vector and f is a feature function. Finding the best summary under this distribution corresponds to maximizing a factored scoring function s,\ns(y,x) = N\u22121\u2211 i=0 \u03b1>f(yi+1,x,yc).\nwhere g(yi+1,x,yc) , \u03b1>f(yi+1,x,yc) to satisfy Eq. 4. The function f is defined to combine the local conditional probability with some additional indicator featrues:\nf(yi+1,x,yc) = [ log p(yi+1|x,yc; \u03b8), 1{\u2203j. yi+1 = xj }, 1{\u2203j. yi+1\u2212k = xj\u2212k \u2200k \u2208 {0, 1}}, 1{\u2203j. yi+1\u2212k = xj\u2212k \u2200k \u2208 {0, 1, 2}}, 1{\u2203k > j. yi = xk,yi+1 = xj} ].\nThese features correspond to indicators of unigram, bigram, and trigram match with the input as well as reordering of input words. Note that setting \u03b1 = \u30081, 0, . . . , 0\u3009 gives a model identical to standard ABS.\nAfter training the main neural model, we fix \u03b8 and tune the \u03b1 parameters. We follow the statistical machine translation setup and use minimumerror rate training (MERT) to tune for the summarization metric on tuning data (Och, 2003). This tuning step is also identical to the one used for the phrase-based machine translation baseline."}, {"heading": "6 Related Work", "text": "Abstractive sentence summarization has been traditionally connected to the task of headline generation. Our work is similar to early work of Banko et al. (2000) who developed a statistical machine translation-inspired approach for this task using a corpus of headline-article pairs. We extend this approach by: (1) using a neural summarization model as opposed to a count-based noisy-channel model, (2) training the model on much larger scale (25K compared to 4 million articles), (3) and allowing fully abstractive decoding.\nThis task was standardized around the DUC2003 and DUC-2004 competitions (Over et al., 2007). The TOPIARY system (Zajic et al., 2004) performed the best in this task, and is described in detail in the next section. We point interested readers to the DUC web page (http://duc.nist. gov/) for the full list of systems entered in this shared task.\nMore recently, Cohn and Lapata (2008) give a compression method which allows for more arbitrary transformations. They extract tree transduction rules from aligned, parsed texts and learn weights on transfomations using a max-margin learning algorithm. Woodsend et al. (2010) propose a quasi-synchronous grammar approach utilizing both context-free parses and dependency parses to produce legible summaries. Both of these approaches differ from ours in that they directly use the syntax of the input/output sentences. The latter system is W&L in our results; we attempted to train the former system T3 on this dataset but could not train it at scale.\nIn addition to Banko et al. (2000) there has been some work using statistical machine translation directly for abstractive summary. Wubben et al. (2012) utilize MOSES directly as a method for text simplification.\nRecently Filippova and Altun (2013) developed a strictly extractive system that is trained on a relatively large corpora (250K sentences) of articletitle pairs. Because their focus is extractive com-\npression, the sentences are transformed by a series of heuristics such that the words are in monotonic alignment. Our system does not require this alignment step but instead uses the text directly.\nNeural MT This work is closely related to recent work on neural network language models (NNLM) and to work on neural machine translation. The core of our model is a NNLM based on that of Bengio et al. (2003).\nRecently, there have been several papers about models for machine translation (Kalchbrenner and Blunsom, 2013; Cho et al., 2014; Sutskever et al., 2014). Of these our model is most closely related to the attention-based model of Bahdanau et al. (2014), which explicitly finds a soft alignment between the current position and the input source. Most of these models utilize recurrent neural networks (RNNs) for generation as opposed to feedforward models. We hope to incorporate an RNNLM in future work."}, {"heading": "7 Experimental Setup", "text": "We experiment with our attention-based sentence summarization model on the task of headline generation. In this section we describe the corpora used for this task, the baseline methods we compare with, and implementation details of our approach."}, {"heading": "7.1 Data Set", "text": "The standard sentence summarization evaluation set is associated with the DUC-2003 and DUC2004 shared tasks (Over et al., 2007). The data for this task consists of 500 news articles from the New York Times and Associated Press Wire services each paired with 4 different human-generated reference summaries (not actually headlines), capped at 75 bytes. This data set is evaluation-only, although the similarly sized DUC-2003 data set was made available for the task. The expectation is for a summary of roughly 14 words, based on the text of a complete article (although we only make use of the first sentence). The full data set is available by request at http://duc.nist.gov/data.html.\nFor this shared task, systems were entered and evaluated using several variants of the recalloriented ROUGE metric (Lin, 2004). To make recall-only evaluation unbiased to length, output of all systems is cut-off after 75-characters and no bonus is given for shorter summaries.\nUnlike BLEU which interpolates various n-gram matches, there are several versions of ROUGE for different match lengths. The DUC evaluation uses ROUGE-1 (unigrams), ROUGE-2 (bigrams), and ROUGE-L (longest-common substring), all of which we report.\nIn addition to the standard DUC-2014 evaluation, we also report evaluation on single reference headline-generation using a randomly heldout subset of Gigaword. This evaluation is closer to the task the model is trained for, and it allows us to use a bigger evaluation set, which we will include in our code release. For this evaluation, we tune systems to generate output of the average title length.\nFor training data for both tasks, we utilize the annotated Gigaword data set (Graff et al., 2003; Napoles et al., 2012), which consists of standard Gigaword, preprocessed with Stanford CoreNLP tools (Manning et al., 2014). Our model only uses annotations for tokenization and sentence separation, although several of the baselines use parsing and tagging as well. Gigaword contains around 9.5 million news articles sourced from various domestic and international news services over the last two decades.\nFor our training set, we pair the headline of each article with its first sentence to create an inputsummary pair. While the model could in theory be trained on any pair, Gigaword contains many spurious headline-article pairs. We therefore prune training based on the following heuristic filters: (1) Are there no non-stop-words in common? (2) Does the title contain a byline or other extraneous editing marks? (3) Does the title have a question mark or colon? After applying these filters, the training set consists of roughly J = 4 million title-article pairs. We apply a minimal preprocessing step using PTB tokenization, lower-casing, replacing all digit characters with #, and replacing of word types seen less than 5 times with UNK. We also remove all articles from the time-period of the DUC evaluation. release.\nThe complete input training vocabulary consists of 119 million word tokens and 110K unique word types with an average sentence size of 31.3 words. The headline vocabulary consists of 31 million tokens and 69K word types with the average title of length 8.3 words (note that this is significantly shorter than the DUC summaries). On average there are 4.6 overlapping word types between the\nheadline and the input; although only 2.6 in the first 75-characters of the input."}, {"heading": "7.2 Baselines", "text": "Due to the variety of approaches to the sentence summarization problem, we report a broad set of headline-generation baselines.\nFrom the DUC-2004 task we include the PREFIX baseline that simply returns the first 75- characters of the input as the headline. We also report the winning system on this shared task, TOPIARY (Zajic et al., 2004). TOPIARY merges a compression system using linguisticallymotivated transformations of the input (Dorr et al., 2003) with an unsupervised topic detection (UTD) algorithm that appends key phrases from the full article onto the compressed output. Woodsend et al. (2010) (described above) also report results on the DUC dataset.\nThe DUC task also includes a set of manual summaries performed by 8 human summarizers each summarizing half of the test data sentences (yielding 4 references per sentence). We report the average inter-annotater agreement score as REFERENCE. For reference, the best human evaluator scores 31.7 ROUGE-1.\nWe also include several baselines that have access to the same training data as our system. The first is a sentence compression baseline COMPRESS (Clarke and Lapata, 2008). This model uses the syntactic structure of the original sentence along with a language model trained on the headline data to produce a compressed output. The syntax and language model are combined with a set of linguistic constraints and decoding is performed with an ILP solver.\nTo control for memorizing titles from training, we implement an information retrieval baseline, IR. This baseline indexes the training set, and gives the title for the article with highest BM-25 match to the input (see Manning et al. (2008)).\nFinally, we use a phrase-based statistical machine translation system trained on Gigaword to produce summaries, MOSES+ (Koehn et al., 2007). To improve the baseline for this task, we augment the phrase table with \u201cdeletion\u201d rules mapping each article word to , include an additional deletion feature for these rules, and allow for an infinite distortion limit. We also explicitly tune the model using MERT to target the 75- byte capped ROUGE score as opposed to standard\nBLEU-based tuning. Unfortunately, one remaining issue is that it is non-trivial to modify the translation decoder to produce fixed-length outputs, so we tune the system to produce roughly the expected length."}, {"heading": "7.3 Implementation", "text": "For training, we use mini-batch stochastic gradient descent to minimize negative log-likelihood. We use a learning rate of 0.05, and split the learning rate by half if validation log-likelihood does not improve for an epoch. Training is performed with shuffled mini-batches of size 64. The minibatches are grouped by input length. After each epoch, we renormalize the embedding tables (Hinton et al., 2012). Based on the validation set, we set hyperparameters as D = 200, H = 400, C = 5, L = 3, and Q = 2.\nOur implementation uses the Torch numerical framework (http://torch.ch/) and will be openly available along with the data pipeline. Crucially, training is performed on GPUs and would be intractable or require approximations otherwise. Processing 1000 mini-batches with D = 200, H = 400 requires 160 seconds. Best validation accuracy is reached after 15 epochs through the data, which requires around 4 days of training.\nAdditionally, as described in Section 5 we apply a MERT tuning step after training using the DUC2003 data. For this step we use Z-MERT (Zaidan, 2009). We refer to the main model as ABS and the tuned model as ABS+."}, {"heading": "8 Results", "text": "Our main results are presented in Table 1. We run experiments both using the DUC-2004 evaluation data set (500 sentences, 4 references, 75 bytes) with all systems and a randomly held-out\nGigaword test set (2000 sentences, 1 reference). We first note that the baselines COMPRESS and IR do relatively poorly on both datasets, indicating that neither just having article information or language model information alone is sufficient for the task. The PREFIX baseline actually performs surprisingly well on ROUGE-1 which makes sense given the earlier observed overlap between article and summary.\nBoth ABS and MOSES+ perform better than TOPIARY, particularly on ROUGE-2 and ROUGE-L in DUC. The full model ABS+ scores the best on these tasks, and is significantly better based on the default ROUGE confidence level than TOPIARY on all metrics, and MOSES+ on ROUGE-1 for DUC as well as ROUGE-1 and ROUGE-L for Gigaword. Note that the additional extractive features bias the system towards retaining more input words, which is useful for the underlying metric.\nNext we consider ablations to the model and algorithm structure. Table 2 shows experiments for the model with various encoders. For these experiments we look at the perplexity of the system as a language model on validation data, which controls for the variable of inference and tuning. The NNLM language model with no encoder gives a gain over the standard n-gram language model. Including even the bag-of-words encoder reduces perplexity number to below 50. Both the convolutional encoder and the attention-based encoder further reduce the perplexity, with attention giving a value below 30.\nWe also consider model and decoding ablations on the main summary model, shown in Table 3. These experiments compare to the BoW encoding models, compare beam search and greedy decoding, as well as restricting the system to be com-\nplete extractive. Of these features, the biggest impact is from using a more powerful encoder (attention versus BoW), as well as using beam search to generate summaries. The abstractive nature of the system helps, but for ROUGE even using pure extractive generation is effective.\nFinally we consider example summaries shown in Figure 4. Despite improving on the baseline scores, this model is far from human performance on this task. Generally the models are good at picking out key words from the input, such as names and places. However, both models will reorder words in syntactically incorrect ways, for instance in Sentence 7 both models have the wrong subject. ABS often uses more interesting re-wording, for instance new nz pm after election in Sentence 4, but this can also lead to attachment mistakes such a russian oil giant chevron in Sentence 11."}, {"heading": "9 Conclusion", "text": "We have presented a neural attention-based model for abstractive summarization, based on recent developments in neural machine translation. We combine this probabilistic model with a generation algorithm which produces accurate abstractive summaries. As a next step we would like to further improve the grammaticality of the summaries in a data-driven way, as well as scale this system to generate paragraph-level summaries. Both pose additional challenges in terms of efficient alignment and consistency in generation."}], "references": [{"title": "Neural machine translation by jointly learning to align and translate", "author": ["Dzmitry Bahdanau", "Kyunghyun Cho", "Yoshua Bengio."], "venue": "arXiv preprint arXiv:1409.0473.", "citeRegEx": "Bahdanau et al\\.,? 2014", "shortCiteRegEx": "Bahdanau et al\\.", "year": 2014}, {"title": "Headline generation based on statistical translation", "author": ["Michele Banko", "Vibhu O Mittal", "Michael J Witbrock."], "venue": "Proceedings of the 38th Annual Meeting on Association for Computational Linguistics, pages 318\u2013325. Association for Computational", "citeRegEx": "Banko et al\\.,? 2000", "shortCiteRegEx": "Banko et al\\.", "year": 2000}, {"title": "A neural probabilistic language model", "author": ["Yoshua Bengio", "R\u00e9jean Ducharme", "Pascal Vincent", "Christian Janvin."], "venue": "The Journal of Machine Learning Research, 3:1137\u20131155.", "citeRegEx": "Bengio et al\\.,? 2003", "shortCiteRegEx": "Bengio et al\\.", "year": 2003}, {"title": "Learning phrase representations using rnn encoder-decoder for statistical machine translation", "author": ["Kyunghyun Cho", "Bart van Merrienboer", "Caglar Gulcehre", "Fethi Bougares", "Holger Schwenk", "Yoshua Bengio."], "venue": "arXiv preprint arXiv:1406.1078.", "citeRegEx": "Cho et al\\.,? 2014", "shortCiteRegEx": "Cho et al\\.", "year": 2014}, {"title": "Global inference for sentence compression: An integer linear programming approach", "author": ["James Clarke", "Mirella Lapata."], "venue": "Journal of Artificial Intelligence Research, pages 399\u2013429.", "citeRegEx": "Clarke and Lapata.,? 2008", "shortCiteRegEx": "Clarke and Lapata.", "year": 2008}, {"title": "Sentence compression beyond word deletion", "author": ["Trevor Cohn", "Mirella Lapata."], "venue": "Proceedings of the 22nd International Conference on Computational Linguistics-Volume 1, pages 137\u2013144. Association for Computational Linguistics.", "citeRegEx": "Cohn and Lapata.,? 2008", "shortCiteRegEx": "Cohn and Lapata.", "year": 2008}, {"title": "A noisychannel model for document compression", "author": ["Hal Daum\u00e9 III", "Daniel Marcu."], "venue": "Proceedings of the 40th Annual Meeting on Association for Computational Linguistics, pages 449\u2013456. Association for Computational Linguistics.", "citeRegEx": "III and Marcu.,? 2002", "shortCiteRegEx": "III and Marcu.", "year": 2002}, {"title": "Hedge trimmer: A parse-and-trim approach to headline generation", "author": ["Bonnie Dorr", "David Zajic", "Richard Schwartz."], "venue": "Proceedings of the HLTNAACL 03 on Text summarization workshop-Volume 5, pages 1\u20138. Association for Computational Lin-", "citeRegEx": "Dorr et al\\.,? 2003", "shortCiteRegEx": "Dorr et al\\.", "year": 2003}, {"title": "Overcoming the lack of parallel data in sentence compression", "author": ["Katja Filippova", "Yasemin Altun."], "venue": "EMNLP, pages 1481\u20131491.", "citeRegEx": "Filippova and Altun.,? 2013", "shortCiteRegEx": "Filippova and Altun.", "year": 2013}, {"title": "English gigaword", "author": ["David Graff", "Junbo Kong", "Ke Chen", "Kazuaki Maeda."], "venue": "Linguistic Data Consortium, Philadelphia.", "citeRegEx": "Graff et al\\.,? 2003", "shortCiteRegEx": "Graff et al\\.", "year": 2003}, {"title": "Improving neural networks by preventing coadaptation of feature detectors", "author": ["Geoffrey E Hinton", "Nitish Srivastava", "Alex Krizhevsky", "Ilya Sutskever", "Ruslan R Salakhutdinov."], "venue": "arXiv preprint arXiv:1207.0580.", "citeRegEx": "Hinton et al\\.,? 2012", "shortCiteRegEx": "Hinton et al\\.", "year": 2012}, {"title": "Using hidden markov modeling to decompose human-written summaries", "author": ["Hongyan Jing."], "venue": "Computational linguistics, 28(4):527\u2013543.", "citeRegEx": "Jing.,? 2002", "shortCiteRegEx": "Jing.", "year": 2002}, {"title": "Recurrent continuous translation models", "author": ["Nal Kalchbrenner", "Phil Blunsom."], "venue": "EMNLP, pages 1700\u20131709.", "citeRegEx": "Kalchbrenner and Blunsom.,? 2013", "shortCiteRegEx": "Kalchbrenner and Blunsom.", "year": 2013}, {"title": "Summarization beyond sentence extraction: A probabilistic approach to sentence compression", "author": ["Kevin Knight", "Daniel Marcu."], "venue": "Artificial Intelligence, 139(1):91\u2013107.", "citeRegEx": "Knight and Marcu.,? 2002", "shortCiteRegEx": "Knight and Marcu.", "year": 2002}, {"title": "Moses: Open source toolkit for statistical machine translation", "author": ["Philipp Koehn", "Hieu Hoang", "Alexandra Birch", "Chris Callison-Burch", "Marcello Federico", "Nicola Bertoldi", "Brooke Cowan", "Wade Shen", "Christine Moran", "Richard Zens"], "venue": null, "citeRegEx": "Koehn et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Koehn et al\\.", "year": 2007}, {"title": "Rouge: A package for automatic evaluation of summaries", "author": ["Chin-Yew Lin."], "venue": "Text Summarization Branches Out: Proceedings of the ACL-04 Workshop, pages 74\u201381.", "citeRegEx": "Lin.,? 2004", "shortCiteRegEx": "Lin.", "year": 2004}, {"title": "Addressing the rare word problem in neural machine translation", "author": ["Thang Luong", "Ilya Sutskever", "Quoc V Le", "Oriol Vinyals", "Wojciech Zaremba."], "venue": "arXiv preprint arXiv:1410.8206.", "citeRegEx": "Luong et al\\.,? 2014", "shortCiteRegEx": "Luong et al\\.", "year": 2014}, {"title": "Introduction to information retrieval, volume 1", "author": ["Christopher D Manning", "Prabhakar Raghavan", "Hinrich Sch\u00fctze."], "venue": "Cambridge university press Cambridge.", "citeRegEx": "Manning et al\\.,? 2008", "shortCiteRegEx": "Manning et al\\.", "year": 2008}, {"title": "The stanford corenlp natural language processing toolkit", "author": ["Christopher D Manning", "Mihai Surdeanu", "John Bauer", "Jenny Finkel", "Steven J Bethard", "David McClosky."], "venue": "Proceedings of 52nd Annual Meeting of the Association for Computa-", "citeRegEx": "Manning et al\\.,? 2014", "shortCiteRegEx": "Manning et al\\.", "year": 2014}, {"title": "Empirical evaluation and combination of advanced language modeling techniques", "author": ["Tomas Mikolov", "Anoop Deoras", "Stefan Kombrink", "Lukas Burget", "Jan Cernock\u1ef3."], "venue": "INTERSPEECH, number s 1, pages 605\u2013608.", "citeRegEx": "Mikolov et al\\.,? 2011", "shortCiteRegEx": "Mikolov et al\\.", "year": 2011}, {"title": "Hierarchical probabilistic neural network language model", "author": ["Frederic Morin", "Yoshua Bengio."], "venue": "Proceedings of the international workshop on artificial intelligence and statistics, pages 246\u2013252. Citeseer.", "citeRegEx": "Morin and Bengio.,? 2005", "shortCiteRegEx": "Morin and Bengio.", "year": 2005}, {"title": "Annotated gigaword", "author": ["Courtney Napoles", "Matthew Gormley", "Benjamin Van Durme."], "venue": "Proceedings of the Joint Workshop on Automatic Knowledge Base Construction and Web-scale Knowledge Extraction, pages 95\u2013100. Association for Compu-", "citeRegEx": "Napoles et al\\.,? 2012", "shortCiteRegEx": "Napoles et al\\.", "year": 2012}, {"title": "Minimum error rate training in statistical machine translation", "author": ["Franz Josef Och."], "venue": "Proceedings of the 41st Annual Meeting on Association for Computational Linguistics-Volume 1, pages 160\u2013167. Association for Computational Linguistics.", "citeRegEx": "Och.,? 2003", "shortCiteRegEx": "Och.", "year": 2003}, {"title": "Duc in context", "author": ["Paul Over", "Hoa Dang", "Donna Harman."], "venue": "Information Processing & Management, 43(6):1506\u20131520.", "citeRegEx": "Over et al\\.,? 2007", "shortCiteRegEx": "Over et al\\.", "year": 2007}, {"title": "Sequence to sequence learning with neural networks", "author": ["Ilya Sutskever", "Oriol Vinyals", "Quoc VV Le."], "venue": "Advances in Neural Information Processing Systems, pages 3104\u20133112.", "citeRegEx": "Sutskever et al\\.,? 2014", "shortCiteRegEx": "Sutskever et al\\.", "year": 2014}, {"title": "Generation with quasi-synchronous grammar", "author": ["Kristian Woodsend", "Yansong Feng", "Mirella Lapata."], "venue": "Proceedings of the 2010 conference on empirical methods in natural language processing, pages 513\u2013 523. Association for Computational Linguistics.", "citeRegEx": "Woodsend et al\\.,? 2010", "shortCiteRegEx": "Woodsend et al\\.", "year": 2010}, {"title": "Sentence simplification by monolingual machine translation", "author": ["Sander Wubben", "Antal Van Den Bosch", "Emiel Krahmer."], "venue": "Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics: Long Papers-Volume 1, pages", "citeRegEx": "Wubben et al\\.,? 2012", "shortCiteRegEx": "Wubben et al\\.", "year": 2012}, {"title": "Z-mert: A fully configurable open source tool for minimum error rate training of machine translation systems", "author": ["Omar Zaidan."], "venue": "The Prague Bulletin of Mathematical Linguistics, 91:79\u201388.", "citeRegEx": "Zaidan.,? 2009", "shortCiteRegEx": "Zaidan.", "year": 2009}, {"title": "Bbn/umd at duc-2004: Topiary", "author": ["David Zajic", "Bonnie Dorr", "Richard Schwartz."], "venue": "Proceedings of the HLT-NAACL 2004 Document Understanding Workshop, Boston, pages 112\u2013119.", "citeRegEx": "Zajic et al\\.,? 2004", "shortCiteRegEx": "Zajic et al\\.", "year": 2004}], "referenceMentions": [{"referenceID": 11, "context": "While much work on this task has looked at deletion-based sentence compression techniques (Knight and Marcu (2002), among many others), studies of human summarizers show that it is common to apply various other operations while condensing, such as paraphrasing, generalization, and reordering (Jing, 2002).", "startOffset": 293, "endOffset": 305}, {"referenceID": 7, "context": "Past work has modeled this abstractive summarization problem either using linguistically-inspired constraints (Dorr et al., 2003; Zajic et al., 2004) or with syntactic transformations of the input text (Cohn and Figure 1: Example output of the attention-based summarization (ABS) system.", "startOffset": 110, "endOffset": 149}, {"referenceID": 28, "context": "Past work has modeled this abstractive summarization problem either using linguistically-inspired constraints (Dorr et al., 2003; Zajic et al., 2004) or with syntactic transformations of the input text (Cohn and Figure 1: Example output of the attention-based summarization (ABS) system.", "startOffset": 110, "endOffset": 149}, {"referenceID": 11, "context": "While much work on this task has looked at deletion-based sentence compression techniques (Knight and Marcu (2002), among many others), studies of human summarizers show that it is common to apply various other operations while condensing, such as paraphrasing, generalization, and reordering (Jing, 2002).", "startOffset": 91, "endOffset": 115}, {"referenceID": 0, "context": "Our encoder is modeled off of the attention-based encoder of Bahdanau et al. (2014) in that it learns a latent soft alignment over the input text to help inform the summary (as shown in Figure 1).", "startOffset": 61, "endOffset": 84}, {"referenceID": 11, "context": "Note that the summary generated is abstractive which makes it possible to generalize (russian defense minister to russia) and paraphrase (for combating to against), in addition to compressing (dropping the creation of), see Jing (2002) for a survey of these editing operations.", "startOffset": 224, "endOffset": 236}, {"referenceID": 9, "context": "1 This allows us to train a summarization model for headline-generation on a corpus of article pairs from Gigaword (Graff et al., 2003) consisting of around 4 million articles.", "startOffset": 115, "endOffset": 135}, {"referenceID": 8, "context": "In contrast to a large-scale sentence compression systems like Filippova and Altun (2013) which require monotonic aligned compressions.", "startOffset": 63, "endOffset": 90}, {"referenceID": 1, "context": "Past work on summarization and compression has used a noisy-channel approach to split and independently estimate a language model and a conditional summarization model (Banko et al., 2000; Knight and Marcu, 2002; Daum\u00e9 III and Marcu, 2002), i.", "startOffset": 168, "endOffset": 239}, {"referenceID": 13, "context": "Past work on summarization and compression has used a noisy-channel approach to split and independently estimate a language model and a conditional summarization model (Banko et al., 2000; Knight and Marcu, 2002; Daum\u00e9 III and Marcu, 2002), i.", "startOffset": 168, "endOffset": 239}, {"referenceID": 2, "context": "The language model is adapted from a standard feed-forward neural network language model (NNLM), particularly the class of NNLMs described by Bengio et al. (2003). The full model is:", "startOffset": 142, "endOffset": 163}, {"referenceID": 0, "context": "A similar issue in machine translation inspired Bahdanau et al. (2014) to instead utilize an attention-based contextual encoder that constructs a representation based on the generation context.", "startOffset": 48, "endOffset": 71}, {"referenceID": 0, "context": "To be explicit, compared to Bahdanau et al. (2014) our model uses an NNLM instead of a target-side LSTM, source-side windowed averaging instead of a source-side bidirectional RNN, and a weighted dot-product for alignment instead of an alignment MLP.", "startOffset": 28, "endOffset": 51}, {"referenceID": 24, "context": "While decoders of this form can produce very bad approximations, they have shown to be relatively effective and fast for neural MT models (Sutskever et al., 2014).", "startOffset": 138, "endOffset": 162}, {"referenceID": 16, "context": "Similar issues have also been observed in neural translation models particularly in terms of translating rare words (Luong et al., 2014).", "startOffset": 116, "endOffset": 136}, {"referenceID": 22, "context": "We follow the statistical machine translation setup and use minimumerror rate training (MERT) to tune for the summarization metric on tuning data (Och, 2003).", "startOffset": 146, "endOffset": 157}, {"referenceID": 1, "context": "Our work is similar to early work of Banko et al. (2000) who developed a statistical machine translation-inspired approach for this task using a corpus of headline-article pairs.", "startOffset": 37, "endOffset": 57}, {"referenceID": 23, "context": "This task was standardized around the DUC2003 and DUC-2004 competitions (Over et al., 2007).", "startOffset": 72, "endOffset": 91}, {"referenceID": 28, "context": "The TOPIARY system (Zajic et al., 2004) performed the best in this task, and is described in detail in the next section.", "startOffset": 19, "endOffset": 39}, {"referenceID": 5, "context": "More recently, Cohn and Lapata (2008) give a compression method which allows for more arbitrary transformations.", "startOffset": 15, "endOffset": 38}, {"referenceID": 25, "context": "Woodsend et al. (2010) propose a quasi-synchronous grammar approach utilizing both context-free parses and dependency parses to produce legible summaries.", "startOffset": 0, "endOffset": 23}, {"referenceID": 1, "context": "In addition to Banko et al. (2000) there has been some work using statistical machine translation directly for abstractive summary.", "startOffset": 15, "endOffset": 35}, {"referenceID": 1, "context": "In addition to Banko et al. (2000) there has been some work using statistical machine translation directly for abstractive summary. Wubben et al. (2012) utilize MOSES directly as a method for text simplification.", "startOffset": 15, "endOffset": 153}, {"referenceID": 8, "context": "Recently Filippova and Altun (2013) developed a strictly extractive system that is trained on a relatively large corpora (250K sentences) of articletitle pairs.", "startOffset": 9, "endOffset": 36}, {"referenceID": 2, "context": "The core of our model is a NNLM based on that of Bengio et al. (2003).", "startOffset": 49, "endOffset": 70}, {"referenceID": 12, "context": "Recently, there have been several papers about models for machine translation (Kalchbrenner and Blunsom, 2013; Cho et al., 2014; Sutskever et al., 2014).", "startOffset": 78, "endOffset": 152}, {"referenceID": 3, "context": "Recently, there have been several papers about models for machine translation (Kalchbrenner and Blunsom, 2013; Cho et al., 2014; Sutskever et al., 2014).", "startOffset": 78, "endOffset": 152}, {"referenceID": 24, "context": "Recently, there have been several papers about models for machine translation (Kalchbrenner and Blunsom, 2013; Cho et al., 2014; Sutskever et al., 2014).", "startOffset": 78, "endOffset": 152}, {"referenceID": 0, "context": "Of these our model is most closely related to the attention-based model of Bahdanau et al. (2014), which explicitly finds a soft alignment between the current position and the input source.", "startOffset": 75, "endOffset": 98}, {"referenceID": 23, "context": "The standard sentence summarization evaluation set is associated with the DUC-2003 and DUC2004 shared tasks (Over et al., 2007).", "startOffset": 108, "endOffset": 127}, {"referenceID": 15, "context": "For this shared task, systems were entered and evaluated using several variants of the recalloriented ROUGE metric (Lin, 2004).", "startOffset": 115, "endOffset": 126}, {"referenceID": 9, "context": "For training data for both tasks, we utilize the annotated Gigaword data set (Graff et al., 2003; Napoles et al., 2012), which consists of standard Gigaword, preprocessed with Stanford CoreNLP tools (Manning et al.", "startOffset": 77, "endOffset": 119}, {"referenceID": 21, "context": "For training data for both tasks, we utilize the annotated Gigaword data set (Graff et al., 2003; Napoles et al., 2012), which consists of standard Gigaword, preprocessed with Stanford CoreNLP tools (Manning et al.", "startOffset": 77, "endOffset": 119}, {"referenceID": 18, "context": ", 2012), which consists of standard Gigaword, preprocessed with Stanford CoreNLP tools (Manning et al., 2014).", "startOffset": 87, "endOffset": 109}, {"referenceID": 28, "context": "We also report the winning system on this shared task, TOPIARY (Zajic et al., 2004).", "startOffset": 63, "endOffset": 83}, {"referenceID": 7, "context": "TOPIARY merges a compression system using linguisticallymotivated transformations of the input (Dorr et al., 2003) with an unsupervised topic detection (UTD) algorithm that appends key phrases from the full article onto the compressed output.", "startOffset": 95, "endOffset": 114}, {"referenceID": 7, "context": "TOPIARY merges a compression system using linguisticallymotivated transformations of the input (Dorr et al., 2003) with an unsupervised topic detection (UTD) algorithm that appends key phrases from the full article onto the compressed output. Woodsend et al. (2010) (described above) also report results on the DUC dataset.", "startOffset": 96, "endOffset": 266}, {"referenceID": 4, "context": "The first is a sentence compression baseline COMPRESS (Clarke and Lapata, 2008).", "startOffset": 54, "endOffset": 79}, {"referenceID": 15, "context": "To control for memorizing titles from training, we implement an information retrieval baseline, IR. This baseline indexes the training set, and gives the title for the article with highest BM-25 match to the input (see Manning et al. (2008)).", "startOffset": 90, "endOffset": 241}, {"referenceID": 14, "context": "Finally, we use a phrase-based statistical machine translation system trained on Gigaword to produce summaries, MOSES+ (Koehn et al., 2007).", "startOffset": 119, "endOffset": 139}, {"referenceID": 10, "context": "After each epoch, we renormalize the embedding tables (Hinton et al., 2012).", "startOffset": 54, "endOffset": 75}, {"referenceID": 27, "context": "For this step we use Z-MERT (Zaidan, 2009).", "startOffset": 28, "endOffset": 42}], "year": 2017, "abstractText": "Summarization based on text extraction is inherently limited, but generation-style abstractive methods have proven challenging to build. In this work, we propose a fully data-driven approach to abstractive sentence summarization. Our method utilizes a local attention-based model that generates each word of the summary conditioned on the input sentence. While the model is structurally simple, it can easily be trained end-to-end and scales to a large amount of training data. The model shows significant performance gains on the DUC-2004 shared task compared with several strong baselines.", "creator": "TeX"}}}