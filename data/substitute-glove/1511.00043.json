{"id": "1511.00043", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "30-Oct-2015", "title": "Learning Adversary Behavior in Security Games: A PAC Model Perspective", "abstract": "Recent applications of Stackelberg Security Games (SSG ), close green threats may primary crime, rarely employed laptop learning kinds even learn and fail machiavellian behaviours easier available indicating if defender - backer interaction. We confront to for steps most therefore learning from response function particular the hegemony have initiating same informal researchers 's the learnability seeking of and approach. We 'll few serves contributions: (1) simply implementation make conventional usable started the PAC perspective outlines, (5) we analyze 's PAC learnability where over notable parametric SUQR ideal of extends rationality been (29) sure process given later activities - rule-based serve, response i.e. for SSGs have analyze its PAC learnability. Finally, we merely biological it earlier along obviously united yet of the develop methods.", "histories": [["v1", "Fri, 30 Oct 2015 22:27:25 GMT  (4146kb,D)", "http://arxiv.org/abs/1511.00043v1", null], ["v2", "Wed, 18 Nov 2015 17:51:17 GMT  (3598kb,D)", "http://arxiv.org/abs/1511.00043v2", null], ["v3", "Fri, 20 Nov 2015 08:34:43 GMT  (2999kb,D)", "http://arxiv.org/abs/1511.00043v3", null]], "reviews": [], "SUBJECTS": "cs.AI cs.GT cs.LG", "authors": ["arunesh sinha", "debarun kar", "milind tambe"], "accepted": false, "id": "1511.00043"}, "pdf": {"name": "1511.00043.pdf", "metadata": {"source": "CRF", "title": "Learning Adversary Behavior in Security Games: A PAC Model Perspective", "authors": [], "emails": [], "sections": [{"heading": "1 Introduction", "text": "Stackelberg Security Games (SSGs) is arguably the best example of application of the Stackelberg game model in the real world. Indeed, a slew of successful deployed applications (Tambe 2011) (LAX airport, US air marshal) and extensive research on related topics (Basilico et al.(2009), Korzhyk et al. (2010), Gan et al. (2015)) provide evidence about the generality of the SSG framework. More recently, new application domains of SSGs, from green crime to urban crime, are accompanied by significant amounts of past data of recorded defender strategies and adversary reactions; this has enabled learning adversary behavior from such data: Zhang et al.(2015), Yang et al. (2014). Also, analysis of these datasets and human subject experiment studies (Nguyen et al. 2013) have revealed that modeling the bounded rationality of the adversary enables the defender to further optimize her allocation of limited security resources.\nWhile standard learning techniques have been used to provide prediction results on learned adversary models, a formal study about the learning task at hand is lacking. Such a study could answer several important questions that arise in practice, for example, (1) How much more data would be required if we want to improve prediction accuracy, say from 0.7 to 0.9? (2) What worst utility bound could be provided when the optimal defender strategy is computed using the learned adversary model?\nIn this paper, we initiate a theoretical study of the learning guarantees in an SSG1 setting. We adopt the framework in which the defender first learns the response function of the adversary and then optimizes against the learned response. Thus, unlike past work on learning in SSGs (see related work) where the reasoning about the response happens through payoff and rationality, we treat the response of the bounded rational adversary as the object that can be learned.\nOur first contribution is using the Probably Approximately Correct (PAC) model (Kearns and Vazirani 1994; Anthony and Bartlett 2009) to formulate the learning problem at hand. While PAC learning is fairly standard for classifiers and real valued functions (i.e., regression), we appeal to the framework of (Haussler 1992) to study the PAC learnability of the real vector valued response function in SSGs.\nOur second contribution is an analysis of the Subjective Utility Quantal Response (SUQR) model (Nguyen et al. 2013): the most popular bounded rationality model used in SSGs, which posits a parametrized response function. For this model, we address both questions raised earlier by deriving the sample complexity for PAC learnability and providing worst case utility bounds under certain assumptions.\nOur third contribution includes specifying the first nonparametric Lipschitz (NPL) class of response functions for SSGs, where the only restriction on NPL functions is Lipschitzness. We provide a novel learning technique for NPL, and the sample complexity and utility bounds. This approach makes very little assumptions about the response function, enabling the learning of a multitude of behavior albeit at the cost of higher sample complexity.\nWe also conduct experiments with real-world poaching data from the Queen Elizabeth National Park (QENP) in Uganda (obtained from (Nguyen et al. 2015)) and data collected from human subject experiments. The experimental results support the theoretical rate of growth of the number of samples for different techniques. The NPL approach, while computationally slow, outperforms SUQR on realworld poaching data. Finally, our work opens up a number of exciting research directions, such as studying bounded rationality in active learning setting and real-world application of non-parametric models. (All proofs are in the Appendix. In text, we provide intuitive steps leading to the proofs.)\n1Our theory results apply to Stackelberg games also. See Appendix.\nar X\niv :1\n51 1.\n00 04\n3v 1\n[ cs\n.A I]\n3 0\nO ct\n2 01\n5\nRelated Work: Learning in SSGs with rational adversaries has been studied in two recent papers (Blum, Haghtalab, and Procaccia 2014; Balcan et al. 2015), and in Stackelberg games by Letchford et al. (2009) and Marecki et al. (2012). Our work differs as we study bounded rational adversaries in a passive learning scenario. Also, our focus on SSGs differentiates us from recent work on PAC learnability in co-operative games (Balcan, Procaccia, and Zick 2015). Also, our work is orthogonal to adversarial learning (Vorobeychik and Li 2014), which studies game theoretic models of an adversary attacking a learning algorithm.\nPAC learning has a very rich and extensive body of work (Anthony and Bartlett 2009). We use the framework of (Haussler 1992). For the parametric case, we derive sharp sample complexity bounds based on covering numbers using our techniques rather than using the standard technique of pseudo-dimension (Pollard 1984) or fat shattering dimension (Anthony and Bartlett 2009). For the NPL case we use results from (Tikhomirov and Kolmogorov 1993); this has also been used in (Luxburg and Bousquet 2004)."}, {"heading": "2 SSG Preliminaries", "text": "This section introduces the background and preliminary notations for SSGs. A summary of notations used in this paper is presented in Table 1. A SSG is a two player Stackelberg game between a defender (leader) and an adversary (follower) (Paruchuri et al. 2008). The defender wishes to protect T targets with a limited number of security resources K (K << T ). For ease of presentation, we restrict ourselves to the scenario with no scheduling constraints (see Korzhyk et al. (2010)). The defender\u2019s pure strategy is to allocate each resource to a target. A defender\u2019s mixed-strategy x\u0303 (\u2200j \u2208 P. x\u0303j \u2208 [0, 1], \u2211P j=1 x\u0303j = 1) is then defined as a probability distribution over the set of all possible pure strategies P . An equivalent description (see Korzhyk et al. (2010)) of these mixed strategies are coverage probabilities over the set of targets: x (\u2200i \u2208 T. xi \u2208 [0, 1], \u2211T i=1 xi \u2264 K). We refer to this latter description as the mixed strategy of the defender. A pure strategy of the adversary is defined as attacking a single target. The adversary\u2019s mixed strategy is then a categorical distribution over the set of targets. Thus, it can be expressed as parameters qi (i \u2208 T ) of a categorical distribution such that 0 \u2264 qi \u2264 1 and \u2211 i qi = 1. The adversary\u2019s response to the defender\u2019s mixed strategy is given by a function q : X \u2192 Q, where Q is the space of all mixed strategies of the adversary. The matrix U specifies the payoffs of the defender, and her expected utility is xTUq(x) when she plays a mixed strategy x \u2208 X .\nBounded Rationality Models: We discuss the SUQR model and its representation for the analysis in this paper below. Building on prior work on quantal response (McFadden 1976), SUQR (Nguyen et al. 2013) states that given n actions, a human player plays action i with probability qi \u221d ew\u00b7v , where v denote a vector of feature values for choice i and w denotes the weight parameters for these features. The model is equivalent to conditional logistic regression (McFadden 1973). The features are specific to the domain, e.g., in case of SSG applications, the set of features include the\ncoverage probability xi, the reward Ri and penalty Pi of target i. Since, other than the coverage x, remaining features are fixed in real world data, we assume a target-specific feature ci (which may be a linear combination of rewards and penalties) and analyze the following generalized form of SUQR with parameters w1 and ci\u2019s: qi(x) \u221d ew1xi+ci .2\nAs \u2211T i=1 qi(x) = 1, we have qi(x) = ew1xi+ci\u2211T j=1 e w1xj+cj . Equivalent Alternate Representation: For ease of mathematical proofs, using standard techniques in logistic regression, we take qT \u221d e0, and hence, qi \u221d ew1(xi\u2212xT )+(ci\u2212cT ). To shorten notation, let ciT = ci \u2212 cT , xiT = xi \u2212 xT . By multiplying the numerator and denominator by ew1xT+cT , it can be verified that e w1xiT+ciT\ne0+ \u2211T\u22121 j=1 e w1xjT+cjT = e w1xi+ci\u2211T j=1 e w1xj+cj ."}, {"heading": "3 Learning Framework for SSG", "text": "First, we introduce some notations: given two n-dimensional points o and o\u2032, the lp distance dlp between the two points is: dlp(o, o \u2032) = ||o\u2212o\u2032||p = ( \u2211n i=1 |oi\u2212o\u2032i|p)1/p. In particular, dl\u221e(o, o \u2032) = ||o \u2212 o\u2032||\u221e = maxi |oi \u2212 o\u2032i|. Also, dl\u0304p = dlp/n. KL denotes the Kullback-Leibler divergence. We use the learning framework of Haussler (1992), which includes an instance space X and outcome space Y . In our context, X is same as the space of defender mixed strategies x \u2208 X . Outcome space Y is defined as the space of all possible categorical choices over a set of T targets (i.e., choice of target to attack) for the adversary: ti = \u3008t1i , . . . , tTi \u3009 \u2208 Y (tji = 1 for j = i, otherwise 0). Thus, Y has T elements. To give an example, given three targets T1, T2 and T3, Y = {t1, t2, t3} = {\u30081, 0, 0\u3009, \u30080, 1, 0\u3009, \u30080, 0, 1\u3009}, where \u30081, 0, 0\u3009 denotes that T1 was attacked while T2 and T3 were not attacked, and so on. The training data are samples drawn from Z = X \u00d7 Y using an unknown distribution, say given by density p(x, y), i.e., each training data point (x, y) denotes the adversary\u2019s response y \u2208 Y (attack on a target) to a particular defender mixed strategy x \u2208 X . The density p also determines the true attacker behavior qp(x); qp(x) denotes the vector of parameters \u3008qp1(x), . . . , q p T (x)\u3009, where\n2This general form is harder to analyze than the standard SUQR form in which the exponent function (function of xi, Ri, Pi) for all qi is same: w1xi+w2Ri+w3Pi. For completeness, we derive the results for the standard SUQR form in the Appendix.\nqpi (x) = p(ti/x), of the conditional (categorical) distribution over Y given x, i.e., the parameters of the true distribution from which attacks are sampled for a given x.\nHaussler (1992) also defines a decision space A, a space of hypothesis (functions) H with elements h : X \u2192 A and a loss function l : Y \u00d7 A \u2192 R. The hypothesis h outputs values in A that enables computing (probabilistic) predictions of the actual outcome. The loss function l captures the loss when the real outcome is y \u2208 Y and the prediction of possible outcomes happens using a \u2208 A.\nAs a concrete example, for the parametric representation of generalized SUQR in the previous section and considering our 3-target example above, H contains vector valued functions with (T \u2212 1) = 2 components that form the exponents of the numerator of prediction probabilities qi, i.e., H contains functions of the form: \u3008w1(x1\u2212x3)+c13, w1(x2\u2212 x3) + c23\u3009; \u2200x \u2208 X . Also, A is the range of the functions in H, i.e., A \u2282 R2. Then, given h(x) = \u3008a1, a2\u3009, the prediction probabilities qh1 (x), q h 2 (x), q h 3 (x) is given by qhi (x) = eai\n1+ea1+ea2 (assume a3 = 0). PAC learnability: The learning algorithm aims to learn a h \u2208 H that minimizes the true risk of using the hypothesis h. The true risk rh(p) of a particular hypothesis (predictor) h, given density function p(x, y) over Z = X \u00d7 Y , is the expected loss of predicting h(x) when the true outcome is y:\nrh(p) = \u222b p(x, y)l(y, h(x)) dx dy\nOf course, as p is unknown the true risk cannot be computed. However, given (enough) samples from p, the true risk can be estimated by the empirical risk. The empirical risk r\u0302h(~z), where ~z is a sequence ofm training samples from Z, is defined as: r\u0302h(~z) = 1/m \u2211m i=1 l(yi, h(xi)). Let h\n\u2217 be the hypothesis that minimizes the true risk, i.e., rh\u2217(p) = inf{rh(p) | h \u2208 H} and let h\u0302\u2217 be the hypothesis that minimizes the empirical risk, i.e., r\u0302h\u0302\u2217(~z) = inf{r\u0302h(~z) | h \u2208 H}. The following is the well-known PAC learning result (Anthony and Bartlett 2009) for any empirical risk minimizing (ERM) algorithm A yielding hypothesis A(~z):\nIf Pr(\u2200h \u2208 H.|r\u0302h(~z)\u2212 rh(p)| < \u03b1/3) > 1\u2212 \u03b4/2 and Pr(|r\u0302A(~z)(~z)\u2212 r\u0302h\u0302\u2217(~z)| < \u03b1/3) > 1\u2212 \u03b4/2\nthen Pr(|rA(~z)(p)\u2212 rh\u2217(p)| < \u03b1) > 1\u2212 \u03b4\nThe final result states that output A(~z) has true risk \u03b1-close to the lowest true risk in H attained by h\u2217 with high probability 1\u2212\u03b4 over the choice of training samples. The first precondition states that it must be the case that for all h \u2208 H the difference between empirical risk and true risk is \u03b13 - close with high probability 1\u2212 \u03b42 . The second pre-condition states that the output A(~z) of the ERM algorithm A should have empirical risk \u03b13 -close to the lowest empirical risk of h\u0302\u2217 with high probability 1 \u2212 \u03b42 . In this work, our empirical risk minimizing algorithms find h\u0302\u2217 exactly (upto precision of convex solvers, see Section 5), thus, satisfying the second pre-condition; hence, we will focus more on the first pre-condition. As the empirical risk estimate gets better with increasing samples, a minimum number of samples are required to ensure that the first pre-condition holds (see Theorem 1). A hypothesis class H is called (\u03b1, \u03b4)-PAC learnable\nif there exists an ERM algorithm A such that H and A satisfy the two pre-conditions.\nModeling security games: Having given an example for generalized SUQR, we systematically model learning of adversary behavior in SSGs using the PAC framework for any hypothesis class H. We assume certain properties of the functions h \u2208 H that we present below. We assume that the vector valued function h \u2208 H takes the form\nh(x) = \u3008h1(x), . . . , hT\u22121(x)\u3009.\nThus, A is the product space A1\u00d7 . . . , AT\u22121. Each hi(x) is assumed to take values between [\u2212M2 , M 2 ], where M >> 1, which implies Ai = [\u2212M2 , M 2 ]. The prediction probabilities induced by any h is qh(x) = \u3008qh1 (x), . . . , qhT (x)\u3009, where qhi (x) = ehi(x) 1+ \u2211 i e hi(x)\n(assume hT (x) = 0). Parametric H: In this approach we model generalized SUQR. Generalizing from the three target concrete example, the parametric functions h \u2208 H take the form where each component function is hi(x) = w1(xi \u2212 xT ) + ciT .\nNon-parametric Lipschitz (NPL)H: For this case the only restriction we impose on functions h \u2208 H is that each component function hi is L-Lipschitz where L \u2264 K\u0302, for given and fixed constant K\u0302. We show later (Lemma 7) that this implies that qh is Lipschitz also.\nNext, given the stochastic nature of the adversary\u2019s attacks, we use a loss function (same for parametric and NPL) such that minimizing the empirical risk is equivalent to maximizing the likelihood of seeing the attack data. The loss function l : Y \u00d7A\u2192 R for actual outcome ti is defined as\nl(ti, a) = \u2212 log ( eai/1 + \u2211T\u22121 j=1 e aj ) . (1)\nIt can be readily inferred that minimizing the empirical risk (recall r\u0302h(~z) = 1/m \u2211m i=1 l(yi, h(xi))) is equivalent to maximizing the log likelihood of the training data."}, {"heading": "4 Sample Complexity", "text": "In this section we derive the sample complexity for the parametric and NPL case. First, we present a general result about sample complexity bounds for anyH, given our loss l. This result relies on sample complexity results in (Haussler 1992). The bound depends on the capacity C ofH, which we define after the theorem. The bound also assumes an ERM algorithm which we present for our models in Section 5.\nTheorem 1. Assume that the hypothesis spaceH is permissible3. Let the data be generated by m independent draws from X \u00d7 Y according to p. Then, assuming existence of an ERM algorithm and given our loss l defined in Eq. 1, the least m required to ensure (\u03b1, \u03b4)-PAC learnability is (recall dl\u03041 is average l1 distance)\n(576M2/\u03b12) ( log(1/\u03b4) + log(8C(\u03b1/96T,H, dl\u03041) )\nAll terms in the above sample complexity are known, except for the capacity C(\u03b1/96T,H, dl\u03041). The rest of this\n3As noted in Haussler: \u201cThis is a measurability condition defined in Pollard (1984) which need not concern us in practice.\u201d\nsection will focus on computing capacity for both the parametric and NPL hypothesis space. Next, we define covering number N of function spaces, which leads to a definition of capacity C. Let d be a pseudo metric for the set H. For any > 0, an -cover for H is a finite set F \u2286 H such that for any h \u2208 H there is a f \u2208 F with d(f, h) \u2264 , i.e., any element in H is at least -close to some element of the cover F . The covering number N ( ,H, d) denotes the size of the smallest -cover for set H (for the pseudo metric d). We now proceed to define a pseudo metric dL1(P,d) on H with respect to any probability measure P on X and any given pseudo-metric d on A.\ndL1(P,d)(f, g) = \u222b X d(f(x), g(x)) dP (x) \u2200f, g \u2208 H\nThen, N ( ,H, dL1(P,d)) is the covering number for H for the pseudo metric dL1(P,d). However, to be more general, the capacity of function spaces provides a \u201cdistribution-free\u201d notion of covering number. The capacity C( ,H, d) is:\nC( ,H, d) = supP {N ( ,H, dL1(P,d))}\nBound on capacity: We need to bound C( ,H, dl\u03041) in order to use the result of Theorem 1 to obtain sample complexity. Haussler(1992) provides an useful technique to bound the capacity for vector valued function space H. Given k functions spaces H1, . . . ,Hk with functions from X to Ai, they define the free product function space \u00d7iHi with functions from X to A = A1 \u00d7 . . . Ak as \u00d7iHi = {\u3008h1, . . . , hk\u3009 | hi \u2208 Hi}, where \u3008h1, . . . , hk\u3009(x) = \u3008h1(x), . . . , hk(x)\u3009. They show that:\nC( ,\u00d7iHi, dl\u03041) < \u220fk i=1 C( ,Hi, dl1) (2)\nParametric case: Recall that the hypothesis function h has T \u2212 1 component functions w1xiT + ciT . However, the same weight w1 in all component functions implies that H is not a free product of component function spaces, hence we cannot use Eq. 2. Thus, we decompose H into a direct sum of two functions spaces, each of which capture w1xiT and ciT respectively. Thus, we define the direct-sum semifree product of functions spaces G \u2282 \u00d7iGi and \u00d7iFi as G\u2295\u00d7iFi = {\u3008g1+f1, . . . , gT\u22121+fT\u22121\u3009 | \u3008g1, . . . , gT\u22121\u3009 \u2208 G, \u3008f1, . . . , fT\u22121\u3009 \u2208 \u00d7iFi}. We prove the following: Lemma 1. IfH is a direct-sum semi-free product G \u2295\u00d7iFi C( ,H, dl\u03041) < C( /2,G, dl\u03041) \u220fT\u22121 i=1 C( /2,Fi, dl1)\nFor our case, Gi contains functions of the form wxiT (w taking different values for different gi \u2208 Gi). A function \u3008g1, . . . , gT\u22121\u3009 \u2208 \u00d7iGi can have different weights for each component gi, and thus we consider the subset G = {\u3008g1, . . . , gT\u22121\u3009 | \u3008g1, . . . , gT\u22121\u3009 \u2208 \u00d7iGi, same coefficient w for all gi}. Fi contains constant valued functions of the form ciT (ciT different for different functions fi \u2208 Fi). Then, H = G \u2295 \u00d7iFi. We assume the range of all these functions (gi, fi) to be [\u2212M4 , M 4 ] (so that their sum hi lies in [\u2212M2 , M 2 ]). First, we prove that Lemma 2. C( ,G, dl\u03041) \u2264M/4 and C( ,Fi, dl1) \u2264M/4 . Then, plugging the result of Lemma 2 (substituting /2 for ) into Lemma 1 we obtain C( ,H, dl\u03041) < (M/2 ) T . Having bounded C( ,H, dl\u03041), we use Theorem 1 to obtain\nTheorem 2. The generalized SUQR parametric hypothesis classH is (\u03b1, \u03b4)-PAC learnable with sample complexity4\nO ( (1/\u03b12)(log(1/\u03b4) + T log(T/\u03b1)) ) The above result shows a modest T log T growth of sample complexity with increasing targets, suggesting the parametric approach is suited for low amount of data; however, the simplicity of the functions captured by this approach (compared to NPL) results in lower accuracy with increasing data, as shown later in our experiments on real-world data.\nNPL case: Consider the functions spaces Hi consisting of real valued L-Lipschitz functions where L \u2264 K\u0302. Recall that H for the NPL case is defined such that each hi is LLipschitz where L \u2264 K\u0302. Thus, H = \u00d7iHi. Then, using Equation 2: C( ,H, dl\u03041) \u2264 \u220fT\u22121 i=1 C( ,Hi, dl1).\nNext, our task is to bound C( ,Hi, dl1). Consider the sup-distance metric between real valued functions: dl\u221e(hi, h \u2032 i) = supX |hi(x) \u2212 h\u2032i(x)| for hi, h\u2032i \u2208 Hi. Note that dl\u221e is independent of P , and for all functions hi, h \u2032 i and any P , dL1(P,dl1 )(hi, h \u2032 i) \u2264 dl\u221e(hi, h\u2032i). Thus, we infer (Haussler 1992) that for all P , N ( ,Hi, dL1(P,dl1 )) \u2264 N ( ,Hi, dl\u221e) and then taking sup over P (recall C( ,Hi, dl1) = supP {N ( ,Hi, dL1(P,dl1 ))}) we get\nC( ,Hi, dl1) \u2264 N ( ,Hi, dl\u221e) (3)\nWe bound N ( ,Hi, dl\u221e) in terms of the covering number for X (recall X = {x | x \u2208 [0, 1]T , \u2211 i xi \u2264 K}) using results from (Tikhomirov and Kolmogorov 1993).\nLemma 3. N ( ,Hi, dl\u221e) \u2264 ( 2 \u2308 M \u2309 + 1 ) \u00b7 2N ( 2K\u0302 ,X,dl\u221e )\nTo use the above result, we still need to bound N ( ,X, dl\u221e). We do so by combining two remarkable results about Eulerian number \u2329 T k \u232a (Knuth 1998) (k integral). \u2022 Laplace (1886) (Stanley 1977) discovered that the volume of Xk = {x|x \u2208 [0, 1]T , k \u2212 1 \u2264 \u2211 i xi \u2264 k}\nis \u2329 T k \u232a /T !. Thus, if XK = \u222aKk=1Xk, then vol(XK) =\u2211K\nk=1 vol(Xk) = \u2211K k=1 \u2329 T k \u232a /T !.\n\u2022 Also, it is known (Tanny 1973) that \u2329 T k \u232a /T ! = FT (k) \u2212\nFT (k \u2212 1), where FT (x) is the CDF of the probability distribution of ST = U1 + . . . + UT and each Ui is a uniform random variable on [0, 1).\nCombining these results, vol(XK+1) = FT (K + 1). The volume of a l\u221e ball of radius (l\u221e ball is a hypercube) is (2 )T (Wang 2005). The number of balls that fit tightly (aligned with the axes) and completely inside XK+1 is bounded by FT (K + 1)/(2 )T . Since << 1, these balls cover XK = X completely and the tight packing ensures that the center of the balls forms an -cover for X . Then, bounding FT (K + 1) using Bernstein\u2019s inequality we get:\nLemma 4. For K + 1 \u2264 0.5T (recall K << T )\nN ( ,X, dl\u221e) \u2264 e \u22123T (0.5\u2212(K+1)/T )2 1\u2212(K+1)/T /(2 )T\n4In the Appendix, we show that for standard SUQR (simpler than our generalized SUQR) the sample size is O ( 1 \u03b12 (log 1 \u03b4 + log T \u03b1 ) )\nPlugging the above result into Lemma 3 and then using that in Eq. 3, we bound C( ,Hi, dl1). Finally, Eq. 2 gives a bound on C( ,H, dl\u03041) that we use in Theorem 1 to obtain Theorem 3. The non-parametric hypothesis class H is a (\u03b1, \u03b4)-PAC learnable with sample complexity\nO ( (1/\u03b12)(log(1/\u03b4) + (TT+1/\u03b1T )) ) The above result shows that the sample complexity for NPL grows fast with T suggesting that NPL may not be the right approach to use when the number of targets is large."}, {"heading": "5 Empirical Risk Minimizer", "text": "As stated earlier, our loss function was designed so that empirical risk minimizing was same as maximizing log likelihood of data. Indeed, in the parametric case, the standard MLE approach can be used as is and has been used in literature. However, given no parameters, maximizing likelihood will provide values h(x) for mixed strategies x in the training data only. So we present a two step ERM algorithm for the NPL case. In the first step, we estimate the most likely value for hi(x) (for each i) for each x in the training data, ensuring that for any pair x, x\u2032 in the training data, |hi(x)\u2212hi(x\u2032)| \u2264 K\u0302||x\u2212x\u2032||1. In the second step, we construct hi with the least Lipschitz constant such that hi takes the values for the training data output by the first step.\nMore formally, assume the training data has s unique values for x in the training set and let these values be x1, . . . , xs. Further, let there be nj distinct data points against xj , i.e., nj attacks against mixed strategy xj . Denote by nj,i the number of attacks at each target i when xj was used. Let hij be the variable that stands for the estimate of value hi(xj); i \u2208 {1, . . . , T}, j \u2208 {1, . . . , s}. Fix hTj = 0 for all j. Then, probability of attack on target i against mixed strategy xj is given by qij = e\nhij\u2211 i e hij . Thus, the log\nlikelihood of the training data is \u2211s j=1 \u2211T i=1 nj,i log qij .\nLet Lip(K\u0302) denote the set of L-Lipschitz functions with L \u2264 K\u0302. Using our assumption that hi \u2208 Lip(K\u0302), the following optimization problem provides the most likely hij :\nmaxhij \u2211s j=1 \u2211T i=1 nj,i log\nehij\u2211 i e hij\nsubject to \u2200i, j, j\u2032, |hij \u2212 hij\u2032 | \u2264 4K\u0302||xj \u2212 xj \u2032 ||1\n\u2200i, j, \u2212M/2 \u2264 hij \u2264M/2\nGiven solution h\u2217ij to the above problem, we wish to construct the solution hi such that its Lipschitz constant (given by Khi ) is the lowest possible subject to hi taking the value h\u2217ij for x\nj . Such a construction provides the most smoothly varying solution given the training data, i.e., we do not assume any more sharp changes in the adversary response than what the training data provides.\nminhi\u2208Lip(K\u0302)Khi subject to \u2200i, j. hi(x j) = h\u2217ij (MinLip)\nThe above optimization is impractical to solve computationally as uncountably many constraints are required to relate Khi to hi, Fortunately, we obtain an analytical solution:\nLemma 5. The following is a solution for problem MinLip\nhi(x) = minj{h\u2217ij +K\u2217i ||x\u2212 xj ||1}\nwhere K\u2217i = maxj,j\u2032:j 6=j\u2032 |h\u2217ij \u2212 h\u2217ij\u2032 |/||xj \u2212 xj \u2032 ||1\nNote that hi(xj) = h\u2217ij . Thus, the value of hi(x) for a x not in the training set and close to xj is quite likely be the hi(x j) plus the scaled distance K\u2217i ||x\u2212 xj ||1."}, {"heading": "6 Utility Bounds", "text": "Next, we bound the difference between the optimal utility and the utility derived from planning using the learned h. The utility bound is same for the parametric and NPL case. First, we transform the PAC learning guarantee about the risk of output h to a bound on ||qp(x) \u2212 qh(x)||1: the difference between the true distribution qp and predicted distribution qh of attacks. As the PAC guarantee only bounds the risk between h and h\u2217, in order to relate qp and qh, the lemma below assumes a bounded KL divergence between qh \u2217\nand qp. Lemma 6. Assume E[KL(qp(x) || qh\u2217(x))] \u2264 \u2217. Given an ERM A with output h = A(~z) and guarantee Pr(|rh(p) \u2212 rh\u2217(p)| < \u03b1) > 1 \u2212 \u03b4, with prob. \u2265 1 \u2212 \u03b4 over training samples ~z we have\nPr(||qp(x)\u2212 qh(x)||1 \u2264 \u221a 2\u2206) \u2265 1\u2212\u2206\nwhere \u2206 = (\u03b1+ \u2217)1/3 and x is sampled using density p. Utility bound: Next, we provide an utility bound, given the above guarantee about learned h. Let the optimal strategy computed using h be x\u0303, i.e., x\u0303TUqh(x\u0303) \u2265 x\u2032TUqh(x\u2032) for all x\u2032. Let the true optimal mixed strategy of defender be x\u2217 (optimal with respect to qp(x)), i.e., the maximum defender\u2019s utility is x\u2217TUqp(x\u2217). LetB(x, ) denote the l1 ball of radius around x. We make the following assumptions: (1) hi is K\u0302-Lipschitz \u2200i and qp is K-Lipschitz in l1 norm, (2) \u2203 small such that Pr(x \u2208 B(x\u2217, )) > \u2206 over choice of x using p and (3) \u2203 small such that Pr(x \u2208 B(x\u0303, )) > \u2206 over choice of x using p. While the first assumption is mild, the last two assumptions for small means that the points x\u2217 and x\u0303 must not lie in low density regions of the distribution used to sample the training points. The following lemma relates assumption (1) to Lipschitzness of qh.\nLemma 7. If hi is K\u0302-Lipschitz then \u2200x, x\u2032 \u2208 X. ||qh(x) \u2212 qh(x\u2032)||1 \u2264 3K\u0302||x\u2212 x\u2032||1, i.e., qh(x) is 3K\u0302-Lipschitz.\nThen, we can prove the following: Theorem 4. Given above assumptions and the results of Lemma 6 and 7, with prob.\u2265 1\u2212\u03b4 over the training samples the expected utility x\u0303TUqh(x\u0303) for the learned h is at least\nx\u2217TUqp(x\u2217)\u2212 (K + 1) \u2212 2 \u221a 2\u2206\u2212 6K\u0302"}, {"heading": "7 Experimental Results", "text": "We show experimental results on two datasets: (i) real-world poaching data from QENP (obtained from (Nguyen et al. 2015)); (ii) data from human subjects experiments on AMT\n(obtained from (Kar et al. 2015)), to estimate prediction errors and the amount of data required to reduce the error for both the parametric and NPL learning settings. Also, we compare the NPL approach with the standard SUQR approach and show that the NPL approach, while computationally slow, outperforms SUQR for Uganda data. We compare with SUQR as it is widely used in literature; for completeness we also have experiments for the generalized SUQR model in the Appendix, for which the performance is in between the NPL and standard SUQR.\nFor each dataset, we conduct four experiments with 25%, 50%, 75% and 100% of the original data. We create 100 train-test splits in each of the four experiments per dataset. For each train-test split we compute the average prediction error \u03b1 (average difference between the log-likelihoods of predicted and actual attack probabilities). We report the 1\u2212\u03b4 percentile of these 100 \u03b1 values, e.g., reported \u03b1 = 2.09 for \u03b4 = 0.1 means that 90 of the 100 test splits have \u03b1 < 2.09.\nReal-World Poaching data: We first present results of our experiments with real-world poaching data. This dataset contained information about features such as ranger patrols and animal densities and the poachers\u2019 attacks (655 attacks) in response for 2012 at QENP. It is important to note that this data set is extremely noisy because of: (i) Missing observations: all the poaching events are not recorded because the limited number of rangers cannot patrol all the areas in this park all the time; (ii) Uncertain feature values: the animal density feature is also based on incomplete observations of animals; (iii) Uncertain defender strategy: the actual defender mixed strategy is unknown, and hence, we estimate the mixed strategies based on the provided patrol data.\nFirst, to provide a baseline for our error measures, we use the same coarse-grained prediction approach as reported by Nguyen (2015), in which the authors predict whether a target will be attacked or not. Their approach provides area under curve (of a ROC curve) value of 0.73, which is another view\nof our \u03b1, \u03b4 metric for the coarse grained approach. The results for coarse-grained predictions are shown in Figs. 1(a) and 1(b). Next, in the fine-grained prediction approach we predict the actual number of attacks on each target in our test set; these results are shown in Figs. 1(c) and 1(d).\nWe observe that: (i) \u03b1 decreases with increasing sample size at a rate proportional to 1\u221a\nm , where m is the number of\nsamples (for non-parametric case and fine-grained prediction, goodness-of-fit, i.e., r2=0.9) \u2014 this observation supports the relationship between \u03b1 andm shown in Theorem 3 and can be used to approximately infer the number of samples required to reduce the prediction error to a certain value, e.g., assuming we collect same number of samples (=655) per year, to reduce \u03b1 (\u03b1 is in log-scale) from 2.1 to 1.85, we would require two more years of data; (ii) \u03b1 values for finegrained predictions are understandably higher than those for coarse-grained predictions because in the fine-grained case we predict the exact number of attacks; (iii) Our NPL model performs better than its parametric counterpart in predicting future poaching attacks for the fine-grained case, indicating that the true adversary behavior model may indeed be more complicated than what can be captured by SUQR.\nAMT data: Here we show fine-grained prediction results on real-world AMT data to demonstrate the performance of both our approaches on somewhat cleaner data. This dataset is cleaner than the Uganda data because: (i) all attacks are observed, and (ii) animal densities and deployed defender strategies are known. The dataset consisted of 16 unique mixed strategies. We used attack data corresponding to 11 randomly chosen mixed strategies for training and data for the remaining mixed strategies for testing. Results are shown in Figs. 1(e) and 1(f). We observe that: (i) \u03b1 values in this case are lower as compared to the Uganda data as the AMT data is cleaner; and (ii) the NPL model\u2019s performance on this dataset is poor as compared to SUQR due to, (a) low number of samples in AMT data, and (b) real-world poacher behavior may be more complicated than that of AMT participants and hence SUQR in this case was able to better capture AMT participants\u2019 behavior with limited number of samples.5\nRuntime: While running on Matlab R2015a on an Intel Core i7-5500 CPU@2.40Ghz, 8GB RAM machine with a 64-bit Windows 10, on average, the NPL computation takes longer than the parametric setting, as shown in Table 2."}, {"heading": "8 Conclusion", "text": "We presented a PAC analysis of the SUQR model. We also presented the first non-parametric learning model for SSGs with a PAC analysis of the same. Our experiments with poaching data and simulated data show that NPL outperforms SUQR with increasing data, but is computationally\n5In the appendix we show that, on simulated data, \u03b1 does indeed approach zero and NPL outperforms SUQR with enough samples.\ncostly. Finally, we hope that we have laid fertile ground for interesting future research."}, {"heading": "A Proofs", "text": ""}, {"heading": "Proof of Theorem 1", "text": "Proof. First, Haussler uses the following pseudo metric \u03c1 on A that is defined using the loss function l:\n\u03c1(a, b) = maxy\u2208Y |l(y, a)\u2212 l(y, b)|.\nTo start with, relying heavily on Haussler\u2019s result, we show\nPr(\u2200h \u2208 H.|r\u0302h(~z)\u2212rh(p)| < \u03b1\n3 ) \u2265 1\u22124C ( \u03b1 48 ,H, \u03c1 ) e\u2212 \u03b12m 576M2\nChoose \u03b1 = \u03b1\u2032/4M and \u03bd = 2M in Theorem 9 of (Haussler 1992). Using property (3) (Section 2.2, (Haussler 1992)) of dv we obtain |r \u2212 s| \u2264 whenever dv(r, s) \u2264 \u03b1\u2032. Using this directly in Theorem 9 of Haussler (1992) we obtain the desired result above.\nNote the dependence of the above probability on m (the number of samples), and compare it to the first precondition in the PAC learning result. By equating \u03b4/2 to 4C(\u03b1/48,H, \u03c1)e\u2212 \u03b12m\n576M2 , we derive the sample complexity as\nm \u2265 576M 2\n\u03b12 log 8C(\u03b1/48,H, \u03c1) \u03b4\nWe wish to compute a bound on C( ,H, \u03c1) in order to use the above result to obtain sample complexity. First, we prove that \u03c1 \u2264 2Tdl\u03041 for the loss function we use. This result is used to bound C( ,H, \u03c1), since, it is readily verified from definition that C( ,H, \u03c1) \u2264 C( /2T,H, dl\u03041). Such a bounding directly gives\nm \u2265 576M 2\n\u03b12 log 8C(\u03b1/96T,H, \u03c1) \u03b4\nBelow we prove that \u03c1 \u2264 2Tdl\u03041 .\nLemma 8. Given the loss function defined above, we have \u03c1(a, b) \u2264 2 maxi |ai \u2212 bi| \u2264 2 \u2211 i |ai \u2212 bi| \u2264 2Tdl\u03041(a, b)\nProof. By definition, \u03c1(a, b) = maxi \u2223\u2223\u2223 \u2212 ai + bi +\nlog 1+\n\u2211T\u22121 i=1 e ai\n1+ \u2211T\u22121 i=1 e bi \u2223\u2223\u2223 \u2264 maxi |ai\u2212bi|+\u2223\u2223 log 1+\u2211T\u22121i=1 eai1+\u2211T\u22121i=1 ebi \u2223\u2223\u2223. There is j and k such that maxr = e aj\nebj \u2265 e\nai\nebi for all i and\nminr = eak ebk \u2264 e ai ebi for all i. Thus,\nlog 1 +minrt\n1 + t \u2264 log\n1 + \u2211T\u22121 i=1 e ai\n1 + \u2211T\u22121 i=1 e bi \u2264 log 1 +maxrt 1 + t\nwhere t = \u2211T\u22121 i=1 e\nbi . The greatest positive value of the RHS is logmaxr \u2264 |aj\u2212bj | and least negative value possible for LHS is logminr \u2265 \u2212|ak \u2212 bk|. Thus,\u2223\u2223 log 1 +\u2211T\u22121i=1 eai\n1 + \u2211T\u22121 i=1 e bi \u2223\u2223 \u2264 max i \u2223\u2223ai \u2212 bi\u2223\u2223 Hence, we obtain \u03c1(a, b) = maxi |l(yi, a) \u2212 l(yi, b)| \u2264 2 maxi |ai \u2212 bi|, and the last inequality is trivial.\nThus, using the above result we get\nm \u2265 576M 2\n\u03b12 log 8C(\u03b1/96T,H, dl\u03041) \u03b4"}, {"heading": "Proof of Lemma 1", "text": "Proof. Fix any probability distribution over X , say P . For brevity, we write k instead of T \u2212 1. Consider an /2-cover Ui for each Fi; also let V be an /2-cover for G. We claim that U1\u00d7, . . . Uk \u00d7 V is an -cover for G \u2295 \u00d7iFi. Thus, the size of the -cover for G \u2295 \u00d7iFi is bounded by |V | \u220f i |Ui|. With this claim we get\nN ( ,G \u2295 \u00d7iFi, dL1(P,dl\u03041 )) < N ( /2,G, dL1(P,dl\u03041 ))\u220fk i=1N ( /2,Fi, dL1(P,dl1 ))\nTaking sup over probability distributions we get our desired result. Now, we prove our claim about -cover. Take any function h = \u3008g1 + f1, . . . gk + fk\u3009. Find functions f \u2032i \u2208 Ui such that dL1(P,dl1 )(fi, f \u2032 i) < /2. Similarly, find function g\u2032 = \u3008g\u20321, . . . g\u2032k\u3009 \u2208 V such that dL1(P,dl\u03041 )(g, g \u2032) < /2 where g = \u3008g1, . . . gk\u3009. Let h\u2032 = \u3008g\u20321 + f \u20321, . . . g\u2032k + f \u2032k\u3009. Then,\ndL1(P,dl\u03041 ) (h, h\u2032)\n= \u222b X 1 k k\u2211 i=1 dl1(gi(x) + fi(x), g \u2032 i(x) + f \u2032 i(x)) dP (x)\n\u2264 \u222b X 1 k k\u2211 i=1 dl1(gi(x), g \u2032 i(x)) + dl1(fi(x), f \u2032 i(x)) dP (x)\n= dL1(P,dl\u03041 ) (g, g\u2032) +\n1\nk k\u2211 i=1 dL1(P,dl\u03041 ) (fi, f \u2032 i)\n< /2 + /2 ="}, {"heading": "Proof of Lemma 2", "text": "Proof. First, note that xiT = xi \u2212 xT lies between [\u22121, 1] due to the constraints on xi, xT . Then, for any two functions g, g\u2032 \u2208 G we have the following result:\ndL1(P,dl\u03041 ) (g, g\u2032) =\n= \u222b X 1 T \u2212 1 T\u22121\u2211 i=1 dl1(w(xi \u2212 xT ), w\u2032(xi \u2212 xT )) dP (x)\n= \u222b X 1 T \u2212 1 T\u22121\u2211 i=1 |(w \u2212 w\u2032)(xi \u2212 xT )| dP (x)\n\u2264 \u222b X 1 T \u2212 1 T\u22121\u2211 i=1 |(w \u2212 w\u2032)| dP (x) = |(w \u2212 w\u2032)|\nAlso, note that since the range of any g = w(xi \u2212 xT ) is [\u2212M4 , M 4 ] and given xi \u2212 xT lies between [\u22121, 1], we can claim that w lies between [\u2212M4 , M 4 ]. Thus, given the distance between functions is bounded by the difference in\nweights, it enough to divide the M/2 range of the weights into intervals of size 2 and consider functions at the boundaries. Hence the -cover has at most M/4 .\nThe proof for constant valued functions Fi is similar, since its straightforward to see the distance between two functions in this space is the difference in the constant output. Also, the constants lie in the range [\u2212M4 , M 4 ], Then, the argument is same as the G case."}, {"heading": "Proof of Lemma 3", "text": "Proof. First, the space of functionsH = {h/K\u0302 | h \u2208 Hi} is Lipschitz with constant \u2264 1 and |hi(x)| \u2264 M/2K\u0302. Clearly N ( ,Hi, dl\u221e) \u2264 N ( /K\u0302,H, dl\u221e). Using the following result from (Tikhomirov and Kolmogorov 1993): for any Lipschitz real valued function spaceH with constant 1, any positive integer s and any distance d N ( ,H, dl\u221e) \u2264 ( 2 \u2308M(s+ 1)\n2K\u0302\n\u2309 + 1 ) \u00b7 (s+ 1)N ( s s+1 ,X,d)\nThen, we get the bound on N ( /K\u0302,H, dl\u221e) by choosing s = 1 and d = dl\u221e , and hence obtain the desired bound on N ( ,Hi, dl\u221e)."}, {"heading": "Proof of Lemma 4", "text": "Proof. For ease of notation, we do the proof with k standing for K + 1. Let Yi = Ui \u2212 0.5, then |Y | \u2264 1/2 and ST \u2212 0.5T = \u2211 i Yi. Using Bernstein\u2019s inequality with the fact that E[Y 2i ] = 1/12\nP ( \u2211 i Yi = ST \u2212 0.5T \u2264 \u2212t) \u2264 e \u22120.5t2 T/12+t/6\nThus, P (ST \u2264 0.5T \u2212 t) \u2264 e 0.5t2\nT/12+t/6 . Take k = 0.5T \u2212 t, and hence t = 0.5T \u2212 k = T (0.5\u2212 k/T ). Hence,\nP (ST \u2264 k) \u2264 e \u22123T (0.5\u2212k/T )2 1\u2212k/T"}, {"heading": "Proof of Theorem 3", "text": "Proof. Given the results of Lemma 3, we get the sample complexity is of order\n1\n\u03b12\n( log 1\n\u03b4 + T\n( N (\u03b1\nT ,X, dl1) )) Now, suing result of Lemma 4, we get the required order in the Theorem. We wish to note that if K/T is a constant then theO(e\u2212T ) in Lemma 4 gets swamped by the TT term. However, in practice for fixed T , this term does provide lower actual complexity bound than what is indicated by the order.\nProof of Lemma 5\nProof. Observe that any solution to MinLip will have Lipschitz constant \u2265 K\u2217. Thus, it suffices to show that the Lipschitz constant of hi is K\u2217, to prove that hi is a solution of MinLip. Take any two x, x\u2032. If the min in the expression for hi occurs for the same j for both x, x\u2032 then |hi(x)\u2212 hi(x\u2032)| is given by K\u2217|||x\u2212 xj ||1 \u2212 ||x\u2032 \u2212 xj ||1|. By application of triangle inequality\n\u2212||x\u2212 x\u2032||1 \u2264 ||x\u2212 xj ||1 \u2212 ||x\u2032 \u2212 xj ||1 \u2264 ||x\u2212 x\u2032||1 Thus, |hi(x)\u2212 hi(x\u2032)| \u2264 K\u2217||x\u2212 x\u2032||1.\nFor the other case when the min for x occurs at some j and min for x\u2032 at some j\u2032 we have the following: hi(x\u2032) = hij\u2032 + K \u2217||x\u2032 \u2212 xj\u2032 ||1 and hi(x) = hij + K\u2217||x \u2212 xj \u2032 ||1 . Also, due to the min, hi(x\u2032) \u2264 hij + K\u2217||x\u2032 \u2212 xj ||1 = hi(x) +K \u2217||x\u2032 \u2212 xj ||1 \u2212K\u2217||x\u2212 xj \u2032 ||1. Thus, we get\nhi(x \u2032)\u2212hi(x) \u2264 K\u2217(||x\u2032\u2212xj ||1\u2212||x\u2212xj ||1) \u2264 K\u2217||x\u2032\u2212x||1\nUsing the symmetric case inequality for x we get\nhi(x)\u2212hi(x\u2032) \u2264 K\u2217(||x\u2212xj ||1\u2212||x\u2032\u2212xj ||1) \u2264 K\u2217||x\u2212x\u2032||1 Combining both these we can claim that |hi(x)\u2212 hi(x\u2032)| \u2264 K\u2217||x\u2032\u2212x||1. Thus, we have proved the sufficient condition that hi is K\u2217 Lipschitz."}, {"heading": "Proof of Lemma 6", "text": "Proof. Let pX be the marginal of p(x, y) for space X . Define the expected entropy E[H(x)] = \u222b pX(x) \u2211T i=1 Iy=tiq p i (x) log q p i (x) dx.\nGiven the loss function, we know that rh(p) = \u2212 \u222b p(x, y) \u2211T i=1 Iy=ti log q h i (x) dx dy. This is same as\n\u2212 \u222b pX(x) \u2211T i=1 Iy=tiq p i (x) \u2211T i=1 Iy=ti log q h i (x) dx dy.\nThis reduces to\u2212 \u222b pX(x) \u2211T i=1 Iy=tiq p i (x) log q h i (x) dx dy. Thus, we have\nE[H(x)]+rh(p) = \u222b pX(x) T\u2211 i=1 Iy=tiq p i (x) log qpi (x) qhi (x) dx dy\nHence, we obtain\nE[H(x)] + rh(p) = E[KL(qp(x) || qh(x))]\nHence, |rh(p)\u2212 rh\u2217(p)| is equal to\n|E[KL(qp(x) || qh(x))]\u2212 E[KL(qp(x) || q\u2217(x))]|\nThus, from the assumptions, we get E[KL(qp(x) || qh(x))] \u2264 \u03b1 + \u2217 with probability \u2265 1 \u2212 \u03b4. Next, using Markov inequality, with probability \u2265 1\u2212 \u03b4\nPr(KL(qp(x) || qh(x)) \u2265 (\u03b1+ \u2217)2/3) \u2264 (\u03b1+ \u2217)1/3\nthat is using the notation \u2206 = (\u03b1+ \u2217)1/3, with probability \u2265 1\u2212 \u03b4\nPr(KL(qp(x) || qh(x)) \u2264 \u22062/3) \u2265 1\u2212\u22061/3\nUsing Pinkser\u2019s inequality we get (1/2)||qp(x) \u2212 qh(x)||21 \u2264 KL(qp(x)||qh(x)). That is, the event KL(qp(x) || qh(x)) \u2264 \u22062/3 implies the event ||qp(x) \u2212\nqh(x)||1 \u2264 \u221a 2\u2206. Thus, Pr(||qp(x)\u2212 qh(x)||1 \u2264 \u221a\n2\u2206) \u2265 Pr(KL(qp(x) || qh(x)) \u2264 \u22062/3). Thus, we obtain: with probability \u2265 1 \u2212 \u03b4, Pr(||qp(x) \u2212 qh(x)||1 \u2264 \u221a 2\u2206) \u2265 1\u2212\u2206."}, {"heading": "Proof of Lemma 7", "text": "Proof. We know that qhi (x) = ehi(x)\u2211 j e hj(x) (assume hT (x) = 0). Thus,\n|qhi (x)\u2212 qhi (x\u2032)| = qhi (x\u2032)|ehi(x)\u2212hi(x \u2032)\n\u2211 j e hj(x\n\u2032)\u2211 j e hj(x) \u2212 1|\nLet r denote \u2211 j e hj(x\n\u2032)\u2211 j e hj(x) . There is l and k such that\nmaxr = ehl(x\n\u2032)\nehl(x) \u2265 e\nhj(x \u2032)\nehj(x) for all j and minr = e\nhk(x \u2032)\nehk(x) \u2264\nehj(x \u2032) ehj(x) for all j. Then, minr \u2264 r \u2264 maxr First, note that due to our assumption that for each i |hi(x\u2032) \u2212 hi(x)| \u2264 K\u0302||x\u2032 \u2212 x||1, we have\ne\u2212K\u0302||x \u2032\u2212x||1 \u2264 minr \u2264 r \u2264 maxr \u2264 eK\u0302||x \u2032\u2212x||1\nUsing the Lipschitzness we can also claim that e\u2212K\u0302||x \u2032\u2212x||1 \u2264 ehi(x)\u2212hi(x\u2032) \u2264 eK\u0302||x\u2032\u2212x||1 . Thus,\ne\u22122K\u0302||x \u2032\u2212x||1 \u2264 ehi(x)\u2212hi(x \u2032) \u00b7 r \u2264 e2K\u0302||x \u2032\u2212x||1\nSince, e\u22122K\u0302||x \u2032\u2212x||1 < 1 and e2K\u0302||x \u2032\u2212x||1 > 1 we have\n|ehi(x)\u2212hi(x \u2032)r\u22121| \u2264 max(|e\u22122K\u0302||x \u2032\u2212x||1\u22121|, |e2K\u0302||x \u2032\u2212x||1\u22121|)\nAlso, it is a fact that |ey\u22121| \u2264 1.5|y| for |y| \u2264 3/4. Thus, we obtain\n|ehi(x)\u2212hi(x \u2032)r\u22121| \u2264 3K\u0302||x\u2032\u2212x||1 for 2K\u0302||x\u2032\u2212x||1 \u2264 3/4 Thus, ||qh(x\u2032) \u2212 qh(x)||1 = \u2211 i |qhi (x) \u2212\nqhi (x \u2032)| = \u2211 i q h i (x \u2032)|ehi(x)\u2212hi(x\u2032) \u2211 j e hj(x \u2032)\u2211 j e hj(x) \u2212 1| \u2264\n( \u2211 i q h i (x \u2032))3K\u0302||x\u2032 \u2212 x||1 for K\u0302||x\u2032 \u2212 x||1 \u2264 3/8. Since\u2211\ni q h i (x \u2032) = 1, we have\n||qh(x\u2032)\u2212 qh(x)||1 \u2264 3K\u0302||x\u2032\u2212x||1 for ||x\u2032\u2212x||1 \u2264 3/8K\u0302\nIn other words qh is locally 3K\u0302-Lipschitz for every l1 norm ball of size 3/8K\u0302. The following allows us to prove global Lipschitzness.\nLemma 9. Any locally L-Lipschitz function f for every lp ball of size \u03b40 on a compact convex set X \u2282 Rn is Lipschitz on the set X . The Lipschitz constant is also L.\nProof. Take any two points x, y \u2208 X , the straight line joining x, y lies in X (as X is convex). Also, a finite number of balls of size \u03b40 cover X (due to compactness). Thus, there are finitely many points x = z1, . . . , z\u00b5 = y on the line from x, y such that dlp(zi, zi+1) \u2264 \u03b40. Further, since these points lie on a straight line we have\ndlp(x, y) = \u2211\u00b5\u22121 1 dlp(zi, zi+1)\nThen, let any metric d be used to measure distance in the range space of f , thus, we get\nd(f(x), f(y)) \u2264 \u2211\u00b5\u22121\n1 d(f(zi), f(zi+1)) \u2264 \u2211\u00b5\u22121\n1 Ldlp(zi, zi+1) = Ldlp(x, y)\nSince in our case the defender mixed strategy space is compact and convex and qh(x) satisfies the above lemma with L = 3K\u0302 and \u03b40 = 3/8K\u0302, qh(x) is 3K\u0302-Lipschitz."}, {"heading": "Proof of Theorem 4", "text": "Proof. Coupled with the guarantee that with prob. \u2265 1\u2212 \u03b4, Pr(||qp(x) \u2212 qh(x)||1 \u2264 \u221a 2\u2206) \u2265 1 \u2212 \u2206, the assumptions guarantee that with prob. \u2265 1 \u2212 \u03b4 for the learned hypothesis h there must exist a x\u2032 \u2208 B(x\u2217, ) such that ||qp(x\u2032) \u2212 qh(x\u2032)||1 \u2264 \u221a 2\u2206 and there must exist x\u2032\u2032 \u2208\nB(x\u0303, ) such that ||qp(x\u2032\u2032)\u2212 qh(x\u2032\u2032)||1 \u2264 \u221a\n2\u2206. First, for notational ease let \u03b3 denote \u221a 2\u2206. The following are immediate using triangle inequality, with the results ||qp(x\u2032)\u2212 qh(x\u2032)||1 \u2264 \u03b3 and ||qp(x\u2032\u2032)\u2212 qh(x\u2032\u2032)||1 \u2264 \u03b3 and the Lipschitzness assumptions\n||qp(x\u2217)\u2212 qh(x\u2032)||1 \u2264 K + \u03b3 (optx\u2217) ||qp(x\u0303)\u2212 qh(x\u2032\u2032)||1 \u2264 3K\u0302 + \u03b3 (optx\u0303)\nWe call x\u0303TUqh(x\u0303) \u2265 x\u2032TUqh(x\u2032) as equation opth. Thus, we bound the utility loss as following\nx\u2217TUqp(x\u2217)\u2212 x\u0303TUqp(x\u0303) = x\u2217TUqp(x\u2217)\u2212 x\u0303TUqh(x\u0303) + x\u0303TUqh(x\u0303)\u2212 x\u0303TUp(y/x\u0303) \u2264 x\u2217TUqp(x\u2217)\u2212 x\u2032TUqh(x\u2032) + x\u0303TUqh(x\u0303)\u2212 x\u0303TUp(y/x\u0303) using opth = (x\u2217 \u2212 x\u2032)TUqp(x\u2217) + x\u2032TU(qp(x\u2217)\u2212 qh(x\u2032))+ x\u0303TUqh(x\u0303)\u2212 x\u0303TUqp(x\u0303) \u2264 + (K + \u03b3) + x\u0303TUqh(x\u0303)\u2212 x\u0303TUqp(x\u0303) using x\u2032 \u2208 B(x\u2217, ), optx\u2217 = ((K + 1) + \u03b3) + x\u0303TU(qh(x\u0303)\u2212 qh(x\u2032\u2032))+ x\u0303TU(qh(x\u2032\u2032)\u2212 qp(x\u0303))\n\u2264 (K + 1) + \u03b3 + 6K\u0302 + \u03b3 using x\u2032\u2032 \u2208 B(x\u0303, ) with Lipschitz qh, optx\u0303"}, {"heading": "B Extension to Stackelberg Games", "text": "Our technique extends to Stackelberg games by noting that the single resource case K = 1 with T \u2212 1 targets gives\u2211T\u22121 i=1 xi \u2264 1. This directly maps to a probability distribu-\ntion over T actions. The xi\u2019s with xT = 1\u2212 \u2211T\u22121 i=1 xi is the probability of playing an action. With this set-up now the security game is a standard Stackelberg game, but where the leader has T actions and follower has T \u2212 1 actions.\nThus, in order to capture the general Stakelberg game, for the adversary, we assume N actions for the adversary (instead of T \u2212 1 above). Then, similar to security games\nq1, . . . , qN denotes the adversary\u2019s probability of playing an action. Thus, the function h now outputs vectors of size N \u2212 1 (instead of O(T )), i.e., A is a subset of N \u2212 1 dimensional Euclidean space. The model of security game in the PAC framework extends as is to this Stackelberg setup, just with h(x) and A being N \u2212 1 dimensional. The rest of the analysis proceeds exactly as for security games for both parametric and non-parametric case, by replacing the T corresponding to the adversary\u2019s action space by N . Since, the proof technique is exactly same, we just state the final results. Thus, for a Stackelberg game with T leader actions and N follower actions, the bound for Theorem 1 becomes\n576M2\n\u03b12 log 8C(\u03b1/96N,H, dl\u03041) \u03b4\nIt can be seen from the proof for the parametric part that the sample complexity does not depend on the dimensionality of X , but only on the dimensionality of A. Hence, the sample complexity results from generalized SUQR parametric case is\nO ( 1 \u03b12 (log 1 \u03b4 +N log N \u03b1 ) )\nand for the non-parametric case, which depends on both dimensionality of X and T , the sample complexity is\nO ( 1 \u03b12 (log 1 \u03b4 + NT+1 \u03b1T ) )"}, {"heading": "C Analysis of Standard SUQR form", "text": "For SUQR the rewards and penalties are given and fixed. Let the rewards be given and fixed r = \u3008r1, . . . , rT \u3009 (each ri \u2208 [0, rmax], rmax > 0), and the penalty values are p = \u3008p1, . . . , pT \u3009 (each pi \u2208 [0, pmin], pmin < 0). Thus, the output of h is\nh(x) = \u3008w1x1T + w2r1T + w3p1T , . . . , w1xT\u22121T + w2rT\u22121T + w3pT\u22121T \u3009\nwhere riT = ri \u2212 rT and same for piT . Note that in the above formulation all the component functions hi(x) have same weights. We can consider the function space H as the following direct-sum semi-free product G \u2295 F \u2295 E = {\u3008g1 + f1 + e1, . . . , gT\u22121 + fT\u22121 + eT\u22121\u3009 | \u3008g1, . . . , gT\u22121\u3009 \u2208 G, \u3008f1, . . . , fT\u22121\u3009 \u2208 F , \u3008e1, . . . , eT\u22121\u3009 \u2208 E}, where each of G,F , E is defined below. G = {\u3008g1, . . . , gT\u22121\u3009 | \u3008g1, . . . , gT\u22121\u3009 \u2208 \u00d7iGi, all gi have same weight} where Gi has functions of the form wxiT . F = {\u3008f1, . . . , fT\u22121\u3009 | \u3008f1, . . . , fT\u22121\u3009 \u2208 \u00d7iFi, all fi have same weight} where Fi has constant valued functions of the form wriT . E = {\u3008e1, . . . , eT\u22121\u3009 | \u3008e1, . . . , eT\u22121\u3009 \u2208 \u00d7iEi, all ei have same weight} where Ei has constant valued functions of the form wpiT .\nConsider an /3-cover Ue for E , an /3-cover Uf for F and /3-cover Ug for G. We claim that Ue \u00d7 Uf \u00d7 Ug is an -cover for E \u2295 F \u2295 G. Thus, the size of the -cover for E \u2295 F \u2295 G is bounded by |Ue||Uf ||Ug|. Thus,\nN ( ,H, dl\u03041) \u2264 N ( /3,G, dl\u03041)N ( /3,F , dl\u03041)N ( /3, E , dl\u03041)\nTaking sup over P we get\nC( ,H, dl\u03041) \u2264 C( /3,G, dl\u03041)C( /3,F , dl\u03041)C( /3, E , dl\u03041)\nNow, we show that Ue \u00d7 Uf \u00d7 Ug is an -cover for H = E\u2295F\u2295G Fix any h \u2208 H = E\u2295F\u2295G. Then, h = e+f+g for some e \u2208 E , f \u2208 F , g \u2208 G. Let e\u2032 \u2208 Ue be /3 close to e, f \u2032 \u2208 Uf be /3 close to f and g\u2032 \u2208 Ug be /3 close to g.\nThen,\ndL1(P,dl\u03041 ) (h, h\u2032)\n= \u222b X 1 k k\u2211 i=1 dl1(hi(x), h \u2032 i(x)) dP (x)\n\u2264 \u222b X 1 k k\u2211 i=1 dl1(gi(x), g \u2032 i(x))\n+dl1(fi(x), f \u2032 i(x)) + dl1(ei(x), e \u2032 i(x)) dP (x)\n= dL1(P,dl\u03041 ) (g, g\u2032) + dL1(P,dl\u03041 ) (f, f \u2032) + dL1(P,dl\u03041 ) (e, e\u2032) \u2264\nSimilar to Lemma 2, it is possible to show that for any probability distribution P , for any function g, g\u2032 dl\u03041(g, g\n\u2032) \u2264 |w \u2212 w\u2032| and f, f \u2032 dl\u03041(f, f\n\u2032) \u2264 |w \u2212 w\u2032|rmax and e, e\u2032 dl\u03041(e, e\n\u2032) \u2264 |w \u2212 w\u2032||pmin|. Assume each of the functions have a range [\u2212M/6,M/6] (this does not affect the order in terms of M ). Given, these ranges w for g can take values in [\u2212M/6,M/6], w for g can take values in [\u2212M/6rmax,M/6rmax] and w for g can take values in [\u2212M/6|pmin|,M/6|pmin|]. To get a capacity of /3 it is enough to divide the respective w range into intervals of 2 /3, and consider the boundaries. This yields an /3- capacity ofM/2 ,M/2 rmax andM/2 |pmin| for G,F and E respectively.\nThus,\nC( ,H, dl\u03041) \u2264 (M/2 ) 3 1\nrmax|pmin| Plugging this in sample complexity from Theorem 1 we get the results that the sample complexity is\nO ( 1 \u03b12 (log 1 \u03b4 + log T \u03b1 ) )"}, {"heading": "D Experimental Results", "text": "Here we provide additional experimental results on the Uganda, AMT and simulated datasets. First, in Figs. 2(a) and 2(b), we provide results on the Uganda dataset for the generalized parametric case we analyze in our paper (i.e., generalized SUQR) for both the fine-grained and coarsegrained settings. The AMT dataset consisted of 32 unique mixed strategies, 16 of which were deployed for one payoff structure and the remaining 16 for another. In the main paper, we provided results on AMT data for payoff structure 1. Here, in Figs. 2(c) and 2(d), we show results on the AMT data for both the parametric (SUQR) and NPL learning settings on payoff structure 2.\nFor running experiments on simulated data, we used the same mixed strategies and features as for the AMT data, but simulated attacks, first using the actual SUQR model and then using a modified form of the SUQR model. Figs. 2(e)\nand 2(f) show results on simulated data on payoff structures 1 and 2 for the parametric cases, when the data is generated by an adversary with an SUQR model with true weight vector reported in Nguyen et. al (2013) ((w1, w2, w3) = (\u22129.85, 0.37, 0.15) (ci = w2Ri + w3Pi)). Similar results for the NPL model are shown in Figs. 2(g) and 2(h) respectively. We can see that the NPL approach performs poorly with only one or five samples as expectied but improves significantly as more samples are added. To further show its potential, we modified the true adversary model of generating attacks from SUQR to the following: qi \u221d ew1x 2 i+ci , i.e., instead of xi, the adversary reasons based on x2i . We considered the same true weight vector to simulate attacks. Then, we observe in Figs. 2(i) (for payoff structure 1) and 2(j) (for payoff structure 2 data), that \u03b1 approaches a value closer to zero for 500 or more sample. Also, the NPL model performs better than the parametric model with 500 or more samples. This shows that the NPL approach is more accurate when the true adversary does not satisfy the simple parametric logistic form, indicating that when we don\u2019t know the true function of the adversary\u2019s decision making process, adopting a nonparametric method to learn the adversary\u2019s behavior is more effective."}], "references": [], "referenceMentions": [], "year": 2017, "abstractText": "Recent applications of Stackelberg Security Games (SSG), from green crime to urban crime, have employed machine learning tools to learn and predict adversary behavior using available data about defender-adversary interaction. We commit to an approach of directly learning the response function of the adversary and initiate a formal study of the learnability guarantees of the approach. We make three main contributions: (1) we formulate our approach theoretically in the PAC learning framework, (2) we analyze the PAC learnability of the known parametric SUQR model of bounded rationality and (3) we propose the first non-parametric class of response functions for SSGs and analyze its PAC learnability. Finally, we conduct experiments and report the real world performance of the learning methods.", "creator": "LaTeX with hyperref package"}}}