{"id": "1601.05900", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "22-Jan-2016", "title": "When is Clustering Perturbation Robust?", "abstract": "Clustering is his fundamental data steel enables nothing intended leave divide data same involved such such goods. Generally, intuition way generalizing reflects the ideal question - - certainty data sets endowed with dazzling inseparability end own statements.", "histories": [["v1", "Fri, 22 Jan 2016 08:01:58 GMT  (194kb,D)", "http://arxiv.org/abs/1601.05900v1", null]], "reviews": [], "SUBJECTS": "cs.LG cs.CV", "authors": ["margareta ackerman", "jarrod moore"], "accepted": false, "id": "1601.05900"}, "pdf": {"name": "1601.05900.pdf", "metadata": {"source": "CRF", "title": "When is Clustering Perturbation Robust?", "authors": ["Margareta Ackerman", "Jarrod Moore"], "emails": [], "sections": [{"heading": null, "text": "In practice however, these cases are in the minority, and clustering applications are typically characterized by noisy data sets with approximate pairwise dissimilarities. As such, the efficacy of clustering methods in practical applications necessitates robustness to perturbations.\nIn this paper, we perform a formal analysis of perturbation robustness, revealing that the extent to which algorithms can exhibit this desirable characteristic is inherently limited, and identifying the types of structures that allow popular clustering paradigms to discover meaningful clusters in spite of faulty data."}, {"heading": "1 Introduction", "text": "Clustering is a popular data mining tool, due in no small part to its general and intuitive goal of dividing data into groups of similar items. Yet in spite of this seemingly simple task, successful application of clustering techniques in practice is oftentimes challenging. In particular, there are inherent difficulties in the data collection process and design of pairwise dissimilarity measures, both of which significantly impact the behavior of clustering algorithms.\nIntuition about clustering often reflects the ideal case \u2013 flawless data sets with well-suited dissimilarity between individual instances. In practice however, these cases are rare. Errors are introduced into a data set for a wide variety of reasons; from precision of instruments (a student\u2019s ruler to the Large Hadron Collider alike have a set precision), to human error when data is user-reported (common in the social sciences). Additionally, the dissimilarity between pairwise instances is often based on heuristic measures, particularly when non-numeric attributes are present. Furthermore, the dynamic nature of prominent clustering applications (such as personalization for recommendation systems) implies that by the time the data has been clustered, it has already changed.\nThe ubiquity of flawed input poses a serious challenge. If clustering is to operate strictly under the assumption of ideal data, its applicability would be reduced to fairly rare applications where such data can be attained. As such, it would be desirable for clustering algorithms to provide some qualitative guarantees about their output when partitioning noisy data. This leads us to explore whether there are any algorithms for which such guarantees can be provided.\nAlthough data can be faulty in a variety of ways, our focus here is on inaccuracies of pairwise distances. At a minimum, small perturbation to data should not radically affect the output of an algorithm. It would be natural to expect that some clustering techniques are more robust than others, allowing users to rely on perturbation robust techniques when pairwise distances are inexact.\nHowever, our investigation reveals that no reasonable clustering algorithm exhibits this desirable characteristic. In fact, both additive and multiplicative perturbation robustness are unrealistic requirements. We show that no clustering algorithm can satisfy robustness to perturbation without violating even more fundamental requirements. Not only do existing methods lack this desirable characteristic, but our findings also preclude the possibility of designing novel perturbation robust clustering methods.\nPerhaps it is already surprising that no reasonable clustering algorithm can be perfectly perturbation robust, but our results go further. Instead of requiring that the clustering remain unchanged following a\nar X\niv :1\n60 1.\n05 90\n0v 1\n[ cs\n.L G\n] 2\n2 Ja\nn 20\n16\nperturbation, we allow up to two-thirds of all pairwise distances to change (from in-cluster to between-cluster, or vice-versa). It turns our that this substantial relaxation doesn\u2019t overcome our impossibility theorem.\nLuckily, further exploration paints a more optimistic picture. A careful examination of this issue requires a look back to the underlying goal of clustering, which is to discover clustering structure in data when such structure is present. Our investigation suggests that sensitivity to small perturbations is inevitable only on unclusterable instances, for which clustering is inherently ill-suited. As such, it can be argued that whether an algorithm exhibits robustness on such data is inconsequential.\nOn the other hand, we show that when data is endowed with inherent structure, existing methods can often successfully reveal that structure even on faulty (perturbed) data. We investigate the type of cluster structures required for the success of popular clustering techniques, showing that the robustness of k-means and related methods is directly proportional to the degree of inherent cluster structure. Similarly, we show that popular linkage-based techniques are robust when clusters are well-separated. Furthermore, different cluster structures are necessary for different algorithms to exhibit robustness to perturbations."}, {"heading": "1.1 Previous work", "text": "This work follows a line of research on theoretical foundations of clustering. Efforts in the field began as early as the 1970s with the pioneering work of Wright Wright [1973] on axioms of clustering, as well analysis of clustering properties by Fisher et al Fisher and Van Ness [1971] and Jardine et al Jardine and Sibson [1971], among others. This field saw a renewed surge of activity following Kleinberg\u2019s Kleinberg [2003] famous impossibility theorem, when he showed that no clustering function can simultaneously satisfy three simple properties. Also related to our work is a framework for selecting clustering methods based on differences in their input-output behavior Ackerman et al. [2010b, 2012], Jardine and Sibson [1971], Zadeh and Ben-David [2009], Ackerman et al. [2010a, 2013] as well as research on clusterability, which aims to quantify the degree of inherent cluster structure in data Ben-David [2015], Ackerman and Ben-David [2009], Balcan et al. [2008a,b], Ostrovsky et al. [2006].\nPrevious work on perturbation robustness studies it from a computational perspective by identifying new efficient algorithms for robust instances Bilu and Linial [2010], Ackerman and Ben-David [2009], Awasthi et al. [2012]. Ben-David and Reyzin Ben-David and Reyzin [2014] recently studied corresponding NP-hardness lower bounds.\nIn this paper, we take a fresh look at perturbation robustness. We begin our investigation by asking when perturbation robustness is possible to attain. After proving that robustness to perturbations cannot be achieved as a data-independent property of an algorithm, we seek to understand when popular clustering paradigms satisfy this requirement. Our analysis of established methods is an essential complement to efforts in algorithmic development, as the need for understanding established methods is amplified by the fact that most clustering users rely on a small number of well-known techniques. Our results demonstrate the type of cluster structures required for robustness of popular clustering paradigms."}, {"heading": "2 Definitions and notation", "text": "Clustering is a wide and heterogeneous domain. For most of this paper, we focus on a basic sub-domain where the input to a clustering function is a finite set of points endowed with a between-points dissimilarity function, and the number of clusters (k), and the output is a partition of that domain.\nA dissimilarity function is a symmetric function d : X \u00d7X \u2192 R+, such that d(x, x) = 0 for all x \u2208 X. The data sets that we consider are pairs (X, d), where X is some finite domain set and d is a dissimilarity function over X.\nA k-clustering C = {C1, C2, . . . , Ck} of a data set X is a partition of X into k disjoint subsets (or, clusters) of X (so, \u22c3 i Ci = X). A clustering of X is a k-clustering of X for some 1 \u2264 k \u2264 |X|.\nFor a clustering C, let |C| denote the number of clusters in C and |Ci| denote the number of points in a cluster Ci. For a domain X, |X| denotes the number of points in X, which we denote by n when the domain\nis clear from context. We write x \u223cC y if x and y are both in some cluster Cj ; and x 6\u223cC y otherwise. This is an equivalence relation.\nThe Hamming distance between clusterings C and C \u2032 of the same domain set X is defined by\n\u2206(C,C \u2032) = |{{x, y} \u2282 X | (x \u223cC y)\u2295 (x \u223cC\u2032 y)}|(|X|\n2 ) , where \u2295 denotes the logical XOR operation.\nThat is, the difference is the number of edges that disagree, being in-cluster in one of the clusterings and between-cluster in the other. The maximum distance between clusterings is when the Hamming distance is 1.\nLastly, we formally define clustering functions.\nDefinition 1 (Clustering function). A clustering function is a function F that takes as input a pair (X, d) and a parameter 1 \u2264 k \u2264 |X|, and outputs a k-clustering of the domain X."}, {"heading": "3 Perturbation robustness as a property of an algorithm", "text": "Whenever a user is faced with the task of clustering faulty data, it would be natural to select an algorithm that is robust to perturbations of pairwise dissimilarities. As such, we begin our study of perturbation robustness by casting it as a property of an algorithm. If we could classify algorithms based on whether or not (or to what degree) they are perturbation robust, then clustering users could incorporate this information when making decisions regarding which algorithms to apply on their data.\nFirst, we define what it means to perturb a dissimilarity function.\nDefinition 2 (\u03b1-multiplicative perturbation of a dissimilarity function). Given a pair of dissimilarity functions d and d\u2032 over a domain X, d\u2032 is an \u03b1-multiplicative-perturbation of d, for \u03b1 > 1, if for all x, y \u2208 X, \u03b1\u22121d(x, y) \u2264 d\u2032(x, y) \u2264 \u03b1d(x, y).\nAdditive perturbation of a dissimilarity function is defined analogously.\nDefinition 3 ( -additive perturbation of a dissimilarity function). Given a pair of dissimilarity functions d and d\u2032 over a domain X, d\u2032 is an -additive perturbation of d, for > 0, if for all x, y \u2208 X, d(x, y) \u2212 \u2264 d\u2032(x, y) \u2264 d(x, y) + .\nIt is important to note that all of our results hold for both multiplicative and additive perturbation robustness. Perturbation robust algorithms should be invariant to data perturbations; that is, if data is perturbed, then the output of the algorithm shouldn\u2019t change. This view of perturbation robustness is not only intuitive, but is also based on previous formulations Reyzin [2012], Bilu and Linial [2010], Awasthi et al. [2012] (This can be formalized as a property of clustering functions by setting \u03b4 = 0 in Definition 4 below).\nHowever, requiring that the partitioning be identical before and after perturbation is provably too strict a requirement for clustering algorithms, as it can only hold for functions that effectively ignore all pairwise distances. That is, this notion of perturbation robustness only holds for clustering functions that, given any domain set X and integer 1 \u2264 k \u2264 |X|, produce the same partitioning regardless of the setting of d (See Section 1 of the Appendix for details).\nAs such, we introduce a relaxation that allows some error in the output of the algorithm on perturbed data. From a practical point of view, it is likely that a user who has only a perturbation of the true data set is likely to be satisfied with an approximately correct solution.\nDefinition 4. A clustering function F is (\u03b1, \u03b4)-multiplicative perturbation robust if, given any data set (X, d) and 1 \u2264 k \u2264 |X|, whenever d\u2032 is an \u03b1-multiplicative perturbation of d,\n\u2206(F(X, d, k),F(X, d\u2032, k)) < \u03b4.\nAdditive perturbation robustness is defined analogously, by replacing the \u03b1-multiplicative perturbation of the dissimilarity function with an -additive perturbation.\nDespite this substantial relaxation, perturbation robustness for \u03b4 as high as 2/3 is inherently incompatible with even more elementary requirements, as shown below."}, {"heading": "3.1 Impossibility theorem for clustering functions", "text": "We now proceed to show that perturbation robustness is too strong a requirement for clustering algorithms, and as such neither existing nor novel techniques can have this desirable characteristic.\nParticularly notable is that the impossibility results persists when \u03b4 is as high as 2/3, meaning that a perturbation is allowed to change up to two-thirds of all pairwise distances from in-cluster to between-cluster, or vise-versa. As such, we show that no reasonable clustering algorithm can preserve more than a third of its pairwise distances after a perturbation.\nThe following impossibility result derives from the pioneering work of Wright Wright [1973] on axioms of clustering. Wright originally proposed his axioms in Euclidean space, here we generalize them for arbitrary pairwise dissimilarities.\nThe first axiom we discuss follows from Wright\u2019s 11th axiom, and captures the very essence of clustering: to group similar items. This property considers an elementary scenario, requiring that given exactly three points, an algorithm asked for two clusters should group the two closest elements. See Figure 1 for an illustration. A special case of this rule occurs when the three elements lie on the real line, in which case the furthest endpoint should be placed in its own cluster.\nDefinition 5 (Three-body rule). Given a data set X = {a, b, c}, if d(a, b) > d(b, c) and d(a, c) > d(b, c), then F(X, d, 2) = {{a}, {b, c}}.\nWright\u2019s 6th axiom, and the final one we consider here, requires that replicating all data points by the same number should not change the clustering output. Outside of Euclidean space, we replicate a point x by adding a new element x\u2032 and setting d(x\u2032, y) = d(x, y) for all y \u2208 X.\nDefinition 6 (Replication invariance). Given any positive integer r, if all points are replicated r times, then the partitioning of the original data is unchanged and all replicas lie in the same cluster as their original element.\nNot only are these two axioms natural, as violating them leads to counterintuitive behavior, but they also hold for common techniques. It is easy to show that they are satisfied by common clustering paradigms, including cost-based methods such as k-means, k-median, and k-medoids, as well as linkage-based techniques, such as single-linkage, average-linkage and complete-linkage.\nWe now prove that no clustering function that satisfies the three-body rule and replication invariance can be perturbation robust. Furthermore, our result holds for all values of \u03b4 \u2264 2/3. Note that the following result applies to arbitrarily large data sets, for both multiplicative and additive perturbations.\nTheorem 1. For any \u03b4 \u2264 2/3, \u03b1 > 1, and > 0, there is no clustering function that satisfies\n1. (\u03b1, \u03b4)-multiplicative perturbation robustness, replication invariance, and the three-body rule, and\n2. ( , \u03b4)-additive perturbation robustness, replication invariance, and the three-body rule.\nFurther, the result holds for arbitrarily large data.\nProof. We proceed by contradiction, assuming that there exists a clustering function F that is replication invariant, adheres to the three-body rule, and is (\u03b1, \u03b4)-multiplicative perturbation robust for some \u03b4 \u2264 2/3.\nConsider a data set X = {a, b, c} with a distance function d such that d(b, c) < d(a, b) < d(a, c) and d(a, b) = \u03b1d(b, c). By the three-body rule, F(X, d, 2) = {{b, c}, {a}}. We now replicate each point an arbitrary number of times, r, creating three sets A,B,C such that all points that are replicas of the point a and a itself belong to A, all points that are replications of the point b and b itself belong to B, and similarly for C. By replication invariance, F(A \u222aB \u222a C, d, 2) = {B \u222a C,A}.\nNext, we apply an \u03b1-multiplicative perturbation, creating distance function d\u2032 such that d\u2032(a, b) < d\u2032(b, c) < d\u2032(a, c) and d\u2032(c, b) = \u03b1d\u0307\u2032(b, a). By the three-body rule, F(A \u222aB \u222aC, d\u2032, 2) = {B \u222aA,C}, and yet (\u03b1, 2/3)-multiplicative perturbation robustness requires that the Hamming distance between F(A\u222aB\u222aC, d, 2) and F(A\u222aB\u222aC, d\u2032, 2) must be less than 2/3. But as the Hamming distance between {B\u222aC,A} and {B\u222aA,C} is exactly 2/3, we reach a contradiction.\nFor additive perturbation, set d so that d(b, c) < d(a, b) < d(a, c) and d(a, b) = d(b, c) + 0.5 . By the three-body rule, F(X, d, 2) = {{b, c}, {a}}. As for the multiplicative case, we replicate each point r times, creating three sets A,B,C. By replication invariance, F(A\u222aB\u222aC, d, 2) = {B\u222aC,A}. We apply an -additive perturbation to make distance function d\u2032 such that d\u2032(a, b) < d\u2032(b, c) < d\u2032(a, c) and d\u2032(c, b) = d\u2032(b, a) + 0.5 . By the three-body rule, F(A\u222aB \u222aC, d\u2032, 2) = {B \u222aA,C}, and yet (\u03b1, 2/3)-additive perturbation robustness requires that the Hamming distance between F(A \u222a B \u222a C, d, 2) and F(A \u222a B \u222a C, d\u2032, 2) must be less than 2/3, reaching a contradiction.\nNote that the above result holds if the data is in Euclidean space. This allows us to view perturbations as small movements in space, required to satisfy certain constraints such as the triangle inequality as well as adhering to the dissimilarity constraints required by Definitions 2 and 3. See supplementary material for details."}, {"heading": "4 Perturbation robustness as a property of data", "text": "The above section demonstrates an inherent limitation of perturbation robustness as a property of clustering algorithms, showing that no reasonable clustering algorithm can exhibit this desirable characteristic. However, it turns out that perturbation robustness is possible to achieve when we restrict our attention to data endowed with inherent structure.\nAs such, perturbation robustness becomes a property of both an algorithm and a specific data set. We introduce a definition of perturbation robustness that directly addresses the underlying data.\nDefinition 7 ((\u03b1, \u03b4)-multiplicative perturbation robustness of data). A data set (X, d) satisfies (\u03b1, \u03b4)multiplicative perturbation robustness with respect to clustering function F and 1 \u2264 k \u2264 |X|, if for any d\u2032 that is an \u03b1-multiplicative perturbation of d,\n\u2206(F(X, d, k),F(X, d\u2032, k)) < \u03b4.\nAdditive perturbation robustness of data is defined analogously. This perspective at perturbation robustness raises a natural question: On what types of data are algorithms perturbation robust? Next, we explore the type of structures that allow popular cost-based paradigms and linkage-based methods to uncover meaningful clusters even when data is faulty.\n4.1 Perturbation robustness of k-means, k-medoids, and min-sum\nWe begin our study of data-dependent perturbation robustness by considering cluster structures required for perturbation robustness of some of the most popular clustering functions: k-means, k-medoids and min-sum. Recall that k-means Steinley [2006] finds the clustering C = {C1, . . . , Ck} that minimizes \u2211k i=1 \u2211 x\u2208Ci d(x, ci)\n2, where ci is the center of mass of cluster Ci. An equivalent formulation that does not rely on centers of mass appears in Ostrovsky et al. [2006]. A closely related clustering function is k-medoids, where centers are\nrequired to be part of the data. Formally, the k-medoids cost of C is \u2211k i=1 \u2211 x\u2208Ci d(x, ci), where ci \u2208 Ci is chosen to minimize the objective. Lastly, the min-sum Sahni and Gonzalez [1976] clustering function is the\nsum of all in-cluster distances, \u2211k i=1 \u2211 x,y\u2208Ci d(x, y).\nMany different notions of clusterability have been proposed in prior work Ackerman and Ben-David [2009], Ben-David [2015]. Although they all aim to quantify the same tendency, it has been proven that notions of clusterability are often pairwise inconsistent Ackerman and Ben-David [2009]. As such, care must be taken when selecting amongst them.\nIn order to analyze k-means and related functions, we turn our attention to an intuitive cost-based notion, which requires that clusterings of near-optimal cost be structurally similar to the optimal solution. That is, this notion characterizes clusterable data as that which has a unique optimal solution in a strong sense, by excluding the possibility of having radically different clusterings of similar cost. See Figure 2 for an illustration.\nThis property, called \u201cuniqueness of optimum\u201d1 and closely related variations were investigated by Balcan et al. [2008a], Ostrovsky et al. [2006], Agarwal et al. [2013] and Ackerman et al. [2013], among others. See Balcan et al. [2008a] for a detailed exposition.\nDefinition 8 (Uniqueness of optimum). Given a clustering function F , a data set (X, d) is (\u03b4, c, c0, k)uniquely optimal if for every k-clustering C of X where cost(C) \u2264 c \u00b7 cost(F(X, d, k)) + c0,\n\u2206(F(X, d, k), C) < \u03b4.\nWe show that whenever data satisfies the uniqueness of optimum notion of clusterability, k-means, kmedoids, and min-sum are perturbation robust. Furthermore, the degree of robustness depends on the extent to which the data is clusterable.\nFor the following proofs we will use costd(C) to denote the cost of clustering C with the distance function d. We now show the relationships between uniqueness of optimum and perturbation robustness for k-means.\n1This notion of clusterability appeared under several different names. The term \u201cuniqueness of optimum\u201d was coined by Ben-David Ben-David [2015].\nTheorem 2. Consider the k-means clustering function and a data set (X, d). If (X, d) is (\u03b4, c, c0, k)uniquely optimal, then it is also ( , \u03b4, k)-additive perturbation robust for all < min( c\u221212 , \u2212M+ \u221a M2+4MC0 2M ), where M = ( n 2 ) .\nProof. Consider a data set (X, d), and let d\u2032 be any -additive perturbation of d.\nFirst, we argue that costd\u2032(F(X, d, k)) is close to costd\u2032(F(X, d\u2032, k)). Let C = F(X, d, k). First, note that costd\u2032(F(X, d\u2032, k)) \u2264 costd\u2032(C). This is because F finds the optimal solution on (X, d\u2032), and so the clustering it selects can only have lower or equal to cost than the cost of C when evaluated with d\u2032. So, we calculate the k-means cost of C on (X, d\u2032). The k-means objective function is equivalent to\u2211k i=1 1 |Ci| \u2211 x,y\u2208Ci d(x, y) 2Ostrovsky et al. [2006]. After an additive perturbation, any pairwise distance, d(x, y), is bounded by d(x, y) + . In addition, the contribution of any in-cluster pairwise distance to the total cost of the clustering is proportional to the magnitude of the distance. It therefore follows\ncostd\u2032(F(X, d\u2032, k)) \u2264 costd\u2032(C) (1a)\n\u2264 k\u2211 i=1 1 |Ci| \u2211\n{x,y}\u2286Ci\n(d(x, y) + )2 (1b)\n\u2264 k\u2211 i=1 \u2211 {x,y}\u2286Ci 1 |Ci| (d(x, y) + )2 (1c)\n\u2264 k\u2211 i=1 \u2211 {x,y}\u2286Ci 1 |Ci| [ d(x, y)2 + 2d(x, y) + 2 ] (1d)\nBy distributing the summation in the inequality 1d we come to:\ncostd\u2032(F(X, d\u2032, k)) \u2264 k\u2211 i=1 \u2211 {x,y}\u2286Ci 1 |Ci| d(x, y)2 (2a)\n+ k\u2211 i=1 \u2211 {x,y}\u2286Ci 1 |Ci| 2d(x, y) (2b)\n+ k\u2211 i=1 \u2211 {x,y}\u2286Ci 1 |Ci| 2 (2c)\nThe first term, 2a, is equivalent to costd(F(X, d, k)). We deal with the second term, 2b, by defining two sets S1 and S2. To define S1, we first define S1i. S1i = {{x, y} \u2286 Ci|d(x, y) > 1}. Then S1 = {S1i|1 \u2264 i \u2264 k}. Similarly S2i = {{x, y} \u2286 Ci|d(x, y) \u2264 1}, and S2 = {S2i|1 \u2264 i \u2264 k}.\nk\u2211 i=1 \u2211 {x,y}\u2286Ci 1 |Ci| 2d(x, y) \u2264 k\u2211 i=1 \u2211 {x,y}\u2208S1i 1 |Ci| 2d(x, y) (3a)\n+ \u2264 k\u2211 i=1 \u2211 {x,y}\u2208S2i 1 |Ci| 2d(x, y) (3b)\nBecause for all {x, y} \u2208 S1i for all 1 \u2264 i \u2264 k, d(x, y) > 1, we can square the d(x, y) value in term 3a while only increasing the total value. Likewise, we can replace the d(x, y) value in term 3b with 1 while only increasing the total value.\nk\u2211 i=1 \u2211 {x,y}\u2286Ci 1 |Ci| 2d(x, y) \u2264 k\u2211 i=1 \u2211 {x,y}\u2208S1i 1 |Ci| 2d(x, y)2 (4a)\n+ k\u2211 i=1 \u2211 {x,y}\u2208S2i 1 |Ci| 2 (4b)\nSince S1i and S2i both consist of point pairs in Ci and we are looking for an upper bound:\nk\u2211 i=1 \u2211 {x,y}\u2286Ci 1 |Ci| 2d(x, y) \u2264 k\u2211 i=1 \u2211 {x,y}\u2286Ci 1 |Ci| 2d(x, y)2 (5a)\n+ k\u2211 i=1 \u2211 {x,y}\u2286Ci 1 |Ci| 2 (5b)\nNote that \u2211k i=1 \u2211 {x,y}\u2286Ci 1 |Ci|2d(x, y)\n2 is equivalent to 2 costd(F(X, d). We can now return to the original inequality.\ncostd\u2032(F(X, d\u2032, k)) \u2264 costd(F(X, d, k)) (6a) + 2 costd(F(X, d, k) (6b)\n+ k\u2211 i=1 \u2211 {x,y}\u2286Ci 1 |Ci| 2 (6c)\n+ k\u2211 i=1 \u2211 {x,y}\u2286Ci 1 |Ci| 2 (6d)\nWhile we cannot know the size of individual clusters in the general case we do know 1|Ci| is upper bounded by 1. Therefore we can substitute 1|Ci| with 1 in terms 6c and 6d while only increasing the value. For the same reasons we do not know the number of in-cluster point pairs in the general case in terms 6c and 6d. However we do know the number of in-cluster point pairs is bounded by the total number of point pairs, namely ( n 2 ) which can be substituted in the same way while only increasing the value.\ncostd\u2032(F(X, d\u2032, k)) \u2264 costd(F(X, d, k)) (7a) + 2 costd(F(X, d, k)) (7b)\n+\n( n\n2\n) 2 (7c)\n+\n( n\n2\n) 2 (7d)\nTherefore we know: costd\u2032(F(X, d\u2032, k)) \u2264 (1 + 2 )costd(F(X, d, k)) + ( n\n2\n) (2 + 2)\nThen, c \u2265 1 + 2 , so \u2264 c\u221212 . Similarly, c0 \u2265 M( 2 + 2 ), so \u2264 \u2212M+ \u221a M2+4MC0 2M where M = ( n 2 ) . So,\n< min( c\u221212 , \u2212M+ \u221a M2+4MC0 2M ).\nTheorem 3. Consider the k-means clustering function and a data set (X, d). If (X, d) is (\u03b4, c, c0, k)-uniquely optimal, then it is also (\u03b1, \u03b4, k)-multiplicative perturbation robust for all \u03b1 < \u221a c.\nProof. Consider a data set (X, d), and let d\u2032 be any \u03b1-multiplicative perturbation of d. First, we argue that costd\u2032(F(X, d, k)) is close to costd\u2032(F(X, d\u2032, k)). Let C = F(X, d, k). First, note that costd\u2032(F(X, d\u2032, k)) \u2264 costd\u2032(C). This is because F finds the optimal solution on (X, d\u2032), and so the clustering it selects can only have lower cost than the cost of C when evaluated with d\u2032.\nSo, we calculate the cost of C on (X, d\u2032). The k-means cost function is bounded by \u2211k i=1 \u2211 x,y\u2208Ci 1 |Ci|d(x, y) 2.\nAfter a multiplicative perturbation, the contribution of an edge of length d(x, y), which used to contribute at most d(x, y)2 to the cost of the function, contributes at most (\u03b1 \u00b7 d(x, y))2, and so the contribution increases by at most a factor of \u03b12. costd\u2032(F(X, d\u2032)) \u2264 costd\u2032(C) \u2264 \u2211k i \u2211 {x,y}\u2286Ci 1 |Ci| (\u03b1 \u00b7 d(x, y))\n2 \u2264 \u03b12costd(C). Then, c \u2265 \u03b12, so \u03b1 \u2264 \u221a c.\nThe proofs for k-medoid and min-sum follow similarly and are included in the appendix."}, {"heading": "4.2 Perturbation robustness of Linkage-Based algorithms", "text": "We now move onto Linkage-Based algorithms, which in contrast to the methods studied in the previous section, do not seek to optimize an explicit objective function. Instead, they perform a series of merges, combining clusters according to their own measure of between-cluster distance.\nGiven clusters A,B \u2286 X, the following are the between-cluster distances of some of the most popular Linkage-Based algorithms:\n\u2022 Single linkage: mina\u2208A,b\u2208B d(a, b)\n\u2022 Average linkage: \u2211 a\u2208A,b\u2208B d(a,b) (|A|\u00b7|B|)\n\u2022 Complete linkage: maxa\u2208A,b\u2208B d(a, b)\nWe consider Linkage-Based algorithms with the k-stopping criterion, which terminate an algorithm when k clusters remain, and return the resulting partitioning.\nBecause no explicit objective functions are used, we cannot rely on the uniqueness of optimum notion of clusterability. To define the type of cluster structure on which Linkage-Based algorithms exhibit perturbation robustness, we introduce a natural measure of clusterability based on a definition by Balcan et al Balcan et al. [2008b]. The original notion required data to contain a clustering where every element is closer to all elements in its cluster than to all other points. This notion was also used in Ackerman et al. [2012], Reyzin [2012], and Ackerman and Dasgupta [2014]. See Figure 4 for an illustration.\nDefinition 9 ((\u03b1, k)-strictly separable). A data set (X, d) is (\u03b1, k)-strictly separable if there exists a unique clustering C = {C1, . . . , Ck} of X so that for all i 6= j and all x, y \u2208 Ci, z \u2208 Cj, \u03b1d(x, y) \u2264 d(x, z).\nThe definition for ( , k)-strictly additive separable is analogous.\nDefinition 10 (( , k)-Strictly Additive Separable). A data set (X, d) is ( , k)-Strictly Additive Separable if there exists a unique clustering C = {C1, . . . , Ck} of X so that for all i 6= j and all x, y \u2208 Ci, z \u2208 Cj, d(x, y) + \u2264 d(x, z).\nBefore moving on to our results for Linkage-Based algorithms, we show that the above notions of clusterability are not sufficient to show that data is perturbation robust for k-means and similar methods. This indicates that different algorithms require different cluster structures in order to exhibit perturbation robustness. We show this results for (\u03b1, k)-strictly separable data. The proof for ( , k)-strictly additive separable data is in the supplementary material.\nTheorem 4. Let F be any one of k-means, k-medoids, or min-sum. Then for any \u03b1 > 1, \u03b4 < 2(k\u22121)nk2(n\u22121) , there exists an (\u03b1, k)-strictly separable data set on which F is not (\u03b1, \u03b4)-multiplicative perturbation robust.\nProof. We construct such a data set (X, d) such that there is one cloud of points densely packed together and k \u2212 1 singleton points far away from all other points. Further, in this construction n|k2 and n >> k. The strictly separable clustering of X will consist of the k \u2212 1 singleton points being separate clusters and the cloud being in one cluster.\nArrange the cloud of points such that the ratio of the largest to smallest in-cloud distance is less than \u03b1, the ratio of the largest to smallest cloud point to singleton point distance is less than \u03b1, and all points are separated such that F splits the cloud evenly into k separate clusters and the singleton points go into separate clusters.\nBecause the ratio between the largest and smallest in-cloud distance is less than \u03b1, an \u03b1-multiplicative perturbation can radically change the structure of the points in the cloud. If a point is identified by its distances to all other data, then perturbing the distance function can cause points to switch with one another. This ability to change applies similarly to the distance between cloud and singleton points. Because points can be arbitrarily made to act like other points, we perturb the data set such that the maximum number of in/between-cluster relationships are changed (with the restriction of never switching points from being in the cloud to being a singleton point and vice versa, because a multiplicative perturbation cannot necessarily make this switch).\nWe maximize the possible Hamming distance under the previous assumptions by constructing the following two data sets: First, divide the points of the cloud evenly into k clusters. This is our first clustering. Then taking that clustering, re-cluster the points by grouping the points in each cluster into groups of n/k2. Finally, form the new clusters by selecting one group from each previous cluster to be in a new cluster. See figure 3 for an example.\nTo find the Hamming distance between these two clusterings we first find the number of pairwise relationships that were formerly between-cluster that are now in-cluster. First, remember that a group contains n/k2 points and there will be k ( k 2 ) group pairs that were formerly between-cluster that are now in cluster. Next, each point in a group will contribute n/k2 to the Hamming distance per group pair. This gives the amount contributed to the Hamming distance by points relationships that were formerly between-cluster that are now in-cluster as k n 2\nk4 ( k 2 ) .\nWe now find the number of pairwise dissimilarities that were formerly in-cluster that are now betweencluster. Similar to before, each group contains n/k2 points and there will be k ( k 2 ) groups that were formerly\nin-cluster that are now between-cluster. This gives the total Hamming distance as 2k n 2\nk4 ( k 2 )( n 2 )\u22121 , which\nreduces to 2(k\u22121)nk2(n\u22121) .\nWe now show that whenever data is strictly separable, then it is also perturbation robust with respect to some of the most popular Linkage-Based algorithms. An analogous result for additive perturbation robustness appears in the supplementary material.\nTheorem 5. Single-Linkage, Average-Linkage, and Complete-Linkage are (\u03b1, 0)-multiplicative perturbation robust on all (\u03b12, k)-strictly separable data sets.\nProof. We begin by showing that whenever data is (1, k)-strictly separable, then these Linkage-Based algorithms identify the underlying cluster structure. This result was previously shown for Single-Linkage Balcan et al. [2008b] and Average-Linkage Ackerman et al. [2012]. We now prove this for complete-linkage.\nFirst, we introduce the concept of a refinement. A clustering C \u2032 is a refinement of clustering C\u2217 if C\u2217 can be obtained by merging clusters in C \u2032. The proof proceeds by induction on the number of iterations, showing that at each step of the algorithm, the current clustering is a refinement of the strictly separable k-clustering C. Since Linkage-Based algorithms start by placing each point in its own cluster, the clustering formed in the first step is a refinement of C. Assuming that the hypothesis holds at step i of the algorithm, we show that it is retained in the following step. Consider any C1 and C2 that are a subset of the same cluster in C, and any C3 that is a subset of a different cluster in C. Let (x, y) = argmaxx\u2208C1,y\u2208C2d(x, y). Then, the dissimilarity between x and any point in C3 is greater than d(x, y) since the data is (1, k)-strictly separable. Then Complete-Linkage merges C1 with C2 before merging C1 with C3.\nLastly, observe that data that is (\u03b12, k)-strictly separable is also (1, k)-strictly separable, and remains so after an \u03b1-perturbation, as shown in Lemma 1 in the appendix. It follows that single, average, and complete linkage are (\u03b1, 0)-Multiplicative Perturbation Robust on (\u03b12, k)-strictly separable data."}, {"heading": "5 Conclusions", "text": "As a property of an algorithm, perturbation robustness fails in a strong sense, contradicting even more fundamental requirements of clustering functions. As such, no algorithm can exhibit this desirable characteristic on all data sets. Notably, this result persists even if we allow two-thirds of all pairwise distance to change following a perturbation.\nHowever, a more optimistic picture emerges when considering clusterable data, and we show that popular paradigms are able to discover some cluster structures even on faulty data. Further, different clustering techniques are perturbation robust on different cluster structures. This has important implications for the \u201cuser\u2019s dilemma,\u201d which is the problem of selecting a suitable clustering algorithm for a given task. Faced with the challenge of clustering data with imprecise dissimilarities between pairwise entities, a user cannot\nsimply elect to apply a perturbation robust technique as no such methods exist, and as such the selection of suitable methods calls for some insight on the underlying structure of the data.\nFuture work will investigate robustness of heuristics, such as Lloyd\u2019s method, for which preliminary analysis suggests that the cluster structure required for perturbation robustness depends on the method of initialization.\nAppendix"}, {"heading": "6 Impossibility theorems for \u03b4 = 0", "text": "In prior work, perturbation robustness is often defined with \u03b4 = 0, requiring that the clustering remain unchanged after a perturbation. Unfortunately, as a property of an algorithm, this formulation fails in a strong sense. That is, we show that no reasonable clustering function can satisfy this condition without effectively ignoring all pairwise distances, by outputting the same partitioning irrespective of the setting of d.\nSpecifically, we prove that both additive and multiplicative perturbation robustness with \u03b4 = 0 contradicts 2-Richness, which is a relaxation Kleinberg\u2019s Richness axiom. This property requires clustering functions to be at least minimally responsive to pairwise dissimilarity. That is, given complete freedom to reassign all dissimilarities, we should be able to change the output of the function. This basic property is satisfied by all reasonable clustering methods Ackerman et al. [2010b].\nLet Range(F , X, k) denote the set of all clusterings C so that F(X, d, k) = C for some dissimilarity function d.\nDefinition 11 (2-Richness). For all X, |Range(F , X, k)| \u2265 2.\nWe now prove that both additive and multiplicative perturbation robustness (with \u03b4 = 0) are inconsistent with 2-Richness.\nTheorem 6. No clustering function is both 2-Rich and -Additive Perturbation Robust for any > 0.\nProof. Let F be any 2-Rich clustering function. Then for any domain setX, there exist dissimilarity functions d and d\u2032 so that F(X, d, k) 6= F(X, d\u2032, k). Observe that we can transform d into d\u2032 by making incremental changes, each changing the dissimilarity function by no more than on each pairwise dissimilarity. Then, by -Perturbation-Robustness, F(X, d, k) = F(X, d\u2032, k), contradicting the previous claim.\nNow we prove the analogous result for multiplicative perturbation robustness.\nTheorem 7. No clustering function is both 2-Rich and \u03b1-Multiplicative Perturbation Robust for any \u03b1 > 1.\nProof. Let F be any 2-Rich, Isomorphic Invariant, and \u03b1-Multiplicative Perturbation Robust clustering function. Then for any domain set X, there exist dissimilarity functions d and d\u2032 so that F(X, d, k) 6= F(X, d\u2032, k). Observe we can transform d into d\u2032 through a series of \u03b1-multiplicative perturbations, changing each pairwise distance by a factor of \u03b1 or less with each perturbation.\nA contradiction is therefore achieved. By \u03b1-Multiplicative Perturbation Robustness F(X, d, k) = F(X, d\u2032, k), and by 2-Richness F(X, d, k) 6= F(X, d\u2032, k).\nThe above results implies that perturbation robustness with \u03b4 = 0 is too stringent a requirement for clustering functions."}, {"heading": "7 Proof of Lemma 1", "text": "Lemma 1. The minimum separation a data set that is (\u03b12, k)-strictly separable can be after an \u03b1-multiplicative perturbation is (1, k)-strictly separable.\nProof. If a data set is (\u03b12, k)-strictly separable, the minimum between-cluster dissimilarity must be greater than the maximum in-cluster dissimilarity by a factor of \u03b12, argmin(d(x, y)|x, y \u2208 Xx 6\u223cC y) \u2265 \u03b12argmax(d(x, y)|x, y \u2208 Xx \u223cC y).\nAn \u03b1-multiplicative perturbation can change any pairwise distance by at most a factor of \u03b1\u00b11, argmin(\u03b1\u00b7 d(x, y)|x, y \u2208 Xx 6\u223cC y) \u2265 \u03b12argmax(\u03b1\u22121 \u00b7 d(x, y)|x, y \u2208 Xx \u223cC y) because the multiplication is applied to\nall arguments and is outside of the distance function this simplifies to \u03b1 \u00b7 argmin(d(x, y)|x, y \u2208 Xx 6\u223cC y) \u2265 \u03b1 \u00b7 argmax(d(x, y)|x, y \u2208 Xx \u223cC y).\nTherefore argmin(d(x, y)|x, y \u2208 Xx 6\u223cC y) \u2265 argmax(d(x, y)|x, y \u2208 Xx \u223cC y). This is equivalent to the definition of (1, k)-strictly separable."}, {"heading": "8 Excluded multiplicative perturbation proofs", "text": "Theorem 8. Consider the k-medoids clustering function and a data set (X, d). If (X, d) is (\u03b4, c, c0, k)uniquely optimal, then it is also (\u03b1, \u03b4, k)-multiplicative perturbation robust for all \u03b1 < c.\nProof. Consider a data set (X, d), and let d\u2032 be any \u03b1-multiplicative perturbation of d. First, we argue that costd\u2032(F(X, d, k)) is close to costd\u2032(F(X, d\u2032, k)). Let C = F(X, d, k) First, note that costd\u2032(F (X, d \u2032, k)) \u2264 costd\u2032(C). This is because F finds the optimal solution on (X, d\u2032), and so the clustering it selects can only have lower cost than the cost of C. We also compute the cost of each element to the same cluster centers as in C, as it provides an upper bound on costd\u2032(C. So, costd\u2032(C) \u2264 \u03b1 \u00b7 costd(C). So, c \u2265 \u03b1, so \u03b1 < c.\nTheorem 9. Given the min-sum objective, a data set that is (\u03b4, \u03b1, 0, k)-uniquely optimal is also (\u03b1, \u03b4)multiplicative perturbation robust.\nProof. Let C be the optimal min-sum clustering of an arbitrary data set. Let d\u2032 be any \u03b1-multiplicative perturbation of d. Therefore costd\u2032(C) is at worst:\n\u03a3ki=1\u03a3x,y\u2208Cid \u2032(x, y)\n= \u03a3ki=1\u03a3x,y\u2208Ci\u03b1d(x, y)\n= \u03b1 \u00b7 costd(C)\nBecause costd\u2032(C) \u2264 \u03b1 \u00b7 costd(C), \u2206(F(X, d, k),F(X, d\u2032, k)) < \u03b4. Therefore the maximum change an \u03b1multiplicative perturbation can produce approaches \u03b4."}, {"heading": "9 Equivalent results for additive perturbation", "text": "We now prove the results in the main paper but for additive instead of multiplicative perturbation. First, recall the definition of additive perturbation.\nDefinition 12 ( -additive perturbation of a dissimilarity function). Given a pair of dissimilarity functions d and d\u2032 over a domain X, d\u2032 is an -additive perturbation of d, for > 0, if for all x, y \u2208 X, d(x, y)\u2212 \u2264 d\u2032(x, y) \u2264 d(x, y) + .\nDefinition 13 (( , \u03b4)-Additive Perturbation Robust Clustering Function). A clustering function F is ( , \u03b4)Additive-Perturbation Robust, if for any d\u2032 that is an -additive-perturbation of d, \u2206(F(X, d, k),F(X, d\u2032, k)) \u2264 \u03b4.\nTheorem 10. Consider the k-medoids clustering function. If (X, d) is (\u03b4, c, c0, k)-uniquely optimal, then it is also ( , \u03b4, k)-additive perturbation robust for all < \u221a\n2c0 n(n\u22121) .\nProof. Consider a data set (X, d), and let d\u2032 be any -additive perturbation of d. First, we argue that costd\u2032(F(X, d, k)) is close to costd\u2032(F(X, d\u2032, k)). Let C = F(X, d, k) First, note that costd\u2032(F(X, d\u2032, k)) \u2264 costd\u2032(C). This is because F finds the optimal solution on (X, d\u2032), and so the clustering it selects can only have lower cost than the cost of C. We also compute the cost of each element to the same cluster centers as in C, as it provides an upper bound on costd\u2032(C). So, costd\u2032(C) \u2264 costd(C) + ( n 2 ) . So,\nc0 \u2265 ( n 2 ) , so < \u221a 2c0 n(n\u22121) .\nTheorem 11. Given the min-sum objective, (\u03b4, 0, ( n 2 ) , k)-uniquely optimal data sets are ( , \u03b4)-additive perturbation robust.\nProof. Let C be the optimal k-means clustering of an an arbitrary data set. Let d\u2032 be any -perturbation of d. Therefore costd\u2032(C) is at most:\nk\u2211 i=1 \u2211 x,y\u2208Ci d\u2032(x, y)\n\u2264 k\u2211 i=1 \u2211 x,y\u2208Ci d(x, y) +\n\u2264 costd(C) + k\u2211 i=1 \u2211 x,y\u2208Ci\n\u2264 costd(C) + ( n\n2 ) Because costd\u2032(C) < costd(C) + ( n 2 ) , \u2206(F(X, d, k),F(X, d\u2032, k)) < \u03b4. Therefore the maximum change an\n-perturbation can produce approaches \u03b4.\nDefinition 14 (( , k)-Strictly Additive Separable). A data set (X, d) is ( , k)-Strictly Additive Separable if there exists a unique clustering C = {C1, . . . , Ck} of X so that for all i 6= j and all x, y \u2208 Ci, z \u2208 Cj, d(x, y) + \u2264 d(x, z).\nTheorem 12. Let F be any one of k-means, k-medoids, or min-sum. Then for any > 0, \u03b4 < (k\u22122)(n\u2212k) 2\n(k\u22121)n2 ,\nthere exists an ( , k)-strictly-additive separable data set on which F is not ( , \u03b4)-additive perturbation robust.\nProof. With respect to -additive perturbations: Taking the same base data set as before we now set the cloud to be sufficiently dense, and the singleton points to be organized so that F merges all but the large cluster, and as such the final clustering depends nearly entirely on the internal structure of the large cluster.\nArrange the the data set to consist of dissimilarities smaller than , so an -perturbation of d can radically alter the output of F . In particular, we can arrange the large cluster so that F(X, d, k) subdivides it into k equal size groups, and after the perturbation all points in that cluster form a single cluster by moving the points in that cluster very close together.\nWe now compute the distance between these two clusterings. The original clustering, looking only at the data in the large cluster, has ( k\u22121 2 ) (n\u2212k+12 ) 2 between-cluster edges, all of which become incluster edges after\nthe perturbation. So, the two clusterings differ by at least ( k\u22121 2 ) (n\u2212k+1k\u22121 ) 2/ ( n 2 ) > (k\u22122)(n\u2212k) 2 (k\u22121)n2 .\nTheorem 13. Single-Linkage, Average-Linkage, and Complete-Linkage are ( , 0)-perturbation robust on all (2 , k)-strictly additive Separable data sets.\nProof. We begin by showing that whenever data is (0, k)-strictly additive separable, then these Linkage-Based algorithms identify the underlying cluster structure. This result was previously shown for Single-Linkage and Average-Linkage. We now prove this for complete-linkage.\nRecall the definition of a refinement. A clustering C \u2032 is a refinement of clustering C\u2217 if C\u2217 can be obtained by merging clusters in C \u2032. The proof proceeds by induction on the number of iterations, showing that at each step of the algorithm, the current clustering is a refinement of the strictly separable k-clustering C. Since Linkage-Based algorithms start by placing each point in its own cluster, the clustering formed in the first step is a refinement of C. Assuming that the hypothesis holds at step i of the algorithm, we show that it is retained in the following step. Consider any C1 and C2 that are a subset of the same cluster in C, and any C3 that is a subset of a different cluster in C. Let (x, y) = argmaxx\u2208C1,y\u2208C2d(x, y). Then, the\ndissimilarity between x and any point in C3 is greater than d(x, y) since the data is (0, k)-strictly separable. Then Complete-Linkage merges C1 with C2 before merging C1 with C3.\nLastly, observe that (2 , k)-strictly additive separable data is also (0, k)-strictly additive separable, and remains so after an -perturbation. It follows that Single-Linkage, Average-Linkage, and Complete-Linkage are ( , 0)-Perturbation-Robust on (2 , k)-strictly separable data. See lemma below.\nLemma 2. The minimum separation a data set that is (2 , k)-strictly additive separable can be after an -additive perturbation is (0, k)-strictly additive separable\nProof. If a data set is (2 , k)-strictly additive separable then the maximum in cluster distance is smaller than the minimum out of cluster distance by 2 , argmin(d(x, y)|x, y \u2208 X x 6\u223cc y)\u2212argmax(d(x, y)|x, y \u2208 X x \u223cc y) = 2 . An -additive perturbation can change any pairwise distance by at most\u00b1 , argmin(d(x, y)+ |x, y \u2208 X x 6\u223cc y) \u2212 argmax(d(x, y) \u2212 |x, y \u2208 X x \u223cc y) = 2 . because addition and subtraction is applied to all arguments this simplifies to argmin(d(x, y)|x, y \u2208 X x 6\u223cc y)+ \u2212(argmax(d(x, y)|x, y \u2208 X x \u223cc y)\u2212 ) = 2 . Therefore, argmin(argmin(d(x, y)|x, y \u2208 X x 6\u223cc y) \u2212 argmax(d(x, y) \u00b1 r |x, y \u2208 X x \u223cc y)) = 0. This is equivalent to being (0, k)-strictly additive separable."}, {"heading": "10 Impossibility Result for Euclidean Space Clustering", "text": "Definition 15 (Euclidean \u03b1-multiplicative perturbation). Given a data set embedded into Euclidean space X, an \u03b1-multiplicative perturbation of X produces X \u2032 s.t. all x \u2208 X can be moved freely in the space to produce x\u2032 given that for all x, y \u2208 X, x\u2032, y\u2032 \u2208 X \u2032, \u03b1\u22121 \u00b7 d(x, y) \u2264 d(x\u2032, y\u2032) \u2264 \u03b1 \u00b7 d(x\u2032, y\u2032).\nDefinition 16 (Euclidean -additive perturbation). Give a data set embedded into Euclidean space X, an -additive pertubation of X produces X \u2032 s.t. all x \u2208 X can be moved freely in the space to produce x\u2032 given that for all x, y \u2208 X, x\u2032, y\u2032 \u2208 X \u2032, d(x, y)\u2212 \u2264 d(x\u2032, y\u2032) \u2264 d(x\u2032, y\u2032) + .\nTheorem 14. There can be no clustering algorithm that follows the three body rule, is data replication invariant and is either \u03b1-multiplicative perturbation robust or -additive perturbation robust while clustering data in Euclidean space.\nProof. Like before we create a data set X = {a, b, c}. However this time we define where the points lie in Euclidean space. Let a = ~1d Where \u2212\u2192 1d is the d-dimensional vector with all ones. Next we define b = \u2212\u2212\u2212\u2192 2 + \u2032d for some arbitrarily small \u2032 and c = \u2212\u2212\u2212\u2212\u2192 3 + \u2032d . By the three body rule the resulting clustering must be C = {{a}, {b, c}}. Now, we perturb the points to create X \u2032. The \u03b1-multiplicative perturbation moves the point b to \u2212\u2212\u2212\u2192 2+ \u2032\n\u03b1 d , and the -additive perturbation moves the point b to\n\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2192 (2 + \u2032 \u2212 )d both leaving all other\npoints untouched. Neither of the perturbations change any pairwise distance by a factor of \u03b1\u00b11 or in absolute \u00b1 respectively.\nNote in the multiplicative case the \u2032 addition can be set arbitrarily small s.t. the \u03b1\u22121 factor will dominate\nwhether the point is further or closer to the \u2212\u2192 0d than \u2212\u2192 2d.\nBy the three body rule X \u2032 must be clustered as C = {{a, b}, {c}} and the perturbation robustness demands the clustering be C = {{a}, {b, c}}. Finally, data replication invariance can be used to increase the size of X \u2032 to be arbitrarily large no longer requiring there to be only three points while still maintaining the contradiction."}], "references": [{"title": "Center-based clustering under perturbation stability", "author": ["P. Awasthi", "A. Blum", "O. Sheffet"], "venue": "Models of Computation,", "citeRegEx": "Awasthi et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Awasthi et al\\.", "year": 2013}, {"title": "Computational feasibility of clustering under clusterability assumptions", "author": ["2008b. S. Ben-David"], "venue": null, "citeRegEx": "Ben.David.,? \\Q2008\\E", "shortCiteRegEx": "Ben.David.", "year": 2008}, {"title": "Data stability in clustering: A closer look", "author": ["S. Ben-David", "L. Reyzin"], "venue": "Theoretical Computer Science,", "citeRegEx": "Ben.David and Reyzin.,? \\Q2015\\E", "shortCiteRegEx": "Ben.David and Reyzin.", "year": 2015}, {"title": "Are stable instances easy", "author": ["Y. Bilu", "N. Linial"], "venue": "In 1st Symposium on Innovations in Computer Science", "citeRegEx": "Bilu and Linial.,? \\Q2014\\E", "shortCiteRegEx": "Bilu and Linial.", "year": 2014}, {"title": "Admissible clustering procedures", "author": ["ICS", "2010. L. Fisher", "J. Van Ness"], "venue": "Biometrika, 58(1):91\u2013104,", "citeRegEx": "ICS et al\\.,? \\Q1971\\E", "shortCiteRegEx": "ICS et al\\.", "year": 1971}, {"title": "The effectiveness of Lloyd-type methods", "author": ["R. Ostrovsky", "Y. Rabani", "L. Schulman", "C. Swamy"], "venue": null, "citeRegEx": "Ostrovsky et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Ostrovsky et al\\.", "year": 2003}, {"title": "P-complete approximation problems", "author": ["Springer", "2012. S. Sahni", "T. Gonzalez"], "venue": "Journal of the ACM (JACM),", "citeRegEx": "Springer et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Springer et al\\.", "year": 2012}, {"title": "K-means clustering: a half-century synthesis", "author": ["D. Steinley"], "venue": "British Journal of Mathematical and Statistical Psychology,", "citeRegEx": "Steinley.,? \\Q2006\\E", "shortCiteRegEx": "Steinley.", "year": 2006}, {"title": "A formalization of cluster analysis", "author": ["W. Wright"], "venue": "Pattern Recognition,", "citeRegEx": "Wright.,? \\Q1973\\E", "shortCiteRegEx": "Wright.", "year": 1973}, {"title": "A uniqueness theorem for clustering", "author": ["R. Zadeh", "S. Ben-David"], "venue": "In Proceedings of the Twenty-Fifth Conference on Uncertainty in Artificial Intelligence. UAI,", "citeRegEx": "Zadeh and Ben.David.,? \\Q2009\\E", "shortCiteRegEx": "Zadeh and Ben.David.", "year": 2009}], "referenceMentions": [{"referenceID": 3, "context": "Efforts in the field began as early as the 1970s with the pioneering work of Wright Wright [1973] on axioms of clustering, as well analysis of clustering properties by Fisher et al Fisher and Van Ness [1971] and Jardine et al Jardine and Sibson [1971], among others.", "startOffset": 77, "endOffset": 98}, {"referenceID": 3, "context": "Efforts in the field began as early as the 1970s with the pioneering work of Wright Wright [1973] on axioms of clustering, as well analysis of clustering properties by Fisher et al Fisher and Van Ness [1971] and Jardine et al Jardine and Sibson [1971], among others.", "startOffset": 77, "endOffset": 208}, {"referenceID": 3, "context": "Efforts in the field began as early as the 1970s with the pioneering work of Wright Wright [1973] on axioms of clustering, as well analysis of clustering properties by Fisher et al Fisher and Van Ness [1971] and Jardine et al Jardine and Sibson [1971], among others.", "startOffset": 77, "endOffset": 252}, {"referenceID": 3, "context": "Efforts in the field began as early as the 1970s with the pioneering work of Wright Wright [1973] on axioms of clustering, as well analysis of clustering properties by Fisher et al Fisher and Van Ness [1971] and Jardine et al Jardine and Sibson [1971], among others. This field saw a renewed surge of activity following Kleinberg\u2019s Kleinberg [2003] famous impossibility theorem, when he showed that no clustering function can simultaneously satisfy three simple properties.", "startOffset": 77, "endOffset": 349}, {"referenceID": 3, "context": "Efforts in the field began as early as the 1970s with the pioneering work of Wright Wright [1973] on axioms of clustering, as well analysis of clustering properties by Fisher et al Fisher and Van Ness [1971] and Jardine et al Jardine and Sibson [1971], among others. This field saw a renewed surge of activity following Kleinberg\u2019s Kleinberg [2003] famous impossibility theorem, when he showed that no clustering function can simultaneously satisfy three simple properties. Also related to our work is a framework for selecting clustering methods based on differences in their input-output behavior Ackerman et al. [2010b, 2012], Jardine and Sibson [1971], Zadeh and Ben-David [2009], Ackerman et al.", "startOffset": 77, "endOffset": 656}, {"referenceID": 0, "context": "[2010b, 2012], Jardine and Sibson [1971], Zadeh and Ben-David [2009], Ackerman et al.", "startOffset": 52, "endOffset": 69}, {"referenceID": 0, "context": "[2010b, 2012], Jardine and Sibson [1971], Zadeh and Ben-David [2009], Ackerman et al. [2010a, 2013] as well as research on clusterability, which aims to quantify the degree of inherent cluster structure in data Ben-David [2015], Ackerman and Ben-David [2009], Balcan et al.", "startOffset": 52, "endOffset": 228}, {"referenceID": 0, "context": "[2010b, 2012], Jardine and Sibson [1971], Zadeh and Ben-David [2009], Ackerman et al. [2010a, 2013] as well as research on clusterability, which aims to quantify the degree of inherent cluster structure in data Ben-David [2015], Ackerman and Ben-David [2009], Balcan et al.", "startOffset": 52, "endOffset": 259}, {"referenceID": 0, "context": "[2010b, 2012], Jardine and Sibson [1971], Zadeh and Ben-David [2009], Ackerman et al. [2010a, 2013] as well as research on clusterability, which aims to quantify the degree of inherent cluster structure in data Ben-David [2015], Ackerman and Ben-David [2009], Balcan et al. [2008a,b], Ostrovsky et al. [2006]. Previous work on perturbation robustness studies it from a computational perspective by identifying new efficient algorithms for robust instances Bilu and Linial [2010], Ackerman and Ben-David [2009], Awasthi et al.", "startOffset": 52, "endOffset": 309}, {"referenceID": 0, "context": "[2010b, 2012], Jardine and Sibson [1971], Zadeh and Ben-David [2009], Ackerman et al. [2010a, 2013] as well as research on clusterability, which aims to quantify the degree of inherent cluster structure in data Ben-David [2015], Ackerman and Ben-David [2009], Balcan et al. [2008a,b], Ostrovsky et al. [2006]. Previous work on perturbation robustness studies it from a computational perspective by identifying new efficient algorithms for robust instances Bilu and Linial [2010], Ackerman and Ben-David [2009], Awasthi et al.", "startOffset": 52, "endOffset": 479}, {"referenceID": 0, "context": "[2010b, 2012], Jardine and Sibson [1971], Zadeh and Ben-David [2009], Ackerman et al. [2010a, 2013] as well as research on clusterability, which aims to quantify the degree of inherent cluster structure in data Ben-David [2015], Ackerman and Ben-David [2009], Balcan et al. [2008a,b], Ostrovsky et al. [2006]. Previous work on perturbation robustness studies it from a computational perspective by identifying new efficient algorithms for robust instances Bilu and Linial [2010], Ackerman and Ben-David [2009], Awasthi et al.", "startOffset": 52, "endOffset": 510}, {"referenceID": 0, "context": "Previous work on perturbation robustness studies it from a computational perspective by identifying new efficient algorithms for robust instances Bilu and Linial [2010], Ackerman and Ben-David [2009], Awasthi et al. [2012]. Ben-David and Reyzin Ben-David and Reyzin [2014] recently studied corresponding NP-hardness lower bounds.", "startOffset": 201, "endOffset": 223}, {"referenceID": 0, "context": "Previous work on perturbation robustness studies it from a computational perspective by identifying new efficient algorithms for robust instances Bilu and Linial [2010], Ackerman and Ben-David [2009], Awasthi et al. [2012]. Ben-David and Reyzin Ben-David and Reyzin [2014] recently studied corresponding NP-hardness lower bounds.", "startOffset": 201, "endOffset": 273}, {"referenceID": 2, "context": "This view of perturbation robustness is not only intuitive, but is also based on previous formulations Reyzin [2012], Bilu and Linial [2010], Awasthi et al.", "startOffset": 118, "endOffset": 141}, {"referenceID": 0, "context": "This view of perturbation robustness is not only intuitive, but is also based on previous formulations Reyzin [2012], Bilu and Linial [2010], Awasthi et al. [2012] (This can be formalized as a property of clustering functions by setting \u03b4 = 0 in Definition 4 below).", "startOffset": 142, "endOffset": 164}, {"referenceID": 8, "context": "The following impossibility result derives from the pioneering work of Wright Wright [1973] on axioms of clustering.", "startOffset": 71, "endOffset": 92}, {"referenceID": 5, "context": "Recall that k-means Steinley [2006] finds the clustering C = {C1, .", "startOffset": 20, "endOffset": 36}, {"referenceID": 4, "context": "An equivalent formulation that does not rely on centers of mass appears in Ostrovsky et al. [2006]. A closely related clustering function is k-medoids, where centers are required to be part of the data.", "startOffset": 75, "endOffset": 99}, {"referenceID": 4, "context": "An equivalent formulation that does not rely on centers of mass appears in Ostrovsky et al. [2006]. A closely related clustering function is k-medoids, where centers are required to be part of the data. Formally, the k-medoids cost of C is \u2211k i=1 \u2211 x\u2208Ci d(x, ci), where ci \u2208 Ci is chosen to minimize the objective. Lastly, the min-sum Sahni and Gonzalez [1976] clustering function is the sum of all in-cluster distances, \u2211k i=1 \u2211 x,y\u2208Ci d(x, y).", "startOffset": 75, "endOffset": 361}, {"referenceID": 1, "context": "Many different notions of clusterability have been proposed in prior work Ackerman and Ben-David [2009], Ben-David [2015].", "startOffset": 87, "endOffset": 104}, {"referenceID": 1, "context": "Many different notions of clusterability have been proposed in prior work Ackerman and Ben-David [2009], Ben-David [2015]. Although they all aim to quantify the same tendency, it has been proven that notions of clusterability are often pairwise inconsistent Ackerman and Ben-David [2009].", "startOffset": 87, "endOffset": 122}, {"referenceID": 1, "context": "Many different notions of clusterability have been proposed in prior work Ackerman and Ben-David [2009], Ben-David [2015]. Although they all aim to quantify the same tendency, it has been proven that notions of clusterability are often pairwise inconsistent Ackerman and Ben-David [2009]. As such, care must be taken when selecting amongst them.", "startOffset": 87, "endOffset": 288}, {"referenceID": 1, "context": "Many different notions of clusterability have been proposed in prior work Ackerman and Ben-David [2009], Ben-David [2015]. Although they all aim to quantify the same tendency, it has been proven that notions of clusterability are often pairwise inconsistent Ackerman and Ben-David [2009]. As such, care must be taken when selecting amongst them. In order to analyze k-means and related functions, we turn our attention to an intuitive cost-based notion, which requires that clusterings of near-optimal cost be structurally similar to the optimal solution. That is, this notion characterizes clusterable data as that which has a unique optimal solution in a strong sense, by excluding the possibility of having radically different clusterings of similar cost. See Figure 2 for an illustration. This property, called \u201cuniqueness of optimum\u201d and closely related variations were investigated by Balcan et al. [2008a], Ostrovsky et al.", "startOffset": 87, "endOffset": 913}, {"referenceID": 1, "context": "Many different notions of clusterability have been proposed in prior work Ackerman and Ben-David [2009], Ben-David [2015]. Although they all aim to quantify the same tendency, it has been proven that notions of clusterability are often pairwise inconsistent Ackerman and Ben-David [2009]. As such, care must be taken when selecting amongst them. In order to analyze k-means and related functions, we turn our attention to an intuitive cost-based notion, which requires that clusterings of near-optimal cost be structurally similar to the optimal solution. That is, this notion characterizes clusterable data as that which has a unique optimal solution in a strong sense, by excluding the possibility of having radically different clusterings of similar cost. See Figure 2 for an illustration. This property, called \u201cuniqueness of optimum\u201d and closely related variations were investigated by Balcan et al. [2008a], Ostrovsky et al. [2006], Agarwal et al.", "startOffset": 87, "endOffset": 938}, {"referenceID": 1, "context": "Many different notions of clusterability have been proposed in prior work Ackerman and Ben-David [2009], Ben-David [2015]. Although they all aim to quantify the same tendency, it has been proven that notions of clusterability are often pairwise inconsistent Ackerman and Ben-David [2009]. As such, care must be taken when selecting amongst them. In order to analyze k-means and related functions, we turn our attention to an intuitive cost-based notion, which requires that clusterings of near-optimal cost be structurally similar to the optimal solution. That is, this notion characterizes clusterable data as that which has a unique optimal solution in a strong sense, by excluding the possibility of having radically different clusterings of similar cost. See Figure 2 for an illustration. This property, called \u201cuniqueness of optimum\u201d and closely related variations were investigated by Balcan et al. [2008a], Ostrovsky et al. [2006], Agarwal et al. [2013] and Ackerman et al.", "startOffset": 87, "endOffset": 961}, {"referenceID": 1, "context": "Many different notions of clusterability have been proposed in prior work Ackerman and Ben-David [2009], Ben-David [2015]. Although they all aim to quantify the same tendency, it has been proven that notions of clusterability are often pairwise inconsistent Ackerman and Ben-David [2009]. As such, care must be taken when selecting amongst them. In order to analyze k-means and related functions, we turn our attention to an intuitive cost-based notion, which requires that clusterings of near-optimal cost be structurally similar to the optimal solution. That is, this notion characterizes clusterable data as that which has a unique optimal solution in a strong sense, by excluding the possibility of having radically different clusterings of similar cost. See Figure 2 for an illustration. This property, called \u201cuniqueness of optimum\u201d and closely related variations were investigated by Balcan et al. [2008a], Ostrovsky et al. [2006], Agarwal et al. [2013] and Ackerman et al. [2013], among others.", "startOffset": 87, "endOffset": 988}, {"referenceID": 1, "context": "Many different notions of clusterability have been proposed in prior work Ackerman and Ben-David [2009], Ben-David [2015]. Although they all aim to quantify the same tendency, it has been proven that notions of clusterability are often pairwise inconsistent Ackerman and Ben-David [2009]. As such, care must be taken when selecting amongst them. In order to analyze k-means and related functions, we turn our attention to an intuitive cost-based notion, which requires that clusterings of near-optimal cost be structurally similar to the optimal solution. That is, this notion characterizes clusterable data as that which has a unique optimal solution in a strong sense, by excluding the possibility of having radically different clusterings of similar cost. See Figure 2 for an illustration. This property, called \u201cuniqueness of optimum\u201d and closely related variations were investigated by Balcan et al. [2008a], Ostrovsky et al. [2006], Agarwal et al. [2013] and Ackerman et al. [2013], among others. See Balcan et al. [2008a] for a detailed exposition.", "startOffset": 87, "endOffset": 1029}, {"referenceID": 1, "context": "The term \u201cuniqueness of optimum\u201d was coined by Ben-David Ben-David [2015].", "startOffset": 47, "endOffset": 74}, {"referenceID": 5, "context": "The k-means objective function is equivalent to \u2211k i=1 1 |Ci| \u2211 x,y\u2208Ci d(x, y) Ostrovsky et al. [2006]. After an additive perturbation, any pairwise distance, d(x, y), is bounded by d(x, y) + .", "startOffset": 79, "endOffset": 103}], "year": 2016, "abstractText": "Clustering is a fundamental data mining tool that aims to divide data into groups of similar items. Generally, intuition about clustering reflects the ideal case \u2013 exact data sets endowed with flawless dissimilarity between individual instances. In practice however, these cases are in the minority, and clustering applications are typically characterized by noisy data sets with approximate pairwise dissimilarities. As such, the efficacy of clustering methods in practical applications necessitates robustness to perturbations. In this paper, we perform a formal analysis of perturbation robustness, revealing that the extent to which algorithms can exhibit this desirable characteristic is inherently limited, and identifying the types of structures that allow popular clustering paradigms to discover meaningful clusters in spite of faulty data.", "creator": "LaTeX with hyperref package"}}}