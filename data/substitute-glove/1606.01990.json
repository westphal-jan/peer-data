{"id": "1606.01990", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "7-Jun-2016", "title": "Neural Network Models for Implicit Discourse Relation Classification in English and Chinese without Surface Features", "abstract": "Inferring determination ideology relations beginning concentrated language language is itself most difficult subtask for discursive arithmetic. Surface page achieve 'll performance, but already themselves too readily criteria to other text well semantic loan-words. Previous neural models seek parses, magnetic features, or kind each disc set to work well. Here, we propose neural digital models did already it friday templating but has - turn present windows pioneer that any concrete features. To certainly surprise, needs best configured feedforward master dancall LSTM - of defined and particularly cases last conclusion iambic. Under involved usually - peaty b-side breaking and a cross - historiography way, our anorectal product perform highly anything or at nearly just instance others they capabilities possibility require enough - deftly normal features. Our specifications present after first neural Chinese manifestation sgml in through especially than Chinese Discourse Treebank, appearing that focus suggest leaders with - linguistically.", "histories": [["v1", "Tue, 7 Jun 2016 01:17:00 GMT  (118kb,D)", "http://arxiv.org/abs/1606.01990v1", null]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["attapol t rutherford", "vera demberg", "nianwen xue"], "accepted": false, "id": "1606.01990"}, "pdf": {"name": "1606.01990.pdf", "metadata": {"source": "CRF", "title": "Neural Network Models for Implicit Discourse Relation Classification in English and Chinese without Surface Features", "authors": ["Attapol T. Rutherford", "Vera Demberg", "Nianwen Xue"], "emails": ["teruth@yelp.com", "vera@coli.uni-saarland.de", "xuen@brandeis.edu"], "sections": [{"heading": "1 Introduction", "text": "The discourse structure of a natural language text has been analyzed and conceptualized under various frameworks (Mann and Thompson, 1988; Lascarides and Asher, 2007; Prasad et al., 2008). The Penn Discourse TreeBank (PDTB) and the Chinese Discourse Treebank (CDTB), currently the largest corpora annotated with discourse structures in English and Chinese respectively, view the discourse structure of a text as a set of discourse relations (Prasad et al., 2008; Zhou and Xue, 2012). Each discourse relation is grounded by a discourse\n\u2217Work performed while being a student at Brandeis\nconnective taking two text segments as arguments (Prasad et al., 2008). Implicit discourse relations are those where discourse connectives are omitted from the text and yet the discourse relations still hold.\nWhile classifying explicit discourse relations is relatively easy, as the discourse connective itself provides a strong cue for the discourse relation (Pitler et al., 2008), the classification of implicit discourse relations has proved to be notoriously hard and it has remained one of the last missing pieces in an end-to-end discourse parser (Xue et al., 2015). In the absence of explicit discourse connectives, implicit discourse relations have to be inferred from their two arguments. Previous approaches on inferring implicit discourse relations have typically relied on features extracted from their two arguments. These features include word pairs that are the Cartesian products of the word tokens in the two arguments as well as features manually crafted from various lexicons such as verb classes and sentiment lexicons (Pitler et al., 2009; Rutherford and Xue, 2014). These lexicons are used mainly to offset the data sparsity problem created by pairs of word tokens used directly as features.\nNeural network models are an attractive alternative for this task for at least two reasons. First, they can model the argument of an implicit discourse relation as dense vectors and suffer less from the data sparsity problem that is typical of the traditional feature engineering paradigm. Second, they should be easily extended to other languages as they do not require human-annotated lexicons. However, despite the many nice properties of neural network models, it is not clear how well they will fare with a small dataset, typicalley found in discourse annotation projects. Moreover, it is not straightforward to construct a single vector that properly represents the \u201csemantics\u201d of the arar X\niv :1\n60 6.\n01 99\n0v 1\n[ cs\n.C L\n] 7\nJ un\n2 01\n6\nguments. As a result, neural network models that use dense vectors have been shown to have inferior performance against traditional systems that use manually crafted features, unless the dense vectors are combined with the hand-crafted surface features (Ji and Eisenstein, 2015).\nIn this work, we explore multiple neural architectures in an attempt to find the best distributed representation and neural network architecture suitable for this task in both English and Chinese. We do this by probing the different points on the spectrum of structurality from structureless bag-of-words models to sequential and tree-structured models. We use feedforward, sequential long short-term memory (LSTM), and tree-structured LSTM models to represent these three points on the spectrum. To the best of our knowledge, there is no prior study that investigates the contribution of the different architectures in neural discourse analysis.\nOur main contributions and findings from this work can be summarized as follows:\n\u2022 Our neural discourse model performs comparably with or even outperforms systems with surface features across different fine-grained discourse label sets.\n\u2022 We investigate the contribution of the linguistic structures in neural discourse modeling and found that high-dimensional word vectors trained on a large corpus can compensate for the lack of structures in the model, given the small amount of annotated data.\n\u2022 We found that modeling the interaction across arguments via hidden layers is essential to improving the performance of an implicit discourse relation classifier.\n\u2022 We present the first neural CDTB-style Chinese discourse parser, confirming that our current results and other previous findings conducted on English data also hold crosslinguistically."}, {"heading": "2 Related Work", "text": "The prevailing approach for this task is to use surface features derived from various semantic lexicons (Pitler et al., 2009), reducing the number of parameters by mapping raw word tokens in the arguments of discourse relations to a limited number\nof entries in a semantic lexicon such as polarity and verb classes.\nAlong the same vein, Brown cluster assignments have also been used as a general purpose lexicon that requires no human manual annotation (Rutherford and Xue, 2014). However, these solutions still suffer from the data sparsity problem and almost always require extensive feature selection to work well (Park and Cardie, 2012; Lin et al., 2009; Ji and Eisenstein, 2015). The work we report here explores the use of the expressive power of distributed representations to overcome the data sparsity problem found in the traditional feature engineering paradigm.\nNeural network modeling has attracted much attention in the NLP community recently and has been explored to some extent in the context of this task. Recently, Braud and Denis (2015) tested various word vectors as features for implicit discourse relation classification and show that distributed features achieve the same level of accuracy as one-hot representations in some experimental settings. Ji et al. (2015; 2016) advance the state of the art for this task using recursive and recurrent neural networks. In the work we report here, we systematically explore the use of different neural network architectures and show that when high-dimensional word vectors are used as input, a simple feed-forward architecture can outperform more sophisticated architectures such as sequential and tree-based LSTM networks, given the small amount of data.\nRecurrent neural networks, especially LSTM networks, have changed the paradigm of deriving distributed features from a sentence (Hochreiter and Schmidhuber, 1997), but they have not been much explored in the realm of discourse parsing. LSTM models have been notably used to encode the meaning of source language sentence in neural machine translation (Cho et al., 2014; Devlin et al., 2014) and recently used to encode the meaning of an entire sentence to be used as features (Kiros et al., 2015). Many neural architectures have been explored and evaluated, but there is no single technique that is decidedly better across all tasks. The LSTM-based models such as Kiros et al. (2015) perform well across tasks but do not outperform some other strong neural baselines. Ji et al. (2016) uses a joint discourse language model to improve the performance on the coarse-grained label in the PDTB, but in our case, we would like\nto deduce how well LSTM fares in fine-grained implicit discourse relation classification. A joint discourse language model might not scale well to finer-grained label set, which is more practical for application."}, {"heading": "3 Model Architectures", "text": "Following previous work, we assume that the two arguments of an implicit discourse relation are given so that we can focus on predicting the senses of the implicit discourse relations. The input to our model is a pair of text segments called Arg1 and Arg2, and the label is one of the senses defined in the Penn Discourse Treebank as in the example below:\nInput: Arg1 Senator Pete Domenici calls this effort \u201cthe first gift of democracy\u201d Arg2 The Poles might do better to view it as a Trojan Horse. Output: Sense Comparison.Contrast\nIn all architectures, each word in the argument is represented as a k-dimensional word vector trained on an unannotated data set. We use various model architectures to transform the semantics represented by the word vectors into distributed continuous-valued features. In the rest of the section, we explain the details of the neural network architectures that we design for the implicit discourse relations classification task. The models are summarized schematically in Figure 1."}, {"heading": "3.1 Bag-of-words Feedforward Model", "text": "This model does not model the structure or word order of a sentence. The features are simply obtained through element-wise pooling functions. Pooling is one of the key techniques in neural network modeling of computer vision (Krizhevsky et al., 2012; LeCun et al., 2010). Max pooling is known to be very effective in vision, but it is unclear what pooling function works well when it comes to pooling word vectors. Summation pooling and mean pooling have been claimed to perform well at composing meaning of a short phrase from individual word vectors (Le and Mikolov, 2014; Blacoe and Lapata, 2012; Mikolov et al., 2013b; Braud and Denis, 2015). The Arg1 vector a1 and Arg2 vector a2 are computed by applying element-wise pooling function f on all of the N1 word vectors in Arg1 w11:N1 and all of the N2 word vectors in Arg2 w21:N2 respectively:\na1i = f(w 1 1:N1,i) a2i = f(w 2 1:N2,i)\nWe consider three different pooling functions namely max, summation, and mean pooling functions:\nfmax(w1:N , i) = N\nmax j=1 wj,i\nfsum(w1:N , i) = N\u2211 j=1 wj,i\nfmean(w1:N , i) = N\u2211 j=1 wj,i/N\nInter-argument interaction is modeled directly by the hidden layers that take argument vectors as features. Discourse relations cannot be determined based on the two arguments individually. Instead, the sense of the relation can only be determined when the arguments in a discourse relation are analyzed jointly. The first hidden layer h1 is the non-linear transformation of the weighted linear combination of the argument vectors:\nh1 = tanh(W1 \u00b7 a1 +W2 \u00b7 a2 + bh1)\nwhere W1 and W2 are d \u00d7 k weight matrices and bh1 is a d-dimensional bias vector. Further hidden layers ht and the output layer o follow the standard feedforward neural network model.\nht = tanh(Wht \u00b7 ht\u22121 + bht) o = softmax(Wo \u00b7 hT + bo)\nwhere Wht is a d \u00d7 d weight matrix, bht is a ddimensional bias vector, and T is the number of hidden layers in the network."}, {"heading": "3.2 Sequential Long Short-Term Memory (LSTM)", "text": "A sequential Long Short-Term Memory Recurrent Neural Network (LSTM-RNN) models the semantics of a sequence of words through the use of hidden state vectors. Therefore, the word ordering does affect the resulting hidden state vectors, unlike the bag-of-word model. For each word vector at word position t, we compute the corresponding hidden state vector st and the memory cell vector ct from the previous step.\nit = sigmoid(Wi \u00b7 wt + Ui \u00b7 st\u22121 + bi) ft = sigmoid(Wf \u00b7 wt + Uf \u00b7 st\u22121 + bf ) ot = sigmoid(Wo \u00b7 wt + Uo \u00b7 st\u22121 + bo) c\u2032t = tanh(Wc \u00b7 wt + Uc \u00b7 st\u22121 + bc) ct = c \u2032 t \u2217 it + ct\u22121 \u2217 ft st = ct \u2217 ot\nwhere \u2217 is elementwise multiplication. The argument vectors are the results of applying a pooling function over the hidden state vectors.\na1i = f(s 1 1:N1,i) a2i = f(s 2 1:N2,i)\nIn addition to the three pooling functions that we describe in the previous subsection, we also consider using only the last hidden state vector, which should theoretically be able to encode the semantics of the entire word sequence.\nflast(s1:N,i) = sN,i\nInter-argument interaction and the output layer are modeled in the same fashion as the bag-of-words model once the argument vector is computed."}, {"heading": "3.3 Tree LSTM", "text": "The principle of compositionality leads us to believe that the semantics of the argument vector should be determined by the syntactic structures and the meanings of the constituents. For a fair comparison with the sequential model, we apply the same formulation of LSTM on the binarized constituent parse tree. The hidden state vector now corresponds to a constituent in the tree. These hidden state vectors are then used in the same fashion\nas the sequential LSTM. The mathematical formulation is the same as Tai et al. (2015).\nThis model is similar to the recursive neural networks proposed by Ji and Eisenstein (2015). Our model differs from their model in several ways. We use the LSTM networks instead of the \u201cvanilla\u201d RNN formula and expect better results due to less complication with vanishing and exploding gradients during training. Furthermore, our purpose is to compare the influence of the model structures. Therefore, we must use LSTM cells in both sequential and tree LSTM models for a fair and meaningful comparison. The more indepth comparison of our work and recursive neural network model by Ji and Eisenstein (2015) is provided in the discussion section."}, {"heading": "4 Corpora and Implementation", "text": "The Penn Discourse Treebank (PDTB) We use the PDTB due to its theoretical simplicity in discourse analysis and its reasonably large size. The annotation is done as another layer on the Penn Treebank on Wall Street Journal sections. Each relation consists of two spans of text that are minimally required to infer the relation, and the sense is organized hierarchically. The classification problem can be formulated in various ways based on the hierarchy. Previous work in this task has been done over three schemes of evaluation: top-level 4-way classification (Pitler et al., 2009), second-level 11-way classification (Lin et al., 2009; Ji and Eisenstein, 2015), and modified second-level classification introduced in the CoNLL 2015 Shared Task (Xue et al., 2015). We\nfocus on the second-level 11-way classification because the labels are fine-grained enough to be useful for downstream tasks and also because the strongest neural network systems are tuned to this formulation. If an instance is annotated with two labels (\u223c3% of the data), we only use the first label. Partial labels, which constitute \u223c2% of the data, are excluded. Table 4 shows the distribution of labels in the training set (sections 2-21), development set (section 22), and test set (section 23). Training Weight initialization is uniform random, following the formula recommended by Bengio (2012). The cost function is the standard crossentropy loss function, as the hinge loss function (large-margin framework) yields consistently inferior results. We use Adagrad as the optimization algorithm of choice. The learning rates are tuned over a grid search. We monitor the accuracy on the development set to determine convergence and prevent overfitting. L2 regularization and/or dropout do not make a big impact on performance in our case, so we do not use them in the final results. Implementation All of the models are implemented in Theano (Bergstra et al., 2010; Bastien et al., 2012). The gradient computation is done with symbolic differentiation, a functionality provided by Theano. Feedforward models and sequential LSTM models are trained on CPUs on Intel Xeon X5690 3.47GHz, using only a single core per model. A tree LSTM model is trained on a GPU on Intel Xeon CPU E5-2660. All models converge within hours."}, {"heading": "5 Experiment on the Second-level Sense in the PDTB", "text": "We want to test the effectiveness of the interargument interaction and the three models described above on the fine-grained discourse relations in English. The data split and the label set are exactly the same as previous works that use this label set (Lin et al., 2009; Ji and Eisenstein, 2015). Preprocessing All tokenization is taken from the gold standard tokenization in the PTB (Marcus et al., 1993). We use the Berkeley parser to parse all of the data (Petrov et al., 2006). We test the effects of word vector sizes. 50-dimensional and 100- dimensional word vectors are trained on the training sections of WSJ data, which is the same text as the PDTB annotation. Although this seems like\ntoo little data, 50-dimensional WSJ-trained word vectors have previously been shown to be the most effective in this task (Ji and Eisenstein, 2015). Additionally, we also test the off-the-shelf word vectors trained on billions of tokens from Google News data freely available with the word2vec tool. All word vectors are trained on the Skipgram architecture (Mikolov et al., 2013b; Mikolov et al., 2013a). Other models such as GloVe and continuous bag-of-words seem to yield broadly similar results (Pennington et al., 2014). We keep the word vectors fixed, instead of fine-tuning during training."}, {"heading": "5.1 Results and discussion", "text": "The feedforward model performs best overall among all of the neural architectures we explore (Table 2). It outperforms the recursive neural network with bilinear output layer introduced by Ji and Eisenstein (2015) (p < 0.05; bootstrap test) and performs comparably with the surface feature baseline (Lin et al., 2009), which uses various lexical and syntactic features and extensive feature selection. Tree LSTM achieves inferior accuracy than our best feedforward model. The\nbest configuration of the feedforward model uses 300-dimensional word vectors, one hidden layer, and the summation pooling function to derive argument feature vectors. The model behaves well during training and converges in less than an hour on a CPU.\nThe sequential LSTM model outperforms the feedforward model when word vectors are not high-dimensional and not trained on a large corpus (Figure 4). Moving from 50 units to 100 units trained on the same dataset, we do not observe much of a difference in performance in both architectures, but the sequential LSTM model beats the feedforward model in both settings. This suggests that only 50 dimensions are needed for the WSJ corpus. However, the trend reverses when we move to 300-dimensional word vectors trained on a much larger corpus. These results suggest an interaction between the lexical information encoded by word vectors and the structural information encoded by the model itself.\nHidden layers, especially the first one, make a substantial impact on performance. This effect is\nobserved across all architectures (Figure 3). Strikingly, the improvement can be as high as 8% absolute when used with the feedforward model with small word vectors. We tried up to four hidden layers and found that the additional hidden layers yield diminishing\u2014if not negative\u2014returns. These effects are not an artifact of the training process as we have tuned the models quite extensively, although it might be the case that we do not have sufficient data to fit those extra parameters.\nSummation pooling is effective for both feedforward and LSTM models (Figure 2). The word vectors we use have been claimed to have some additive properties (Mikolov et al., 2013b), so summation pooling in this experiment supports this claim. Max pooling is only effective for LSTM, probably because the values in the word vector encode the abstract features of each word relative to each other. It can be trivially shown that if all of the vectors are multiplied by -1, then the results from max pooling will be totally different, but the word similarities remain the same. The memory cells and the state vectors in the LSTM models transform the original word vectors to work well the max pooling operation, but the feedforward net\ncannot transform the word vectors to work well with max pooling as it is not allowed to change the word vectors themselves."}, {"heading": "5.2 Discussion", "text": "Why does the feedforward model outperform the LSTM models? Sequential and tree LSTM models might work better if we are given larger amount of data. We observe that LSTM models outperform the feedforward model when word vectors are smaller, so it is unlikely that we train the LSTMs incorrectly. It is more likely that we do not have enough annotated data to train a more powerful model such as LSTM. In previous work, LSTMs are applied to tasks with a lot of labeled data compared to mere 12,930 instances that we have (Vinyals et al., 2015; Chiu and Nichols, 2015; I\u0307rsoy and Cardie, 2014). Another explanation comes from the fact that the contextual information encoded in the word vectors can compensate for the lack of structure in the model in this task. Word vectors are already trained to encode the words in their linguistic context especially information from word order.\nOur discussion would not be complete without explaining our results in relation to the recursive neural network model proposed by Ji and Eisenstein (2015). Why do sequential LSTM models outperform recursive neural networks or tree LSTM models? Although this first comes as a surprise to us, the results are consistent with recent works that use sequential LSTM to encode syntactic information. For example, Vinyals et al. (2015) use sequential LSTM to encode the features for syntactic parse output. Tree LSTM seems to show improvement when there is a need to model longdistance dependency in the data (Tai et al., 2015; Li et al., 2015). Furthermore, the benefits of tree LSTM are not readily apparent for a model that discards the syntactic categories in the intermediate nodes and makes no distinction between heads and their dependents, which are at the core of syntactic representations.\nAnother point of contrast between our work and Ji and Eisenstein\u2019s (2015) is the modeling choice for inter-argument interaction. Our experimental results show that the hidden layers are an important contributor to the performance for all of our models. We choose linear inter-argument interaction instead of bilinear interaction, and this decision gives us at least two advantages. Lin-\near interaction allows us to stack up hidden layers without the exponential growth in the number of parameters. Secondly, using linear interaction allows us to use high dimensional word vectors, which we found to be another important component for the performance. The recursive model by Ji and Eisenstein (2015) is limited to 50 units due to the bilinear layer. Our choice of linear interargument interaction and high-dimensional word vectors turns out to be crucial to building a competitive neural network model for classifying implicit discourse relations."}, {"heading": "6 Extending the results across label sets and languages", "text": "Do our feedforward models perform well without surface features across different label sets and languages as well? We want to extend our results to another label set and language by evaluating our models on non-explicit discourse relation data used in English and Chinese CoNLL 2016 Shared Task. We will have more confidence in our model if it works well across label sets. It is also important that our model works cross-linguistically because other languages might not have resources such as semantic lexicons or parsers, required by some previously used features."}, {"heading": "6.1 English discourse relations", "text": "We follow the experimental setting used in CoNLL 2015-2016 Shared Task as we want to compare our results against previous systems. This setting differs from the previous experiment in a few ways. Entity relations (EntRel) and alternative lexicalization relations (AltLex) are included in this setting. The label set is modified by the shared task organizers into 15 different senses including EntRel as another sense (Xue et al., 2015). We use the 300-dimensional word vector used in the previous experiment and tune the number of hidden layers and hidden units on the development set. The best results from last year\u2019s shared task are used as a strong baseline. It only uses surface features and also achieves the stateof-the-art performance under this label set (Wang and Lan, 2015). These features are similar to the ones used by Lin et al. (2009)."}, {"heading": "6.2 Chinese discourse relations", "text": "We evaluate our model on the Chinese Discourse Treebank (CDTB) because its annotation is the\nmost comparable to the PDTB (Zhou and Xue, 2015). The sense set consists of 10 different senses, which are not organized in a hierarchy, unlike the PDTB. We use the version of the data provided to the CoNLL 2016 Shared Task participants. This version has 16,946 instances of discourse relations total in the combined training and development sets. The test set is not yet available at the time of submission, so the system is evaluated based on the average accuracy over 7-fold cross-validation on the combined set of training and development sets.\nThere is no previously published baseline for Chinese. To establish baseline comparison, we use MaxEnt models loaded with the feature sets previously shown to be effective for English, namely dependency rule pairs, production rule pairs (Lin et al., 2009), Brown cluster pairs (Rutherford and Xue, 2014), and word pairs (Marcu and Echihabi, 2002). We use information gain criteria to select the best subset of each feature set, which is crucial in feature-based discourse parsing.\nChinese word vectors are induced through CBOW and Skipgram architecture in word2vec (Mikolov et al., 2013a) on Chinese Gigaword corpus (Graff and Chen, 2005) using default settings. The number of dimensions that we try are 50, 100, 150, 200, 250, and 300. We induce 1,000 and 3,000 Brown clusters on the Gigaword corpus."}, {"heading": "6.3 Results", "text": "Table 4 shows the results for the models which are best tuned on the number of hidden units, hidden layers, and the types of word vectors. The feedforward variant of our model significantly outperforms the strong baselines in both English and Chinese (p < 0.05 bootstrap test). This suggests that our approach is robust against different label sets, and our findings are valid across languages. Our Chinese model outperforms all of the feature sets known to work well in English despite using only word vectors.\nThe choice of neural architecture used for inducing Chinese word vectors turns out to be crucial. Chinese word vectors from Skipgram model perform consistently better than the ones from CBOW model (Figure 5). These two types of word vectors do not show much difference in the English tasks."}, {"heading": "7 Conclusions and future work", "text": "We report a series of experiments that systematically probe the effectiveness of various neural network architectures for the task of implicit discourse relation classification. Given the small amount of annotated data, we found that a feedforward variant of our model combined with hidden layers and high dimensional word vectors outperforms more complicated LSTM models. Our model performs better or competitively against models that use manually crafted surface features, and it is the first neural CDTB-style Chinese discourse parser. We will make our code and models publicly available."}], "references": [{"title": "Theano: new features and speed improvements", "author": ["Pascal Lamblin", "Razvan Pascanu", "James Bergstra", "Ian J. Goodfellow", "Arnaud Bergeron", "Nicolas Bouchard", "Yoshua Bengio"], "venue": null, "citeRegEx": "Bastien et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Bastien et al\\.", "year": 2012}, {"title": "Practical recommendations for gradient-based training of deep architectures", "author": ["Yoshua Bengio"], "venue": "In Neural Networks: Tricks of the Trade,", "citeRegEx": "Bengio.,? \\Q2012\\E", "shortCiteRegEx": "Bengio.", "year": 2012}, {"title": "Theano: a CPU and GPU math expression compiler", "author": ["Olivier Breuleux", "Fr\u00e9d\u00e9ric Bastien", "Pascal Lamblin", "Razvan Pascanu", "Guillaume Desjardins", "Joseph Turian", "David WardeFarley", "Yoshua Bengio"], "venue": null, "citeRegEx": "Bergstra et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Bergstra et al\\.", "year": 2010}, {"title": "A comparison of vector-based representations for semantic composition", "author": ["Blacoe", "Lapata2012] William Blacoe", "Mirella Lapata"], "venue": "In Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Com-", "citeRegEx": "Blacoe et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Blacoe et al\\.", "year": 2012}, {"title": "Comparing word representations for implicit discourse relation classification", "author": ["Braud", "Denis2015] Chlo\u00e9 Braud", "Pascal Denis"], "venue": "In Empirical Methods in Natural Language Processing (EMNLP", "citeRegEx": "Braud et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Braud et al\\.", "year": 2015}, {"title": "Named entity recognition with bidirectional lstm-cnns", "author": ["Chiu", "Nichols2015] Jason PC Chiu", "Eric Nichols"], "venue": "arXiv preprint arXiv:1511.08308", "citeRegEx": "Chiu et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Chiu et al\\.", "year": 2015}, {"title": "Learning phrase representations using rnn encoder\u2013decoder for statistical machine translation", "author": ["Cho et al.2014] Kyunghyun Cho", "Bart van Merrienboer", "Caglar Gulcehre", "Dzmitry Bahdanau", "Fethi Bougares", "Holger Schwenk", "Yoshua Bengio"], "venue": null, "citeRegEx": "Cho et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Cho et al\\.", "year": 2014}, {"title": "Fast and robust neural network joint models for statistical machine translation", "author": ["Devlin et al.2014] Jacob Devlin", "Rabih Zbib", "Zhongqiang Huang", "Thomas Lamar", "Richard Schwartz", "John Makhoul"], "venue": null, "citeRegEx": "Devlin et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Devlin et al\\.", "year": 2014}, {"title": "Long short-term memory", "author": ["Hochreiter", "Schmidhuber1997] Sepp Hochreiter", "J\u00fcrgen Schmidhuber"], "venue": "Neural computation,", "citeRegEx": "Hochreiter et al\\.,? \\Q1997\\E", "shortCiteRegEx": "Hochreiter et al\\.", "year": 1997}, {"title": "Opinion mining with deep recurrent neural networks", "author": ["\u0130rsoy", "Cardie2014] Ozan \u0130rsoy", "Claire Cardie"], "venue": "In Proceedings of the Conference on Empirical Methods in Natural Language Processing,", "citeRegEx": "\u0130rsoy et al\\.,? \\Q2014\\E", "shortCiteRegEx": "\u0130rsoy et al\\.", "year": 2014}, {"title": "One vector is not enough: Entityaugmented distributed semantics for discourse relations. Transactions of the Association for Computational Linguistics, 3:329\u2013344", "author": ["Ji", "Eisenstein2015] Yangfeng Ji", "Jacob Eisenstein"], "venue": null, "citeRegEx": "Ji et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Ji et al\\.", "year": 2015}, {"title": "A latent variable recurrent neural network for discourse relation language models", "author": ["Ji et al.2016] Yangfeng Ji", "Gholamreza Haffari", "Jacob Eisenstein"], "venue": "In Proceedings of the 2016 Conference of the North American Chapter of the Association", "citeRegEx": "Ji et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Ji et al\\.", "year": 2016}, {"title": "Imagenet classification with deep convolutional neural networks. In Advances in neural information processing systems, pages 1097\u20131105", "author": ["Ilya Sutskever", "Geoffrey E Hinton"], "venue": null, "citeRegEx": "Krizhevsky et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Krizhevsky et al\\.", "year": 2012}, {"title": "Segmented discourse representation theory: Dynamic semantics with discourse structure", "author": ["Lascarides", "Asher2007] Alex Lascarides", "Nicholas Asher"], "venue": "In Computing meaning,", "citeRegEx": "Lascarides et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Lascarides et al\\.", "year": 2007}, {"title": "Distributed representations of sentences and documents. arXiv preprint arXiv:1405.4053", "author": ["Le", "Mikolov2014] Quoc V Le", "Tomas Mikolov"], "venue": null, "citeRegEx": "Le et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Le et al\\.", "year": 2014}, {"title": "Convolutional networks and applications in vision", "author": ["LeCun et al.2010] Yann LeCun", "Koray Kavukcuoglu", "Cl\u00e9ment Farabet"], "venue": "In Circuits and Systems (ISCAS), Proceedings of 2010 IEEE International Symposium on,", "citeRegEx": "LeCun et al\\.,? \\Q2010\\E", "shortCiteRegEx": "LeCun et al\\.", "year": 2010}, {"title": "When are tree structures necessary for deep learning of representations", "author": ["Li et al.2015] Jiwei Li", "Thang Luong", "Dan Jurafsky", "Eduard Hovy"], "venue": "In Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing,", "citeRegEx": "Li et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Li et al\\.", "year": 2015}, {"title": "Recognizing implicit discourse relations in the penn discourse treebank", "author": ["Lin et al.2009] Ziheng Lin", "Min-Yen Kan", "Hwee Tou Ng"], "venue": "In Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing: Vol-", "citeRegEx": "Lin et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Lin et al\\.", "year": 2009}, {"title": "Rhetorical structure theory: Toward a functional theory of text organization", "author": ["Mann", "Thompson1988] William C Mann", "Sandra A Thompson"], "venue": null, "citeRegEx": "Mann et al\\.,? \\Q1988\\E", "shortCiteRegEx": "Mann et al\\.", "year": 1988}, {"title": "An unsupervised approach to recognizing discourse relations", "author": ["Marcu", "Echihabi2002] Daniel Marcu", "Abdessamad Echihabi"], "venue": "In Proceedings of the 40th Annual Meeting on Association for Computational Linguistics,", "citeRegEx": "Marcu et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Marcu et al\\.", "year": 2002}, {"title": "Building a large annotated corpus of english: The penn treebank", "author": ["Mary Ann Marcinkiewicz", "Beatrice Santorini"], "venue": null, "citeRegEx": "Marcus et al\\.,? \\Q1993\\E", "shortCiteRegEx": "Marcus et al\\.", "year": 1993}, {"title": "Efficient estimation of word representations in vector space. CoRR, abs/1301.3781", "author": ["Kai Chen", "Greg Corrado", "Jeffrey Dean"], "venue": null, "citeRegEx": "Mikolov et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2013}, {"title": "Distributed representations of words and phrases and their compositionality", "author": ["Ilya Sutskever", "Kai Chen", "Greg S Corrado", "Jeff Dean"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Mikolov et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2013}, {"title": "Improving implicit discourse relation recognition through feature set optimization", "author": ["Park", "Cardie2012] Joonsuk Park", "Claire Cardie"], "venue": "In Proceedings of the 13th Annual Meeting of the Special Interest Group on Discourse and Dialogue,", "citeRegEx": "Park et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Park et al\\.", "year": 2012}, {"title": "Glove: Global vectors for word representation", "author": ["Richard Socher", "Christopher D Manning"], "venue": "Proceedings of the Empirical Methods in Natural Language Processing", "citeRegEx": "Pennington et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Pennington et al\\.", "year": 2014}, {"title": "Learning accurate, compact, and interpretable tree annotation", "author": ["Petrov et al.2006] Slav Petrov", "Leon Barrett", "Romain Thibaux", "Dan Klein"], "venue": "In Proceedings of the 21st International Conference on Computational Linguistics and the 44th annual", "citeRegEx": "Petrov et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Petrov et al\\.", "year": 2006}, {"title": "Easily identifiable discourse relations", "author": ["Pitler et al.2008] Emily Pitler", "Mridhula Raghupathy", "Hena Mehta", "Ani Nenkova", "Alan Lee", "Aravind K Joshi"], "venue": "Technical Reports (CIS),", "citeRegEx": "Pitler et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Pitler et al\\.", "year": 2008}, {"title": "Automatic sense prediction for implicit discourse relations in text", "author": ["Pitler et al.2009] Emily Pitler", "Annie Louis", "Ani Nenkova"], "venue": "In Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference", "citeRegEx": "Pitler et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Pitler et al\\.", "year": 2009}, {"title": "The penn discourse treebank 2.0", "author": ["Prasad et al.2008] Rashmi Prasad", "Nikhil Dinesh", "Alan Lee", "Eleni Miltsakaki", "Livio Robaldo", "Aravind K Joshi", "Bonnie L Webber"], "venue": "In LREC. Citeseer", "citeRegEx": "Prasad et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Prasad et al\\.", "year": 2008}, {"title": "Discovering implicit discourse relations through brown cluster pair representation and coreference patterns", "author": ["Rutherford", "Xue2014] Attapol T. Rutherford", "Nianwen Xue"], "venue": "In Proceedings of the 14th Conference of the European Chapter", "citeRegEx": "Rutherford et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Rutherford et al\\.", "year": 2014}, {"title": "Improved semantic representations from tree-structured long short-term memory networks", "author": ["Tai et al.2015] Kai Sheng Tai", "Richard Socher", "Christopher D. Manning"], "venue": "In Proceedings of the 53rd Annual Meeting of the Association", "citeRegEx": "Tai et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Tai et al\\.", "year": 2015}, {"title": "Grammar as a foreign language", "author": ["\u0141 ukasz Kaiser", "Terry Koo", "Slav Petrov", "Ilya Sutskever", "Geoffrey Hinton"], "venue": null, "citeRegEx": "Vinyals et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Vinyals et al\\.", "year": 2015}, {"title": "A refined end-to-end discourse parser", "author": ["Wang", "Lan2015] Jianxiang Wang", "Man Lan"], "venue": "In Proceedings of the Nineteenth Conference on Computational Natural Language Learning - Shared Task,", "citeRegEx": "Wang et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Wang et al\\.", "year": 2015}, {"title": "The conll-2015 shared task on shallow discourse parsing", "author": ["Xue et al.2015] Nianwen Xue", "Hwee Tou Ng", "Sameer Pradhan", "Rashmi Prasad", "Christopher Bryant", "Attapol Rutherford"], "venue": "In Proceedings of the Nineteenth Conference on Computational Natu-", "citeRegEx": "Xue et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Xue et al\\.", "year": 2015}, {"title": "Pdtb-style discourse annotation of chinese text", "author": ["Zhou", "Xue2012] Yuping Zhou", "Nianwen Xue"], "venue": "In Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics: Long Papers-Volume", "citeRegEx": "Zhou et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Zhou et al\\.", "year": 2012}, {"title": "The chinese discourse treebank: A chinese corpus annotated with discourse relations. Language Resources and Evaluation, 49(2):397\u2013431", "author": ["Zhou", "Xue2015] Yuping Zhou", "Nianwen Xue"], "venue": null, "citeRegEx": "Zhou et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Zhou et al\\.", "year": 2015}], "referenceMentions": [{"referenceID": 28, "context": "The discourse structure of a natural language text has been analyzed and conceptualized under various frameworks (Mann and Thompson, 1988; Lascarides and Asher, 2007; Prasad et al., 2008).", "startOffset": 113, "endOffset": 187}, {"referenceID": 28, "context": "The Penn Discourse TreeBank (PDTB) and the Chinese Discourse Treebank (CDTB), currently the largest corpora annotated with discourse structures in English and Chinese respectively, view the discourse structure of a text as a set of discourse relations (Prasad et al., 2008; Zhou and Xue, 2012).", "startOffset": 252, "endOffset": 293}, {"referenceID": 28, "context": "\u2217Work performed while being a student at Brandeis connective taking two text segments as arguments (Prasad et al., 2008).", "startOffset": 99, "endOffset": 120}, {"referenceID": 26, "context": "relatively easy, as the discourse connective itself provides a strong cue for the discourse relation (Pitler et al., 2008), the classification of implicit discourse relations has proved to be notoriously hard and it has remained one of the last missing", "startOffset": 101, "endOffset": 122}, {"referenceID": 33, "context": "pieces in an end-to-end discourse parser (Xue et al., 2015).", "startOffset": 41, "endOffset": 59}, {"referenceID": 27, "context": "These features include word pairs that are the Cartesian products of the word tokens in the two arguments as well as features manually crafted from various lexicons such as verb classes and sentiment lexicons (Pitler et al., 2009; Rutherford and Xue, 2014).", "startOffset": 209, "endOffset": 256}, {"referenceID": 27, "context": "The prevailing approach for this task is to use surface features derived from various semantic lexicons (Pitler et al., 2009), reducing the number of parameters by mapping raw word tokens in the arguments of discourse relations to a limited number of entries in a semantic lexicon such as polarity and verb classes.", "startOffset": 104, "endOffset": 125}, {"referenceID": 17, "context": "However, these solutions still suffer from the data sparsity problem and almost always require extensive feature selection to work well (Park and Cardie, 2012; Lin et al., 2009; Ji and Eisenstein, 2015).", "startOffset": 136, "endOffset": 202}, {"referenceID": 6, "context": "LSTM models have been notably used to encode the meaning of source language sentence in neural machine translation (Cho et al., 2014; Devlin et al., 2014) and recently used to encode the meaning of an entire sentence to be used as features (Kiros et al.", "startOffset": 115, "endOffset": 154}, {"referenceID": 7, "context": "LSTM models have been notably used to encode the meaning of source language sentence in neural machine translation (Cho et al., 2014; Devlin et al., 2014) and recently used to encode the meaning of an entire sentence to be used as features (Kiros et al.", "startOffset": 115, "endOffset": 154}, {"referenceID": 6, "context": "LSTM models have been notably used to encode the meaning of source language sentence in neural machine translation (Cho et al., 2014; Devlin et al., 2014) and recently used to encode the meaning of an entire sentence to be used as features (Kiros et al., 2015). Many neural architectures have been explored and evaluated, but there is no single technique that is decidedly better across all tasks. The LSTM-based models such as Kiros et al. (2015) perform well across tasks but do not outperform some other strong neural baselines.", "startOffset": 116, "endOffset": 448}, {"referenceID": 6, "context": "LSTM models have been notably used to encode the meaning of source language sentence in neural machine translation (Cho et al., 2014; Devlin et al., 2014) and recently used to encode the meaning of an entire sentence to be used as features (Kiros et al., 2015). Many neural architectures have been explored and evaluated, but there is no single technique that is decidedly better across all tasks. The LSTM-based models such as Kiros et al. (2015) perform well across tasks but do not outperform some other strong neural baselines. Ji et al. (2016) uses a joint discourse language model to improve the performance on the coarse-grained label in the PDTB, but in our case, we would like", "startOffset": 116, "endOffset": 549}, {"referenceID": 12, "context": "Pooling is one of the key techniques in neural network modeling of computer vision (Krizhevsky et al., 2012; LeCun et al., 2010).", "startOffset": 83, "endOffset": 128}, {"referenceID": 15, "context": "Pooling is one of the key techniques in neural network modeling of computer vision (Krizhevsky et al., 2012; LeCun et al., 2010).", "startOffset": 83, "endOffset": 128}, {"referenceID": 30, "context": "The mathematical formulation is the same as Tai et al. (2015).", "startOffset": 44, "endOffset": 62}, {"referenceID": 27, "context": "Previous work in this task has been done over three schemes of evaluation: top-level 4-way classification (Pitler et al., 2009), second-level 11-way classification (Lin et al.", "startOffset": 106, "endOffset": 127}, {"referenceID": 17, "context": ", 2009), second-level 11-way classification (Lin et al., 2009; Ji and Eisenstein, 2015), and modified second-level classification introduced in the CoNLL 2015 Shared Task (Xue et al.", "startOffset": 44, "endOffset": 87}, {"referenceID": 33, "context": ", 2009; Ji and Eisenstein, 2015), and modified second-level classification introduced in the CoNLL 2015 Shared Task (Xue et al., 2015).", "startOffset": 116, "endOffset": 134}, {"referenceID": 1, "context": "Training Weight initialization is uniform random, following the formula recommended by Bengio (2012). The cost function is the standard crossentropy loss function, as the hinge loss function (large-margin framework) yields consistently in-", "startOffset": 87, "endOffset": 101}, {"referenceID": 2, "context": "Implementation All of the models are implemented in Theano (Bergstra et al., 2010; Bastien et al., 2012).", "startOffset": 59, "endOffset": 104}, {"referenceID": 0, "context": "Implementation All of the models are implemented in Theano (Bergstra et al., 2010; Bastien et al., 2012).", "startOffset": 59, "endOffset": 104}, {"referenceID": 17, "context": "The data split and the label set are exactly the same as previous works that use this label set (Lin et al., 2009; Ji and Eisenstein, 2015).", "startOffset": 96, "endOffset": 139}, {"referenceID": 20, "context": "Preprocessing All tokenization is taken from the gold standard tokenization in the PTB (Marcus et al., 1993).", "startOffset": 87, "endOffset": 108}, {"referenceID": 25, "context": "We use the Berkeley parser to parse all of the data (Petrov et al., 2006).", "startOffset": 52, "endOffset": 73}, {"referenceID": 17, "context": "56 Lin et al., (2009) 40.", "startOffset": 3, "endOffset": 22}, {"referenceID": 24, "context": "Other models such as GloVe and continuous bag-of-words seem to yield broadly similar results (Pennington et al., 2014).", "startOffset": 93, "endOffset": 118}, {"referenceID": 17, "context": "05; bootstrap test) and performs comparably with the surface feature baseline (Lin et al., 2009), which uses various lexical and syntactic features and extensive feature selection.", "startOffset": 78, "endOffset": 96}, {"referenceID": 31, "context": "have (Vinyals et al., 2015; Chiu and Nichols, 2015; \u0130rsoy and Cardie, 2014).", "startOffset": 5, "endOffset": 75}, {"referenceID": 30, "context": "Tree LSTM seems to show improvement when there is a need to model longdistance dependency in the data (Tai et al., 2015; Li et al., 2015).", "startOffset": 102, "endOffset": 137}, {"referenceID": 16, "context": "Tree LSTM seems to show improvement when there is a need to model longdistance dependency in the data (Tai et al., 2015; Li et al., 2015).", "startOffset": 102, "endOffset": 137}, {"referenceID": 29, "context": "For example, Vinyals et al. (2015) use sequential LSTM to encode the features for syntactic parse output.", "startOffset": 13, "endOffset": 35}, {"referenceID": 33, "context": "The label set is modified by the shared task organizers into 15 different senses including EntRel as another sense (Xue et al., 2015).", "startOffset": 115, "endOffset": 133}, {"referenceID": 17, "context": "These features are similar to the ones used by Lin et al. (2009).", "startOffset": 47, "endOffset": 65}, {"referenceID": 17, "context": "To establish baseline comparison, we use MaxEnt models loaded with the feature sets previously shown to be effective for English, namely dependency rule pairs, production rule pairs (Lin et al., 2009), Brown cluster pairs (Rutherford and Xue, 2014), and word pairs (Marcu and Echihabi, 2002).", "startOffset": 182, "endOffset": 200}], "year": 2016, "abstractText": "Inferring implicit discourse relations in natural language text is the most difficult subtask in discourse parsing. Surface features achieve good performance, but they are not readily applicable to other languages without semantic lexicons. Previous neural models require parses, surface features, or a small label set to work well. Here, we propose neural network models that are based on feedforward and long-short term memory architecture without any surface features. To our surprise, our best configured feedforward architecture outperforms LSTM-based model in most cases despite thorough tuning. Under various fine-grained label sets and a cross-linguistic setting, our feedforward models perform consistently better or at least just as well as systems that require hand-crafted surface features. Our models present the first neural Chinese discourse parser in the style of Chinese Discourse Treebank, showing that our results hold cross-linguistically.", "creator": "LaTeX with hyperref package"}}}