{"id": "1606.07901", "review": {"conference": "EMNLP", "VERSION": "v1", "DATE_OF_SUBMISSION": "25-Jun-2016", "title": "Corpus-level Fine-grained Entity Typing Using Contextual Information", "abstract": "This which addresses as problem other lauderdale - level legitimate typing, i. aol. , ascribing 15 a typically mandamus clearly current responsible most gives member own only elite same as \" rice \" or \" featured \". The testing of entire cpu nothing they interested after same knowledge within completion, specifically, to things more classes man component is given organization many. We repeal FIGMENT to tackle how sure. FIGMENT fact invariant - based from incorporating (get) a global versions that those based on siljak semiotic information of an entity and (frederick) entire context compact have as half though individual non-game present was entity and returned aggregates the scores. In our multidisciplinary, FIGMENT strongly gbk an consistent over neutral messaging that focuses soon stressing determine having appears semi information extraction system.", "histories": [["v1", "Sat, 25 Jun 2016 12:22:05 GMT  (36kb)", "http://arxiv.org/abs/1606.07901v1", "Accepted at EMNLP2015, Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing"]], "COMMENTS": "Accepted at EMNLP2015, Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["yadollah yaghoobzadeh", "hinrich sch\u00fctze"], "accepted": true, "id": "1606.07901"}, "pdf": {"name": "1606.07901.pdf", "metadata": {"source": "CRF", "title": "Corpus-level Fine-grained Entity Typing Using Contextual Information", "authors": ["Yadollah Yaghoobzadeh"], "emails": ["yadollah@cis.lmu.de"], "sections": [{"heading": null, "text": "ar X\niv :1\n60 6.\n07 90\n1v 1\n[ cs\n.C L\n] 2\n5 Ju\nn 20\n16"}, {"heading": "1 Introduction", "text": "Natural language understanding (NLU) is not possible without knowledge about the world \u2013 partly so because world knowledge is needed for many NLP tasks that must be addressed as part of NLU; e.g., many coreference ambiguities can only be resolved based on world knowledge. It is also true because most NLU applications combine a variety of information sources that include both text sources and knowledge bases; e.g., question answering systems need access to knowledge bases like gazetteers. Thus, high-quality knowledge bases are critical for successful NLU.\nUnfortunately, most knowledge bases are incomplete. The effort required to create knowledge bases is considerable and since the world changes, it will always continue. Knowledge bases are therefore always in need of updates and corrections. To address this problem, we present an information extraction method that can be used for\nknowledge base completion. In contrast to most other work on knowledge base completion, we focus on fine-grained classification of entities as opposed to relations between entities.\nThe goal of knowledge base completion is to acquire knowledge in general as opposed to detailed analysis of an individual context or sentence. Therefore, our approach is corpus-level: We infer the types of an entity by considering the set of all of its mentions in the corpus. In contrast, named entity recognition (NER) is context-level or sentence-level: NER infers the type of an entity in a particular context. As will be discussed in more detail in the following sections, the problems of corpus-level entity typing vs. context/sentencelevel entity typing are quite different. This is partly because the objectives of optimizing accuracy on the context-level vs. optimizing accuracy on the corpus-level are different and partly because evaluation measures for corpus-level and context-level entity typing are different.\nWe define our problem as follows. Let K be a knowledge base that models a set E of entities, a set T of fine-grained classes or types and a membership function m : E \u00d7 T 7\u2192 {0, 1} such that m(e, t) = 1 iff entity e has type t. Let C be a large corpus of text. Then, the problem we address in this paper is corpus-level entity typing: For a given pair of entity e and type t determine \u2013 based on the evidence available in C \u2013 whether e is a member of type t (i.e., m(e, t) = 1) or not (i.e., m(e, t) = 0) and update the membership relation m of K with this information.\nWe investigate two approaches to entity typing: a global model and a context model.\nThe global model aggregates all contextual information about an entity e from the corpus and then based on that, makes a classification decision on a particular type t \u2013 i.e., m(e, t) = 0 vs. m(e, t) = 1.\nThe context model first scores each individual\ncontext of e as expressing type t or not. A final decision on the value of m(e, t) is then made based on the distribution of context scores. One difficulty in knowledge base completion based on text corpora is that it is too expensive to label large amounts of text for supervised approaches. For our context model, we address this problem using distant supervision: we treat all contexts of an entity that can have type t as contexts of type t even though this assumption will in general be only true for a subset of these contexts. Thus, as is typical for distant supervision, the labels are incorrect in some contexts, but we will show that the labeling is good enough to learn a high-quality context model.\nThe global model is potentially more robust since it looks at all the available information at once. In contrast, the context model has the advantage that it can correctly predict types for which there are only a small number of reliable contexts. For example, in a large corpus we are likely to find a few reliable contexts indicating that \u201cBarack Obama\u201d is a bestselling author even though this evidence may be obscured in the global distribution because the vast majority of mentions of \u201cObama\u201d do not occur in author contexts.\nWe implement the global model and the context model as well as a simple combination of the two and call the resulting system FIGMENT: FIne-Grained eMbedding-based Entity Typing. A key feature of FIGMENT is that it makes extensive use of distributed vector representations or embeddings. We compute embeddings for words as is standard in a large body of NLP literature, but we also compute embeddings for entities and for types. The motivation for using embeddings in these cases is (i) better generalization and (ii) more robustness against noise for text types like web pages. We compare the performance of FIGMENT with an approach based on Open Information Extraction (OpenIE).\nThe main contributions of this paper can be summarized as follows.\n\u2022 We address the problem of corpus-level entity typing in a knowledge base completion setting. In contrast to other work that has focused on learning relations between entities, we learn types of entities.\n\u2022 We show that context and global models for entity typing provide complementary infor-\nmation and combining them gives the best results.\n\u2022 We use embeddings for words, entities and types to improve generalization and deal with noisy input.\n\u2022 We show that our approach outperforms a system based on OpenIE relations when the input corpus consists of noisy web pages.\nIn the following, we first discuss related work. Then we motivate our approach and define the problem setting we adopt. We then introduce our models in detail and report and analyze experimental results. Finally, we discuss remaining challenges and possible future work and present our conclusions."}, {"heading": "2 Related work", "text": "Named entity recognition (NER) is the task of detecting and classifying named entities in text. While most NER systems (e.g., Finkel et al. (2005)) only consider a small number of entity classes, recent work has addressed fine-grained NER (Yosef et al., 2012; Ling and Weld, 2012). These methods use a variety of lexical and syntactic features to segment and classify entity mentions. Some more recent work assumes the segmentation is known and only classifies entity mentions. Dong et al. (2015) use distributed representations of words in a hybrid classifier to classify mentions to 20 types. Yogatama et al. (2015) classify mentions to more fine-grained types by using different features for mentions and embedding labels in the same space. These methods as well as standard NER systems try to maximize correct classification of mentions in individual contexts whereas we aggregate individual contexts and evaluate on accuracy of entitytype assignments inferred from the entire corpus. In other words, their evaluation is sentence-level whereas ours is corpus-level.\nEntity set expansion (ESE) is the problem of finding entities in a class (e.g., medications) given a seed set (e.g., {\u201cIbuprofen\u201d, \u201cMaalox\u201d, \u201cProzac\u201d}). The standard solution is patternbased bootstrapping (Thelen and Riloff, 2002; Gupta and Manning, 2014). ESE is different from the problem we address because ESE starts with a small seed set whereas we assume that a large number of examples from a knowledge base (KB)\nis available. Initial experiments with the system of Gupta and Manning (2014) showed that it was not performing well for our task \u2013 this is not surprising given that it is designed for a task with properties quite different from entity typing.\nMore closely related to our work are the OpenIE systems NNPLB (Lin et al., 2012) and PEARL (Nakashole et al., 2013) for fine-grained typing of unlinkable and emerging entities. Both systems first extract relation tuples from a corpus and then type entities based on the tuples they occur in (where NNPLB only uses the subject position for typing). To perform typing, NNPLB propagates activation from known members of a class to other entities whereas PEARL assigns types to the argument slots of relations. The main difference to FIGMENT is that we do not rely on relation extraction. In principle, we can make use of any context, not just subject and object positions. FIGMENT also has advantages for noisy text for which relation extraction can be challenging. This will be demonstrated in our evaluation on web text. Finally, our emphasis is on making yes-no decisions about possible types (as opposed to just ranking possibilities) for all entities (as opposed to just emerging or unlinkable entities). Our premise is that even existing entities in KBs are often not completely modeled and have entries that require enhancement. We choose NNPLB as our baseline.\nThe fine-grained typing of entities performed by FIGMENT can be used for knowledge base completion (KBC). Most KBC systems focus on relations between entities, not on types as we do. Some generalize the patterns of relationships within the KB (Nickel et al., 2012; Bordes et al., 2013) while others use a combination of within-KB generalization and information extraction from text (Weston et al., 2013; Socher et al., 2013; Jiang et al., 2012; Riedel et al., 2013; Wang et al., 2014). Neelakantan and Chang (2015) address entity typing in a way that is similar to FIGMENT. Their method is based on KB information, more specifically entity descriptions in Wikipedia and Freebase. Thus, in contrast to our approach, their system is not able to type entities that are not covered by existing KBs. We infer classes for entities from a large corpus and do not assume that these entities occur in the KB.\nLearning embeddings for words is stan-\ndard in a large body of NLP literature (see Baroni et al. (2014) for an overview). In addition to words, we also learn embeddings for entities and types. Most prior work on entity embeddings (e.g., Weston et al. (2013), Bordes et al. (2013)) and entity and type embeddings (Zhao et al., 2015) has mainly used KB information as opposed to text corpora. Wang et al. (2014) learn embeddings of words and entities in the same space by replacing Wikipedia anchors with their corresponding entities. For our global model, we learn entity embedding in a similar way, but on a corpus with automatically annotated entities. For our context model, we learn and use type embeddings jointly with corpus words to improve generalization, a novel contribution of this paper to the best of our knowledge. We learn all our embeddings using word2vec (Mikolov et al., 2013).\nOur problem can be formulated as multi-instance multi-label (MIML) learning (Zhou and Zhang, 2006), similar to the formulation for relation extraction by Surdeanu et al. (2012). In our problem, each example (entity) can have several instances (contexts) and each instance can have several labels (types). Similar to Zhou and Zhang (2006)\u2019s work on scene classification, we also transform MIML into easier tasks. The global model transforms MIML into a multi-label problem by merging all instances of an example. The context model solves the problem by combining the instance-label scores to example-label scores."}, {"heading": "3 Motivation and problem definition", "text": ""}, {"heading": "3.1 Freebase", "text": "Large scale KBs like Freebase (Bollacker et al., 2008), YAGO (Suchanek et al., 2007) and Google knowledge graph are important NLP resources. Their structure is roughly equivalent to a graph in which entities are nodes and edges are relations between entities. Each node is also associated with one or more semantic classes, called types. These types are the focus of this paper.\nWe use Freebase, the largest available KB, in this paper. In Freebase, an entity can belong to several classes, e.g., \u201cBarack Obama\u201d is a member of 37 types including \u201cUS president\u201d and \u201cauthor\u201d. One notable type is also defined for each entity, e.g., \u201cUS-president\u201d for \u201cObama\u201d since it is\nregarded as his most prominent characteristic and the one that would be used to disambiguate references to him, e.g., to distinguish him from somebody else with the same name.\nThere are about 1500 types in Freebase, organized by domain; e.g., the domain \u201cfood\u201d has types like \u201cfood\u201d, \u201cingredient\u201d and \u201crestaurant\u201d. Some types like \u201clocation\u201d are very general, some are very fine-grained, e.g., \u201cVietnamese urban district\u201d. There are types that have a large number of instances like \u201ccitytown\u201d and types that have very few like \u201ccamera sensor\u201d. Entities are defined as instances of types. They can have several types based on the semantic classes that the entity they are referring to is a member of \u2013 as in the above example of Barack Obama.\nThe types are not organized in a strict taxonomy even though there exists an included type relationship between types in Freebase. The reason is that for a user-generated KB it is difficult to maintain taxonomic consistency. For example, almost all instances of \u201cauthor\u201d are also instances of \u201cperson\u201d, but sometimes organizations author and publish documents. We follow the philosophy of Freebase and assume that the types do not have a hierarchical organization."}, {"heading": "3.2 Incompleteness of knowledge base", "text": "Even though Freebase is the largest publicly available KB of its kind, it still has significant coverage problems; e.g., 78.5% of persons in Freebase do not have nationality (Min et al., 2013).\nThis is unavoidable, partly because Freebase is user-generated, partly because the world changes and Freebase has to be updated to reflect those changes. All existing KBs that attempt to model a large part of the world suffer from this incompleteness problem. Incompleteness is likely to become an even bigger problem in the future as the number of types covered by KBs like Freebase increases. As more and more fine-grained types are added, achieving good coverage for these new types using only human editors will become impossible.\nThe approach we adopt in this paper to address incompleteness of KBs is extraction of information from large text corpora. Text can be argued to be the main repository of the type of knowledge represented in KBs, so it is reasonable to attempt completing them based on text. There is in fact a significant body of work on corpus-based methods for extracting knowledge from text; however,\nmost of it has addressed relation extraction, not the acquisition of type information \u2013 roughly corresponding to unary relations (see Section 2). In this paper, we focus on typing entities."}, {"heading": "3.3 Entity linking", "text": "The first step in extracting information about entities from text is to reliably identify mentions of these entities. This problem of entity linking has some mutual dependencies with entity typing. Indeed, some recent work shows large improvements when entity typing and linking are jointly modeled (Ling et al., 2015; Durrett and Klein, 2014). However, there are constraints that are important for high-performance entity linking, but that are of little relevance to entity typing. For example, there is a large literature on entity linking that deals with coreference resolution and inter-entity constraints \u2013 e.g., \u201cNaples\u201d is more likely to refer to a US (resp. an Italian) city in a context mentioning \u201cFort Myers\u201d (resp. \u201cSicily\u201d).\nTherefore, we will only address entity typing in this paper and consider entity linking as an independent module that provides contexts of entities for FIGMENT. More specifically, we build FIGMENT on top of the output of an existing entity linking system and use FACC1,1 an automatic Freebase annotation of ClueWeb (Gabrilovich et al., 2013). According to the FACC1 distributors, precision of annotated entities is around 80-85% and recall is around 70- 85%."}, {"heading": "3.4 FIGER types", "text": "Our goal is fine-grained typing of entities, but types like \u201cVietnamese urban district\u201d are too finegrained. To create a reliable setup for evaluation and to make sure that all types have a reasonable number of instances, we adopt the FIGER type set (Ling and Weld, 2012) that was created with the same goals in mind. FIGER consists of 112 tags and was created in an attempt to preserve the diversity of Freebase types while consolidating infrequent and unusual types through filtering and merging. For example, the Freebase types \u201cdish\u201d, \u201cingredient\u201d, \u201cfood\u201d and \u201ccheese\u201d are mapped to one type \u201cfood\u201d. See (Ling and Weld, 2012) for a complete list of FIGER types. We use \u201ctype\u201d to refer to FIGER types in the rest of the paper.\n1lemurproject.org/clueweb12/FACC1"}, {"heading": "4 Global, context and joint models", "text": "We address a problem setting in which the followings are given: a KB with a set of entities E, a set of types T and a membership function m : E \u00d7 T 7\u2192 {0, 1} such that m(e, t) = 1 iff entity e has type t; and a large annotated corpus C in which mentions of E are linked. As mentioned before, we use FACC1 as our corpus.\nIn this problem setting, we address the task of corpus-level fine-grained entity typing: we want to infer from the corpus for each pair of entity e and type t whether m(e, t) = 1 holds, i.e., whether entity e is a member of type t.\nWe use three scoring models in FIGMENT: global model, context model and joint model. The models return a score S(e, t) for an entity-type pair (e, t). S(e, t) is an assessment of the extent to which it is true that the semantic class t contains e and we learn it by training on a subset of E. The trained models can be applied to large corpora and the resulting scores can be used for learning new types of entities covered in the KB as well as for typing new or unknown entities \u2013 i.e., entities not covered by the KB. To work for new or unknown entities, we would need an entity linking system such as the ones participating in TAC KBP (McNamee and Dang, 2009) that identifies and clusters mentions of them."}, {"heading": "4.1 Global model", "text": "The global model (GM) scores possible types of entity e based on a distributed vector representation or embedding ~v(e) \u2208 Rd of e. ~v(e) can be learned from the entity-annotated corpus C .\nEmbeddings of words have been widely used in different NLP applications. The embedding of a word is usually derived from the distribution of its context words. The hypothesis is that words with similar meanings tend to occur in similar contexts (Harris, 1954) and therefore cooccur with similar context words. By extension, the assumption of our model is that entities with similar types tend to cooccur with similar context words.\nTo learn a score function SGM(e, t), we use a multilayer perceptron (MLP) with one shared hidden layer and an output layer that contains, for each type t in T, a logistic regression classifier that predicts the probability of t:\nSGM(e, t) = Gt\n(\ntanh ( Winput~v(e) )\n)\nwhere Winput \u2208 Rh\u00d7d is the weight matrix from ~v(e) \u2208 Rd to the hidden layer with size h. Gt is the logistic regression classifier for type t that is applied on the hidden layer. The shared hidden layer is designed to exploit the dependencies among labels. Stochastic gradient descent (SGD) with AdaGrad (Duchi et al., 2011) and minibatches are used to learn the parameters."}, {"heading": "4.2 Context model", "text": "For the context model (CM), we first learn a scoring function Sc2t(c, t) for individual contexts c in the corpus. Sc2t(c, t) is an assessment of how likely it is that an entity occurring in context c has type t. For example, consider the contexts c1 = \u201che served SLOT cooked in wine\u201d and c2 = \u201cshe loves SLOT more than anything\u201d. SLOT marks the occurrence of an entity and it also shows that we do not care about the entity mention itself but only its context. For the type t = \u201cfood\u201d, Sc2t(c1, t) is high whereas Sc2t(c2, t) is low. This example demonstrates that some contexts of an entity like \u201cbeef\u201d allow specific inferences about its type whereas others do not. We aim to learn a scoring function Sc2t that can distinguish these cases.\nBased on the context scoring function Sc2t, we then compute the corpus-level CM scoring function SCM that takes the scores Sc2t(ci, t) for all contexts of entity e in the corpus as input and returns a score SCM(e, t) that assesses the appropriateness of t for e. In other words, SCM is:\nSCM(e, t) = g(Ue,t) (1)\nwhere Ue,t = {Sc2t(c1, t), . . . , Sc2t(cn, t)} is the set of scores for t based on the n contexts c1 . . . cn of e in the corpus. The function g is a summary function of the distribution of scores, e.g., the mean, median or maximum. We use the mean in this paper.\nWe now describe how we learn Sc2t. For training, we need contexts that are labeled with types. We do not have such a dataset in our problem setting, but we can use the contexts of linked entities as distantly supervised data. Specifically, assume that entity e has n types. For each mention of e in the corpus, we generate a training example with n labels, one for each of the n types of e.\nFor training Sc2t, a context c of a mention is represented as the concatenation of two vectors. One vector is the average of the embeddings of the 2l words to the left and right of the mention.\nThe other vector is the concatenation of the embeddings of the 2k words to the left and right of the mention. E.g., for k = 2 and l = 1 the context c is represented as the vector: \u03a6(c) = [\nx\u22122, x\u22121, x+1, x+2, avg(x\u22121, x+1) ]\nwhere xi \u2208 R d is the embedding of the context word at position i relative to the entity in position 0. We train Sc2t on context representations that consist of embeddings because our goal is a robust model that works well on a wide variety of genres, including noisy web pages. If there are other entities in the contexts, we first replace them with their notable type to improve generalization. We learn word and type embeddings from the corpus C by replacing train entities with their notable type.\nThe next step is to score these examples. We use an MLP similar to the global model to learn Sc2t, which predicts the probability of type t occurring in context c:\nSc2t(c, t) = Gt\n(\ntanh ( Winput\u03a6(c) )\n)\nwhere \u03a6(c) \u2208 Rn is the feature vector of the context c as described above, n = (2k + 1) \u2217 d and Winput \u2208 Rh\u00d7n is the weight matrix from input to hidden layer with h units. Again, we use SGD with AdaGrad and minibatch training."}, {"heading": "4.3 Joint model", "text": "Global model and context model have complementary strengths and weaknesses.\nThe strength of CM is that it is a direct model of the only source of reliable evidence we have: the context in which the entity occurs. This is also the way a human would ordinarily do entity typing: she would determine if a specific context in which the entity occurs implies that the entity is, say, an author or a musician and type it accordingly. The order of words is of critical importance for the accurate assessment of a context and CM takes it into account. A well-trained CM will also work for cases for which GM is not applicable. In particular, if the KB contains only a small number of entities of a particular type, but the corpus contains a large number of contexts of these entities, then CM is more likely to generalize well.\nThe main weakness of CM is that a large proportion of contexts does not contain sufficient information to infer all types of the entity; e.g., based on our distant supervised training data, we label every context of \u201cObama\u201d with \u201cauthor\u201d, \u201cpolitician\u201d and Obama\u2019s other types in the KB.\nThus, CM is trained on a noisy training set that contains only a relatively small number of informative contexts.\nThe main strength of GM is that it bases its decisions on the entire evidence available in the corpus. This makes it more robust. It is also more efficient to train since its training set is by a factor of |M | smaller than the training set of CM where |M | is the average number of contexts per entity.\nThe disadvantage of GM is that it does not work well for rare entities since the aggregated representation of an entity may not be reliable if it is based on few contexts. It is also less likely to work well for non-dominant types of an entity which might be swamped by dominant types; e.g., the author contexts of \u201cObama\u201d may be swamped by the politician contexts and the overall context signature of the entity \u201cObama\u201d may not contain enough signal to infer that he is an author. Finally, methods for learning embeddings like word2vec are bag-of-word approaches. Therefore, word order information \u2013 critical for many typing decisions \u2013 is lost.\nSince GM and CM models are complementary, a combination model should work better. We test this hypothesis for the simplest possible joint model (JM), which adds the scores of the two individual models:\nSJM(e, t) = SGM(e, t) + SCM(e, t)"}, {"heading": "5 Experimental setup and results", "text": ""}, {"heading": "5.1 Setup", "text": "Baseline: Our baseline system is the OpenIE system no-noun-phrase-left-behind (NNPLB) by Lin et al. (2012) (see Section 2). Our reimplementation performs on a par with published results.2 We use NNPBL as an alternative way of computing scores S(e, t). Scores of the four systems we compare \u2013 NNPBL, GM, CM, JM \u2013 are processed the same way to perform entity typing (see below).\nCorpus: We select a subset of about 7.5 million web pages, taken from the first segment of ClueWeb12,3 from different crawl types: 1 million Twitter links, 120,000 WikiTravel pages and 6.5 million web pages. This corpus is preprocessed by eliminating HTML tags, replacing all numbers\n2The precision of our implementation on the dataset of three million relation triples distributed by (Lin et al., 2012) is 60.7% compared to 59.8% and 61% for tail and head entities reported by Lin et al. (2012).\n3http://lemurproject.org/clueweb12\nwith \u201c7\u201d and all web links and email addresses with \u201cHTTP\u201d, filtering out sentences with length less than 40 characters, and finally doing a simple tokenization. We merge the text with the FACC1 annotations. The resulting corpus has 4 billion tokens and 950,000 distinct entities. We use the 2014-03-09 Freebase data dump as our KB.\nEntity datasets: We consider all entities in the corpus whose notable types can be mapped to one of the 112 FIGER types, based on the mapping provided by FIGER. 750,000 such entities form our set of entities. 10 out of 112 FIGER types have no entities in this set.4\nWe run the OpenIE system Reverb (Fader et al., 2011) to extract relation triples of the form <subject, relation, object>. Since NNPLB only considers entities in the subject position, we filter out triples whose subject is not an entity. The size of the remaining set of triples is 4,000,000. For a direct comparison with NNPLB, we divide the 750,000 entities into those that occur in subject position in one of the extracted triples (about 250,000 subject entities or SE) and those that do not (about 500,000 non-subject entities or NSE). We split SE 50:20:30 into train, dev and test sets. The average and median number of FIGER types of the training entities are 1.8 and 2, respectively. We use NSE to evaluate performance of FIGMENT on entities that do not occur in subject position.5\nContext sampling: For Sc2t, we create train\u2019, dev\u2019 and test\u2019 sets of contexts that correspond to train, dev and test sets of entities. Because the number of contexts is unbalanced for both entities and types and because we want to accelerate training and testing, we downsample contexts. For the set train\u2019, we use the notable type feature of Freebase: For each type t, we take contexts from the mentions of those entities whose notable type is t. Recall, however, that each context is labeled with all types of its entity \u2013 see Section 4.2.\nThen if the number of contexts for t is larger than a minimum, we sample the contexts based on the number of training entities of t. We set the minimum to 10,000 and constrain the number of samples for each t to 20,000. Also, to reduce the effect of distant supervision, entities with fewer\n4The reason is that the FIGER mapping uses Freebase user-created classes. The 10 missing types are not the notable type of any entity in Freebase.\n5The entity datasets are available at http://cistern.cis.lmu.de/figment\ndistinct types are preferred in sampling to provide discriminative contexts for their notable types. For test\u2019 and dev\u2019 sets, we sample 300 and 200 random contexts, respectively, for each entity.\nSystem setup: As the baseline, we apply NNPLB to the 4 million extracted triples. To learn entity embeddings for GM, we run word2vec (skipgram, 200 dimensions, window size 5) on a version of the corpus in which entities have been replaced by their Freebase IDs, based on the FACC1 annotation. We then train MLP with number of hidden units h = 200 on the embeddings of training entities until the error on dev entities stops decreasing.\nOur reasoning for the unsupervised training setup is that we do not use any information about the types of entities (e.g., no entities annotated by humans with types) when we run an unsupervised algorithm like word2vec. In a real-world application of FIGMENT to a new corpus, we would first run word2vec on the merger of our corpus and the new corpus, retrain GM on training entities and finally apply it to entities in the new corpus. This scenario is simulated by our setup.\nRecall that the input to CM consists of 2k unit embeddings and the average of 2l unit embeddings where we use the term unit to refer to both words and types. We set k to 4 and l to 5. To learn embeddings for units, we first exclude lines containing test entities, and then replace each entity with its notable type. Then, we run word2vec (skipgram, 100 dimensions, window size 5) on this new corpus and learn embeddings for words and types.\nUsing the embeddings as input representations, we train Sc2t on train\u2019 until error on dev\u2019 stops decreasing. We set the number of hidden units to 300. We then apply the trained scoring function Sc2t to test\u2019 and get the scores Sc2t(c, t) for test\u2019 contexts. As explained in Section 4.2, we compute the corpus-level scores SCM(e, t) for each entity by averaging its context-level scores (see Equation 1).\nRanking evaluation: This evaluation shows how well the models rank types for entities. The ranking is based on the scores S(e, t) produced by the different models and baselines. Similar to the evaluation performed by Lin et al. (2012), we use precision at 1 (P@1) and breakeven point (BEP, Boldrin and Levine (2008)). BEP is F1 at the point in the ranked list at which precision and recall have the same value.\nClassification evaluation: This evaluation\ndemonstrates the quality of the thresholded assignment decisions produced by the models. These measures more directly express how well FIGMENT would succeed in enhancing the KB with new information since for each pair (e, t), we have to make a binary decision about whether to put it in the KB or not. We compare our decisions with the gold KB information.\nOur evaluation measures are (i) accuracy: an entity is correct if all its types and no incorrect types are assigned to it; (ii) micro average: F1 of all type-entity assignment decisions; (iii) entity macro average F1: F1 of types assigned to an entity, averaged over entities; (iv) type macro average F1: F1 of entities assigned to a type, averaged over types.\nThe assignment decision is made based on thresholds, one per type, for each S(e, t). We select the threshold that maximizes F1 of entities assigned to the type on dev."}, {"heading": "5.2 Results", "text": "Table 1 presents results for the ranking evaluation as well as for the first three measures of the classification evaluation. MFT is the most frequent type baseline that ranks types according to their frequency in train. We also show the results for head entities (frequency higher than 100) and tail entities (frequency less than 5). The performance of the systems is in this order: JM > GM > CM > NNPLB > MFT.\nTable 2 shows the results of the fourth classification measure, type macro average F1, for all, head (more than 3000 train entities, 11 types), and tail (less than 200 train entities, 36 types) types. The ordering of models for Table 2 is in line with Table 1: JM > GM > CM > NNPLB > MFT.\nWe can easily run FIGMENT for non-subject entities (NSE) exactly the same way we have run it for subject entities. We test our JM on the 67,000 NSE entities with a frequency of more than 10. The top ranked type returned for 73.5% of enti-\nties was correct. Thus, due to our ability to deal with NSE, we can type an additional 50,000 entities correctly."}, {"heading": "6 Analysis", "text": "Effect of window size in CM: Table 3 explores the effect of using different context sizes. Recall that CM was trained with 2k = 8 for the concatenation and 2l = 10 for the average window size. We change 2k from 0 to 14 while keeping 2l = 10. The number of hidden units used in each model is also reported. The table shows that CM can leverage larger context sizes well.\nPoor results of NNPLB: NNPLB is mostly hampered by Reverb, which did not work well on the noisy web corpus. As a result, the quality of the extracted relations \u2013 which NNPLB entity typing is based on \u2013 is too low for reliable typing decisions. The good results of NNPLB on their non-noisy published relation triples confirm that. On the three million relation triples, when mapping Freebase types to FIGER, P@1 of NNPLB is .684; when limiting entities to those with more than 10 relations, the results improve to .776.\nGM performs better than CM and JM performs best: The fact that GM outperforms CM shows that decisions based on one global vector of an entity work better than aggregating multiple weak decisions on their contexts. That is clearest for tail entities \u2013 where one bad context can highly influence the final decision \u2013 and for tail types, which CM was not able to distinguish from other similar types. However, the good results of the simple JM confirm that the score distributions in CM do help. As an example, consider one of the test entities that is an \u201cauthor\u201d. GM and CM wrongly predict \u201cwritten work\u201d and \u201cartist\u201d, respectively, but JM correctly outputs \u201cauthor\u201d.\nErrors of CM: Many CM errors are caused by its simple input representation: it has to learn all linguistic abstractions that it wants to rely on from the training set. One manifestation of this problem is that CM confuses the types \u201cfood\u201d and \u201crestau-\nrant\u201d. There are only few linguistic contexts in which entities of these types can be exchanged for each other. On the other hand, the context words they cooccur with in a bag-of-words (BOW) sense are very similar. Thus, this indicates that CM pays too much attention to BOW information and that its representation of contexts is limited in terms of generalization.\nAssumptions that result in errors: The performance of all models suffers from a number of assumptions we made in our training / evaluation setup that are only approximately true.\nThe first assumption is that FACC1 is correct. But it has a precision of only 80-85% and this caused many errors. An example is the lunar crater \u201cBuffon\u201d in Freebase, a \u201clocation\u201d. Its predicted type is \u201cathlete\u201d because some FACC1 annotations of the crater link it to the Italian goalkeeper.\nThe second assumption of our evaluation setup is the completeness of Freebase. There are about 2,600 entities with the single type \u201cperson\u201d in SE test. For 62% of the errors on this subset, the top predicted type is a subtype of person: \u201cauthor\u201d, \u201cartist\u201d etc. We manually typed a random subset of 50 and found that the predicted type is actually correct for 44 of these entities.\nThe last assumption is the mapping from Freebase to FIGER. Some common Freebase types like \u201caward-winner\u201d are not mapped. This negatively affects evaluation measures for many entities. On the other hand, the resulting types do not have a balanced number of instances. Based on our training entities, 11 types (e.g., \u201claw\u201d) have less than 50 instances while 26 types (e.g., \u201csoftware\u201d) have more than 1000 instances. Even sampling the contexts could not resolve this problem and this led to low performance on tail types."}, {"heading": "7 Future work", "text": "The performance of FIGMENT is poor for tail types and entities. We plan to address this in the future (i) by running FIGMENT on larger corpora, (ii) by refining the FIGER type set to cover more Freebase entities, (iii) by exploiting a hierarchy over types and (iv) by exploring more complex input representations of the context for the CM.\nFIGMENT\u2019s context model can in principle be based on any system that provides entity-type assessment scores for individual contexts. Thus, as an alternative to our scoring model Sc2t(c, t), we could use sentence-level entity classification systems such as FIGER (Ling and Weld, 2012) and (Yogatama et al., 2015)\u2019s system. These systems are based on linguistic features different from the input representation we use, so a comparison with our embedding-based approach is interesting. Our assumption is that FIGMENT is more robust against noise, but investigation is needed.\nThe components of the version of FIGMENT we presented, in particular, context model and global model, do not use features derived from the mention of an entity. Our assumption was that such features are less useful for fine-grained entity typing. However, there are clearly some types for which mention-based features are useful (e.g., medications or organizations referred to by abbreviations), so we will investigate the usefulness of such features in the future."}, {"heading": "8 Conclusion", "text": "We presented FIGMENT, a corpus-level system that uses contextual information for entity typing. We designed two scoring models for pairs of entities and types: a global model that scores based on aggregated context information and a context model that aggregates the scores of individual contexts. We used embeddings of words, entities and\ntypes to represent contextual information. Our experimental results show that global model and context model provide complementary information for entity typing. We demonstrated that, comparing with an OpenIE-based system, FIGMENT performs well on noisy web pages.\nAcknowledgements. Thanks to the anonymous reviewers for their valuable comments. This work was supported by Deutsche Forschungsgemeinschaft (grant DFG SCHU 2246/8-2, SPP 1335)."}], "references": [{"title": "Don\u2019t count, predict! A systematic comparison of context-counting vs. context-predicting semantic vectors", "author": ["Baroni et al.2014] Marco Baroni", "Georgiana Dinu", "Germ\u00e1n Kruszewski"], "venue": "In Proceedings of the 52nd Annual Meeting of the Association", "citeRegEx": "Baroni et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Baroni et al\\.", "year": 2014}, {"title": "Against intellectual monopoly", "author": ["Boldrin", "Levine2008] Michele Boldrin", "David K. Levine"], "venue": null, "citeRegEx": "Boldrin et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Boldrin et al\\.", "year": 2008}, {"title": "Freebase: a collaboratively created graph database for structuring human knowledge", "author": ["Colin Evans", "Praveen Paritosh", "Tim Sturge", "Jamie Taylor"], "venue": "In Proceedings of the ACM SIGMOD International Con-", "citeRegEx": "Bollacker et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Bollacker et al\\.", "year": 2008}, {"title": "Irreflexive and hierarchical relations as translations. CoRR, abs/1304.7158", "author": ["Nicolas Usunier", "Alberto Garc\u0131\u0301a-Dur\u00e1n", "Jason Weston", "Oksana Yakhnenko"], "venue": null, "citeRegEx": "Bordes et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Bordes et al\\.", "year": 2013}, {"title": "A hybrid neural model for type classification of entity mentions", "author": ["Dong et al.2015] Li Dong", "Furu Wei", "Hong Sun", "Ming Zhou", "Ke Xu"], "venue": "In Proceedings of the Twenty-Fourth International Joint Conference on Artificial Intelligence,", "citeRegEx": "Dong et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Dong et al\\.", "year": 2015}, {"title": "Adaptive subgradient methods for online learning and stochastic optimization", "author": ["Duchi et al.2011] John C. Duchi", "Elad Hazan", "Yoram Singer"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "Duchi et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Duchi et al\\.", "year": 2011}, {"title": "A joint model for entity analysis: Coreference, typing, and linking", "author": ["Durrett", "Klein2014] Greg Durrett", "Dan Klein"], "venue": null, "citeRegEx": "Durrett et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Durrett et al\\.", "year": 2014}, {"title": "Identifying relations for open information extraction", "author": ["Fader et al.2011] Anthony Fader", "Stephen Soderland", "Oren Etzioni"], "venue": "In Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing,", "citeRegEx": "Fader et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Fader et al\\.", "year": 2011}, {"title": "Conference Centre, Edinburgh, UK, A meeting of SIGDAT, a Special Interest Group of the ACL, pages 1535\u20131545", "author": ["John McIntyre"], "venue": null, "citeRegEx": "2011 and McIntyre,? \\Q2011\\E", "shortCiteRegEx": "2011 and McIntyre", "year": 2011}, {"title": "Incorporating non-local information into information extraction systems by gibbs sampling", "author": ["Trond Grenager", "Christopher D. Manning"], "venue": "In ACL 2005,", "citeRegEx": "Finkel et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Finkel et al\\.", "year": 2005}, {"title": "Facc1: Freebase annotation of clueweb corpora", "author": ["Michael Ringgaard", "Amarnag Subramanya"], "venue": null, "citeRegEx": "Gabrilovich et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Gabrilovich et al\\.", "year": 2013}, {"title": "Improved pattern learning for bootstrapped entity extraction", "author": ["Gupta", "Manning2014] Sonal Gupta", "Christopher D. Manning"], "venue": "In Proceedings of the Eighteenth Conference on Computational Natural Language Learning,", "citeRegEx": "Gupta et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Gupta et al\\.", "year": 2014}, {"title": "Link prediction in multi-relational graphs using additive models", "author": ["Jiang et al.2012] Xueyan Jiang", "Volker Tresp", "Yi Huang", "Maximilian Nickel"], "venue": "In Proceedings of the International Workshop on Semantic Technologies meet Recommender", "citeRegEx": "Jiang et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Jiang et al\\.", "year": 2012}, {"title": "No noun phrase left behind: Detecting and typing unlinkable entities", "author": ["Lin et al.2012] Thomas Lin", "Mausam", "Oren Etzioni"], "venue": "In Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Computational", "citeRegEx": "Lin et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Lin et al\\.", "year": 2012}, {"title": "Fine-grained entity recognition", "author": ["Ling", "Weld2012] Xiao Ling", "Daniel S. Weld"], "venue": "In Proceedings of the Twenty-Sixth AAAI Conference on Artificial Intelligence, July 22-26,", "citeRegEx": "Ling et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Ling et al\\.", "year": 2012}, {"title": "Design challenges for entity linking", "author": ["Ling et al.2015] Xiao Ling", "Sameer Singh", "Daniel S. Weld"], "venue": null, "citeRegEx": "Ling et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Ling et al\\.", "year": 2015}, {"title": "Overview of the tac 2009 knowledge base population track", "author": ["McNamee", "Dang2009] Paul McNamee", "Hoa Trang Dang"], "venue": "In Text Analysis Conference (TAC),", "citeRegEx": "McNamee et al\\.,? \\Q2009\\E", "shortCiteRegEx": "McNamee et al\\.", "year": 2009}, {"title": "Efficient estimation of word representations in vector space. CoRR, abs/1301.3781", "author": ["Kai Chen", "Greg Corrado", "Jeffrey Dean"], "venue": null, "citeRegEx": "Mikolov et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2013}, {"title": "Distant supervision for relation extraction with an incomplete knowledge base", "author": ["Min et al.2013] Bonan Min", "Ralph Grishman", "Li Wan", "Chang Wang", "David Gondek"], "venue": "In Human Language Technologies: Conference of the North American Chapter", "citeRegEx": "Min et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Min et al\\.", "year": 2013}, {"title": "Fine-grained semantic typing of emerging entities", "author": ["Tomasz Tylenda", "Gerhard Weikum"], "venue": "In Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics,", "citeRegEx": "Nakashole et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Nakashole et al\\.", "year": 2013}, {"title": "Inferring missing entity type instances for knowledge base completion: New dataset and methods", "author": ["Neelakantan", "Chang2015] Arvind Neelakantan", "Ming-Wei Chang"], "venue": "In NAACL HLT 2015,", "citeRegEx": "Neelakantan et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Neelakantan et al\\.", "year": 2015}, {"title": "Factorizing YAGO: scalable machine learning for linked data", "author": ["Volker Tresp", "Hans-Peter Kriegel"], "venue": "In World Wide Web Conference,", "citeRegEx": "Nickel et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Nickel et al\\.", "year": 2012}, {"title": "Relation extraction with matrix factorization and universal schemas", "author": ["Limin Yao", "Andrew McCallum", "Benjamin M. Marlin"], "venue": "In Human Language Technologies: Conference of the North American Chapter", "citeRegEx": "Riedel et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Riedel et al\\.", "year": 2013}, {"title": "Reasoning with neural tensor networks for knowledge base completion", "author": ["Danqi Chen", "Christopher D. Manning", "Andrew Y. Ng"], "venue": "In Advances in Neural Information Processing Systems", "citeRegEx": "Socher et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Socher et al\\.", "year": 2013}, {"title": "Yago: a core of semantic knowledge", "author": ["Gjergji Kasneci", "Gerhard Weikum"], "venue": "In Proceedings of the 16th International Conference on World Wide Web,", "citeRegEx": "Suchanek et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Suchanek et al\\.", "year": 2007}, {"title": "Multi-instance multi-label learning for relation extraction", "author": ["Julie Tibshirani", "Ramesh Nallapati", "Christopher D. Manning"], "venue": "In Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Lan-", "citeRegEx": "Surdeanu et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Surdeanu et al\\.", "year": 2012}, {"title": "A bootstrapping method for learning semantic lexicons using extraction pattern contexts", "author": ["Thelen", "Riloff2002] Michael Thelen", "Ellen Riloff"], "venue": "In Proceedings of the ACL-02 Conference on Empirical Methods in Natural Language Processing,", "citeRegEx": "Thelen et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Thelen et al\\.", "year": 2002}, {"title": "Knowledge graph and text jointly embedding", "author": ["Wang et al.2014] Zhen Wang", "Jianwen Zhang", "Jianlin Feng", "Zheng Chen"], "venue": "In Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing, EMNLP 2014,", "citeRegEx": "Wang et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Wang et al\\.", "year": 2014}, {"title": "Connecting language and knowledge bases with embedding models for relation extraction", "author": ["Weston et al.2013] Jason Weston", "Antoine Bordes", "Oksana Yakhnenko", "Nicolas Usunier"], "venue": "In Proceedings of the 2013 Conference on Empirical Meth-", "citeRegEx": "Weston et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Weston et al\\.", "year": 2013}, {"title": "Embedding methods for fine grained entity type classification", "author": ["Daniel Gillick", "Nevena Lazic"], "venue": "In Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th Interna-", "citeRegEx": "Yogatama et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Yogatama et al\\.", "year": 2015}, {"title": "HYENA: hierarchical type classification for entity names", "author": ["Sandro Bauer", "Johannes Hoffart", "Marc Spaniol", "Gerhard Weikum"], "venue": "COLING", "citeRegEx": "Yosef et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Yosef et al\\.", "year": 2012}, {"title": "Representation learning for measuring entity relatedness with rich information", "author": ["Zhao et al.2015] Yu Zhao", "Zhiyuan Liu", "Maosong Sun"], "venue": "In Proceedings of the Twenty-Fourth International Joint Conference on Artificial Intelligence,", "citeRegEx": "Zhao et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Zhao et al\\.", "year": 2015}, {"title": "Multi-instance multi-label learning with application to scene classification", "author": ["Zhou", "Zhang2006] Zhi-Hua Zhou", "Min-Ling Zhang"], "venue": "In Advances in Neural Information Processing Systems 19,", "citeRegEx": "Zhou et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Zhou et al\\.", "year": 2006}], "referenceMentions": [{"referenceID": 30, "context": "(2005)) only consider a small number of entity classes, recent work has addressed fine-grained NER (Yosef et al., 2012; Ling and Weld, 2012).", "startOffset": 99, "endOffset": 140}, {"referenceID": 8, "context": ", Finkel et al. (2005)) only consider a small number of entity classes, recent work has addressed fine-grained NER (Yosef et al.", "startOffset": 2, "endOffset": 23}, {"referenceID": 4, "context": "Dong et al. (2015) use distributed representations of words in a hybrid classifier to classify mentions to 20 types.", "startOffset": 0, "endOffset": 19}, {"referenceID": 4, "context": "Dong et al. (2015) use distributed representations of words in a hybrid classifier to classify mentions to 20 types. Yogatama et al. (2015) classify mentions to more fine-grained types by using different features for mentions and embedding labels in the same space.", "startOffset": 0, "endOffset": 140}, {"referenceID": 13, "context": "More closely related to our work are the OpenIE systems NNPLB (Lin et al., 2012) and PEARL (Nakashole et al.", "startOffset": 62, "endOffset": 80}, {"referenceID": 19, "context": ", 2012) and PEARL (Nakashole et al., 2013) for fine-grained typing of unlinkable and emerging entities.", "startOffset": 18, "endOffset": 42}, {"referenceID": 21, "context": "Some generalize the patterns of relationships within the KB (Nickel et al., 2012; Bordes et al., 2013) while others use a combina-", "startOffset": 60, "endOffset": 102}, {"referenceID": 3, "context": "Some generalize the patterns of relationships within the KB (Nickel et al., 2012; Bordes et al., 2013) while others use a combina-", "startOffset": 60, "endOffset": 102}, {"referenceID": 28, "context": "tion of within-KB generalization and information extraction from text (Weston et al., 2013; Socher et al., 2013; Jiang et al., 2012; Riedel et al., 2013; Wang et al., 2014).", "startOffset": 70, "endOffset": 172}, {"referenceID": 23, "context": "tion of within-KB generalization and information extraction from text (Weston et al., 2013; Socher et al., 2013; Jiang et al., 2012; Riedel et al., 2013; Wang et al., 2014).", "startOffset": 70, "endOffset": 172}, {"referenceID": 12, "context": "tion of within-KB generalization and information extraction from text (Weston et al., 2013; Socher et al., 2013; Jiang et al., 2012; Riedel et al., 2013; Wang et al., 2014).", "startOffset": 70, "endOffset": 172}, {"referenceID": 22, "context": "tion of within-KB generalization and information extraction from text (Weston et al., 2013; Socher et al., 2013; Jiang et al., 2012; Riedel et al., 2013; Wang et al., 2014).", "startOffset": 70, "endOffset": 172}, {"referenceID": 27, "context": "tion of within-KB generalization and information extraction from text (Weston et al., 2013; Socher et al., 2013; Jiang et al., 2012; Riedel et al., 2013; Wang et al., 2014).", "startOffset": 70, "endOffset": 172}, {"referenceID": 12, "context": ", 2013; Jiang et al., 2012; Riedel et al., 2013; Wang et al., 2014). Neelakantan and Chang (2015) address entity typing in a way that is similar to FIGMENT.", "startOffset": 8, "endOffset": 98}, {"referenceID": 31, "context": "(2013)) and entity and type embeddings (Zhao et al., 2015) has mainly used KB information as opposed to text corpora.", "startOffset": 39, "endOffset": 58}, {"referenceID": 17, "context": "We learn all our embeddings using word2vec (Mikolov et al., 2013).", "startOffset": 43, "endOffset": 65}, {"referenceID": 0, "context": "Learning embeddings for words is standard in a large body of NLP literature (see Baroni et al. (2014) for an overview).", "startOffset": 81, "endOffset": 102}, {"referenceID": 0, "context": "Learning embeddings for words is standard in a large body of NLP literature (see Baroni et al. (2014) for an overview). In addition to words, we also learn embeddings for entities and types. Most prior work on entity embeddings (e.g., Weston et al. (2013), Bordes et al.", "startOffset": 81, "endOffset": 256}, {"referenceID": 0, "context": "Learning embeddings for words is standard in a large body of NLP literature (see Baroni et al. (2014) for an overview). In addition to words, we also learn embeddings for entities and types. Most prior work on entity embeddings (e.g., Weston et al. (2013), Bordes et al. (2013)) and entity and type embeddings (Zhao et al.", "startOffset": 81, "endOffset": 278}, {"referenceID": 0, "context": "Learning embeddings for words is standard in a large body of NLP literature (see Baroni et al. (2014) for an overview). In addition to words, we also learn embeddings for entities and types. Most prior work on entity embeddings (e.g., Weston et al. (2013), Bordes et al. (2013)) and entity and type embeddings (Zhao et al., 2015) has mainly used KB information as opposed to text corpora. Wang et al. (2014) learn embeddings of words and entities in the same space by replacing Wikipedia anchors with their corresponding entities.", "startOffset": 81, "endOffset": 408}, {"referenceID": 25, "context": "Our problem can be formulated as multi-instance multi-label (MIML) learning (Zhou and Zhang, 2006), similar to the formulation for relation extraction by Surdeanu et al. (2012). In our problem, each example (entity) can have several instances (contexts) and each instance can have several labels (types).", "startOffset": 154, "endOffset": 177}, {"referenceID": 25, "context": "Our problem can be formulated as multi-instance multi-label (MIML) learning (Zhou and Zhang, 2006), similar to the formulation for relation extraction by Surdeanu et al. (2012). In our problem, each example (entity) can have several instances (contexts) and each instance can have several labels (types). Similar to Zhou and Zhang (2006)\u2019s work on scene classification, we also transform MIML into easier tasks.", "startOffset": 154, "endOffset": 338}, {"referenceID": 2, "context": "Large scale KBs like Freebase (Bollacker et al., 2008), YAGO (Suchanek et al.", "startOffset": 30, "endOffset": 54}, {"referenceID": 24, "context": ", 2008), YAGO (Suchanek et al., 2007) and Google knowledge graph are important NLP resources.", "startOffset": 14, "endOffset": 37}, {"referenceID": 18, "context": "5% of persons in Freebase do not have nationality (Min et al., 2013).", "startOffset": 50, "endOffset": 68}, {"referenceID": 15, "context": "Indeed, some recent work shows large improvements when entity typing and linking are jointly modeled (Ling et al., 2015; Durrett and Klein, 2014).", "startOffset": 101, "endOffset": 145}, {"referenceID": 10, "context": "More specifically, we build FIGMENT on top of the output of an existing entity linking system and use FACC1,1 an automatic Freebase annotation of ClueWeb (Gabrilovich et al., 2013).", "startOffset": 154, "endOffset": 180}, {"referenceID": 5, "context": "Stochastic gradient descent (SGD) with AdaGrad (Duchi et al., 2011) and minibatches are used to learn the parameters.", "startOffset": 47, "endOffset": 67}, {"referenceID": 13, "context": "Baseline: Our baseline system is the OpenIE system no-noun-phrase-left-behind (NNPLB) by Lin et al. (2012) (see Section 2).", "startOffset": 89, "endOffset": 107}, {"referenceID": 13, "context": "The precision of our implementation on the dataset of three million relation triples distributed by (Lin et al., 2012) is 60.", "startOffset": 100, "endOffset": 118}, {"referenceID": 13, "context": "The precision of our implementation on the dataset of three million relation triples distributed by (Lin et al., 2012) is 60.7% compared to 59.8% and 61% for tail and head entities reported by Lin et al. (2012). http://lemurproject.", "startOffset": 101, "endOffset": 211}, {"referenceID": 7, "context": "We run the OpenIE system Reverb (Fader et al., 2011) to extract relation triples of the form <subject, relation, object>.", "startOffset": 32, "endOffset": 52}, {"referenceID": 13, "context": "to the evaluation performed by Lin et al. (2012), we use precision at 1 (P@1) and breakeven point (BEP, Boldrin and Levine (2008)).", "startOffset": 31, "endOffset": 49}, {"referenceID": 13, "context": "to the evaluation performed by Lin et al. (2012), we use precision at 1 (P@1) and breakeven point (BEP, Boldrin and Levine (2008)).", "startOffset": 31, "endOffset": 130}, {"referenceID": 29, "context": "Thus, as an alternative to our scoring model Sc2t(c, t), we could use sentence-level entity classification systems such as FIGER (Ling and Weld, 2012) and (Yogatama et al., 2015)\u2019s system.", "startOffset": 155, "endOffset": 178}], "year": 2016, "abstractText": "This paper addresses the problem of corpus-level entity typing, i.e., inferring from a large corpus that an entity is a member of a class such as \u201cfood\u201d or \u201cartist\u201d. The application of entity typing we are interested in is knowledge base completion, specifically, to learn which classes an entity is a member of. We propose FIGMENT to tackle this problem. FIGMENT is embedding-based and combines (i) a global model that scores based on aggregated contextual information of an entity and (ii) a context model that first scores the individual occurrences of an entity and then aggregates the scores. In our evaluation, FIGMENT strongly outperforms an approach to entity typing that relies on relations obtained by an open information extraction system.", "creator": "LaTeX with hyperref package"}}}