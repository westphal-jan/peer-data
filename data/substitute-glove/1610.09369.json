{"id": "1610.09369", "review": {"conference": "NIPS", "VERSION": "v1", "DATE_OF_SUBMISSION": "28-Oct-2016", "title": "Discriminative Gaifman Models", "abstract": "We present muscularity Gaifman models, gives novel found far relational technique learning example. Gaifman models learn feature purely putting past raised grammatical of locally connected and bounded - larger regions among knowledge bases (KBs ). Considering working having bounded - size impoverished of knowledge planes renders characterization causation even well tractable, fraudulence new it of overfitting, and interaction quality sharing. Gaifman systems selection nearby of work patrolling never only even make within understand relational designed longer accelerating failed just objects rest differences or important a common trouble in going - countries KBs. We for the broader embracing made Gaifman models and apply them soon most - scale homology education changes. We was begin held ways another most Gaifman equipped tell to some provide relational printing academic changing.", "histories": [["v1", "Fri, 28 Oct 2016 11:57:26 GMT  (636kb,D)", "http://arxiv.org/abs/1610.09369v1", "NIPS 2016"]], "COMMENTS": "NIPS 2016", "reviews": [], "SUBJECTS": "cs.LG", "authors": ["mathias niepert"], "accepted": true, "id": "1610.09369"}, "pdf": {"name": "1610.09369.pdf", "metadata": {"source": "CRF", "title": "Discriminative Gaifman Models", "authors": ["Mathias Niepert"], "emails": ["mathias.niepert@neclabs.eu"], "sections": [{"heading": "1 Introduction", "text": "Knowledge bases are attracting considerable interest both from industry and academia [2, 6, 15, 10]. Instances of knowledge bases are the web graph, social and citation networks, and multi-relational knowledge graphs such as Freebase [2] and YAGO [11]. Large knowledge bases motivate the development of scalable machine learning models that can reason about objects as well as their properties and relationships. Research in statistical relational learning (SRL) has focused on particular formalisms such as Markov logic [22] and PROBLOG [8] and is often concerned with improving the efficiency of inference and learning [14, 28]. The scalability problems of these statistical relational languages, however, remain an obstacle and have prevented a wider adoption. Another line of work focuses on efficient relational machine learning models that perform well on a particular task such as knowledge base completion and relation extraction. Examples are knowledge base factorization and embedding approaches [5, 21, 23, 26] and random-walk based ML models [15, 10]. We aim to advance the state of the art in relational machine learning by developing efficient models that learn knowledge base embeddings that are effective for probabilistic query answering on the one hand, and interpretable and widely applicable on the other.\nGaifman\u2019s locality theorem [9] is a result in the area of finite model theory [16]. The Gaifman graph of a knowledge base is the undirected graph whose nodes correspond to objects and in which two nodes are connected if the corresponding objects co-occur as arguments of some relation. Gaifman\u2019s locality theorem states that every first-order sentence is equivalent to a Boolean combination of sentences whose quantifiers range over local neighborhoods of the Gaifman graph. With this paper, we aim to explore Gaifman locality from a machine learning perspective. If every first-order sentence is equivalent to a Boolean combination of sentences whose quantifiers range over local neighborhoods only, we ought to be able to develop models that learn effective representations from these local neighborhoods. There is increasing evidence that learning representations that are built up from local structures can be highly successful. Convolutional neural networks, for instance, learn features over locally connected regions of images. The aim of this work is to investigate the effectiveness and efficiency of machine learning models that perform learning and inference within and across\n30th Conference on Neural Information Processing Systems (NIPS 2016), Barcelona, Spain.\nar X\niv :1\n61 0.\n09 36\n9v 1\n[ cs\n.L G\n] 2\n8 O\nct 2\n01 6\nlocally connected regions of knowledge bases. This is achieved by combining relational features that are often used in statistical relatinal learning with novel ideas from the area of deep learning. The following problem motivates Gaifman models.\nProblem 1. Given a knowledge base (relational structure, mega-example, knowledge graph) or a collection of knowledge bases, learn a relational machine learning model that supports complex relational queries. The model learns a probability for each tuple in the query answer.\nNote that this is a more general problem than knowledge base completion since it includes the learning of a probability distribution for a complex relational query. The query corresponding to knowledge base completion is r(x, y) for logical variables x and y, and relation r. The problem also touches on the problem of open-world probabilistic KBs [7] since tuples whose prior probability is zero will often have a non-zero probability in the query answer."}, {"heading": "2 Background", "text": "We first review some important concepts and notation in first-order logic."}, {"heading": "2.1 Relational First-order Logic", "text": "An atom r(t1, ..., tn) consists of predicate r of arity n followed by n arguments, which are either elements from a finite domain D = {a, b, ...} or logical variables {x, y, ...}. We us the terms domain element and object synonymously. A ground atom is an atom without logical variables. Formulas are built from atoms using the usual Boolean connectives and existential and universal quantification. A free variable in a first-order formula is a variable x not in the scope of a quantifier. We write \u03d5(x, y) to denote that x, y are free in \u03d5, and free(\u03d5) to refer to the free variables of \u03d5. A substitution replaces all occurrences of logical variable x by t in some formula \u03d5 and is denoted by \u03d5[x/t].\nA vocabulary consists of a finite set of predicates R and a domain D. Every predicate r is associated with a positive integer called the arity of r. A R-structure (or knowledge base) D consists of the domain D, a set of predicates R, and an interpretation. The Herbrand base of D is the set of all ground atoms that can be constructed from R and D. The interpretation assigns a truth value to every atom in the Herbrand base by specifying rD \u2286 Dn for each n-ary predicate r \u2208 R. For a formula \u03d5(x1, ..., xn) and a structure D, we write D |= \u03d5(d1, ..., dn) to say that D satisfies \u03d5 if the variables x1, ..., xn are substituted with the domain elements d1, ...., dn. We define \u03d5(D) := {(d1, ..., dn) \u2208 Dn | D |= \u03d5(d1, ..., dn)}. For the R-structure D and C \u2286 D, \u3008C\u3009D denotes the substructure induced by C on D, that is, the R-structure C with domain C and rC := rD \u2229Cn for every n-ary r \u2208 R."}, {"heading": "2.2 Gaifman\u2019s Locality Theorem", "text": "The Gaifman graph of a R-structure D is the graph GD with vertex set D and an edge between two vertices d, d\u2032 \u2208 D if and only if there exists an r \u2208 R and a tuple (d1, ..., dk) \u2208 rD such that d, d\u2032 \u2208 {d1, ..., dk}. Figure 1 depicts a fragment of a knowledge base and the corresponding Gaifman graph. The distance dD(d1, d2) between two elements d1, d2 \u2208 D of a structure D is the length of the shortest path in GD connecting d1 and d2. For r \u2265 1 and d \u2208 D, we define the r-neighborhood of d to be Nr(d) := {x \u2208 D | dD(d, x) \u2264 r}. We refer to r also as the depth of the neighborhood. Let d = (d1, ..., dn) \u2208 Dn. The r-neighborhood of d is defined as\nNr(d) = n\u22c3 i=1 Nr(di).\nFor the Gaifman graph in Figure 1, we have that N1(d4) = {d1, d2, d5} and N1((d1, d2)) = {d1, ..., d6}. \u03d5Nr (x) is the formula obtained from \u03d5(x) by relativizing all quantifiers to Nr(x), that is, by replacing every subformula of the form \u2203y\u03c8(x, y, z) by \u2203y(dD(x, y) \u2264 r \u2227 \u03c8(x, y, z)) and every subformula of the form \u2200y\u03c8(x, y, z) by \u2200y(dD(x, y) \u2264 r \u2192 \u03c8(x, y, z)). A formula \u03c8(x) of the form \u03d5Nr (x), for some \u03d5(x), is called r-local. Whether an r-local formula \u03c8(x) holds depends only on the r-neighborhood of x, that is, for every structure D and every d \u2208 D we have D |= \u03c8(d)\nif and only if \u3008Nr(d)\u3009 |= \u03c8(d). For r, k \u2265 1 and \u03c8(x) being r-local, a local sentence is of the form\n\u2203x1 \u00b7 \u00b7 \u00b7 \u2203xk  \u2227 1\u2264i<j\u2264k dD(xi, xj) > 2r \u2227 \u2227 1\u2264i\u2264k \u03c8(xi)  . We can now state Gaifman\u2019s locality theorem. Theorem 1. [9] Every first-order sentence is equivalent to a Boolean combination of local sentences.\nGaifman\u2019s locality theorem states that any first-order sentence can be expressed as a Boolean combination of r-local sentences defined for neighborhoods of objects that are mutually far apart (have distance at least 2r + 1). Now, a novel approach to (statistical) relational learning would be to consider a large set of objects (or tuples of objects) and learn models from their local neighborhoods in the Gaifman graphs. It is this observation that motivates Gaifman models."}, {"heading": "3 Learning Gaifman Models", "text": "Instead of taking the costly approach of applying relational learning and inference directly to entire knowledge bases, the representations of Gaifman models are learned bottom up, by performing inference and learning within bounded-size, locally connected regions of Gaifman graphs. Each Gaifman model specifies the data generating process from a given knowledge base (or collection of knowledge bases), a set of relational features, and a ML model class used for learning. Definition 1. Given a R-structureD, a discriminative Gaifman model forD is a tuple (q, r, k,\u03a6,M) as follows:\n\u2022 q is a first-order formula called the target query with at least one free variable; \u2022 r is the depth of the Gaifman neighborhoods; \u2022 k is the size-bound of the Gaifman neighborhoods; \u2022 \u03a6 is a set of first-order formulas (the relational features); \u2022 M is the base model class (loss, hyper-parameters, etc.).\nThroughout the rest of the paper, we will provide detailed explanations of the different parameters of Gaifman models and their interaction with data generation, learning, and inference.\nDuring the training of Gaifman models, neighborhoods are generated for tuples of objects d \u2208 Dn based on the parameters r and k. We first describe the procedure for arbitrary tuples d of objects and will later explain where these tuples come from. For a given tuple d the r-neighborhood of d within the Gaifman graph is computed. This results in the set of objects Nr(d). Now, from this neighborhood we sample w neighborhoods consisting of at most k objects. Sampling bounded-size sub-neighborhoods from Nr(d) is motivated as follows:\n1. The degree distribution of Gaifman graphs is often skewed (see Figure 2), that is, the number of other objects a domain element is related to varies heavily. Generating smaller, bounded-size neighborhoods allows the transfer of learned representations between more and less connected objects. Moreover, the sampling strategy makes Gaifman models more robust to object uncertainty [19]. We show empirically that larger values for k reduce the effectiveness of the learned models for some knowledge bases.\n2. Relational learning and inference is performed within the generated neighborhoods. Nr(d) can be very large, even for r = 1 (see Figure 2), and we want full control over the complexity of the computational problems.\n3. Even for a single object tuple d we can generate a large number of training examples if |Nr(d)| > k. This mitigates the risk of overfitting. The number of training examples per tuple strongly influences the models\u2019 accuracy.\nWe can now define the set of (r, k)-neighborhoods generated from a r-neighborhood.\nNr,k(d) := { {N | N \u2286 Nr(d) and |N| = k} if |Nr(d)| \u2265 k {Nr(d)} otherwise.\nFor a given tuple of objects d, Algorithm 1 returns a set of w neighborhoods drawn from Nr,k(d) such that the number of objects for each di is the same in expectation.\nThe formulas in the set \u03a6 are indexed and of the form \u03d5i(s1, ..., sn, u1, ..., um) with sj \u2208 free(q) and uj 6\u2208 free(q). For every tuple d = (d1, ..., dn), generated neighborhood N \u2208 Nr,k(d), and \u03d5i \u2208 \u03a6, we perform the substitution [s1/d1, ..., sn/dn] and relativize \u03d5i\u2019s quantifiers to N, resulting in \u03d5Ni [s1/d1, ..., sn/dn] which we write as \u03d5 N i [s/d]. Let \u3008N\u3009 be the substructure induced by N on D. For every formula \u03d5i(s1, ..., sn, u1, ..., um) and every n \u2208 Nm, we now have that D |= \u03d5Ni [s/d,u/n] if and only if \u3008N\u3009 |= \u03d5Ni [s/d,u/n]. In other words, satisfaction is now checked locally within the neighborhoods N, by deciding whether \u3008N\u3009 |= \u03d5Ni [s/d,u/n]. The relational semantics of Gaifman models is based on the set of formulas \u03a6. The feature vector v = (v1, ..., v|\u03a6|) for tuple d, and neighborhood N \u2208 Nr,k(d), written as vN, is constructed as follows\nvi :=  \u03d5 N i [s/d](\u3008N\u3009) if free(\u03d5Ni [s/d]) > 0\n1 if \u3008N\u3009 |= \u03d5Ni [s/d] 0 otherwise.\nThat is, if \u03d5Ni [s/d] has free variables, vi is equal to the number of groundings of \u03d5i[s/d] that are satisfied within the neighborhood substructure \u3008N\u3009; if \u03d5i[s/d] has no free variables, vi = 1 if and only if \u03d5i[s/d] is satisfied within the neighborhod substructure \u3008N\u3009; and vi = 0 otherwise. The neighborhood representations v capture r-local formulas and help the model learn formula combinations that are associated with negative and positive examples. For the right choices of the parameters r and k, the neighborhood representations of Gaifman models capture the relational structure associated with positive and negative examples.\nDeciding D |= \u03d5 for a structure D and a first-order formula \u03d5 is referred to as model checking and computing \u03d5(D) is called \u03d5-counting. The combined complexity of model checking is PSPACEcomplete [29] and there exists a ||D||O(||\u03d5||) algorithm for both problems where || \u00b7 || is the size of an encoding. Clearly, for most real-world KBs this is not feasible. For Gaifman models, however, where the neighborhoods are bounded-size, typically 10 \u2264 |N| = k \u2264 100, the above representation can be computed very efficiently for a large class of relational features. We can now state the following complexity result.\nTheorem 2. Let D be a relational structure (knowledge base), let d be the size of the largest rneighborhood of D\u2019s Gaifman graph, and let s be the greatest encoding size of any formula in \u03a6. For a Gaifman model with parameters r and k, the worst-case complexity for computing the feature representations of N neighborhoods is O(N(d+ |\u03a6|ks)).\nExisting SRL approaches could be applied to the generated neighborhoods, treating each as a possible world for structure and parameter learning. However, our goal is to learn relational models that utilize embeddings computed by multi-layered neural networks.\nAlgorithm 1 GENNEIGHS: Computes a list of w neighborhoods of size k for an input tuple d.\n1: input: tuple d \u2208 Dn, parameters r, k, and w 2: S = [ ] 3: while |S| < w do 4: S = \u2205 5: N = Nr(d) 6: for all i \u2208 {1, ..., n} do 7: U = min(bk/nc, |Nr(di)|) elements sampled uniformly from Nr(di) 8: N = N \\ U 9: S = S \u222a U 10: U = min(|S| \u2212 k, |N |) elements sampled uniformly from N 11: S = S \u222a U 12: S = S + S 13: return S"}, {"heading": "3.1 Learning Distributions for Relational Queries", "text": "Let q be a first-order formula (the relational query) and S(q) the result set of the query, that is, all groundings that render the formula satisfied in the knowledge base. The feature representations generated for tuples of objects d \u2208 S(q) serve as positive training examples. The Gaifman models\u2019 aim is to learn neighborhood embeddings that capture local structure of tuples for which we know that the target query evaluates to true. Similar to previous work, we generate negative examples by corrupting tuples that correspond to positive examples. The corruption mechanism takes a positive input tuple d = (d1, ..., dn) and substitutes, for each i \u2208 {1, ..., n}, the domain element di with objects sampled from D while keeping the rest of the tuple fixed.\nThe discriminative Gaifman model performs the following steps.\n1. Evaluate the target query q and compute the result set S(q) 2. For each tuple d in the result set S(q):\n\u2022 Compute N , a multiset of w neighborhoods N\u0303 \u2208 Nr,k(d) with Algorithm 1; each such neighborhood serves as a positive training example\n\u2022 Compute N\u0303 , a multiset of w\u0303 neighborhoods N \u2208 Nr,k(d\u0303) for corrupted versions of d with Algorithm 1; each such neighborhood serves as a negative training example \u2022 Perform model checking and counting within the neighborhoods to compute the feature\nrepresentations vN and vN\u0303 for each N \u2208 N and N\u0303 \u2208 N\u0303 , respectively 3. Learn a ML model with the generated positive and negative training examples.\nLearning the final Gaifman model depends on the base ML model classM and its loss function. We obtained state of the art results with neural networks, gradient-based learning, and categorical cross-entropy as loss function\nL = \u2212 \u2211 N\u2208N log pM(vN) + \u2211\nN\u0303\u2208N\u0303\nlog(1\u2212 pM(vN\u0303))  , where pM(vN) is the probability the model returns on input vN. However, other loss functions are possible. The probability of a particular substitution of the target query to be true is now\nP (q[s/d] = True) = E N\u2208N(r,k)(d) [pM(vN)].\nThe expected probability of a representation of a neighborhood drawn uniformly at random from N(r,k)(d). It is now possible to generate several neighborhoods N and their representations vN to\nestimate P (q[s/d] = True), simply by averaging the neighborhoods\u2019 probabilities. We have found experimentally that a single neighborhood already leads to highly accurate results but also that more neighborhood samples further improve the accurracy.\nLet us emphasize again the novel semantics of Gaifman models. Gaifman models generate a large number of small, bounded-size structures from a large structure, learn a representation for these bounded-size structures, and use the resulting representation to answer queries concerning the original structure as a whole. The advantages are model weight sharing across a large number of neighborhoods and efficiency of the computational problems. Figure 3 and Figure 4 illustrate learning from bounded-size neighborhood structures and inference in Gaifman models."}, {"heading": "3.2 Structure Learning", "text": "Structure learning is the problem of determining the set of relational features \u03a6. We provide some directions and leave the problem to future work. Given a collection of bounded-size neighborhoods of the Gaifman graph, the goal is to determine suitable relational features for the problem at hand. There is a set of features which we found to be highly effective. For example, formulas of the form \u2203x r(s1, x), \u2203x r(s1, x) \u2227 r(x, s2), and \u2203x, y r1(s1, x) \u2227 r2(x, y) \u2227 r3(y, s2) for all relations. The latter formulas capture fixed-length paths between s1 and s2 in the neighborhoods. Hence, Path Ranking type features [15] can be used in Gaifman models as a particular relational feature class. For path formulas with several different relations we cannot include all |R|3 combinations and, hence, we have to determine a subset occurring in the training data. Fortunately, since the neighborhood size is bounded, it is computationally feasible to compute frequent paths in the neighborhoods and to use these as features. The complexity of this learning problem is in the number of elements in the neighborhood and not in the number of all objects in the knowledge base. Relation paths that do not occur in the data can be discarded. Gaifman models can also use features of the form \u2200x, y r(x, y)\u21d2 r(y, x), \u2203x, y r(x, y), and \u2200x, y, z r(x, y) \u2227 r(y, z)\u21d2 r(x, z), to name but a few. Moreover, features with free variables, such as r(s1, x) are counting features (here: the r out-degree of s1). It is even computationally feasible to include specific second-order features (for instance, quantifiers ranging over R) and aggregations of feature values."}, {"heading": "3.3 Prior Confidence Values, Types, and Numerical Attributes", "text": "Numerous existing knowledge bases assign confidence values (probabilities, weights, etc.) to their statements. Gaifman models can incorporate confidence values during the sampling and learning process. Instead of adding random noise to the representations, which we have found to be beneficial, noise can be added inversely proportional to the confidence values. Statements for which the prior confidence values are lower are more likely to be dropped out during training than statements with higher confidence values. Furthermore, Gaifman models can directly incorporate object types such as Actor and Action Movie as well as numerical features such as location and elevation. One simply has to specify a fixed position in the neighborhood representation v for each object position within the input tuples d."}, {"heading": "4 Related Work", "text": "Recent work on relational machine learning for knowledge graphs is surveyed in [20]. We focus on a select few methods we deem most related to Gaifman models and refer the interested reader to the above article. A large body of work exists on learning inference rules from knowledge bases. Examples include [31] and [1] where inference rules of length one are learned; and [25] where general inference rules are learned by applying a support threshold. Their method does not scale to large KBs and depends on predetermined thresholds. Lao et al. [15] train a logistic regression classifier with path features to perform KB completion. The idea is to perform a random walk between objects and to exploit the discovered paths as features. SFE [10] improves PRA by making the generation of random walks more efficient. More recent embedding methods have combined paths in KBs with KB embedding methods [17]. Gaifman models support a much broader class of relational features subsuming path features. For instance, Gaifman models incorporate counting features that have shown to be beneficial for relational models.\nLatent feature models learn features for objects and relations that are not directly observed in the data. Examples of latent feature models are tensor factorization [21, 23, 26] and embedding models [5, 3, 4, 18, 13, 27]. The majority of these models can be understood as more or less complex neural networks operating on object and relation representations. Gaifman models can also be used to learn knowledge base embeddings. Indeed, one can show that it generalizes or complements existing approaches. For instance, the universal schema [23] considers pairs of objects where relation membership variables comprise the model\u2019s features. We have the following interesting relationship between universal schemas [23] and Gaifman models. Given a knowledge base D. The Gaifman model for D with r = 0, k = 2, \u03a6 = \u22c3r\u2208R{r(s1, s2), r(s2, s1)}, w = 1 and w\u0303 = 0 is equivalent to the Universal Schema [23] for D up to the base model classM. More recent methods combine embedding methods and inference-based logical approaches for relation extraction [24]. Contrary to most existing multi-relational ML models [20], Gaifman models natively support higher-arity relations, functional and type constraints, numerical features, and complex target queries.\n5 Experiments\nThe aim of the experiments is to understand the efficiency and effectiveness of Gaifman models for typical knowledge base inference problems. We evaluate the proposed class of models with two data sets derived from the knowledge bases WORDNET\nand FREEBASE [2]. Both data sets consist of a list of statements r(d1, d2) that are known to be true. For a detailed description of the data sets, whose statistics are listed in Table 1, we refer the reader to previous work [4].\nAfter training the models, we perform entity prediction as follows. For each statement r(d1, d2) in the test set, d2 is replaced by each of the KB\u2019s objects in turn. The probabilities of the resulting statements are predicted and sorted in descending order. Finally, the rank of the correct statement within this ordered list is determined. The same process is repeated now with replacements of d1. We compare Gaifman models with q = r(x, y) to state of the art knowledge base completion approaches which are listed in Table 2. We trained Gaifman models with r = 1 and different values for k, w, and w\u0303. We use a neural network architecture with two hidden layers, each having 100 units and sigmoid activations, dropout of 0.2 on the input layer, and a softmax layer. Dropout makes the model more robust to missing relations between objects. We trained one model per relation and left the hyper-parameters fixed across models. We did not perform structure learning and instead used the following set of relational features\n\u03a6 := \u22c3\nr\u2208R, i\u2208{1,2}\n{ r(s1, s2), r(s2, s1),\u2203x r(x, si),\u2203x r(si, x), \u2203x r(s1, x) \u2227 r(x, s2),\u2203x r(s2, x) \u2227 r(x, s1) } .\nTo compute the probabilities, we averaged the probabilities of N = 1, 2, or 3 generated (r, k)neighborhoods.\nWe performed runtime experiments to evaluate the models\u2019 efficiency. Embedding models have the advantage that one dot product for every candidate object is sufficient to compute the score for the corresponding statement and we need to assess the performance of Gaifman models in this context. All experiments were run on commodity hardware with 64G RAM and a single 2.8 GHz CPU.\nTable 2 lists the experimental results for different parameter settings [N, k,w, w\u0303]. The Gaifman models achieve the highest hits@10 and hits@1 values for both data sets. As expected, the more neighborhood samples are used to compute the probability estimate (N = 1, 2, 3) the better the result. When the entire 1-neighborhood is considered (k =\u221e),\nthe performance for WN18 does not deteriorate as it does for FB15k. This is due to the fact that\nobjects in WN18 have on average few neighbors. FB15k has more variance in the Gaifman graph\u2019s degree distribution (see Figure 2) which is reflected in the better performance for smaller k values. The experiments also show that it is beneficial to generate a large number of representations (both positive and negative ones). The performance improves with larger number of training examples.\nThe runtime experiments demonstrate that Gaifman models perform inference very efficiently for k \u2264 20. Figure 5 depicts the number of query answers the Gaifman models are able to serve per second, averaged over relation types. A query answer returns the probability for one object pair. These numbers include neighborhood generation and network inference. The results are promising with about 5000 query answers per second (averaged across relation types) as long as k remains small. Since most object pairs of WN18 have a 1-neighborhood whose size is smaller than 20, the answers per second rates for k > 20 is not reduced as drastically as for FB15k."}, {"heading": "6 Conclusion and Future Work", "text": "Gaifman models are a novel family of relational machine learning models that perform learning and inference within and across locally connected regions of relational structures. Future directions of research include structure learning, more sophisticated base model classes, and application of Gaifman models to additional relational ML problems."}, {"heading": "Acknowledgements", "text": "Many thanks to Alberto Garc\u00eda-Dur\u00e1n, Mohamed Ahmed, and Kristian Kersting for their helpful feedback."}], "references": [{"title": "Global learning of typed entailment rules", "author": ["J. Berant", "I. Dagan", "J. Goldberger"], "venue": "Annual Meeting of the Association for Computational Linguistics, pages 610\u2013619,", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2011}, {"title": "Freebase: A collaboratively created graph database for structuring human knowledge", "author": ["K. Bollacker", "C. Evans", "P. Paritosh", "T. Sturge", "J. Taylor"], "venue": "SIGMOD, pages 1247\u20131250,", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2008}, {"title": "Joint learning of words and meaning representations for open-text semantic parsing", "author": ["A. Bordes", "X. Glorot", "J. Weston", "Y. Bengio"], "venue": "Conference on Artificial Intelligence and Statistics, pages 127\u2013135,", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2012}, {"title": "Translating embeddings for modeling multi-relational data", "author": ["A. Bordes", "N. Usunier", "A. Garcia-Duran", "J. Weston", "O. Yakhnenko"], "venue": "Neural Information Processing Systems, pages 2787\u20132795.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2013}, {"title": "Learning structured embeddings of knowledge bases", "author": ["A. Bordes", "J. Weston", "R. Collobert", "Y. Bengio"], "venue": "AAAI Conference on Artificial Intelligence,", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2011}, {"title": "Toward an architecture for never-ending language learning", "author": ["A. Carlson", "J. Betteridge", "B. Kisiel", "B. Settles", "E.R. Hruschka", "T.M. Mitchell"], "venue": "Twenty-Fourth AAAI Conference on Artificial Intelligence,", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2010}, {"title": "Open-world probabilistic databases", "author": ["I.I. Ceylan", "A. Darwiche", "G. Van den Broeck"], "venue": "In Proceedings of the 15th International Conference on Principles of Knowledge Representation and Reasoning (KR),", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2016}, {"title": "ProbLog2: Probabilistic logic programming", "author": ["A. Dries", "A. Kimmig", "W. Meert", "J. Renkens", "G. Van den Broeck", "J. Vlasselaer", "L. De Raedt"], "venue": "Lecture Notes in Computer Science,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2015}, {"title": "On local and non-local properties", "author": ["H. Gaifman"], "venue": "Proceedings of the herbrand symposium, logic colloquium, volume 81, pages 105\u2013135,", "citeRegEx": "9", "shortCiteRegEx": null, "year": 1982}, {"title": "Efficient and expressive knowledge base completion using subgraph feature extraction", "author": ["M. Gardner", "T.M. Mitchell"], "venue": "Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing, pages 1488\u20131498,", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2015}, {"title": "Yago2: A spatially and temporally enhanced knowledge base from wikipedia", "author": ["J. Hoffart", "F.M. Suchanek", "K. Berberich", "G. Weikum"], "venue": "Artif. Intell., 194:28\u201361,", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2013}, {"title": "A latent factor model for highly multi-relational data", "author": ["R. Jenatton", "N.L. Roux", "A. Bordes", "G.R. Obozinski"], "venue": "Neural Information Processing Systems, pages 3167\u20133175,", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2012}, {"title": "Knowledge graph completion with adaptive sparse transfer matrix", "author": ["G. Ji", "K. Liu", "S. He", "J. Zhao"], "venue": "D. Schuurmans and M. P. Wellman, editors, Proceedings of the Thirtieth AAAI Conference on Artificial Intelligence, pages 985\u2013991,", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2016}, {"title": "Lifted probabilistic inference", "author": ["K. Kersting"], "venue": "European Conference on Artificial Intelligence, pages 33\u201338,", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2012}, {"title": "Random walk inference and learning in a large scale knowledge base", "author": ["N. Lao", "T. Mitchell", "W.W. Cohen"], "venue": "Empirical Methods in Natural Language Processing, pages 529\u2013539,", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2011}, {"title": "Elements Of Finite Model Theory", "author": ["L. Libkin"], "venue": "SpringerVerlag,", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2004}, {"title": "Modeling relation paths for representation learning of knowledge bases", "author": ["Y. Lin", "Z. Liu", "H. Luan", "M. Sun", "S. Rao", "S. Liu"], "venue": "Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing, EMNLP 2015, Lisbon, Portugal, September 17-21, 2015, pages 705\u2013714,", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2015}, {"title": "Learning entity and relation embeddings for knowledge graph completion", "author": ["Y. Lin", "Z. Liu", "M. Sun", "Y. Liu", "X. Zhu"], "venue": "AAAI Conference on Artificial Intelligence, pages 2181\u20132187,", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2015}, {"title": "Probabilistic Models with Unknown Objects", "author": ["B.C. Milch"], "venue": "PhD thesis,", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2006}, {"title": "A review of relational machine learning for knowledge graphs", "author": ["M. Nickel", "K. Murphy", "V. Tresp", "E. Gabrilovich"], "venue": "Proceedings of the IEEE, 104(1):11\u201333,", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2016}, {"title": "A three-way model for collective learning on multi-relational data", "author": ["M. Nickel", "V. Tresp", "H.-P. Kriegel"], "venue": "International conference on machine learning (ICML), pages 809\u2013816,", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2011}, {"title": "Markov logic networks", "author": ["M. Richardson", "P. Domingos"], "venue": "Machine learning, 62(1-2):107\u2013136,", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2006}, {"title": "Relation extraction with matrix factorization and universal schemas", "author": ["S. Riedel", "L. Yao", "B.M. Marlin", "A. McCallum"], "venue": "HLT-NAACL,", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2013}, {"title": "Injecting logical background knowledge into embeddings for relation extraction", "author": ["T. Rockt\u00e4schel", "S. Singh", "S. Riedel"], "venue": "Conference of the North American Chapter of the ACL (NAACL),", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2015}, {"title": "Learning first-order horn clauses from web text", "author": ["S. Schoenmackers", "O. Etzioni", "D.S. Weld", "J. Davis"], "venue": "Conference on Empirical Methods in Natural Language Processing, pages 1088\u20131098,", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2010}, {"title": "Reasoning with neural tensor networks for knowledge base completion", "author": ["R. Socher", "D. Chen", "C.D. Manning", "A. Ng"], "venue": "Neural Information Processing Systems, pages 926\u2013934.", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2013}, {"title": "Complex embeddings for simple link prediction", "author": ["T. Trouillon", "J. Welbl", "S. Riedel", "\u00c9. Gaussier", "G. Bouchard"], "venue": "Proceedings of the 33nd International Conference on Machine Learning, volume 48, pages 2071\u20132080,", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2016}, {"title": "Lifted inference and learning in statistical relational models", "author": ["G. Van den Broeck"], "venue": null, "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2013}, {"title": "The complexity of relational query languages", "author": ["M.Y. Vardi"], "venue": "ACM symposium on Theory of computing, pages 137\u2013146,", "citeRegEx": "29", "shortCiteRegEx": null, "year": 1982}, {"title": "Embedding entities and relations for learning and inference in knowledge bases", "author": ["B. Yang", "W.-t. Yih", "X. He", "J. Gao", "L. Deng"], "venue": "In International Conference on Learning Representations,", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2015}, {"title": "Unsupervised resolution of objects and relations on the web", "author": ["A. Yates", "O. Etzioni"], "venue": "Conference of the North American Chapter of the Association for Computational Linguistics,", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2007}], "referenceMentions": [{"referenceID": 1, "context": "Knowledge bases are attracting considerable interest both from industry and academia [2, 6, 15, 10].", "startOffset": 85, "endOffset": 99}, {"referenceID": 5, "context": "Knowledge bases are attracting considerable interest both from industry and academia [2, 6, 15, 10].", "startOffset": 85, "endOffset": 99}, {"referenceID": 14, "context": "Knowledge bases are attracting considerable interest both from industry and academia [2, 6, 15, 10].", "startOffset": 85, "endOffset": 99}, {"referenceID": 9, "context": "Knowledge bases are attracting considerable interest both from industry and academia [2, 6, 15, 10].", "startOffset": 85, "endOffset": 99}, {"referenceID": 1, "context": "Instances of knowledge bases are the web graph, social and citation networks, and multi-relational knowledge graphs such as Freebase [2] and YAGO [11].", "startOffset": 133, "endOffset": 136}, {"referenceID": 10, "context": "Instances of knowledge bases are the web graph, social and citation networks, and multi-relational knowledge graphs such as Freebase [2] and YAGO [11].", "startOffset": 146, "endOffset": 150}, {"referenceID": 21, "context": "Research in statistical relational learning (SRL) has focused on particular formalisms such as Markov logic [22] and PROBLOG [8] and is often concerned with improving the efficiency of inference and learning [14, 28].", "startOffset": 108, "endOffset": 112}, {"referenceID": 7, "context": "Research in statistical relational learning (SRL) has focused on particular formalisms such as Markov logic [22] and PROBLOG [8] and is often concerned with improving the efficiency of inference and learning [14, 28].", "startOffset": 125, "endOffset": 128}, {"referenceID": 13, "context": "Research in statistical relational learning (SRL) has focused on particular formalisms such as Markov logic [22] and PROBLOG [8] and is often concerned with improving the efficiency of inference and learning [14, 28].", "startOffset": 208, "endOffset": 216}, {"referenceID": 27, "context": "Research in statistical relational learning (SRL) has focused on particular formalisms such as Markov logic [22] and PROBLOG [8] and is often concerned with improving the efficiency of inference and learning [14, 28].", "startOffset": 208, "endOffset": 216}, {"referenceID": 4, "context": "Examples are knowledge base factorization and embedding approaches [5, 21, 23, 26] and random-walk based ML models [15, 10].", "startOffset": 67, "endOffset": 82}, {"referenceID": 20, "context": "Examples are knowledge base factorization and embedding approaches [5, 21, 23, 26] and random-walk based ML models [15, 10].", "startOffset": 67, "endOffset": 82}, {"referenceID": 22, "context": "Examples are knowledge base factorization and embedding approaches [5, 21, 23, 26] and random-walk based ML models [15, 10].", "startOffset": 67, "endOffset": 82}, {"referenceID": 25, "context": "Examples are knowledge base factorization and embedding approaches [5, 21, 23, 26] and random-walk based ML models [15, 10].", "startOffset": 67, "endOffset": 82}, {"referenceID": 14, "context": "Examples are knowledge base factorization and embedding approaches [5, 21, 23, 26] and random-walk based ML models [15, 10].", "startOffset": 115, "endOffset": 123}, {"referenceID": 9, "context": "Examples are knowledge base factorization and embedding approaches [5, 21, 23, 26] and random-walk based ML models [15, 10].", "startOffset": 115, "endOffset": 123}, {"referenceID": 8, "context": "Gaifman\u2019s locality theorem [9] is a result in the area of finite model theory [16].", "startOffset": 27, "endOffset": 30}, {"referenceID": 15, "context": "Gaifman\u2019s locality theorem [9] is a result in the area of finite model theory [16].", "startOffset": 78, "endOffset": 82}, {"referenceID": 6, "context": "The problem also touches on the problem of open-world probabilistic KBs [7] since tuples whose prior probability is zero will often have a non-zero probability in the query answer.", "startOffset": 72, "endOffset": 75}, {"referenceID": 8, "context": "[9] Every first-order sentence is equivalent to a Boolean combination of local sentences.", "startOffset": 0, "endOffset": 3}, {"referenceID": 18, "context": "Moreover, the sampling strategy makes Gaifman models more robust to object uncertainty [19].", "startOffset": 87, "endOffset": 91}, {"referenceID": 28, "context": "The combined complexity of model checking is PSPACEcomplete [29] and there exists a ||D||O(||\u03c6||) algorithm for both problems where || \u00b7 || is the size of an encoding.", "startOffset": 60, "endOffset": 64}, {"referenceID": 14, "context": "Hence, Path Ranking type features [15] can be used in Gaifman models as a particular relational feature class.", "startOffset": 34, "endOffset": 38}, {"referenceID": 19, "context": "Recent work on relational machine learning for knowledge graphs is surveyed in [20].", "startOffset": 79, "endOffset": 83}, {"referenceID": 30, "context": "Examples include [31] and [1] where inference rules of length one are learned; and [25] where general inference rules are learned by applying a support threshold.", "startOffset": 17, "endOffset": 21}, {"referenceID": 0, "context": "Examples include [31] and [1] where inference rules of length one are learned; and [25] where general inference rules are learned by applying a support threshold.", "startOffset": 26, "endOffset": 29}, {"referenceID": 24, "context": "Examples include [31] and [1] where inference rules of length one are learned; and [25] where general inference rules are learned by applying a support threshold.", "startOffset": 83, "endOffset": 87}, {"referenceID": 14, "context": "[15] train a logistic regression classifier with path features to perform KB completion.", "startOffset": 0, "endOffset": 4}, {"referenceID": 9, "context": "SFE [10] improves PRA by making the generation of random walks more efficient.", "startOffset": 4, "endOffset": 8}, {"referenceID": 16, "context": "More recent embedding methods have combined paths in KBs with KB embedding methods [17].", "startOffset": 83, "endOffset": 87}, {"referenceID": 20, "context": "Examples of latent feature models are tensor factorization [21, 23, 26] and embedding models [5, 3, 4, 18, 13, 27].", "startOffset": 59, "endOffset": 71}, {"referenceID": 22, "context": "Examples of latent feature models are tensor factorization [21, 23, 26] and embedding models [5, 3, 4, 18, 13, 27].", "startOffset": 59, "endOffset": 71}, {"referenceID": 25, "context": "Examples of latent feature models are tensor factorization [21, 23, 26] and embedding models [5, 3, 4, 18, 13, 27].", "startOffset": 59, "endOffset": 71}, {"referenceID": 4, "context": "Examples of latent feature models are tensor factorization [21, 23, 26] and embedding models [5, 3, 4, 18, 13, 27].", "startOffset": 93, "endOffset": 114}, {"referenceID": 2, "context": "Examples of latent feature models are tensor factorization [21, 23, 26] and embedding models [5, 3, 4, 18, 13, 27].", "startOffset": 93, "endOffset": 114}, {"referenceID": 3, "context": "Examples of latent feature models are tensor factorization [21, 23, 26] and embedding models [5, 3, 4, 18, 13, 27].", "startOffset": 93, "endOffset": 114}, {"referenceID": 17, "context": "Examples of latent feature models are tensor factorization [21, 23, 26] and embedding models [5, 3, 4, 18, 13, 27].", "startOffset": 93, "endOffset": 114}, {"referenceID": 12, "context": "Examples of latent feature models are tensor factorization [21, 23, 26] and embedding models [5, 3, 4, 18, 13, 27].", "startOffset": 93, "endOffset": 114}, {"referenceID": 26, "context": "Examples of latent feature models are tensor factorization [21, 23, 26] and embedding models [5, 3, 4, 18, 13, 27].", "startOffset": 93, "endOffset": 114}, {"referenceID": 22, "context": "For instance, the universal schema [23] considers pairs of objects where relation membership variables comprise the model\u2019s features.", "startOffset": 35, "endOffset": 39}, {"referenceID": 22, "context": "We have the following interesting relationship between universal schemas [23] and Gaifman models.", "startOffset": 73, "endOffset": 77}, {"referenceID": 22, "context": "The Gaifman model for D with r = 0, k = 2, \u03a6 = \u22c3r\u2208R{r(s1, s2), r(s2, s1)}, w = 1 and w\u0303 = 0 is equivalent to the Universal Schema [23] for D up to the base model classM.", "startOffset": 130, "endOffset": 134}, {"referenceID": 23, "context": "More recent methods combine embedding methods and inference-based logical approaches for relation extraction [24].", "startOffset": 109, "endOffset": 113}, {"referenceID": 19, "context": "Contrary to most existing multi-relational ML models [20], Gaifman models natively support higher-arity relations, functional and type constraints, numerical features, and complex target queries.", "startOffset": 53, "endOffset": 57}, {"referenceID": 1, "context": "We evaluate the proposed class of models with two data sets derived from the knowledge bases WORDNET and FREEBASE [2].", "startOffset": 114, "endOffset": 117}, {"referenceID": 3, "context": "For a detailed description of the data sets, whose statistics are listed in Table 1, we refer the reader to previous work [4].", "startOffset": 122, "endOffset": 125}, {"referenceID": 20, "context": "Data Set WN18 FB15K Metric Mean rank Hits@10 Hits@1 Mean rank Hits@10 Hits@1 RESCAL[21] 1,163 52.", "startOffset": 83, "endOffset": 87}, {"referenceID": 4, "context": "1 SE[5] 985 80.", "startOffset": 4, "endOffset": 7}, {"referenceID": 11, "context": "8 LFM[12] 456 81.", "startOffset": 5, "endOffset": 9}, {"referenceID": 3, "context": "1 TransE[4] 251 89.", "startOffset": 8, "endOffset": 11}, {"referenceID": 17, "context": "1 TransR[18] 219 91.", "startOffset": 8, "endOffset": 12}, {"referenceID": 29, "context": "5 DistMult[30] 902 93.", "startOffset": 10, "endOffset": 14}, {"referenceID": 0, "context": "8 Gaifman [1, 20, 1, 2] 357 88.", "startOffset": 10, "endOffset": 23}, {"referenceID": 19, "context": "8 Gaifman [1, 20, 1, 2] 357 88.", "startOffset": 10, "endOffset": 23}, {"referenceID": 0, "context": "8 Gaifman [1, 20, 1, 2] 357 88.", "startOffset": 10, "endOffset": 23}, {"referenceID": 1, "context": "8 Gaifman [1, 20, 1, 2] 357 88.", "startOffset": 10, "endOffset": 23}, {"referenceID": 0, "context": "1 Gaifman [1, 20, 5, 25] 392 93.", "startOffset": 10, "endOffset": 24}, {"referenceID": 19, "context": "1 Gaifman [1, 20, 5, 25] 392 93.", "startOffset": 10, "endOffset": 24}, {"referenceID": 4, "context": "1 Gaifman [1, 20, 5, 25] 392 93.", "startOffset": 10, "endOffset": 24}, {"referenceID": 24, "context": "1 Gaifman [1, 20, 5, 25] 392 93.", "startOffset": 10, "endOffset": 24}, {"referenceID": 1, "context": "6 Gaifman [2, 20, 5, 25] 378 93.", "startOffset": 10, "endOffset": 24}, {"referenceID": 19, "context": "6 Gaifman [2, 20, 5, 25] 378 93.", "startOffset": 10, "endOffset": 24}, {"referenceID": 4, "context": "6 Gaifman [2, 20, 5, 25] 378 93.", "startOffset": 10, "endOffset": 24}, {"referenceID": 24, "context": "6 Gaifman [2, 20, 5, 25] 378 93.", "startOffset": 10, "endOffset": 24}, {"referenceID": 2, "context": "5 Gaifman [3, 20, 5, 25] 352 93.", "startOffset": 10, "endOffset": 24}, {"referenceID": 19, "context": "5 Gaifman [3, 20, 5, 25] 352 93.", "startOffset": 10, "endOffset": 24}, {"referenceID": 4, "context": "5 Gaifman [3, 20, 5, 25] 352 93.", "startOffset": 10, "endOffset": 24}, {"referenceID": 24, "context": "5 Gaifman [3, 20, 5, 25] 352 93.", "startOffset": 10, "endOffset": 24}], "year": 2016, "abstractText": "We present discriminative Gaifman models, a novel family of relational machine learning models. Gaifman models learn feature representations bottom up from representations of locally connected and bounded-size regions of knowledge bases (KBs). Considering local and bounded-size neighborhoods of knowledge bases renders logical inference and learning tractable, mitigates the problem of overfitting, and facilitates weight sharing. Gaifman models sample neighborhoods of knowledge bases so as to make the learned relational models more robust to missing objects and relations which is a common situation in open-world KBs. We present the core ideas of Gaifman models and apply them to large-scale relational learning problems. We also discuss the ways in which Gaifman models relate to some existing relational machine learning approaches.", "creator": "LaTeX with hyperref package"}}}