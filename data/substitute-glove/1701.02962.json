{"id": "1701.02962", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "11-Jan-2017", "title": "Distinguishing Antonyms and Synonyms in a Pattern-based Neural Network", "abstract": "Distinguishing under case-sensitive and antonyms is giving key ensure without achieve falls record in NLP equipment. While there small treacherous difficult decided certain by distributional american - occur models, pattern - called solutions have proven conduct still differentiate and similar dialogue. In this paper, nothing present a chronicles embryonic network model AntSynNET that exploits lexico - finite patterns both mappings mispronounce sand. In addition to has prefixes up syntactic document, must being technologies been distance of present related me along all deformation path by first new changes special. The results from analysis experiments show own AntSynNET well-being been overall on completed suggests - based methods.", "histories": [["v1", "Wed, 11 Jan 2017 13:11:48 GMT  (89kb,D)", "http://arxiv.org/abs/1701.02962v1", "EACL 2017, 10 pages"]], "COMMENTS": "EACL 2017, 10 pages", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["kim anh nguyen", "sabine schulte im walde", "ngoc thang vu"], "accepted": false, "id": "1701.02962"}, "pdf": {"name": "1701.02962.pdf", "metadata": {"source": "CRF", "title": "Distinguishing Antonyms and Synonyms in a Pattern-based Neural Network", "authors": ["Kim Anh Nguyen"], "emails": ["nguyenkh@ims.uni-stuttgart.de", "schulte@ims.uni-stuttgart.de", "thangvu@ims.uni-stuttgart.de"], "sections": [{"heading": "1 Introduction", "text": "Antonymy and synonymy represent lexical semantic relations that are central to the organization of the mental lexicon (Miller and Fellbaum, 1991). While antonymy is defined as the oppositeness between words, synonymy refers to words that are similar in meaning (Deese, 1965; Lyons, 1977). From a computational point of view, distinguishing between antonymy and synonymy is important for NLP applications such as Machine Translation and Textual Entailment, which go beyond a general notion of semantic relatedness and require to identify specific semantic relations. However, due to interchangeable substitution, antonyms and synonyms often occur in similar contexts, which makes it challenging to automatically distinguish between them.\nTwo families of approaches to differentiate between antonyms and synonyms are predominent\nin NLP. Both make use of distributional vector representations, relying on the distributional hypothesis (Harris, 1954; Firth, 1957), that words with similar distributions have related meanings: co-occurrence models and pattern-based models. These distributional semantic models (DSMs) offer a means to represent meaning vectors of words or word pairs, and to determine their semantic relatedness (Turney and Pantel, 2010).\nIn co-occurrence models, each word is represented by a weighted feature vector, where features typically correspond to words that co-occur in particular contexts. When using word embeddings, these models rely on neural methods to represent words as low-dimensional vectors. To create the word embeddings, the models either make use of neural-based techniques, such as the skipgram model (Mikolov et al., 2013), or use matrix factorization (Pennington et al., 2014) that builds word embeddings by factorizing word-context cooccurrence matrices. In comparison to standard co-occurrence vector representations, word embeddings address the problematic sparsity of word vectors and have achieved impressive results in many NLP tasks such as word similarity (e.g., Pennington et al. (2014)), relation classification (e.g., Vu et al. (2016)), and antonym-synonym distinction (e.g., Nguyen et al. (2016)).\nIn pattern-based models, vector representations make use of lexico-syntactic surface patterns to distinguish between the relations of word pairs. For example, Justeson and Katz (1991) suggested that adjectival opposites co-occur with each other in specific linear sequences, such as between X and Y. Hearst (1992) determined surface patterns, e.g., X such as Y, to identify nominal hypernyms. Lin et al. (2003) proposed two textual patterns indicating semantic incompatibility, from X to Y and either X or Y, to distinguish opposites from semantically similar\nar X\niv :1\n70 1.\n02 96\n2v 1\n[ cs\n.C L\n] 1\n1 Ja\nn 20\n17\nwords. Roth and Schulte im Walde (2014) proposed a method that combined patterns with discourse markers for classifying paradigmatic relations including antonymy, synonymy, and hypernymy. Recently, Schwartz et al. (2015) used two prominent patterns from Lin et al. (2003) to learn word embeddings that distinguished antonyms from similar words in determining degrees of similarity and word analogy.\nIn this paper, we present a novel patternbased neural method AntSynNET to distinguish antonyms from synonyms. We hypothesize that antonymous word pairs co-occur with each other in lexico-syntactic patterns within a sentence more often than would be expected by synonymous pairs. This hypothesis is inspired by corpus-based studies on antonymy and synonymy. Among others, Charles and Miller (1989) suggested that adjectival opposites co-occur in patterns; Fellbaum (1995) stated that nominal and verbal opposites co-occur in the same sentence significantly more often than chance; Lin et al. (2003) argued that if two words appear in clear antonym patterns, they are unlikely to represent synonymous pair.\nWe start out by inducing patterns between X and Y from a large-scale web corpus, where X and Y represent two words of an antonym or synonym word pair, and the pattern is derived from the simple paths between X and Y in a syntactic parse tree. Each node in the simple path combines lexical and syntactic information; in addition, we suggest a novel feature for the patterns, i.e., the distance between the two words along the syntactic path. All pattern features are fed into a recurrent neural network with long short-term memory (LSTM) units (Hochreiter and Schmidhuber, 1997), which encode the patterns as vector representations. Afterwards, the vector representations of the patterns are used in a classifier to distinguish between antonyms and synonyms. The results from experiments show that AntSynNET improves the performance over prior pattern-based methods. Furthermore, the implementation of our models is made publicly available1.\nThe remainder of this paper is organized as follows: In Section 2, we present previous work distinguishing antonyms and synonyms. Section 3 describes our proposed AntSynNET model. We present the induction of the patterns (Section 3.1), describe the recurrent neural network with long\n1 https://github.com/nguyenkh/AntSynNET\nshort-term memory units which is used to encode patterns within a vector representation (Section 3.2), and describe two models to classify antonyms and synonyms: the pure pattern-based model (Section 3.3.1) and the combined model (Section 3.3.2). After introducing two baselines in Section 4, we describe our dataset, experimental settings, results of our methods, the effects of the newly proposed distance feature, and the effects of the various types of word embeddings. Section 6 concludes the paper."}, {"heading": "2 Related Work", "text": "Pattern-based methods: Regarding the task of antonym-synonym distinction, there exist a variety of approaches which rely on patterns. Lin et al. (2003) used bilingual dependency triples and patterns to extract distributionally similar words. They relied on clear antonym patterns such as from X to Y and either X or Y in a post-processing step to distinguish antonyms from synonyms. The main idea is that if two words X and Y appear in one of these patterns, they are unlikely to represent synonymous pair. Schulte im Walde and Ko\u0308per (2013) proposed a method to distinguish between the paradigmatic relations antonymy, synonymy and hypernymy in German, based on automatically acquired word patterns. Roth and Schulte im Walde (2014) combined general lexico-syntactic patterns with discourse markers as indicators for the same relations, both for German and for English. They assumed that if two phrases frequently co-occur with a specific discourse marker, then the discourse relation expressed by the corresponding marker should also indicate the relation between the words in the affected phrases. By using the raw corpus and a fixed list of discourse markers, the model can easily be extended to other languages. More recently, Schwartz et al. (2015) presented a symmetric pattern-based model for word vector representation in which antonyms are assigned to dissimilar vector representations. Differently to the previous pattern-based methods which used the standard distribution of patterns, Schwartz et al. used patterns to learn word embeddings.\nVector representation methods: Yih et al. (2012) introduced a new vector representation where antonyms lie on opposite sides of a sphere. They derived this representation with the incorporation of a thesaurus and latent semantic anal-\nysis, by assigning signs to the entries in the cooccurrence matrix on which latent semantic analysis operates, such that synonyms would tend to have positive cosine similarities, and antonyms would tend to have negative cosine similarities. Scheible et al. (2013) showed that the distributional difference between antonyms and synonyms can be identified via a simple word space model by using appropriate features. Instead of taking into account all words in a window of a certain size for feature extraction, the authors experimented with only words of a certain part-of-speech, and restricted distributions. Santus et al. (2014) proposed a different method to distinguish antonyms from synonyms by identifying the most salient dimensions of meaning in vector representations and reporting a new average-precision-based distributional measure and an entropy-based measure. Ono et al. (2015) trained supervised word embeddings for the task of identifying antonymy. They proposed two models to learn word embeddings: the first model relied on thesaurus information; the second model made use of distributional information and thesaurus information. More recently, Nguyen et al. (2016) proposed two methods to distinguish antonyms from synonyms: in the first method, the authors improved the quality of weighted feature vectors by strengthening those features that are most salient in the vectors, and by putting less emphasis on those that are of minor importance when distinguishing degrees of similarity between words. In the second method, the lexical contrast information was integrated into the skip-gram model (Mikolov et al., 2013) to learn word embeddings. This model successfully predicted degrees of similarity and identified antonyms and synonyms."}, {"heading": "3 AntSynNET: LSTM-based Antonym-Synonym Distinction", "text": "In this section, we describe the AntSynNET model, using a pattern-based LSTM for distinguishing antonyms from synonyms. We first present the induction of patterns from a parsed corpus (Section 3.1). Section 3.2 then describes how we utilize the recurrent neural network with long short-term memory units to encode the patterns as vector representation. Finally, we present the AntSynNET model and two approaches to classify antonyms and synonyms (Section 3.3)."}, {"heading": "3.1 Induction of Patterns", "text": "Corpus-based studies on antonymy have suggested that opposites co-occur with each other within a sentence significantly more often than would be expected by chance. Our method thus makes use of patterns as the main indicators of word pair co-occurrence, to enforce a distinction between antonyms and synonyms. Figure 1 shows a syntactic parse tree of the sentence \u201cMy old village has been provided with the new services\u201d. Following the characterizations of a tree in graph theory, any two nodes (vertices) of a tree are connected by a simple path (or one unique path). The simple path is the shortest path between any two nodes in a tree and does not contain repeated nodes. In the example, the lexico-syntactic tree pattern of the antonymous pair old\u2013new is determined by finding the simple path (in red) from the lemma old to the lemma new. It focuses on the most relevant information and ignores irrelevant information which does not appear in the simple path (i.e., has, been). The example pattern between X = old and Y = new in Figure 1 is represented as follows: X/JJ/amod/2 -- village/NN/nsubj/1 -- provide/VBN/ROOT/0\n-- with/IN/prep/1 -- service/NNS/pobj/2\n-- Y/JJ/amod/3.\nNode Representation: The path patterns make use of four features to represent each node in the syntax tree: lemma, part-of-speech (POS) tag, dependency label and distance label. The lemma feature captures the lexical information of words in the sentence, while the POS and dependency features capture the morpho-syntactic information of the sentence. The distance label measures the path distance between the target word nodes in the syntactic tree. Each step between a parent and a child node represents a distance of 1; and the ancestor nodes of the remaining nodes in the path are represented by a distance of 0. For example, the node provided is an ancestor node of the simple path from old to new. The distances from the node provided to the nodes village and old are 1 and 2, respectively.\nThe vector representation of each node concatenates the four-feature vectors as follows:\n~vnode = [~vlemma \u2295 ~vpos \u2295 ~vdep \u2295 ~vdist]\nwhere ~vlemma, ~vpos, ~vdep, ~vdist represent the embeddings of the lemma, POS tag, dependency label\nand distance label, respectively; and the\u2295 denotes the concatenation operation.\nPattern Representation: For a pattern p which is constructed by the sequence of nodes n1, n2, ..., nk, the pattern representation of p is a sequence of vectors: p = [~n1, ~n2, ..., ~nk]. The pattern vector ~vp is then encoded by applying a recurrent neural network."}, {"heading": "3.2 Recurrent Neural Network with Long Short-Term Memory Units", "text": "A recurrent neural network (RNN) is suitable for modeling sequential data by a vector representation. In our methods, we use a long short-term memory (LSTM) network, a variant of a recurrent neural network to encode patterns, for the following reasons. Given a sequence of words p = [n1, n2, ..., nk] as input data, an RNN processes each word nt at a time, and returns a vector of state hk for the complete input sequence. For each time step t, the RNN updates an internal memory state ht which depends on the current input nt and the previous state ht\u22121. Yet, if the sequential input is a long-term dependency, an RNN faces the problem of gradient vanishing or exploding, leading to difficulties in training the model.\nLSTM units address these problems. The underlying idea of an LSTM is to use an adaptive gating mechanism to decide on the degree that LSTM units keep the previous state and memorize the extracted features of the current input. More specif-\nically, an LSTM comprises four components: an input gate it, a forget gate ft, an output gate ot, and a memory cell ct. The state of an LSTM at each time step t is formalized as follows:\nit = \u03c3(Wi \u00b7 xt + Ui \u00b7 ht\u22121 + bi) ft = \u03c3(Wf \u00b7 xt + Uf \u00b7 ht\u22121 + bf ) ot = \u03c3(Wo \u00b7 xt + Uo \u00b7 ht\u22121 + bo) gt = tanh(Wc \u00b7 xt + Uc \u00b7 ht\u22121 + bc) ct = it \u2297 gt + ft \u2297 ct\u22121\nW refers to a matrix of weights that projects information between two layers; b is a layer-specific vector of bias terms; \u03c3 denotes the sigmoid function. The output of an LSTM at a time step t is computed as follows:\nht = ot \u2297 tanh(ct)\nwhere \u2297 denotes element-wise multiplication. In our methods, we rely on the last state hk to represent the vector ~vp of a pattern p = [~n1, ~n2, ..., ~nk]."}, {"heading": "3.3 The Proposed AntSynNET Model", "text": "In this section, we present two models to distinguish antonyms from synonyms. The first model makes use of patterns to classify antonyms and synonyms, by using an LSTM to encode patterns as vector representations and then feeding those vectors to a logistic regression layer (Section 3.3.1). The second model creates combined vector representations of word pairs, which concatenate the vectors of the words and the patterns (Section 3.3.2)."}, {"heading": "3.3.1 Pattern-based AntSynNET", "text": "In this model, we make use of a recurrent neural network with LSTM units to encode patterns containing a sequence of nodes. Figure 2 illustrates the AntSynNET model. Given a word pair (x, y), we induce patterns for (x, y) from a corpus, where each pattern represents a path from x to y (cf. Section 3.1). We then feed each pattern p of the word pair (x, y) into an LSTM to obtain ~vp, the vector representation of the pattern p (cf. Section 3.2). For each word pair (x, y), the vector representation of (x, y) is computed as follows:\n~vxy =\n\u2211 p\u2208P (x,y) ~vp \u00b7 cp\u2211\np\u2208P (x,y) cp (1)\n~vxy refers to the vector of the word pair (x, y); P (x, y) is the set of patterns corresponding to the pair (x, y); cp is the frequency of the pattern p. The vector ~vxy is then fed into a logistic regression layer whose target is the class label associated with the pair (x, y). Finally, the pair (x, y) is predicted as positive (i.e., antonymous) word pair if the probability of the prediction for ~vxy is larger than 0.5."}, {"heading": "3.3.2 Combined AntSynNET", "text": "Inspired by the supervised distributional concatenation method in Baroni et al. (2012) and the integrated path-based and distributional method for hypernymy detection in Shwartz et al. (2016), we\ntake into account the patterns and distribution of target pairs to create their combined vector representations. Given a word pair (x, y), the combined vector representation of the pair (x, y) is determined by using both the co-occurrence distribution of the words and the syntactic path patterns:\n~vcomb(x,y) = [~vx \u2295 ~vxy \u2295 ~vy] (2)\n~vcomb(x,y) refers to the combined vector of the word pair (x, y); ~vx and ~vy are the vectors of word x and word y, respectively; ~vxy is the vector of the pattern that corresponds to the pair (x, y), cf. Section 3.3.1. Similar to the pattern-based model, the combined vector ~vcomb(x,y) is fed into the logistic regression layer to classify antonyms and synonyms."}, {"heading": "4 Baseline Models", "text": "To compare AntSynNET with baseline models for pattern-based classification of antonyms and synonyms, we introduce two pattern-based baseline methods: the distributional method (Section 4.1), and the distributed method (Section 4.2)."}, {"heading": "4.1 Distributional Baseline", "text": "As a first baseline, we apply the approach by Roth and Schulte im Walde (2014), henceforth R&SiW. They used a vector space model to represent pairs of words by a combination of standard lexico-\nsyntactic patterns and discourse markers. In addition to the patterns, the discourse markers added information to express discourse relations, which in turn may indicate the specific semantic relation between the two words in a word pair. For example, contrast relations might indicate antonymy, whereas elaborations may indicate synonymy or hyponymy.\nMichael Roth, the first author of R&SiW, kindly computed the relation classification results of the pattern\u2013discourse model for our test sets. The weights between marker-based and pattern-based models were tuned on the validation sets; other hyperparameters were set exactly as described by the R&SiW method."}, {"heading": "4.2 Distributed Baseline", "text": "The SP method proposed by Schwartz et al. (2015) uses symmetric patterns for generating word embeddings. In this work, the authors applied an unsupervised algorithm for the automatic extraction of symmetric patterns from plain text. The symmetric patterns were defined as a sequence of 3-5 tokens consisting of exactly two wildcards and 1- 3 words. The patterns were filtered based on their frequencies, such that the resulting pattern set contained 11 patterns. For generating word embeddings, a matrix of co-occurrence counts between patterns and words in the vocabulary was computed, using positive point-wise mutual information. The sparsity problem of vector representations was addressed by smoothing. For antonym representation, the authors relied on two patterns suggested by Lin et al. (2003) to construct word embeddings containing an antonym parameter that can be turned on in order to represent antonyms as dissimilar, and that can be turned off to represent antonyms as similar.\nTo apply the SP method to our data, we make use of the pre-trained SP embeddings2 with 500 dimensions3. We calculate the cosine similarity of word pairs and then use a Support Vector Machine with Radial Basis Function kernel to classify antonyms and synonyms.\n2 http://homes.cs.washington.edu/\u02dcroysch/papers/\nsp_embeddings/sp_embeddings.html 3The 500-dimensional embeddings outperformed the 300-dimensional embeddings for our data."}, {"heading": "5 Experiments", "text": ""}, {"heading": "5.1 Dataset", "text": "For training the models, neural networks require a large amount of training data. We use the existing large-scale antonym and synonym pairs previously used by Nguyen et al. (2016). Originally, the data pairs were collected from WordNet (Miller, 1995) and Wordnik4.\nIn order to induce patterns for the word pairs in the dataset, we identify the sentences in the corpus that contain the word pair. Thereafter, we extract all patterns for the word pair. We filter out all patterns which occur less than five times; and we only take into account word pairs that contain at least five patterns for training, validating and testing. For the proportion of positive and negative pairs, we keep a ratio of 1:1 positive (antonym) to negative (synonym) pairs in the dataset. In order to create the sets of training, testing and validation data, we perform random splitting with 70% train, 25% test, and 5% validation sets. The final dataset contains the number of word pairs according to word classes described in Table 1. Moreover, Table 2 shows the average number of patterns for each word pair in our dataset."}, {"heading": "5.2 Experimental Settings", "text": "We use the English Wikipedia dump5 from June 2016 as the corpus resource for our methods and baselines. For parsing the corpus, we rely on spaCy6. For the lemma embeddings, we rely on the word embeddings of the dLCE\n4 http://www.wordnik.com 5 https://dumps.wikimedia.org/enwiki/latest/\nenwiki-latest-pages-articles.xml.bz2 6 https://spacy.io\nmodel7 (Nguyen et al., 2016) which is the stateof-the-art vector representation for distinguishing antonyms from synonyms. We re-implemented this cutting-edge model on Wikipedia with 100 dimensions, and then make use of the dLCE word embeddings for initialization the lemma embeddings. The embeddings of POS tags, dependency labels, distance labels, and out-of-vocabulary lemmas are initialized randomly. The number of dimensions is set to 10 for the embeddings of POS tags, dependency labels and distance labels. We use the validation sets to tune the number of dimensions for these labels. For optimization, we rely on the cross-entropy loss function and Stochastic Gradient Descent with the Adadelta update rule (Zeiler, 2012). For training, we use the Theano framework (Theano Development Team, 2016). Regularization is applied by a dropout of 0.5 on each of component\u2019s embeddings (dropout rate is tuned on the validation set). We train the models with 40 epochs and update all embeddings during training."}, {"heading": "5.3 Overall Results", "text": "Table 3 shows the significant8 performance of our models in comparison to the baselines. Concerning adjectives, the two proposed models significantly outperform the two baselines: The performance of the baselines is around .72 for F1, and the corresponding results for the combined AntSynNET model achieve an improvement of >.06. Regarding nouns, the improvement of the new methods is just .02 F1 in comparison to the\n7 https://github.com/nguyenkh/AntSynDistinction 8t-test, *p < 0.05, **p < 0.1\nR&SiW baseline, but we achieve a much better performance in comparison to the SP baseline, an increase of .37 F1. Regarding verbs, we do not outperform the more advanced R&SiW baseline in terms of the F1 score, but we obtain higher recall scores. In comparison to the SP baseline, our models still show a clear F1 improvement.\nOverall, our proposed models achieve comparatively high recall scores compared to the two baselines. This strengthens our hypothesis that there is a higher possibility for the co-occurrence of antonymous pairs in patterns over synonymous pairs within a sentence. Because, when the proposed models obtain high recall scores, the models are able to retrieve most relevant information (antonymous pairs) corresponding to the patterns. Regarding the low precision in the two proposed models, we sampled randomly 5 pairs in each population: true positive, true negative, false positive, false negative. We then compared the overlap of patterns for the true predictions (true positive pairs and true negative pairs) and the false predictions (false positive pairs and false negative pairs). We found out that there is no overlap between patterns of true predictions; and the number overlap between patterns of false predictions is 2, 2, and 4 patterns for noun, adjective, and verb classes, respectively. This shows that the low precision of our models stems from the patterns which represent both antonymous and synonymous pairs."}, {"heading": "5.4 Effect of the Distance Feature", "text": "In our models, the novel distance feature is successfully integrated along the syntactic path to represent lexico-syntactic patterns. The intu-\nition behind the distance feature exploits properties of trees in graph theory, which show that there exist differences in the degree of relationship between the parent node and the child nodes (distance = 1) and in the degree of relationship between the ancestor node and the descendant nodes (distance > 1). Hence, we use the distance feature to effectively capture these relationships.\nIn order to evaluate the effect of our novel distance feature, we compare the distance feature to the direction feature proposed by Shwartz et al. (2016). In their approach, the authors combined lemma, POS, dependency, and direction features for the task of hypernym detection. The direction feature represented the direction of the dependency label between two nodes in a path from X to Y.\nFor evaluation, we make use of the same information regarding dataset and patterns as in Section 5.3, and then replace the distance feature by the direction feature. The results are shown in Table 4. The distance feature enhances the performance of our proposed models more effectively than the direction feature does, across all word classes."}, {"heading": "5.5 Effect of Word Embeddings", "text": "Our methods rely on the word embeddings of the dLCE model, state-of-the-art word embeddings for antonym-synonym distinction. Yet, the word embeddings of the dLCE model, i.e., supervised word embeddings, represent information collected from lexical resources. In order to evaluate the effect of these word embeddings on the performance of our models, we replace them by the pre-trained GloVe word embeddings9 with 100 dimensions, and compare the effects of the GloVe word embeddings and the dLCE word embeddings on the performance of the two proposed models.\nTable 5 illustrates the performance of our two models on all word classes. The table shows that the dLCE word embeddings are better than the\n9 http://www-nlp.stanford.edu/projects/glove/\npre-trained GloVe word embeddings, by around .01 F1 for the pattern-based AntSynNET model and the combined AntSynNET model regarding adjective and verb pairs. Regarding noun pairs, the improvements of the dLCE word embeddings over pre-trained GloVe word embeddings achieve around .01 and .04 F1 for the pattern-based model and the combined model, respectively."}, {"heading": "6 Conclusion", "text": "In this paper, we presented a novel patternbased neural method AntSynNET to distinguish antonyms from synonyms. We hypothesized that antonymous word pairs co-occur with each other in lexico-syntactic patterns within a sentence more often than synonymous word pairs.\nThe patterns were derived from the simple paths between semantically related words in a syntactic parse tree. In addition to lexical and syntactic information, we suggested a novel path distance feature. The AntSynNET model consists of two approaches to classify antonyms and synonyms. In the first approach, we used a recurrent neural network with long short-term memory units to encode the patterns as vector representations; in the second approach, we made use of the distribution and encoded patterns of the target pairs to generate combined vector representations. The resulting vectors of patterns in both approaches were fed into the logistic regression layer for classification.\nOur proposed models significantly outperformed two baselines relying on previous work, mainly in terms of recall. Moreover, we demonstrated that the distance feature outperformed a previously suggested direction feature, and that our embeddings outperformed the state-of-the-art GloVe embeddings. Last but not least, our two proposed models only rely on corpus data, such that the models are easily applicable to other languages and relations."}, {"heading": "Acknowledgements", "text": "We would like to thank Michael Roth for helping us to compute the results of the R&SiW model on our dataset.\nThe research was supported by the Ministry of Education and Training of the Socialist Republic of Vietnam (Scholarship 977/QD-BGDDT; KimAnh Nguyen), the DFG Collaborative Research Centre SFB 732 (Kim-Anh Nguyen, Ngoc Thang Vu), and the DFG Heisenberg Fellowship SCHU2580/1 (Sabine Schulte im Walde)."}], "references": [{"title": "Entailment above the word level in distributional semantics", "author": ["Baroni et al.2012] Marco Baroni", "Raffaella Bernardi", "Ngoc-Quynh Do", "Chung chieh Shan"], "venue": "In Proceedings of the 13th Conference of the European Chapter of the Association for Compu-", "citeRegEx": "Baroni et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Baroni et al\\.", "year": 2012}, {"title": "The Structure of Associations in Language and Thought", "author": ["James Deese"], "venue": null, "citeRegEx": "Deese.,? \\Q1965\\E", "shortCiteRegEx": "Deese.", "year": 1965}, {"title": "Cooccurrence and antonymy", "author": ["Christiane Fellbaum"], "venue": "International Journal of Lexicography,", "citeRegEx": "Fellbaum.,? \\Q1995\\E", "shortCiteRegEx": "Fellbaum.", "year": 1995}, {"title": "Papers in Linguistics 1934-51", "author": ["John R. Firth"], "venue": null, "citeRegEx": "Firth.,? \\Q1957\\E", "shortCiteRegEx": "Firth.", "year": 1957}, {"title": "Automatic acquisition of hyponyms from large text corpora", "author": ["Marti Hearst"], "venue": "Proceedings of the 14th International Conference on Computational Linguistics (COLING),", "citeRegEx": "Hearst.,? \\Q1992\\E", "shortCiteRegEx": "Hearst.", "year": 1992}, {"title": "Long short-term memory", "author": ["Hochreiter", "Schmidhuber1997] Sepp Hochreiter", "J\u00fcrgen Schmidhuber"], "venue": "Neural Computation,", "citeRegEx": "Hochreiter et al\\.,? \\Q1997\\E", "shortCiteRegEx": "Hochreiter et al\\.", "year": 1997}, {"title": "Co-occurrences of antonymous adjectives and their contexts", "author": ["Justeson", "Katz1991] John S. Justeson", "Slava M. Katz"], "venue": "Computational Linguistics,", "citeRegEx": "Justeson et al\\.,? \\Q1991\\E", "shortCiteRegEx": "Justeson et al\\.", "year": 1991}, {"title": "Identifying synonyms among distributionally similar words", "author": ["Lin et al.2003] Dekang Lin", "Shaojun Zhao", "Lijuan Qin", "Ming Zhou"], "venue": "In Proceedings of the 18th International Joint Conference on Artificial Intelligence (IJCAI),", "citeRegEx": "Lin et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Lin et al\\.", "year": 2003}, {"title": "Linguistic regularities in continuous space word representations", "author": ["Wen-tau Yih", "Geoffrey Zweig"], "venue": "In Proceedings of the Conference of the North American Chapter of the Association for Computational Lin-", "citeRegEx": "Mikolov et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2013}, {"title": "WordNet: A lexical database for English", "author": ["George A. Miller"], "venue": "Communications of the ACM,", "citeRegEx": "Miller.,? \\Q1995\\E", "shortCiteRegEx": "Miller.", "year": 1995}, {"title": "Integrating distributional lexical contrast into word embeddings for antonym-synonym distinction", "author": ["Sabine Schulte im Walde", "Ngoc Thang Vu"], "venue": "In Proceedings of the 54th Annual Meeting", "citeRegEx": "Nguyen et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Nguyen et al\\.", "year": 2016}, {"title": "Word embedding-based antonym detection using thesauri and distributional information", "author": ["Ono et al.2015] Masataka Ono", "Makoto Miwa", "Yutaka Sasaki"], "venue": "In Proceedings of the Conference of the North American Chapter of the Association", "citeRegEx": "Ono et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Ono et al\\.", "year": 2015}, {"title": "Glove: Global vectors for word representation", "author": ["Richard Socher", "Christopher D. Manning"], "venue": "In Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP),", "citeRegEx": "Pennington et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Pennington et al\\.", "year": 2014}, {"title": "Combining word patterns and discourse markers for paradigmatic relation classification", "author": ["Roth", "Sabine Schulte im Walde"], "venue": "In Proceedings of the 52nd Annual Meeting of the Association", "citeRegEx": "Roth et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Roth et al\\.", "year": 2014}, {"title": "Chasing hypernyms in vector spaces with entropy", "author": ["Santus et al.2014] Enrico Santus", "Alessandro Lenci", "Qin Lu", "Sabine Schulte im Walde"], "venue": "In Proceedings of the 14th Conference of the European Chapter of the Association for Computational Lin-", "citeRegEx": "Santus et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Santus et al\\.", "year": 2014}, {"title": "Uncovering distributional differences between synonyms and antonyms in a word space model", "author": ["Sabine Schulte im Walde", "Sylvia Springorum"], "venue": "In Proceedings of the 6th International Joint Conference on Natu-", "citeRegEx": "Scheible et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Scheible et al\\.", "year": 2013}, {"title": "Pattern-based distinction of paradigmatic relations for german nouns, verbs, adjectives", "author": ["Schulte im Walde", "Maximilian K\u00f6per"], "venue": "In Proceedings of the 25th International Conference of the German Society", "citeRegEx": "Walde et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Walde et al\\.", "year": 2013}, {"title": "Symmetric pattern based word embeddings for improved word similarity prediction", "author": ["Roi Reichart", "Ari Rappoport"], "venue": "In Proceedings of the 19th Conference on Computational Language Learning (CoNLL),", "citeRegEx": "Schwartz et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Schwartz et al\\.", "year": 2015}, {"title": "Improving hypernymy detection with an integrated path-based and distributional method", "author": ["Yoav Goldberg", "Ido Dagan"], "venue": "In Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics", "citeRegEx": "Shwartz et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Shwartz et al\\.", "year": 2016}, {"title": "From frequency to meaning: Vector space models of semantics", "author": ["Turney", "Pantel2010] Peter D. Turney", "Patrick Pantel"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "Turney et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Turney et al\\.", "year": 2010}, {"title": "Combining recurrent and convolutional neural networks for relation classification", "author": ["Vu et al.2016] Ngoc Thang Vu", "Heike Adel", "Pankaj Gupta", "Hinrich Sch\u00fctze"], "venue": "In Proceedings of the 2016 Conference of the North American Chapter of the Asso-", "citeRegEx": "Vu et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Vu et al\\.", "year": 2016}, {"title": "Polarity inducing latent semantic analysis", "author": ["Yih et al.2012] Wen-tau Yih", "Geoffrey Zweig", "John C. Platt"], "venue": "In Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Lan-", "citeRegEx": "Yih et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Yih et al\\.", "year": 2012}, {"title": "ADADELTA: an adaptive learning rate method. CoRR, abs/1212.5701", "author": ["Matthew D. Zeiler"], "venue": null, "citeRegEx": "Zeiler.,? \\Q2012\\E", "shortCiteRegEx": "Zeiler.", "year": 2012}], "referenceMentions": [{"referenceID": 1, "context": "similar in meaning (Deese, 1965; Lyons, 1977).", "startOffset": 19, "endOffset": 45}, {"referenceID": 3, "context": "Both make use of distributional vector representations, relying on the distributional hypothesis (Harris, 1954; Firth, 1957), that words with similar distributions have related meanings: co-occurrence models and pattern-based models.", "startOffset": 97, "endOffset": 124}, {"referenceID": 8, "context": "gram model (Mikolov et al., 2013), or use matrix factorization (Pennington et al.", "startOffset": 11, "endOffset": 33}, {"referenceID": 12, "context": ", 2013), or use matrix factorization (Pennington et al., 2014) that builds word embeddings by factorizing word-context cooccurrence matrices.", "startOffset": 37, "endOffset": 62}, {"referenceID": 8, "context": "gram model (Mikolov et al., 2013), or use matrix factorization (Pennington et al., 2014) that builds word embeddings by factorizing word-context cooccurrence matrices. In comparison to standard co-occurrence vector representations, word embeddings address the problematic sparsity of word vectors and have achieved impressive results in many NLP tasks such as word similarity (e.g., Pennington et al. (2014)), relation classification (e.", "startOffset": 12, "endOffset": 408}, {"referenceID": 8, "context": "gram model (Mikolov et al., 2013), or use matrix factorization (Pennington et al., 2014) that builds word embeddings by factorizing word-context cooccurrence matrices. In comparison to standard co-occurrence vector representations, word embeddings address the problematic sparsity of word vectors and have achieved impressive results in many NLP tasks such as word similarity (e.g., Pennington et al. (2014)), relation classification (e.g., Vu et al. (2016)), and antonym-synonym distinction (e.", "startOffset": 12, "endOffset": 458}, {"referenceID": 8, "context": "gram model (Mikolov et al., 2013), or use matrix factorization (Pennington et al., 2014) that builds word embeddings by factorizing word-context cooccurrence matrices. In comparison to standard co-occurrence vector representations, word embeddings address the problematic sparsity of word vectors and have achieved impressive results in many NLP tasks such as word similarity (e.g., Pennington et al. (2014)), relation classification (e.g., Vu et al. (2016)), and antonym-synonym distinction (e.g., Nguyen et al. (2016)).", "startOffset": 12, "endOffset": 520}, {"referenceID": 4, "context": "Hearst (1992) determined surface patterns, e.", "startOffset": 0, "endOffset": 14}, {"referenceID": 4, "context": "Hearst (1992) determined surface patterns, e.g., X such as Y, to identify nominal hypernyms. Lin et al. (2003) proposed two textual patterns indicating semantic incompatibility, from X to Y and either X or Y, to distinguish opposites from semantically similar ar X iv :1 70 1.", "startOffset": 0, "endOffset": 111}, {"referenceID": 16, "context": "Recently, Schwartz et al. (2015) used two prominent patterns from Lin et al.", "startOffset": 10, "endOffset": 33}, {"referenceID": 7, "context": "(2015) used two prominent patterns from Lin et al. (2003) to learn word embeddings that distinguished antonyms from similar words in determining degrees of similarity and word analogy.", "startOffset": 40, "endOffset": 58}, {"referenceID": 9, "context": "Among others, Charles and Miller (1989) suggested that ad-", "startOffset": 26, "endOffset": 40}, {"referenceID": 2, "context": "jectival opposites co-occur in patterns; Fellbaum (1995) stated that nominal and verbal opposites co-occur in the same sentence significantly more often than chance; Lin et al.", "startOffset": 41, "endOffset": 57}, {"referenceID": 2, "context": "jectival opposites co-occur in patterns; Fellbaum (1995) stated that nominal and verbal opposites co-occur in the same sentence significantly more often than chance; Lin et al. (2003) argued that if two words appear in clear antonym patterns, they", "startOffset": 41, "endOffset": 184}, {"referenceID": 7, "context": "Lin et al. (2003) used bilingual dependency triples and patterns to extract distributionally similar words.", "startOffset": 0, "endOffset": 18}, {"referenceID": 17, "context": "More recently, Schwartz et al. (2015) presented a symmetric pattern-based model for word vector representation in which antonyms are assigned to dissimilar vector representations.", "startOffset": 15, "endOffset": 38}, {"referenceID": 21, "context": "Vector representation methods: Yih et al. (2012) introduced a new vector representation where antonyms lie on opposite sides of a sphere.", "startOffset": 31, "endOffset": 49}, {"referenceID": 14, "context": "Scheible et al. (2013) showed that the distributional difference between antonyms and synonyms can be identified via a simple word space model by using appropriate features.", "startOffset": 0, "endOffset": 23}, {"referenceID": 14, "context": "Santus et al. (2014) proposed a different method to distinguish antonyms from synonyms by identifying the most salient dimensions of meaning in vector representations and reporting a new average-precision-based dis-", "startOffset": 0, "endOffset": 21}, {"referenceID": 11, "context": "Ono et al. (2015) trained supervised word embeddings for the task of identifying antonymy.", "startOffset": 0, "endOffset": 18}, {"referenceID": 10, "context": "More recently, Nguyen et al. (2016) proposed two methods to distinguish antonyms from synonyms: in the first method, the authors improved the qual-", "startOffset": 15, "endOffset": 36}, {"referenceID": 8, "context": "In the second method, the lexical contrast information was integrated into the skip-gram model (Mikolov et al., 2013) to learn word embeddings.", "startOffset": 95, "endOffset": 117}, {"referenceID": 0, "context": "Inspired by the supervised distributional concatenation method in Baroni et al. (2012) and the in-", "startOffset": 66, "endOffset": 87}, {"referenceID": 18, "context": "tegrated path-based and distributional method for hypernymy detection in Shwartz et al. (2016), we take into account the patterns and distribution of target pairs to create their combined vector representations.", "startOffset": 73, "endOffset": 95}, {"referenceID": 17, "context": "The SP method proposed by Schwartz et al. (2015) uses symmetric patterns for generating word embeddings.", "startOffset": 26, "endOffset": 49}, {"referenceID": 7, "context": "For antonym representation, the authors relied on two patterns suggested by Lin et al. (2003) to construct word embeddings containing an antonym parameter that can be turned on in order to represent antonyms as dissimilar, and that can be turned off to represent antonyms as similar.", "startOffset": 76, "endOffset": 94}, {"referenceID": 9, "context": "Originally, the data pairs were collected from WordNet (Miller, 1995) and Wordnik4.", "startOffset": 55, "endOffset": 69}, {"referenceID": 9, "context": "We use the existing large-scale antonym and synonym pairs previously used by Nguyen et al. (2016). Originally, the data pairs were collected from WordNet (Miller, 1995) and Wordnik4.", "startOffset": 77, "endOffset": 98}, {"referenceID": 10, "context": "model7 (Nguyen et al., 2016) which is the stateof-the-art vector representation for distinguishing antonyms from synonyms.", "startOffset": 7, "endOffset": 28}, {"referenceID": 22, "context": "date rule (Zeiler, 2012).", "startOffset": 10, "endOffset": 24}, {"referenceID": 18, "context": "In order to evaluate the effect of our novel distance feature, we compare the distance feature to the direction feature proposed by Shwartz et al. (2016). In their approach, the authors combined", "startOffset": 132, "endOffset": 154}], "year": 2017, "abstractText": "Distinguishing between antonyms and synonyms is a key task to achieve high performance in NLP systems. While they are notoriously difficult to distinguish by distributional co-occurrence models, pattern-based methods have proven effective to differentiate between the relations. In this paper, we present a novel neural network model AntSynNET that exploits lexico-syntactic patterns from syntactic parse trees. In addition to the lexical and syntactic information, we successfully integrate the distance between the related words along the syntactic path as a new pattern feature. The results from classification experiments show that AntSynNET improves the performance over prior pattern-based methods.", "creator": "LaTeX with hyperref package"}}}