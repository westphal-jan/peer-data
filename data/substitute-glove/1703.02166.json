{"id": "1703.02166", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "7-Mar-2017", "title": "Building a Syllable Database to Solve the Problem of Khmer Word Segmentation", "abstract": "Word segmentation 's new basic serious in lack subjects processing. With is translations having during array mind means like the Khmer terminology in Southern taken Vietnam, certainly is really incredibly intractable, looking after significant complicated. Although all are some experts now Vietnam as well as initiative been deeply documenting may certain, be are still without likelihood selection addressed present orders, only particular, means medication terribly the ambiguous phenomenon, part itself further its Khmer language processing anything far. This publication of a solution developed on in syllable division keep component nuclei uses two tetrachord models proposed, thereby building end Khmer syllable directories, refers still not actually same. This calculations using full lexical enables firmware from before online Khmer dictionaries and but moreover parsing serving role part training inventory from strengths heterogeneity characteristics. Each component variants \u201d umbilicated and southeastern by only first now last official coming suspicious partitioned full schwa. This approach form workable are following on expected determination high accuracy, require the notion, focus already meaningful two problem other word caching well permits balance in Khmer describe processing.", "histories": [["v1", "Tue, 7 Mar 2017 01:13:39 GMT  (235kb)", "http://arxiv.org/abs/1703.02166v1", null]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["nam tran van"], "accepted": false, "id": "1703.02166"}, "pdf": {"name": "1703.02166.pdf", "metadata": {"source": "CRF", "title": "BUILDING A SYLLABLE DATABASE TO SOLVE THE PROBLEM OF KHMER WORD SEGMENTATION", "authors": ["Tran Van Nam", "Nguyen Thi Hue", "Phan Huy Khanh"], "emails": [], "sections": [{"heading": null, "text": "DOI: 10.5121/ijnlc.2017.6101 1\nWord segmentation is a basic problem in natural language processing. With the languages having the complex writing system like the Khmer language in Southern of Vietnam, this problem really very intractable, posing the significant challenges. Although there are some experts in Vietnam as well as international having deeply researched this problem, there are still no reasonable results meeting the demand, in particular, no treated thoroughly the ambiguous phenomenon, in the process of Khmer language processing so far. This paper present a solution based on the syllable division into component clusters using two syllable models proposed, thereby building a Khmer syllable database, is still not actually available. This method using a lexical database updated from the online Khmer dictionaries and some supported dictionaries serving role of training data and complementary linguistic characteristics. Each component cluster is labelled and located by the first and last letter to identify entirety a syllable. This approach is workable and the test results achieve high accuracy, eliminate the ambiguity, contribute to solving the problem of word segmentation and applying efficiency in Khmer language processing.\nKEYWORDS\nAmbiguity; component cluster; labelling; lexical database; natural language processing; syllable database; syllable formation; word segmentation."}, {"heading": "1. INTRODUCTION", "text": "In natural language processing, the problem of word segmentation (WS), or dividing a string of written language into its component words in a document, always put out immediately after many processing steps such as encoding, building typing tool, editing documents, etc. For the languages using Latin alphabet such as English, Vietnamese, or many other languages in the world, the problem of WS does not pose much difficulty. In such writing systems, there are the delimiters (spaces, or punctuation) between words to identify exactly any word appeared in document. The general characteristics of WS in these languages are identified by their meanings and eliminate ambiguity, depending on context of documents. Several methods have been proposed and familiar as the maximum matching method, finding the conditional random field, learning machine, support vector machines, hidden Markov models and so on [4][6][8][9]. The Khmer language belongs to South Asian group (Thai, Laotian, Vietnamese\u2026) having a very complicated writing system. The letters are writing seamless and in order from top to bottom, left to right, but not using any delimiter between words. As written, the letters or signs can be placed below, above, front and behind a central character [1]. A word can be read in many different ways depending on the context of document. There are many ways to syllable formation, causing the ambiguity in orthography and meanings [1][2][3][24]. Therefore, all language processing approaches on the computer, especially the problem of WS, always deal with a big challenge, it has not been resolved in a satisfactory manner so far.\nThe WS methods for Khmer documents is mainly based on two approaches: on the characters and on the words. The first approach carried out by groups of characters respectively appearing in sentences into syllables, depending on the case where the characters can repeated. For example the string ABCD can be split into AB CD or AB BC CD, and so on... The second approach seeks to separate complete words (single or compound) in a sentence in three ways: basing on statistical frequency of the words, using existing vocabulary in a lexical database (LDB), or the combination of these both ways [6][7][10][11]. However, the effectiveness of this methods is still not high, it should be studied further. The drawback in general is unable to recognize the new words as well as simple word or compound words, it does not resolve the ambiguity phenomenon. On the other hand, these methods are not yet fully exploited these specific characteristics of Khmer language in the Southern Vietnam, it has changed many factors, borrowed words become more complex than original Cambodia's Khmer language. In approach based on the words, an other method proposed is building graphs analyzing sentences [8]. This method identifies new words by searching, analyzing lists which may correspond to the shortest paths on a graph [7]. Although the WS is relatively effective, can be resolve ambiguity problem, but this method is only suitable for languages having the signs of separation or identification for syllables and using a syllable database (SDB). However, there is not yet SDB for Khmer language built so far using for universal services for many different purposes, such as spelling checking, classification of Khmer documents, etc. This paper proposed a solution for building a Khmer SDB. After the introduction, the paper mainly includes the following content: analysing all features of Khmer language; proposing two syllable models, SC and CC, to recognize the characters combined in component clusters of a syllable; dividing each entry from a LDB into component clusters; labeling specific position based on the first and last letters of each cluster to determine the limits of each syllable, updating processed syllables in the SDB; test implementation and evaluation of the results. The last part of paper is the conclusion and directions for further research."}, {"heading": "2. CHARACTERISTICS OF KHMER WRITING SYSTEM", "text": ""}, {"heading": "2.1. An introduction to Khmer language", "text": "Khmer ( \u17c2\u1781 \u179a [p\u02b0i\u02d0\u0259sa\u02d0 k\u02b0ma\u02d0e]) is the official language of Cambodia. The Khmer language\nbelongs to 150 Mon-Khmer language in Southeast Asia, mainly distributed in Cambodia, Thailand. In Vietnam, besides Khmer people living in Southern Vietnam, there are 19 ethnic groups who have the same language MonKhmer, scattered mainly in the Central Highlands like Bana, XeDang, Koho, Hre, Mnong, Stieng, Cotu, etc. These languages are so far not virtually researched in the domain of natural language processing The Khmer language is monosyllable, voiceless (no dialcritical marks like Vietnamese, Laotian and Thai), borrowed from many languages, including Sanskrit, Thai, Cham, Chinese, Vietnamese, including France, Portugal [2][5]. In Vietnam, Young Khmer generation has borrowed many Vietnamese words. For example, in the sentence \u17c1\u1782\u1790\u1784\u17bc \u179c \u17a2\u17b8\u1793\u17b9\u1784? (What do they announce?), the new word \u1790\u17bc\u1784 \u179c (announce) is\nborrowed from Vietnamese language. The Khmer grammar uses word family, sentence structure, sentence classe et types, etc. but it is not too complicated."}, {"heading": "2.2. Khmer alphabet", "text": "The Khmer alphabet has over 120 characters including consonants, vowels and signs. The TABLE I. introduce 33 consonants: 15 consonants voiced O [\u1d10] and 18 consonants voiced \u00d4 [o]. Only the consonant \u17a1 in voice O has not the leg sign, the 32 remaining consonants all have leg\nsigns, dominant the syllable formation [1][3][7][14].\nIn our research, we used conventionally the leg sign \u25cc\u17d2 preceding the consonant having the leg so\nthat the computers can recognize them in consonant combinations. It is true of the consonant combination .\u178f having a \u25cc\u17d2 before the consonant \u179a.\nThere are 24 common vowels (or dependent) and 14 independent vowels. A common vowel always has a meaning even when it is not combined with any other consonants, for example, \u17a6\n(northeast), \u17a5 (rainbow), etc. An independent vowel only has a meaning when it is combined with\nother consonants, the pronunciation is depending on the consonants in voice O or in voice \u00d4. The TABLE III. below introduce a list of signs and 10 digits from 0 to 9. In the numeral system, the reading 6 7 8 9 is respectively reassembling 5 with 1 2 3 4. The numbers of tens onwards normally use the familiar numeral system, for example \u17e1\u17e0 (10), \u17e1\u17e9 (19), and so on.\nThe Khmer writing system uses a structure of three levels (similar to Thai and Laotian): leg (below), body and hair (above). The leg includes the vowels, the body include the combination of\nconsonants and vowels, the hair include the vowels or signs. For example, the word \u1781xy\u17c6 (me)\nconsists of three levels: the leg is the vowel \u25cc\u17bb, the body is the combination of consonant \u1781x and the\nhair is the vowel \u25cc.\u17c6"}, {"heading": "2.3. Khmer syllable formation", "text": "The syllables in Khmer are used to form the words. In reality, there are three types of single word formation: semi-syllable as \u1781xy \u17c6 (I), one syllable as \u1780\u1784 \u17cb (bicycle), or two syllables as \u179fz\u17b7\u178f\u17c1\u1785\u1780 (banana\nbunch). A compound word has at least two single words. In case of compound word with two syllable, just one of the two syllables has meaning. For example, \u179f\u17b7\u178f (idiom) has only one syllable\n(pouring water) has meaning. A phrase consists of a group of words having at least three syllables. The Khmer syllable formation is very complex. There are four ways for combinations into syllables: a consonant is combined with a other consonant as \u1794\u1784 (he); a consonant is combined\nwith a vowel as \u1787 \u17b8 (fertilizer); a consonant coupling with a vowel is combined with a other\nconsonant as \u17c1\u179a6\u1793 (study); a consonant having the leg sign is combined with a vowel as \u17c2.\u179f (field).\nThe dependent vowels in the TABLE II are always behind consonants, though there are possible 9 different positions: front, back, top, bottom, front back, on the bottom, front on, on the back and lower back. When there are two syllables combined, the final consonant of the first syllable is written overlapping on the first consonant of the second syllable. For example, in \u1780{| \u179f\u17cb (sneezing),\nthe final consonant \u178e\u17cb of the syllable \u1780\u178e\u17cb is written overlapping on the initial consonant \u178a of the\nsyllable }\u179f\u17cb. So, the Khmer syllable formation often causes ambiguity. It is true that there are two\nways of divide the word ~\u179a\u1780 (infant) into two syllables, or ~ | \u179a\u1780 (duck/ find), or ~\u179a | \u1780 (hungry/ neck)."}, {"heading": "3. BUILDING THE SYLLABLE DATABASE", "text": ""}, {"heading": "3.1. Proposing the Khmer syllabble models", "text": "Basing on the specific characteristics in Khmer writing system, we propose two syllabble models: simple combination (SC) and cluster combination (CC). So, we use the following convention:\n- [X] means character X may be absent (Option). - (X) means character X is at the beginning position of cluster when it is in the same group Y\nor Z."}, {"heading": "3.1.1. SC, the simple combination to syllable formation", "text": "The SC model determine the simple syllable combination containing maximum two consecutive letters. Any syllable in this model has the form V[C], where V is a independent vowel, C is a consonant. The TABLE IV. below illustrates the syllables formed by one or two letters:"}, {"heading": "3.1.2. CC, the complex combination to syllable formation", "text": "The CC model determine the syllable combination in the form of three component clusters placed behind a consonant C<Begin><Center><End>:\n<Begin> = C[X1][X2][X3][X4] <Center> = (Y5)[Y6](Y7)[Y8][Y9] <End> = (Z10)[Z11][Z12] Where: - C, Y5, Z10, Z11 are consonants. - X2, X3, Y7, Y8 are consonants with leg signs. - X4, Y9 dependent vowel. - X1 is the beginning sign of syllable. - Y6 is the sign \u179a or the overlapping consonant.\n- Z12 is the common sign ending syllable. -\nThe TABLE V. below illustrates some typical cases how to identify the characters appeared in a syllable according to CC model:\nApplying the CC model, the TABLE VI. illustrate the dividing of some entries of LDB into component clusters which placed in brackets []. The longest syllable containing completly three clusters, between two component clusters separated by sign +.\nWith these proposed models, separated clusters are the smallest ones with leg signs, depenent vowel cannot stand by itself, this violates Khmer syllabic structure."}, {"heading": "3.1.3. Applying Khmer syllable models", "text": "Both two models SC and CC uses the characcteristic signs to identify any component clusters that is the begin, the center or the end of a syllable."}, {"heading": "3.2. Building the syllable database", "text": "0illustrates the solution of using two models SC and CC to build the Khmer SDB. The solutions use 7 databases (DB) from (1) to (7). The input (1) is a LDB containing the Khmer vocabularies in social sector, no containing or borrowed words or other non-textual components. The Unicode and DaunPenh fonts are used because of their popularity and available for use at present. This LDB contained 48,947 vocabulary entries which are updated from some online Khmer\ndictionaries [13][14]. The entries are arranged in the dictionary order (ABC) which can be single words, compound words, or phrases. The solutions use is summarized into five following steps:"}, {"heading": "3.2.1. Dividing into component clusters", "text": "Using the models SC or CC, this step divided each entry of LDB into syllables by identifying each its character being at the begin (V or C), the center (Y5), or the end position (Z10) of a appeared components cluster which can be formed a new syllable. For example, the entry \u179c \u1791 \u179f|\u1780\u17bb\u17c6\u1796 \u1791\u179a\u17d0 (Information Technology) is divided into 8 component clusters: [\u179c ]+[\u1791 ]+[ ]+[ \u179f|]+[\u1780\u17bb\u17c6]+[\u1796 ]+[\u1791\u17d0]+[\u179a]."}, {"heading": "3.2.2. Data preprocessing", "text": "To properly identify syllables Khmer, the pre - processing step removes the misspelled characters and rearrange the consistent order of characters which appeared in each component cluster based on the models SC or CC. This step is based on three phases: Handling the position of each character in syllables\nThis phase is related to the way how to entry Khmer characters into the computer. At present, almost editor system for Khmer documents use Unicode and is available on the internet, or installed by default in Windows. The typing method for Khmer documents is similar with Vietnamese documents from a ASCII keyboard. The users typed in a row any character forming the words and sentences of document, in order from top to bottom, left to right. Usually, there are two typing methods: normal typing and NIDA1 typing [12]. A Khmer syllable can be typing in different ways, each way forming a combination of independent characters. For example, there are 4 different combinations for syllable \u179f|\u17b8 (women), each combination containing 6 characters to\nbe typed in turn as follow:\n(1) \u179f + \u25cc\u17d2 + \u178f + \u25cc\u17d2 + \u179a + \u25cc \u17b8= (\u179f, \u25cc\u17d2, \u178f, \u25cc\u17d2, \u179a, \u25cc)\u17b8\n(2) \u179f + \u25cc\u17d2 + \u179a + \u25cc\u17d2 + \u178f + \u25cc \u17b8= (\u179f, \u25cc\u17d2, \u179a, \u25cc\u17d2, \u178f, \u25cc)\u17b8\n(3) \u179f + \u25cc\u17d2 + \u178f + \u25cc \u17b8+ \u25cc\u17d2 + \u179a = (\u179f, \u25cc\u17d2, \u178f, \u25cc,\u17b8 \u25cc\u17d2, \u179a )\n1 NIDA (National Information Communication Technology Development Authority) a government agency responsible for managing\nthe development of the information technology industry in Cambodia.\n(4) \u179f + \u25cc\u17d2 + \u179a + \u25cc \u17b8+ \u25cc\u17d2 + \u178f = (\u179f, \u25cc\u17d2, \u179a, \u25cc,\u17b8 \u25cc\u17d2, \u178f)\nIn fact, when there are many possibilities for combining independent typed characters to entry a syllable can cause ambiguity. This leads to more difficulties to match and identify the syllable. Using the models SC or CC, this phase assign the label for each component cluster in order to convert the syllables into a uniform combination. So, any character appeared in a syllable will have the correct order and the consistent position to match. In the example above, all three combinations (2), (3), (4) have been converted into (1). Handling different sign in syllable but identical morpheme\nIn Khmer language, there are different signs to use to entry a syllable but identical morpheme which maybe causes the misspelling. For example, there are three typing ways to entry the syllable \u17a0 y\u17b8 containing 5 characters as follow:\n(1) \u17a0 + \u25cc \u17ca+ \u25cc\u17d2 + \u179f + \u25cc \u17b8= \u17a0\u17ca\u17b8 = (\u17a0, \u25cc,\u17ca \u25cc\u17d2, \u179f, \u25cc)\u17b8\n(2) \u17a0 + \u25cc\u17d2 + \u179f + \u25cc \u17ca+ \u25cc \u17b8= \u17a0 y\u17b8 = (\u17a0, \u25cc\u17d2, \u179f, \u25cc,\u17ca \u25cc)\u17b8\n(3) \u17a0 + \u25cc\u17d2 + \u179f + \u25cc \u17c9+ \u25cc \u17b8= \u17a0\u17c9 = (\u17a0, \u25cc\u17d2, \u179f, \u25cc,\u17c9 \u25cc)\u17b8\nThe typing way (3) has the same morpheme with (1) and (2) but misspelled. In this phase, (2) was transferred into (1) and replace the character \u25cc\u17c9\u17c9 \u17c9 \u17c9in (3) into \u25cc\u17ca\u17ca \u17ca \u17cafor the correct spelling.\nHandling different consonant leg sign in syllable but identical morpheme and different meaning The combination of the sub-consonant \u178f or \u178a with the consonant leg sign \u25cc\u17d2\u17d2\u17d2\u17d2 can form one\nmorpheme but different meanings. For example:\n(1) \u25cc\u17d2 + \u178f = \u25cc| (subconsonant \u178f)\n(2) \u25cc\u17d2 + \u178a = \u25cc (subconsonant \u178a)\nThe morphemes in (1) with subconsonant \u178f and in (2) with sub-consonant \u178a are the same. This\nphase changes sub-consonant signs follow the principle: if the main consonant is \u178e then the sub-\nconsonant is \u178a ; conversely, if the main consonant is not \u178a, use sub-consonant \u178f."}, {"heading": "3.2.3. Assigning position label for all component clusters", "text": "In general, each entry of LDB has the form: W = A1A2... Am where Ai, i=1..m, is a syllable, m\u22651 Ai = C1C2 ... Ck where Cj, j=1..k, is a component cluster, k\u22651\nAccording to CC model, each syllable containing up to m=3 clusters, each cluster containing up to k\u22651 characters (consonants, vowels or signs). There are no marks to identify each syllable Ai, i=1..m in the entry W. It is necessary to find the beginning position and the end position of Ai which can contain k clusters Cj, j=1..k, need to exactly locate. Assuming tj is the label to assign location for each cluster Cj. There are 4 types of labels as follow::\nLL Assigned to the left cluster of the syllable; a new syllable can be appear when combined this cluster with its right clusters. RR Assigned to the right cluster of the syllable; a new syllable can be appear when combined this cluster with its left clusters. MM Assigned to center cluster of syllable. LR In case of being independent syllable.\nThe determination of the position of each component cluster in syllable to assign labels uses three supplementary DB (3), (4) and (5). Here (3) contain all their characteristics. Assuming (Cj\np) specify the characteristic of Cj, where p\u2208{-2, -1, 0, 1, 2}, there are 5 cases occurred for Cj as follow:\n(Cj 0) : Cj is the courrent cluster. (Cj -1) : The left cluster of Cj. (Cj -2) : The left cluster of (Cj\n-1). (Cj\n1) : The right cluster of Cj. (Cj 2) : The right cluster of (Cj 1).\nSo, the labeling for location of component cluster from (Cj0) can adding 4 possibilities:\n(Cj -2 , Cj -1), (Cj -1 , Cj 1), (Cj 1 , Cj 2), (Cj -2Cj -1 , Cj 1Cj 2) The training database (TDB), named (4), contain the selected syllables combined from all overlapping component clusters causing the ambiguity. For example, the syllable \u1782\u179a\u1799 (percent)\ncontaining \u1782 and \u179a\u1799 is updated in (4), because this two clusters are overlapping ambiguity and\nexisting in the TDB. The DB (5) treat the case of consecutive clusters which do not contain characteristic signs to identify syllable. Here (5) contains all the component clusters appearing in DB (2) but not existing in the TDB (4). From the DB (2) containing all the component clusters, it is need to search all items having maximum two clusters satisfying the syllable model SC, or CC. If the item just is a cluster, it is labelled in left and right. After that, this item is updated into labelled cluster DB (6). It is true of the cluster C-1C0C1 has no distinctive signs to identify syllable. So, from (5), it can be manually labelled C1(LL), C0(RR), C1(LR) or C1(LR), C0(LL), C1(RR) and then updated into (6). The TABLE X. following illustrates the labeling for the component cluster divided from an entry:"}, {"heading": "3.2.4. Identifying the syllable limits", "text": "Matching cluster using the training database\nIf the process of labeling find out ambiguous cluster occurs, the identify system match this cluster with data of TDB (4). All any found reasonable clusters are transfered into syllables limits based on the position label of the cluster in syllables. For example, the syllable \u178f\u1798\u1780 (xxx) is divides into\nthree clusters causing ambiguity and can be labelled \u178f(LL), \u1798(RR), \u1780(LR) or \u178f(LR), \u1798(LL), \u1780(RR). If\nthe system cannot found the characteristic signs to identify syllable, use (5) to conduct the matching. Combining the position labels\nAfter all clusters Cj in each each syllable Ai have been labelled the corresponding position, the system combine all the assigned labels to form a complete syllable. And then, this syllable Ai is updated into final Khmer SDB (7). In result display, system put a separator | between two consecutive syllables. Such as the above TABLE X. show that the entry \u179c \u1791 \u179f|\u1780\u17bb\u1796\u17c6 \u1791\u17d0\u179a (combining 8\nclusters) is divided into 5 syllables: \u179c \u1791 | \u179f| | \u1780\u17bb \u17c6| \u1796 | \u1791\u17d0\u179a to be updated into (7)."}, {"heading": "3.2.5. Completing the syllable database", "text": "At first, the content of (7) consists of all the syllables of (6). The process of updating is performed after the labeling position for all component clusters and the determination of the syllable limits using (5) are done. The TABLE XI. below shows in result the syllables divided from some of the entries in LDB (1) are totally updated into (7)."}, {"heading": "3.3. Assessment", "text": "After running the test on our PC system, we invite two Khmer experts who are currently teachingresearchers at the Tra Vinh University to test and assess the results independently. The evaluation is the calculus of percentage (%) of totally correct syllables updated into (7). The TABLE XII. give the assessment results of two experts offering.\nThe building of SDB (7) using two models SM and CM achieving convinced results. The percentage of automatic division is only correct at 92.3% for these two reasons. First, the LDB (1), some of the entries containing the words borrowed from Pali and Sanskrit do not have the Khmer syllable structure. In order to obtain better results, it is necessary to select all these borrowed words appearing in LDB (1) to correct manually according to the case used. After that, update all these results again into (1). On the other hand, the TDB (4) can not be served to automatically treat all the syllables recently appeared which can occur ambiguity. To solve this problem, it is necessary to increase the size of LDB (1) to extend the frequency of the syllables divided into component clusters in the initial TDB."}, {"heading": "4. CONCLUSION", "text": "The proposal for using two models SC and CC serving to build the SDB is feasible. The solution permit execute the process of the division of an entry from LDB (1) into component clusters stored in (2) with the necessary pretreatment step, labeling for their location using three specific DB from (3) to (5) and storing all the labelled clusters into temporary DB (6). After the final step, identifying the syllable limits from (6), the high precision of test results is really achieved, with the ability to resolve effective the ambiguity. The applying of this solution provide the ability to resolve effective the problem of WS from Khmer documents. This Khmer SDB is the first result, available, catering for more universal use for different purposes, solving not only WS problem, but also a some of other problems as spelling checking, document classification, document analysis, etc. This is a significant contribution for the process of Khmer language processing. The directions for further research in this domain is the continuation to improve the solution for the Khmer WS problem with the ability to treat thoroughly ambiguity for all text containing borrowed words, not purely text elements."}, {"heading": "ACKNOWLEDGEMENTS", "text": "This paper would not have been done if there were no supports from two experts on Khmer language in Tra Vinh University, Tang Van Thon and Nguyen Ngoc Chau, on checking the test results in our research. Please allow us to show our prondement thankful to these experts."}], "references": [{"title": "Khmer Language Grammar, First Edition of Royal Academic of Cambodia", "author": ["K. Sok"], "venue": null, "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2004}, {"title": "C\u00e1c ti\u1ebfp c\u1eadn t\u00e1ch t\u1eeb ti\u1ebfng Khmer d\u00f9ng trong c\u01a1 s\u1edf d\u1eef li\u1ec7u v\u0103n b\u1ea3n", "author": ["Ly Vattana"], "venue": "Ta\u0323p chi\u0301 Khoa ho\u0323c \u0110HQGHN, Khoa ho\u0323c Tu\u031b\u0323 nhie\u0302n va\u0300 Co\u0302ng nghe\u0323\u0302", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2011}, {"title": "Ch\u1eeb, V\u0169 \u0110\u1ee9c Nghi\u1ec7u, Ho\u00e0ng Tr\u1ecdng Phi\u1ebfn", "author": ["Mai Ng\u1ecdc"], "venue": "NXB Gia\u0301o du\u0323c", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1997}, {"title": "Khmer word segmentation based on bi-directional maximal matching for plaintext and microsoft word document. Asia-Pacific Signal and Information Processing", "author": ["Narin Bi", "Nguonly Taing"], "venue": "Association Annual Summit and Conference,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2014}, {"title": "Which units for acoustic and language modeling for Khmer automatic speech recognition. International Workshop on Spoken Languages Technologies for Under-Ressourced Languages (SLTU'08)", "author": ["Sopheap Seng", "Sethserey Sam", "Viet-Bac Le", "Brigitte Bigi", "Laurent Besacier"], "venue": null, "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2008}, {"title": "T\u00e1ch t\u1eeb ti\u1ebfng L\u00e0o s\u1eed d\u1ee5ng kho ng\u1eef v\u1ef1ng k\u1ebft h\u1ee3p v\u1edbi c\u00e1c \u0111\u1eb7c tr\u01b0ng ng\u1eef ph\u00e1p ti\u1ebfng L\u00e0o. H\u1ed9i th\u1ea3o qu\u1ed1c gia l\u1ea7n th\u1ee9 XVI, 14-15/11/2013", "author": ["Villavon Souksan", "Phan Huy Kh\u00e1nh"], "venue": "International Journal on Natural Language Computing (IJNLC)", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2013}, {"title": "Kh\u1eed b\u1ecf nh\u1eadp nh\u1eb1ng trong b\u00e0i to\u00e1n t\u00e1ch t\u1eeb ti\u1ebfng L\u00e0o", "author": ["Villavon Souksan", "Phan Huy Kh\u00e1nh"], "venue": "Ta\u0323p chi\u0301 Khoa ho\u0323c & Co\u0302ng nghe\u0323\u0302 \u0110H \u0110a\u0300 Na\u0306\u0303ng", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2013}, {"title": "Khmer Word (2015) Segmentation Using Conditional Random Fields", "author": ["Vichet Chea", "Ye Kyaw Thu", "Chenchen Ding", "Masao Utiyama", "Andrew Finch", "Eiichiro Sumita"], "venue": "In Khmer Natural Language Processing,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2015}, {"title": "Chinese Word Segmentation Based on Maximum Matching and Word Binding Force", "author": ["C. Chan P. Wong"], "venue": "Proceedings of Coling 96,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1996}, {"title": "C\u00e1c  ph\u01b0\u01a1ng ph\u00e1p t\u00e1ch t\u1eeb ti\u1ebfng Th\u00e1i, tr\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc Chulalongkorn, Th\u00e1i Land", "author": ["Paisarn Charoenpornsawat"], "venue": null, "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1998}, {"title": "Vietnamese Word Segmentation, pp", "author": ["Dinh Dien", "Hoang Kiem", "Nguyen Van Toan"], "venue": "The 6th Natural Language Processing Pacific Rim Symposium,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2001}, {"title": "Building an Annotated English-Vietnamese parallel Corpus", "author": ["Dien Dinh"], "venue": "MKS: A Journal of Southeast Asian Linguistics and Languages,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2005}, {"title": "C\u00e1ch phi\u00ean \u00e2m ch\u1eef Khmer theo Ng\u1eef \u00e2m ch\u1eef Vi\u1ec7t va C\u00e1ch phi\u00ean \u00e2m ch\u1eef Vi\u1ebft theo Ng\u1eef \u00e2m ch\u1eef Khmer\u201d, NXB V\u0103n h\u00f3a D\u00e2n t\u1ed9c", "author": ["Sang S\u1ebft"], "venue": null, "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2016}, {"title": "T\u1eeb v\u00e0 C\u00e1c ph\u01b0\u01a1ng th\u1ee9c c\u1ea5u t\u1ea1o t\u1eeb trong ti\u1ebfng Khmer, NXB Campuchia", "author": ["Chan Som Nop"], "venue": null, "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2010}], "referenceMentions": [{"referenceID": 1, "context": "Several methods have been proposed and familiar as the maximum matching method, finding the conditional random field, learning machine, support vector machines, hidden Markov models and so on [4][6][8][9].", "startOffset": 192, "endOffset": 195}, {"referenceID": 3, "context": "Several methods have been proposed and familiar as the maximum matching method, finding the conditional random field, learning machine, support vector machines, hidden Markov models and so on [4][6][8][9].", "startOffset": 195, "endOffset": 198}, {"referenceID": 5, "context": "Several methods have been proposed and familiar as the maximum matching method, finding the conditional random field, learning machine, support vector machines, hidden Markov models and so on [4][6][8][9].", "startOffset": 198, "endOffset": 201}, {"referenceID": 6, "context": "Several methods have been proposed and familiar as the maximum matching method, finding the conditional random field, learning machine, support vector machines, hidden Markov models and so on [4][6][8][9].", "startOffset": 201, "endOffset": 204}, {"referenceID": 0, "context": "There are many ways to syllable formation, causing the ambiguity in orthography and meanings [1][2][3][24].", "startOffset": 99, "endOffset": 102}, {"referenceID": 3, "context": "The second approach seeks to separate complete words (single or compound) in a sentence in three ways: basing on statistical frequency of the words, using existing vocabulary in a lexical database (LDB), or the combination of these both ways [6][7][10][11].", "startOffset": 242, "endOffset": 245}, {"referenceID": 4, "context": "The second approach seeks to separate complete words (single or compound) in a sentence in three ways: basing on statistical frequency of the words, using existing vocabulary in a lexical database (LDB), or the combination of these both ways [6][7][10][11].", "startOffset": 245, "endOffset": 248}, {"referenceID": 7, "context": "The second approach seeks to separate complete words (single or compound) in a sentence in three ways: basing on statistical frequency of the words, using existing vocabulary in a lexical database (LDB), or the combination of these both ways [6][7][10][11].", "startOffset": 248, "endOffset": 252}, {"referenceID": 5, "context": "In approach based on the words, an other method proposed is building graphs analyzing sentences [8].", "startOffset": 96, "endOffset": 99}, {"referenceID": 4, "context": "This method identifies new words by searching, analyzing lists which may correspond to the shortest paths on a graph [7].", "startOffset": 117, "endOffset": 120}, {"referenceID": 2, "context": "These languages are so far not virtually researched in the domain of natural language processing The Khmer language is monosyllable, voiceless (no dialcritical marks like Vietnamese, Laotian and Thai), borrowed from many languages, including Sanskrit, Thai, Cham, Chinese, Vietnamese, including France, Portugal [2][5].", "startOffset": 315, "endOffset": 318}, {"referenceID": 0, "context": "Only the consonant \u17a1 in voice O has not the leg sign, the 32 remaining consonants all have leg signs, dominant the syllable formation [1][3][7][14].", "startOffset": 137, "endOffset": 140}, {"referenceID": 4, "context": "Only the consonant \u17a1 in voice O has not the leg sign, the 32 remaining consonants all have leg signs, dominant the syllable formation [1][3][7][14].", "startOffset": 140, "endOffset": 143}, {"referenceID": 10, "context": "Only the consonant \u17a1 in voice O has not the leg sign, the 32 remaining consonants all have leg signs, dominant the syllable formation [1][3][7][14].", "startOffset": 143, "endOffset": 147}, {"referenceID": 9, "context": "7 dictionaries [13][14].", "startOffset": 15, "endOffset": 19}, {"referenceID": 10, "context": "7 dictionaries [13][14].", "startOffset": 19, "endOffset": 23}, {"referenceID": 8, "context": "Usually, there are two typing methods: normal typing and NIDA typing [12].", "startOffset": 69, "endOffset": 73}], "year": 2017, "abstractText": "Word segmentation is a basic problem in natural language processing. With the languages having the complex writing system like the Khmer language in Southern of Vietnam, this problem really very intractable, posing the significant challenges. Although there are some experts in Vietnam as well as international having deeply researched this problem, there are still no reasonable results meeting the demand, in particular, no treated thoroughly the ambiguous phenomenon, in the process of Khmer language processing so far. This paper present a solution based on the syllable division into component clusters using two syllable models proposed, thereby building a Khmer syllable database, is still not actually available. This method using a lexical database updated from the online Khmer dictionaries and some supported dictionaries serving role of training data and complementary linguistic characteristics. Each component cluster is labelled and located by the first and last letter to identify entirety a syllable. This approach is workable and the test results achieve high accuracy, eliminate the ambiguity, contribute to solving the problem of word segmentation and applying efficiency in Khmer language processing.", "creator": "PScript5.dll Version 5.2.2"}}}