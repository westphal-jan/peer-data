{"id": "1703.09902", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "29-Mar-2017", "title": "Survey of the State of the Art in Natural Language Generation: Core tasks, applications and evaluation", "abstract": "This newspapers economists with an in such the museums years Natural Language Generation (NLG ), considered as rest task of generating language one gave from non - linguistic frequencies. A department similar NLG entirely timely this it called the same fact through only being undergone few the bringing decade sometimes there, how time relation immediately washington (usually account - driven) methods, under rest taken new technology country NLG technology. This showing terms aims way (also) give made still - go - until synthesis in learning on set build tasks place NLG two the architectures adopted been. such require because organised; (b) particularly a among as relatively ongoing research topics that have ambiguities indeed came turned result from country synergies before NLG also various areas of artificial response; (35) break even to the problems in NLG assessments, illustrate because to well challenges clash while of areas of Natural Language Processing, having current demonstrate only usually recommendations methods and that relationships continues them.", "histories": [["v1", "Wed, 29 Mar 2017 06:51:00 GMT  (3455kb,D)", "http://arxiv.org/abs/1703.09902v1", "111 pages, 8 figures, 2 tables"]], "COMMENTS": "111 pages, 8 figures, 2 tables", "reviews": [], "SUBJECTS": "cs.CL cs.AI cs.NE", "authors": ["albert gatt", "emiel krahmer"], "accepted": false, "id": "1703.09902"}, "pdf": {"name": "1703.09902.pdf", "metadata": {"source": "CRF", "title": "Survey of the State of the Art in Natural Language Generation: Core tasks, applications and evaluation", "authors": ["Albert Gatt"], "emails": ["albert.gatt@um.edu.mt", "e.j.krahmer@tilburguniversity.edu"], "sections": [{"heading": null, "text": "ar X\niv :1\n70 3.\n09 90\n2v 1\nContents"}, {"heading": "1 Introduction 4", "text": "1.1 What is Natural Language Generation? . . . . . . . . . . . . . . 6 1.2 Why a survey on Natural Language Generation? . . . . . . . . . 7 1.3 Goals of this survey . . . . . . . . . . . . . . . . . . . . . . . . . 8"}, {"heading": "2 NLG Tasks 9", "text": "2.1 Content determination . . . . . . . . . . . . . . . . . . . . . . . . 10 2.2 Text structuring . . . . . . . . . . . . . . . . . . . . . . . . . . . 11 2.3 Sentence aggregation . . . . . . . . . . . . . . . . . . . . . . . . . 12 2.4 Lexicalisation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14 2.5 Referring expression generation . . . . . . . . . . . . . . . . . . . 15 2.6 Linguistic realisation . . . . . . . . . . . . . . . . . . . . . . . . . 18\n2.6.1 Templates . . . . . . . . . . . . . . . . . . . . . . . . . . . 19 2.6.2 Hand-coded grammar-based systems . . . . . . . . . . . . 19 2.6.3 Statistical approaches . . . . . . . . . . . . . . . . . . . . 20\n2.7 Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21"}, {"heading": "3 NLG Architectures and Approaches 21", "text": "3.1 Rule-based, modular approaches . . . . . . . . . . . . . . . . . . 22 3.2 Planning-based approaches . . . . . . . . . . . . . . . . . . . . . 25\n3.2.1 Planning through the grammar . . . . . . . . . . . . . . . 26 3.2.2 Stochastic planning under uncertainty using Reinforce-\nment Learning . . . . . . . . . . . . . . . . . . . . . . . . 28 3.3 Data-driven approaches . . . . . . . . . . . . . . . . . . . . . . . 29\n3.3.1 Acquiring data . . . . . . . . . . . . . . . . . . . . . . . . 30 3.3.2 NLG based on language models . . . . . . . . . . . . . . . 31 3.3.3 NLG as classification and optimisation . . . . . . . . . . . 33 3.3.4 NLG as \u2018parsing\u2019 . . . . . . . . . . . . . . . . . . . . . . . 35 3.3.5 Deep learning methods . . . . . . . . . . . . . . . . . . . . 37\n3.4 Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39"}, {"heading": "4 The vision-language interface: Image captioning and beyond 40", "text": "4.1 Data . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 41 4.2 The core tasks . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42\n4.2.1 Image analysis . . . . . . . . . . . . . . . . . . . . . . . . 42 4.2.2 Text generation or retrieval . . . . . . . . . . . . . . . . . 43\n4.3 How is language grounded in visual data? . . . . . . . . . . . . . 45 4.4 Vision and language: Current and future directions for NLG . . . 46"}, {"heading": "5 Variation: Generating text with style, personality and affect 47", "text": "5.1 Generating with style: textual variation and personality . . . . . 48 5.2 Generating with feeling: affect and politeness . . . . . . . . . . . 50 5.3 Style and affect: concluding remarks . . . . . . . . . . . . . . . . 52"}, {"heading": "6 Generating creative and entertaining text 53", "text": "6.1 Generating puns and jokes . . . . . . . . . . . . . . . . . . . . . . 54 6.2 Generating metaphors and similes . . . . . . . . . . . . . . . . . 55 6.3 Generating narratives . . . . . . . . . . . . . . . . . . . . . . . . 57 6.4 Generating creative language: Concluding remarks . . . . . . . . 61"}, {"heading": "7 Evaluation 61", "text": "7.1 Intrinsic methods . . . . . . . . . . . . . . . . . . . . . . . . . . . 63\n7.1.1 Subjective (human) judgements . . . . . . . . . . . . . . . 63 7.1.2 Objective humanlikeness measures using corpora . . . . . 65 7.1.3 Evaluating genre compatibility . . . . . . . . . . . . . . . 67\n7.2 Extrinsic evaluation methods . . . . . . . . . . . . . . . . . . . . 68 7.3 Black box vs glass box evaluation . . . . . . . . . . . . . . . . . . 69 7.4 On the relationship between evaluation methods . . . . . . . . . 70\n7.4.1 Metrics versus human judgements . . . . . . . . . . . . . 70 7.4.2 Using controlled experiments . . . . . . . . . . . . . . . . 73\n7.5 Evaluation: Concluding remarks . . . . . . . . . . . . . . . . . . 73"}, {"heading": "8 Discussion and future directions 74", "text": "8.1 Why (and how) should NLG be used? . . . . . . . . . . . . . . . 75 8.2 NLG isn\u2019t about text-to-text. . . or is it? . . . . . . . . . . . . . . 75 8.3 Theories and models in search of applications? . . . . . . . . . . 76 8.4 Where do we go from here? . . . . . . . . . . . . . . . . . . . . . 77"}, {"heading": "9 Conclusion 79", "text": "References 79"}, {"heading": "1 Introduction", "text": "In his intriguing story The Library of Babel (La biblioteca de Babel , 1941), Jorge Luis Borges describes a library in which every conceivable book can be found. It is probably the wrong question to ask, but readers cannot help wondering: who wrote all these books? Surely, this could not be the work of human authors? The emergence of automatic text generation techniques in recent years provides an interesting twist to this question. Consider Philip M. Parker, who offered more than 100.000 books for sale via Amazon.com, including for example his The 2007-2012 Outlook for Tufted Washable Scatter Rugs, Bathmats, and Sets That Measure 6-Feet by 9-Feet or Smaller in India Obviously, Parker did not write these 100,000 books by hand. Rather, he used a computer program that collects publicly available information, possibly packaged in human-written texts, and compiles these into a book. Just like the library of Babel contains many books that are unlikely to appeal to a broad audience, Parker\u2019s books need not find many readers. In fact, even if only a small percentage of his books get sold a few times, this would still make him a sizeable profit.\nParker\u2019s algorithm can be seen to belong to a research tradition of so-called text-to-text generation methods, applications that take existing texts as their input, and automatically produce a new, coherent text as output. Other example applications that generate new texts from existing (usually humanwritten) text include:\n\u2022 fusion and summarization of related sentences or texts to make them more concise (e.g., Clarke & Lapata, 2010);\n\u2022 simplification of complex texts, for example to make them more accessible for low-literacy readers (e.g., Siddharthan, 2014) or for children (Macdonald & Siddharthan, 2016);\n\u2022 automatic spelling, grammar and text correction (e.g., Kukich, 1992; Dale et al., 2012);\n\u2022 automatic generation of peer reviews for scientific papers (Bartoli et al., 2016);\n\u2022 generation of paraphrases of input sentences (e.g., Bannard & CallisonBurch, 2005; Kauchak & Barzilay, 2006); and\n\u2022 automatic generation of questions, for educational and other purposes (e.g., Brown et al., 2005; Rus et al., 2010).\nOften, however, it is necessary to generate texts which are not grounded in existing ones. Consider, as a case in point, the minor earthquake that took place close to Beverly Hills, California on March 17, 2014. The Los Angeles Times was the first newspaper to report it, within 3 minutes of the event, providing details about the time, location and strength of the quake. This report was automatically generated by a \u2018robo-journalist\u2019, which converted the\nincoming automatically registered earthquake data into a text, by filling gaps in a predefined template text.1\nRobo-journalism and associated practices, such as data journalism, are simple examples of what is usually referred to as data-to-text generation. They have had a considerable impact in the fields of journalism and media studies (van Dalen, 2012; Clerwall, 2014; Hermida, 2015). The technique used by the Los Angeles Times was not new; many applications have been developed over the years which automatically generate text from non-linguistic data including, but not limited to, systems which produce:\n\u2022 soccer reports (e.g., Theune et al., 2001; Chen & Mooney, 2008);\n\u2022 virtual \u2018newspapers\u2019 from sensor data (Molina et al., 2011);\n\u2022 textual descriptions of the day-to-day lives of birds based on satellite data (Siddharthan et al., 2013);\n\u2022 weather and financial reports (Goldberg et al., 1994; Reiter et al., 2005; Turner et al., 2008; Ramos-Soto et al., 2015; Wanner et al., 2015; Plachouras et al., 2016);\n\u2022 summaries of patient information in clinical contexts (Hu\u0308ske-Kraus, 2003; Harris, 2008; Portet et al., 2009; Gatt et al., 2009; Banaee et al., 2013);\n\u2022 interactive information about cultural artefacts, for example in a museum context (e.g., O\u2019Donnell, 2001; Stock et al., 2007); and\n\u2022 text intended to persuade (Carenini & Moore, 2006) or motivate behaviour modification (Reiter et al., 2003).\nThese systems may differ considerably in the quality and variety of the texts they produce, their commercial viability and the sophistication of the underlying methods, but all are examples of data-to-text generation. Many of the systems mentioned above focus on imparting information to user. On the other hand, as shown by the examples cited above of systems focussed on persuasion or behaviour change, informing need not be the exclusive goal of nlg. Nor is it a trivial goal in itself, since in order to successfully impart information, a system needs to select what to say, distinguishing it from what can be easily inferred (possibly also depending on the target user), before expessing it coherently.\nGenerated texts need not have a large audience. There is no need to automatically generate a report of, say, the Champions League European football final, which is covered by many of the best journalists in the field anyway. However, there are many other games, less important to the general public (but presumably very important to the parties involved). Typically, all sports statistics (who played?, who scored? etc.) for these games are stored, but such statistics are not\n1See http://www.slate.com/blogs/future_tense/2014/03/17/quakebot_los_angeles_ times_robot_journalist_writes_article_on_la_earthquake.html.\nas a rule perused by sport-reporters. Companies like Narrative Science2 fill this niche by automatically generating sport reports for these games. Automated Insights3 even generates reports based on user-provided \u2018fantasy football\u2019 data. In a similar vein, the automatic generation of weather forecasts for offshore oil platforms (Sripada et al., 2003), or from sensors monitoring the performance of gas turbines (Yu et al., 2006), has proven to be a fruitful application of data-totext techniques. Such bespoke applications are now the mainstay of companies like Arria-NLG.4\nTaking this idea one step further, data-to-text generation paves the way for tailoring texts to specific audiences. For example, data from babies in neonatal care can be converted into text differently, with different levels of technical detail and explanatory language, depending on whether the intended reader is a doctor, a nurse or a parent (Mahamood & Reiter, 2011). One could also easily imagine that different sport reports are generated for fans of the respective teams; the winning goal of one team is likely to be considered a lucky one from the perspective of the losing team, irrespective of its \u2018objective\u2019 qualities. A human journalist would not dream of writing separate reports about a sports match (if only for lack of time), but for a computer this is not an issue and this is likely to be appreciated by a reader who receives a more personally appropriate report."}, {"heading": "1.1 What is Natural Language Generation?", "text": "Both text-to-text generation and data-to-text generation are instances of Natural Language Generation (nlg). In the most widely-cited survey of nlg methods to date (Reiter & Dale, 1997, 2000), nlg is characterized as \u2018the subfield of artificial intelligence and computational linguistics that is concerned with the construction of computer systems than can produce understandable texts in English or other human languages from some underlying non-linguistic representation of information\u2019 (Reiter & Dale, 1997, p.1). Clearly this definition fits data-to-text generation better than text-to-text generation, and indeed Reiter and Dale (2000) focus exclusively on the former, helpfully and clearly describing the rule-based approaches that dominated the field at the time.\nIt has been pointed out that precisely defining nlg is rather difficult (e.g., Evans et al., 2002): everybody seems to agree on what the output of an nlg system should be (text), but what the exact input is can vary substantially (McDonald, 1993). A further complication is that the boundaries between different approaches are themselves blurred. For example, text summarisation was characterized above as a text-to-text application; this is clear for so called \u2018extractive\u2019 summarizers (which produce summaries using sentences from source documents). However, \u2018abstractive\u2019 summarizers (which generate sentences not present in any of the source documents) increasingly rely on techniques which are also used in data-to-text, as when opinions are extracted from reviews and\n2https://www.narrativescience.com 3https://automatedinsights.com 4http://www.arria.com\nexpressed in completely new sentences (e.g., Labbe\u0301 & Portet, 2012). Conversely, a data-to-text generation system could conceivably rely on text-to-text generation techniques for learning how to express pieces of data in different or creative ways (McIntyre & Lapata, 2009; Gatt et al., 2009; Kondadadi et al., 2013).\nConsidering other applications of nlg similarly highlights how blurred boundaries can get. For example, the generation of spoken utterances in dialogue systems (e.g., Walker et al., 2007a; Rieser & Lemon, 2009; Dethlefs, 2014) is another application of nlg, but typically it is closely related to dialogue management, so that management and realisation policies are sometimes learned in tandem (e.g., Rieser & Lemon, 2011b). Even what constitutes \u2018a non-linguistic representation of information\u2019 in the context of data-to-text is subject to change: traditionally, this was taken to be database or logically structured information, but in recent times there has been an increased interest in using visual data as input, resulting in so-called vision-to-text systems which automatically produce descriptions of static or moving images based on computer vision input (e.g., Mitchell et al., 2012; Kulkarni et al., 2013; Thomason et al., 2014, among many others)."}, {"heading": "1.2 Why a survey on Natural Language Generation?", "text": "Arguably Reiter and Dale (2000) is still the most complete available survey of nlg and the most cited. However, the field of nlg has changed drastically in the last 15 years, with the emergence of successful applications generating tailored reports for specific audiences, and with the emergence of text-to-text as well as vision-to-text generation applications, which also tend to rely more on statistical methods than traditional data-to-text. None of these are covered in Reiter and Dale (2000). Also notably absent are discussions of applications that move beyond standard, \u2018factual\u2019 text generation, such as those that account for personality and affect, or creative text such as metaphors and narratives. Finally, a striking omission by Reiter and Dale (2000) is the lack of discussion of evaluation methodology. Indeed, evaluation of nlg output has only recently started to receive systematic attention, in part due to a number of shared tasks that were conducted within the nlg community.\nSince Reiter and Dale (2000), various other nlg overview texts have also appeared. Bateman and Zock (2005) covers the cognitive, social and computational dimensions of nlg. McDonald (2010) offers a general characterization of nlg as \u2018the process by which thought is rendered into language\u2019 (p. 121). Wanner (2010) zooms in on automatic generation of reports, while Di Eugenio and Green (2010) looks at specific applications, especially in education and health-care. Various specialized collections of articles have also been published, including Krahmer and Theune (2010), which targets data-driven approaches; and Bangalore and Stent (2014) which focusses on interactive systems. The web offers various unpublished technical reports, such as Theune (2003), which surveys dialogue systems, and Piwek (2003) and Belz (2003) on affective nlg. While useful, these resources do not discuss recent developments or offer a comprehensive review. This indicates that a new state-of-the-art survey is highly\ntimely."}, {"heading": "1.3 Goals of this survey", "text": "The goal of the current paper is to present a comprehensive overview of nlg developments since 2000, both in order to provide nlg researchers with a synthesis and pointers to relevant research, and to introduce the field to researchers who are less familiar with nlg. Though nlg has been a part of ai and nlp from the early days (see e.g., Winograd, 1972; Appelt, 1985), as a field it has arguably not been fully embraced by these broader communities, and has only recently began to take full advantage of recent advances in data-driven, machine learning and deep learning approaches.\nAs in Reiter and Dale (2000), our main focus, especially in the first part of the survey, will be on data-to-text generation. In any case, doing full justice to recent developments in the various text-to-text generation applications is beyond the scope of a single survey, and many of these are covered in other individual surveys, including Mani (2001) and Nenkova and McKeown (2011) for summarisation; Androutsopoulos and Malakasiotis (2010) for paraphrasing; and Piwek and Boyer (2012) for automatic question generation. However, we will in various places discuss connections between data-to-text and text-to-text generation, both because \u2013 as noted above \u2013 the boundaries are blurred, but also, and perhaps more importantly, because text-to-text systems have long been couched in the data-driven frameworks that are becoming increasingly popular in data-to-text generation, also giving rise to some hybrid systems that combine rule-bused and statistical techniques (e.g., Kondadadi et al., 2013).\nOur review will start with an updated overview of the core nlg tasks that were introduced in Reiter and Dale (2000), followed by a discussion of architectures and approaches, where we pay special attention to those not covered in the Reiter and Dale (2000) survey. These two sections constitute the \u2018core\u2019 part of the survey. Beyond these, we highlight several new developments, including approaches where the input data is visual; and research aimed at generating more varied, engaging or creative and entertaining texts, taking nlg beyond the factual, repetitive texts it is sometimes accused of producing. We believe that these applications are not only interesting in themselves, but may also inform more \u2019utility\u2019-driven text generation application. For example, by including insights from narrative generation we may be able to generate more engaging reports and by including insights from metaphor generation we may be able to phrase information in these reports in a more original manner. Finally, we will discuss recent developments in evaluation of natural language generation applications.\nIn short, the goals of this survey are:\n\u2022 To give an up-to-date synthesis of research on the core tasks in nlg, as well as the architectures adopted in the field, especially in view of recent developments exploiting data-driven techniques (Sections 2 and 3);\n\u2022 To highlight a number of relatively recent research issues that have arisen partly as a result of growing synergies between nlg and other areas of\nartificial intelligence, such as computer vision, stylistics and computational creativity (Sections 4, 5 and 6);\n\u2022 To draw attention to the challenges in nlg evaluation, relating them to similar challenges faced in other areas of nlp, with an emphasis on different evaluation methods and the relationships between them (Section 7)."}, {"heading": "2 NLG Tasks", "text": "Traditionally, the nlg problem of converting input data into output text was addressed by splitting it up into a number of subproblems. The following six are frequently found in many nlg systems (Reiter & Dale, 1997, 2000); their role is illustrated in Figure 1:\n1. Content determination: Deciding which information to include in the text under construction,\n2. Text structuring : Determining in which order information will be presented in the text,\n3. Sentence aggregation: Deciding which information to present in individual sentences,\n4. Lexicalisation: Finding the right words and phrases to express information,\n5. Referring expression generation: Selecting the words and phrases to identify domain objects,\n6. Linguistic realisation: Combining all words and phrases into well-formed sentences.\nThese tasks could be thought of in terms of early decision processes (which information to convey to the reader?) to late ones (which words to use in a particular sentence, and how to put them in their correct order?). This characterization reflects a long-running distinction in nlg between strategy and tactics (a distinction that goes back at least to Thompson, 1977). This distinction also suggests a temporal order in which the tasks are executed, at least in systems with a modular, pipeline architecture (discussed in Section 3.1): for example, the system first needs to decide which input data to express in the text, before it can order information for presentation. However, such ordering of modules is nowadays increasingly put into question in the data-driven architectures discussed below (Section 3). Here, we refer to \u2018early\u2019 and \u2018late\u2019 tasks by way of distinguishing between choices that are more oriented towards the data (such as what to say) and choices that are of an increasingly linguistic nature (e.g., lexicalisation, or realisation).\nIn this section, we briefly describe these six tasks, illustrating them with examples, and highlight recent developments in each case. As we shall see,\nwhile the \u2018early\u2019 tasks are crucial for the development of nlg systems, they are often intimately connected to the specific application. By contrast, \u2018late\u2019 tasks are more often investigated independently of an application, and hence have resulted in approaches that can be shared between applications."}, {"heading": "2.1 Content determination", "text": "As a first step in the generation process, the nlg system needs to decide which information should be included in the text under construction, and which should not. Typically, more information is contained in data than we want to convey through text, or the data is more detailed than we care to express in text. This is clear in Figure 1a, where the input signal \u2013 a patient\u2019s heart rate \u2013 only contains a few patterns of interest. Selection may also depend on the target audience (e.g. does it consist of experts or novices, for example) and on the overall communicative intention (e.g. should the text inform the reader or convince him to do something).\nContent determination involves choice. In a soccer report, we may not want to verbalise each pass and foul committed, even though the data may contain this information. In the case of neonatal care, data might be collected continuously from sensors measuring heart rate, blood pressure and other physiological parameters. Data thus needs to be filtered and abstracted into a set of preverbal messages, semantic representations of information which are often expressed in a formal representation language, such as logical or database languages, attribute-value matrices or graph structures. They can express, among other things, which relations hold between which domain entities, for example, expressing that player X scored the first goal for team Y at time T.\nThough content determination is present in most nlg systems (cf. Mellish et al., 2006), approaches are typically closely related to the domain of applica-\ntion. A notable exception is Guhe (2007), an incremental account of content determination based on studies of speakers\u2019 descriptions of dynamic events as they unfold. This work belongs to a strand of research which considers nlg first and foremost as a methodology eminently suitable for understanding human language production.\nIn recent years, researchers have started exploring data-driven techniques for content determination ((see e.g., Barzilay & Lee, 2004; Bouayad-Agha et al., 2013; Kutlak et al., 2013; Venigalla & Di Eugenio, 2013). Barzilay and Lee (2004), for example, used hidden markov models to model topic shifts in a particular domain of discourse (say, earthquake reports), where the hidden states represented \u2018topics\u2019, modelled as sentences clustered together by similarity. A clustering approach was also used by Duboue and McKeown (2003) in the biography domain, using texts paired with a knowledge base, from which semantic data was clustered and scored according to its occurrence in text. In a similar vein Barzilay and Lapata (2005) use a database of American football records and corresponding text. Their aim was not only to identify bits of information that should be mentioned, but also dependencies between them, since mentioning a certain event (say, a score by a quarterback) may warrant the mention of another (say, another scoring event by a second quarterback). The solution proposed by Barzilay and Lapata was to compute both individual preference scores for events, and a link preference score.\nMore recently, various researchers have addressed the question of how to automatically learn alignments between data and text, also in the broader context of grounded language acquisition, i.e., modelling how we learn language by looking at correspondences between objects and events in the world and the way we refer to them in language (Roy, 2002; Yu & Ballard, 2004; Yu & Siskind, 2013). For example, Liang et al. (2009) extended the work by Barzilay and Lapata (2005) to multiple domains (soccer and weather), relying on weakly supervised techniques; in a similar vein, Koncel-Kedziorski et al. (2014) presented a weakly supervised multilevel approach, to deal with the fact that there is no one-to-one correspondence between, for example, soccer events in data and sentences in associated soccer reports. We shall return to these methods as part of a broader discussion of data-driven approaches below (Section 3.3)."}, {"heading": "2.2 Text structuring", "text": "Having determined what messages to convey, the nlg system needs to decide on their order of presentation to the reader. For example, Figure 1b shows three events of the same type (all bradycardia events, that is, brief drops in heart rate), selected (after abstraction) from the input signal and ordered as a temporal sequence.\nThis stage is often referred to as text (or discourse or document) structuring. In the case of the soccer domain, for example, it seems reasonable to start with general information (where and when the game was played, how many people attended, etc.), before the goals are described, typically in temporal order. In the neonatal care domain, a temporal order can be imposed among specific\nevents, as in Figure 1b, but larger spans of text may reflect ordering based on importance, and grouping of information based on relatedness (e.g. all events related to a patient\u2019s respiration) (Portet et al., 2009). Naturally, alternative discourse relations may exist between separate messages, such as contrasts or elaborations. The result of this stage is a discourse, text or document plan, which is a structured and ordered representation of messages.\nThese examples again imply that the application domain imposes constraints on ordering preferences. Early approaches, such as McKeown (1985), often relied on hand-crafted, domain-dependent structuring rules (which McKeown called schemata). To account for discourse relations between messages, researchers have alternatively relied on Rhetorical Structure Theory (rst; e.g., Mann & Thompson, 1988; Scott & Sieckenius de Souza, 1990; Hovy, 1993), which also typically involved domain-specific rules. For example, Williams and Reiter (2008) used rst relations to identify ordering among messages that would maximise clarity to low-skilled readers.\nVarious researchers have explored the possibilities of using machine learning techniques for document structuring (e.g., Dimitromanolaki & Androutsopoulos, 2003), sometimes doing this in tandem with content selection (Duboue & McKeown, 2003). General approaches for information ordering (Barzilay & Lee, 2004; Lapata, 2006) have been proposed, which automatically try to find an optimal ordering of \u2018information-bearing items\u2019. These approaches can be applied to text structuring, where the items to be ordered are typically preverbal messages; however, they can also be applied in (multidocument) summarisation, where the items to be ordered are sentences from the input documents which are judged to be summary-worthy enough to include (e.g., Barzilay et al., 2002; Bollegala et al., 2010)."}, {"heading": "2.3 Sentence aggregation", "text": "Not every message in the text plan needs to be expressed in a separate sentence; by combining multiple messages into a single sentence, the generated text becomes potentially more fluid and readable (e.g., Dalianis, 1999; Cheng & Mellish, 2000), although there are also situations where it has been argued that aggregation should be avoided (discussed in Section 5.2). For instance, the three events selected in Figure 1b are shown as \u2018merged\u2019 into a single pre-linguistic representation, which will be mapped to a single sentence. The process by which related messages are grouped together in sentences is known as sentence aggregation.\nTo take another example, from the soccer domain, one (unaggregated) way to describe the fastest hat-trick in the English Premier League would be:\n(1) Sadio Mane scored for Southampton after 12 minutes and 22 seconds.\n(2) Sadio Mane scored for Southampton after 13 minutes and 46 seconds.\n(3) Sadio Mane scored for Southampton after 15 minutes and 18 seconds.\nClearly, this is rather redundant, not very concise or coherent, and generally unpleasant to read. An aggregated alternative, such as the following, would therefore be preferred:\n(4) Sadio Mane scored three times for Southampton in less than three minutes.\nIn general, aggregation is difficult to define, and has been interpreted in various ways, ranging from redundancy elimination to linguistic structure combination. Reape and Mellish (1999) offer an early survey, distinguishing between aggregation at the semantic level (as illustrated in Figure 1c) and at the level of syntax, illustrated in the transition from (2.3) to (4) above.\nIt is probably fair to say that much early work on aggregation was strongly domain-dependent. This work focussed on domain- and application-specific rules (e.g. \u2018if a player scores two consecutive goals, describe these in the same sentence\u2019), that were typically hand-crafted (e.g., Hovy, 1988; Dalianis, 1999; Shaw, 1998). Once again, more recent work has evinced a turn towards data-driven approaches, where aggregation rules are acquired from corpus data (e.g., Walker et al., 2001; Cheng & Mellish, 2000). Barzilay and Lapata (2006) present a system that learns how to aggregate on the basis of a parellel corpus of sentences and corresponding database entries, by looking for similarities between entries. As was the case with the content selection method of Barzilay and Lapata (2005), Barzilay and Lapata (2006) view the problem in terms of global optimisation: an initial classification is done over pairs of database entries which determines whether they should be aggregated or not on the basis of their pairwise similarity. Subsequently, a globally optimal set of linked entries is selected based on transitivity constraints (if \u3008ei, ej\u3009 and \u3008ej , ek\u3009 are linked, then so should \u3008ei, ek\u3009) and global constraints, such as how many sentences should be aggregated in a document. Global optimisation is cast in terms of Integer Linear Programming, a well-known mathematical optimization technique (e.g., Nemhauser & Wolsey, 1988).\nWith syntactic aggregation, it is arguably more feasible to define domainindependent rules to eliminate redundancy (Harbusch & Kempen, 2009; Kempen, 2009). For example, converting the first example into the second below\n(5) Sadio Mane scored in the 12th minute and he scored again in the 13th minute.\n(6) Sadio Mane scored in the 12th minute and again in the 13th.\ncould be achieved by identifying the parallel verb phrases in the two conjoined sentences and eliding the subject and verb in the second. Recent work has explored the possibility of acquiring such rules from corpora automatically. For example, Stent and Molina (2009) describe an approach to the acquisition of sentence-combining rules from a discourse treebank, which are then incorporated into the sparky sentence planner described by Walker et al. (2007b). A more general approach to the same problem is discussed by White and Howcroft (2015).\nArguably, aggregation on the syntactic level can only account for relatively small reductions, compared to aggregation at the level of messages. Furthermore, syntactic aggregation assumes that the sentence planning process (which includes lexicalisation) is complete. Hence, while traditional approaches to nlg view aggregation as part of sentence planning, which occurs prior to syntactic realisation, the validity of this claim depends on the type of aggregation being performed (see also Theune et al., 2006)."}, {"heading": "2.4 Lexicalisation", "text": "Once the content of the sentence has been finalised, possibly also as a result of aggregation at the message level, the system can start converting it into natural language. In our example (Figure 1c), the outcome of aggregation and lexicalisation are shown together: here, the three events have been grouped, and mapped to a representation that includes a verb (be) and its arguments, though the arguments themselves still have to be rendered in a referring expression (see below). This reflects an important decision, namely, which words or phrases to use to express the messages\u2019 building blocks. A complication is that often a single event can be expressed in natural language in many different ways. A scoring event in a soccer match, for example, can be expressed as \u2018to score a goal\u2019, \u2018to have a goal noted\u2019, \u2018to put the ball in the net\u2019, among many others.\nThe complexity of this lexicalisation process critically depends on the number of alternatives that the nlg system can entertain. Often, contextual constraints play an important role here as well: if the aim is to generate texts with a certain amount of variation (e.g., Theune et al., 2001), the system can decide to randomly select a lexicalisation option from a set of alternatives (perhaps even from a set of alternatives not used earlier in the text). However, stylistic constraints come into play: \u2018to score a goal\u2019 is an unfortunate way of expressing an own goal, for example. In other applications, lexical choice may even be informed by other considerations, such as the attitude or affective stance towards the event in question (e.g., Fleischman & Hovy, 2002, and the discussion in Section 5). Whether or not nlg systems aim for variation in their output or not depends on the domain. For example, variation in soccer reports is presumably more appreciated by readers than variation in weather reports (on which see Reiter et al., 2005); it may also depend on where in a text the variation occurs (e.g., variation in expressing timestamps may be less appreciated than variation in referential forms, see e.g., Ferreira et al. (2016)).\nOne straightforward model for lexicalisation \u2013 the one assumed in Figure 1 \u2013 is to operate on preverbal messages, converting domain concepts directly into lexical items. This might be feasible in well-defined domains. More often, lexicalisation is harder, for at least two reasons (cf. Bangalore & Rambow, 2000): First, it can involve selection between semantically similar, near-synonymous or taxonomically related words (e.g. animal vs dog; Stede, 2000; Edmonds & Hirst, 2002). Second, it is not always straightforward to model lexicalisation in terms of a crisp concept-to-word mapping. One source of difficulty is vagueness, which arises, for example, with terms denoting properties that are gradable.\nFor example, selecting the adjectives \u2018wide\u2019 or \u2018tall\u2019 based on the dimensions of an entity requires the system to reason about the width or height of similar objects, perhaps using some standard of comparison (since a \u2018tall glass\u2019 is shorter than a \u2018short man\u2019; cf. Kennedy & McNally, 2005; van Deemter, 2012). A similar issue has been noted in the context of presenting numerical information, such as timestamps and quantities (Reiter et al., 2005; Power & Williams, 2012). For example, Reiter et al. (2005) discussed time expressions in the context of weather-forecast generation, pointing out that a timestamp 00:00 could be expressed as late evening, midnight, or simply evening (Reiter et al., 2005, p. 143). Not surprisingly, humans (including the professional forecasters that contributed to Reiter et al.\u2019s evaluation), show considerable variation in their lexical choices.\nIt is interesting to note that many issues related to lexicalisation have also been discussed in the psycholinguistic literature on lexical access (Levelt, 1989; Levelt et al., 1999). Among these is the question of how speakers home in on the right word and under what conditions they are liable to make errors, given that the mental lexicon is a densely connected network in which lexical items are connected at multiple levels (semantic, phonological, etc). This has also been a fruitful topic for computational modelling (e.g., Levelt et al., 1999). In contrast to cognitive modelling approaches, however, research in nlg increasingly views lexicalisation as part of surface realisation (discussed below) (a similar observation is made by Mellish & Dale, 1998, p.351). A fundamental contribution in this context is by Elhadad et al. (1997), who describe a unification-based approach, unifying conceptual representations (i.e., preverbal messages) with grammar rules encoding lexical as well as syntactic choices."}, {"heading": "2.5 Referring expression generation", "text": "Referring Expression Generation (reg) is characterised by Reiter and Dale (1997, p.11) as \u2018the task of selecting words or phrases to identify domain entities\u2019. This characterisation suggests a close similarity to lexicalisation, but Reiter and Dale (2000) point out that the essential difference is that referring expression generation is a \u2018discrimination task, where the system needs to communicate sufficient information to distinguish one domain entity from other domain entities\u2019. reg is among the tasks within the field of automated text generation that has received most attention in recent years (Mellish et al., 2006; Siddharthan et al., 2011). Since it can be separated relatively easily from a specific application domain and studied in its own right, various \u2018standalone\u2019 solutions for the reg problem exist.\nIn our running example, the three bradycardia events shown in Figure 1b are later represented as a set of three entities under the theme argument of be, following lexicalisation (Figure 1c). How the system refers to them will depend, among other things, on whether they\u2019ve already been mentioned (in which case, a pronoun or definite description might work) and if so, whether they need to be distinguished from any other similar entities (in which case, they might need to be distinguished by some properties, such as the time when they occurred).\nThe first choice is therefore related to referential form: whether entities are referred to using a pronoun, a proper name or an (in)definite description, for example. This depends partly on the extent to which the entity is \u2018in focus\u2019 or \u2018salient\u2019 (see e.g., Poesio et al., 2004) and indeed such notions underlie many computational accounts of pronoun generation (e.g., McCoy & Strube, 1999; Callaway & Lester, 2002; Kibble & Power, 2004). Choosing referential forms has recently been the topic of a series of shared tasks on the Generation of Referring Expressions in Context (grec; Belz et al., 2010), using data from Wikipedia articles, which included choices such as reflexive pronouns and proper names. Many systems participating in this challenge framed the problem in terms of classification among these many options. Still, it is probably fair to say that much work on referential form has focussed on when to use pronouns. Forms such as proper names remain understudied, although recently various researchers have highlighted the problems of proper name generation (Siddharthan et al., 2011; van Deemter, 2016; Ferreira et al., 2017).\nDetermining the referential content usually comes into play when the chosen form is a description. Typically, there are multiple entities which have the same referential category or type in a domain (more than one player, for example, or several bradycardias). As a result, other properties of the entity will need to be mentioned if it is to be identified by the reader or hearer. Earlier reg research often worked with simple visual domains, such as Figure 2a or its corresponding tabular representation, taken from the gre3d corpus (Viethen & Dale, 2008). In this example, the reg content selection problem is to find a set of properties for a target (say d1) that singles it out from its two distractors (d2 and d3).\nreg content determination algorithms can be thought of as performing a search through the known properties of the referent for the \u2018right\u2019 combination that will distinguish it in context. What constitutes the \u2018right\u2019 combination depends on the underlying theory. Too much information in the description (as in the small blue ball before the large green cup) might be misleading or even boring; too little (the ball) might hinder identification. Much work on reg has\nappealed to the Gricean maxim stating that speakers should make sure that their contributions are sufficiently informative for the purposes of the exchange, but not more so (Grice, 1975). How this is interpreted has been the subject of a number of algorithmic interpretations, including:\n\u2022 Conducting an exhaustive search through the space of possible descriptions and choosing the smallest set of properties that will identify the target referent, the strategy incorporated by the Full Brevity procedure (Dale, 1989). In our example domain, this would select size.\n\u2022 Selecting properties incrementally, but choosing the one which rules out most distractors at each step, thereby minimising the possibility of including information that isn\u2019t directly relevant to the identification task. This is the underlying idea of the Greedy Heuristic algorithm (Dale, 1989, 1992), and it has more recently been revived in stochastic utility-based models such as Frank et al. (2009). In our example scene, such an algorithm would once again consider size first.\n\u2022 Selecting properties incrementally, but based on domain-specific preference or cognitive salience. This is the strategy incorporated in the Incremental Algorithm (Dale & Reiter, 1995), which would predict that color should be preferred over size in our example.\nWhile these heuristics focus exclusively on the requirement that a referent be unambiguously identified, research on reference in dialogue (e.g., Jordan & Walker, 2005) has shown that under certain conditions, referring expressions may also include \u2018redundant\u2019 properties in order to achieve other communicative goals, such as confirmation of a previous utterance by an interlocutor. Similarly, White et al. (2010) present a system which generates user-tailored descriptions in spoken dialogue, arguing that, for example, a frequent flyer would prefer different descriptions of flights than a student who only flies occasionally.\nThese various algorithms compute (possibly different) distinguishing descriptions for target referents (more precisely: they select sets of properties that distinguish the target, but that still need to be expressed in words; see Section 2.6 below). Various strands of more recent work can be distinguished (surveyed in Krahmer & van Deemter, 2012). Some researchers have focussed on extending the expressivity of the \u2018classical\u2019 algorithms, to include plurals (the two balls) and relations (the ball in front of a cube) (e.g., Horacek, 1997; Stone, 2000; Gardent, 2002; Kelleher & Kruijff, 2006; Viethen & Dale, 2008, among many others). Other work has cast the problem in probabilistic terms; for example, FitzGerald et al. (2013) frame reg as a problem of estimating a log-linear distribution over a space of logical forms representing expressions for sets of objects. Other work has concentrated on evaluating the performance of different reg algorithms, by collecting controlled human references and comparing these with the references predicted by various algorithms (e.g., Belz, 2008; Gatt & Belz, 2010; Jordan & Walker, 2005, again among many others). In a similar vein,\nresearchers have also started exploring the relevance of reg algorithms as psycholinguistic models of human language production (e.g., van Deemter et al., 2012b).\nA different line of work has moved away from the separation between content selection and form, performing these tasks jointly. For example, Engonopoulos and Koller (2014) use a synchronous grammar that directly relates surface strings to target referents, using a chart to compute the possible expressions for a given target. This work bears some relationship to planning-based approaches we discuss in Section 3.2 below, which exploit grammatical formalisms as planning operators (e.g. Stone & Webber, 1998; Koller & Stone, 2007), solving realisation and content determination problems in tandem (including reg as a special case).\nFinally, in earlier work visual information was typically \u2018simplified\u2019 into a table (as we did above), but there has been substantial progress on reg in more complex scenarios. For example, the give challenge (Koller et al., 2010), provided impetus for the exploration of situated reference to objects in a virtual environment (see also Stoia & Shockley, 2006; Garoufi & Koller, 2013). More recent work has started exploring the interface between computer vision and reg to produce descriptions of objects in complex, realistic visual scenes, including photographs (e.g., Mitchell et al., 2013; Kazemzadeh et al., 2014; Mao et al., 2016). This forms part of a broader set of developments focussing on the relatonship between vision and language, which we turn to in Section 4."}, {"heading": "2.6 Linguistic realisation", "text": "Finally, when all the relevant words and phrases have been decided upon, these need to be combined to form a well-formed sentence. The simple example in Figure 1d shows the structure underlying the sentence there were three successive bradycardias down to 69, the linguistic message corresponding to the portion selected from the original signal in Figure 1a.\nUsually referred to as linguistic realisation, this task involves ordering constituents of a sentence, as well as generating the right morphological forms (including verb conjugations and agreement, in those languages where this is relevant). Often, realisers also need to insert function words (such as auxiliary verbs and prepositions) and punctuation marks. An important complication at this stage is that the output needs to include various linguistic components that may not be present in the input (an instance of the \u2018generation gap\u2019 discussed in Section 3.1 below); thus, this generation task can be thought of in terms of projection between non-isomorphic structures (cf. Ballesteros et al., 2015). Many different approaches have been proposed, of which we will discuss\n1. human-crafted templates;\n2. human-crafted grammar-based systems;\n3. statistical approaches."}, {"heading": "2.6.1 Templates", "text": "When application domains are small and variation is expected to be minimal, realisation is a relatively easy task, and outputs can be specified using templates (e.g., Reiter et al., 1995; McRoy et al., 2003), such as the following.\n(7) $player scored for $team in the $minute minute.\nThis template has three variables, which can be filled with the names of a player, a team, and the minute in which this player scored a goal. It can thus serve to generate sentences like:\n(8) Ivan Rakitic scored for Barcelona in the 4th minute.\nAn advantage of templates is that they allow for full control over the quality of the output and avoid the generation of ungrammatical structures. Modern variants of the template-based method include syntactic information in the templates, as well as sophisticated rules for filling the gaps (Theune et al., 2001), making it difficult to distinguish templates from more sophisticated methods (van Deemter et al., 2005). The disadvantage of templates is that they are labour-intensive if constructed by hand (though templates have recently been learned automatically from corpus data, see e.g., Angeli et al., 2012; Kondadadi et al., 2013, and the discussion in Section 3.3 below). They also do not scale well to applications which require considerable linguistic variation."}, {"heading": "2.6.2 Hand-coded grammar-based systems", "text": "An alternative to templates is provided by general-purpose, domain-independent realisation systems. Most of these systems are grammar-based, that is, they make some or all of their choices on the basis of a grammar of the language under consideration. This grammar can be manually written, as in many classic off-the-shelf realisers such as fuf/surge (Elhadad & Robin, 1996), mumble (Meteer et al., 1987), kpml (Bateman, 1997), nigel (Mann & Matthiessen, 1983), and RealPro (Lavoie & Rambow, 1997). Hand-coded grammar-based realisers tend to require very detailed input. For example, kpml (Bateman, 1997) is based on Systemic-Functional Grammar (sfg; Halliday & Matthiessen, 2004), and realisation is modelled as a traversal of a network in which choices depend on both grammatical and semantico-pragmatic information. This level of detail makes these systems difficult to use as simple \u2018plug-and-play\u2019 or \u2018off the shelf\u2019 modules (e.g., Kasper, 1989), something which has motivated the development of simple realisation engines which provide syntax and morphology apis, but leave choice-making up to the developer(Gatt et al., 2009; Vaudry & Lapalme, 2013; Bollmann, 2011; de Oliveira & Sripada, 2014).\nOne difficulty for grammar-based systems is how to make choices among related options, such as the following, where hand-crafted rules with the right sensitivity to context and input are difficult to design:\n(9) Ivan Rakitic scored for Barcelana in the 4th minute.\n(10) For Barcelona, Ivan Rakitic scored in minute four.\n(11) Barcelona player Ivan Rakitic scored after four minutes."}, {"heading": "2.6.3 Statistical approaches", "text": "Recent approaches have sought to acquire probabilistic grammars from large corpora, cutting down on the amount of manual labour required, while increasing coverage. Essentially, two approaches have been taken to include statistical information in the realisation process. One approach, introduced by the seminal work of Langkilde and Knight (Langkilde-Geary, 2000; Langkilde-Geary & Knight, 2002) on the halogen/nitrogen systems, relies on a two-level approach, in which a small, hand-crafted grammar is used to generate alternative realisations represented as a forest, from which a stochastic re-ranker selects the optimal candidate. Langkilde and Knight rely on corpus-based statistical knowledge in the form of n-grams, whereas others have experimented with more sophisticated statistical models to perform reranking (e.g., Bangalore & Rambow, 2000; Ratnaparkhi, 2000; Cahill et al., 2007). The second approach does not rely on a computationally expensive generate-and-filter approach, but uses statistical information directly at the level of generation decisions. An example of this approach is the pcru system developed by Belz (2008), which generates the most likely derivation of a sentence, given a corpus, using a context-free grammar. In this case, the statistics are exploited to control the generator\u2019s choice-making behaviour as it searches for the optimal solution.\nIn both approaches, the base generator is hand-crafted, while statistical information is used to filter outputs. An obvious alternative would be to also rely on statistical information for the base-generation system. Fully data-driven grammar-based approaches have been developed by acquiring grammatical rules from treebanks. For example, the Openccg framework (Espinosa et al., 2008; White & Rajkumar, 2009, 2012) presents a broad coverage English surface realizer, based on Combinatory Categorial Grammar (ccg; Steedman, 2000), relying on a corpus of ccg representations derived from the Penn Treebank (Hockenmaier & Steedman, 2007) and using statistical language models for reranking. There are several other approaches to realisation that adopt a similar rationale, based on a variety of grammatical formalisms, including Head-Driven Phrase Structure Grammar (hpsg; Nakanishi et al., 2005; Carroll & Oepen, 2005), Lexical-Functional Grammar (lfg; Cahill & Josef, 2006) and Tree Adjoining Grammar (tag; Gardent & Narayan, 2015). In the many of these systems, the base generator uses some variant of the chart generation algorithm (Kay, 1996) to iteratively realise parts of an input specification and merge them into one or more final structures, which can then be ranked (see Rajkumar & White, 2014, for further discussion). The existence of stochastic realisers with wide-coverage grammars has motivated a greater focus on subtle choices, such as how to avoid structural ambiguity, or how to handle choices such as explicit complementiser insertion in English (see e.g., Rajkumar & White, 2011).\nOther approaches to realisation also rely on one or more classifiers to im-\nprove outputs. For example, Filippova and Strube describe an approach to linearisation of constituents using a two-step approach with Maximum Entropy classifiers, first determining which constituent should occupy sentence-initial position, then ordering the constituents in the remainder of the sentence (Filippova & Strube, 2007, 2009). Bohnet et al. (2010) describe a realiser using underspecified dependency structures as input, in a framework based on Support Vector Machines, where classifiers are organised in a cascade. An initial classifier decodes semantic input into the corresponding syntactic features, while two subsequent classifiers first linearise the syntax and then render the correct morphological realisation for the component lexemes. This \u2018deep generation\u2019 approach was applied to four languages \u2013 Chinese, English, German and Spanish \u2013 and found to outperform the approach of Filippova and Strube (2009) on English when compared to a corpus using the bleu metric (Papineni et al., 2002), though it falls somewhat short of the German realiser of Filippova and Strube (2007), where the two-step classification approach does better.\nModelling choices using classifier cascades is not restricted to realisation; indeed, in some cases, it has been adopted as a model for the nlg process as a whole, a topic we will return to in Section 3.3.3. One outcome of this view of nlg is that the nature of the input representation also changes: the more decisions that are made within the statistical generation system, the less linguistic and more abstract the input representation becomes, paving the way for integrated, end-to-end stochastic generation systems, such as Konstas and Lapata (2013), which we also discuss in the next section."}, {"heading": "2.7 Discussion", "text": "This section has given an overview of some classic tasks that are found in most nlg systems. One of the common trends that can be identified in each case is the steady move from early, hand-crafted approaches based on rules, to the more recent stochastic approaches that rely on corpus data, with a concomitant move towards more domain-independent approaches. Historically, this was the case already for tasks, such as referring expression generation or realisation, which became topics of intensive research in their own right. However, as more and more approaches to all nlg tasks begin to take a statistical turn, there is increasing emphasis on learning techniques; the domain-specific aspect is, as it were, incidental, a property of the training data itself. As we shall see in the next section, this trend has also influenced the way different nlg tasks are organised, that is, the architecture of systems for text generation from data."}, {"heading": "3 NLG Architectures and Approaches", "text": "Having given an overview of the most common sub-tasks that nlg systems incorporate, we now turn to the way such tasks can be organised. Broadly speaking, we can distinguish between three dominant approaches to nlg architectures:\n1. Modular architectures: These are often typical of systems with roots in the classical, symbol-processing paradigm that dominated early ai research. By design, such architectures involve fairly crisp divisions among subtasks, though with significant variations among them;\n2. Planning perspectives: Again with deep roots in the ai tradition, viewing text generation as planning affords a more integrated, less modular design;\n3. Data-driven, integrated approaches: Now the dominant trend in nlg (as it is in nlp more generally), such approaches place a heavy reliance on statistical learning of correspondences between (non-linguistic) inputs and outputs. Such correspondences often cut across task divisions, resulting once again in more integrated approaches to the nlg problem.\nOf these three, the first, modular design is the oldest and for a long time, following Reiter (1994), was referred to as the \u2018consensus\u2019. While we review it in some depth below, we emphasise that its consensual status has been repeatedly put into question. Indeed, more recent planning-based and/or data-driven research has strongly challenged the modular view. For this reason, in what follows, we will often explicitly contrast the encapsulated design of the older model with these more \u2018global\u2019 approaches, with a view to highlighting computational solutions aimed to address nlg sub-tasks jointly."}, {"heading": "3.1 Rule-based, modular approaches", "text": "Existing surveys of nlg, including Reiter and Dale (Reiter & Dale, 1997, 2000) and Reiter (2010) typically refer to some version of the pipeline architecture displayed in Figure 3 as the \u2018consensus\u2019 architecture in the field. Originally introduced by (Reiter, 1994), the pipeline was a generalisation based on actual practice and achieved the status of a \u2018de facto standard\u2019.\nDifferent modules in the pipeline incorporate different subsets of the tasks described in Section 2. The first module, the Text Planner (or Document Planner, or Macroplanner), combines content selection and text structuring (or document planning). Thus, it is concerned mainly with strategic generation (McDonald,\n1993), the choice of \u2018what to say\u2019. The resulting text plan, a structured representation of messages, is the input to the Sentence Planner (or microplanner), which typically combines sentence aggregation, lexicalisation and referring expression generation (Reiter & Dale, 2000). If text planning amounts to deciding what to say , sentence planning can be understood as deciding how to say it. All that remains then is to actually say it, i.e., generate the final sentences in a grammatically correct way, by applying syntactic and morphological rules. This task is performed by the Linguistic Realiser. Together, sentence planning and realisation encompass the set of tasks traditionally referred to as tactical generation.\nInterestingly, when Reiter (1994) proposed this three-stage architecture as the emerging consensus architecture in nlg, he drew a parallel with human speech production, where the most influential psycholinguistic model of language production, proposed by Levelt (1989, 1999), makes a similar distinction between deciding what to say and determining how to say it. Levelt\u2019s model allows for a limited degree of self-monitoring through feedback loops, a feature that is absent in Reiter\u2019s nlg pipeline, but continues to play an important role in psycholinguistics (cf. Pickering & Garrod, 2013), though here too there has been increasing emphasis on more integrated models.\nThe consensus pipeline also shares a number of characteristics with a widelyused architecture in text summarisation (Mani, 2001; Nenkova & McKeown, 2011). Rather like the program used by Parker to generate books (see Section 1), summarisation systems take as input one or more texts, seeking to produce a summary for the reader. Traditionally (as discussed by Mani, 2001, among others), summarisation can be broken down into the following steps:\n1. Analysis of the source text(s), whereby information \u2013 in the form of phrases or sentences \u2013 is selected for inclusion in the eventual summary. Since this stage involves selection, it shares some features with the text planning stage of a data-to-text system, where content determination is one of the tasks;\n2. Transformation of the selected input, where selected phrases or sentences can undergo processes such as aggregation, fusion or paraphrasing to reduce redudnancy and make the text fluent. This stage, which is especially important in abstractive summarisation, shares some features with the sentence planning stage in Figure 3;\n3. Synthesis, that is, the process of generating the summary, based on the selected information. In this case, systems are typically dealing with textual input, but the higher the level of abstraction in the summary, the more this stage will play a role in re-generating text that might look quite different in its essentials from the original input text(s). Hence, this task may share some features with the realisation stage in Figure 3.\nA hallmark of the architecture in Figure 3 is that it represents clear-cut divisions among tasks that are traditionally considered to belong to the \u2018what\u2019\n(strategic) and the \u2018how\u2019 (tactical). However, this does not imply that this division is universally accepted in practice. In a survey conducted approximately a decade ago, Mellish et al. (2006) already concluded that while several nlg systems incorporate many of the core tasks outlined in Section 2, their organisation varies considerably from system to system. Indeed, some tasks may be split up across modules. For example, the content determination part of referring expression generation might be placed in the sentence planner, but decisions about form (such as whether to use an anaphoric np, and if so, what kind of np to produce) may have to wait until at least some realisation-related decisions have been taken. Based on these observations, Mellish et al. proposed an alternative formalism, the \u2018objects-and-arrows\u2019 framework, within which different types of information flow between nlg sub-tasks can be accommodated. Rather than offering a specific architecture, this framework was intended as a formalism within which high-level descriptions of different architectures can be specified. However, it retains the principle that the tasks, irrespective of their organisation, are well-defined and distinguished.\nA more recent development in relation to the pipeline architecture in Figure 3 is a proposal by Reiter (2007) to accommodate systems in which input consists of raw (often numeric) data that requires some preprocessing before it can undergo the kind of selection and planning that the Text Planner is designed to execute. The main characteristic of these systems is that input is unstructured, in contrast to systems which operate over logical forms, or database entries. Examples of application domains where this is the case include weather reporting (e.g., Goldberg et al., 1994; Busemann & Horacek, 1997; Coch, 1998; Turner et al., 2008; Sripada et al., 2003; Ramos-Soto et al., 2015), where the input often takes the form of numerical weather predictions; and generation of summaries from patient data (e.g., Hueske-Kraus, 2003; Harris, 2008; Gatt et al., 2009; Banaee et al., 2013). In such cases, nlg systems often need to perform some form of data abstraction (for example, identifying broad trends in the data), followed by data interpretation. The techniques used to perform these tasks range from extensions of signal processing techniques (e.g., Portet et al., 2009) to the application of reasoning formalisms based on fuzzy set theory (e.g., Ramos-Soto et al., 2015). Reiter (2007)\u2019s proposal accommodates these steps by extending the pipeline \u2018backwards\u2019, incorporating stages prior to Text Planning.\nNotwithstanding its elegance and simplicity, there are challenges associated with a pipeline nlg architecture, of which two are particularly worth highlighting:\n\u2022 The generation gap (Meteer, 1991) refers to mismatches between strategic and tactical components, so that early decisions in the pipeline have unforeseen consequences further downstream. To take an example from Inui et al. (1992), a generation system might determine a particular sentence ordering during the sentence planning stage, but this might turn out to be ambiguous once sentences have actually been realised and orthography has been inserted;\n\u2022 Generating under constraints: Itself perhaps an instance of the generation\ngap, this problem can occur when the output of a system has to match certain requirements, for example, it cannot exceed a certain length (see Reiter, 2000, for discussion). Formalising this constraint might appear possible at the realisation stage \u2013 by stipulating the length constraint in terms of number of words or characters, for instance \u2013 but it is much harder at the earlier stages, where the representations are pre-linguistic and their mapping to the final text are potentially unpredictable.\nThese, and related problems, motivated the development of alternative architectures. For instance, some early nlg systems were based on an interactive design, in which a module\u2019s initially incomplete output could be fleshed out based on feedback from a later module (the pauline system is an example of this; Hovy, 1988). An even more flexible stance is taken in blackboard architectures, in which task-specific procedures are not rigidly pre-organised, but perform their tasks reactively as the output, represented in a data structure shared between tasks, evolves (e.g., Nirenburg et al., 1989). Finally, revision-based architectures allow a limited form of feedback between modules under monitoring, with the possibility of altering choices which prove to be unsatisfactory (e.g., Mann & Moore, 1981; Inui et al., 1992). This has the advantage of not requiring \u2018early\u2019 modules to be aware of the consequences of their choices for subsequent modules, since something that goes wrong can always be revised (Inui et al., 1992). Revision need not be carried out exclusively to rectify shortcomings. For instance, Robin (1993) used revision in the context of sports summaries; an initial draft was revised to add historical background information that was made relevant by the events reported in the draft, also taking decisions as to where to place them in relation to the main text. The price that all of these alternatives potentially incur is, of course, a reduction in efficiency, as noted by De Smedt et al. (1996).\nAlternatives to pipelines often end up blurring the boundaries between modules in the nlg system. This is a feature that is even more evident in some planning-based and data-driven approaches proposed in recent years. It is to these that we now turn."}, {"heading": "3.2 Planning-based approaches", "text": "In ai, the planning problem can be described as the process of identifying a sequence of one or more actions to satisfy a particular goal. An initial goal can be decomposed into sub-goals, satisfied by actions each of which has its preconditions and effects. In the classical planning paradigm (strips; Fikes & Nilsson, 1971), actions are represented as tuples of such preconditions and effects.\nThe connection between planning and nlg lies in that text generation can be viewed as the execution of planned behaviour to achieve a communicative goal, where each action leads to a new state, that is, a change in a context that includes both the linguistic interaction or discourse history to date, but also the physical or situated context and the user\u2019s beliefs and actions (see\nLemon, 2008; Rieser & Lemon, 2009; Dethlefs, 2014; Garoufi & Koller, 2013; Garoufi, 2014, for some recent perspectives on this topic). This perspective on nlg is therefore related to the view of \u2018language as action\u2019 (Clark, 1996), itself rooted in a philosophical tradition inaugurated by the work of Austin (1962) and Searle (1969). Indeed, some of the earliest ai work in this tradition (especially Cohen & Perrault, 1979; Cohen & Levesque, 1985) sought an explicit formulation of preconditions (akin to Searle\u2019s felicity conditions) for speech acts and their consequences.\nGiven that there is in principle no restriction on what types of actions can be incorporated in a plan, it is possible for plan-based approaches to nlg to cut across the boundaries of many of the tasks that are normally encapsulated in the classic pipeline architecture, combining both tactical and strategic elements by viewing the problems of what to say and how to say it as part and parcel of the same set of operations. Indeed, thre are important precedents in early work for a unified view of nlg as a hierarchy of goals, the kamp system (Appelt, 1985) being among the best known examples. For instance, to generate referring expressions in kamp, the starting point was reasoning about interlocutors\u2019 beliefs and mutual knowledge, whereupon the system generated sub-goals that percolated all the way down to property choice and realisation, finally producing a referential np whose predicted effect was to alter the hearer\u2019s belief state about the referent (see Heeman & Hirst, 1995, for a similar approach to the generation of referring expressions in dialogue).\nOne problem with these perspectives, however, is that deep reasoning about beliefs, desires and intentions (or bdi, as it is often called following the work of Bratman, 1987) requires highly expressive formalisms and incurs considerable computational expense. One solution is to avoid general-purpose reasoning formalisms and instead adapt a linguistic framework to the planning paradigm for nlg."}, {"heading": "3.2.1 Planning through the grammar", "text": "The idea of interpreting linguistic formalisms in planning terms is again prefigured in early nlg work. For example, some early systems (e.g. kpml, which we briefly discussed in the context of realisation in Section 2.6; Bateman, 1997) were based on Systemic-Functional Grammar (sfg; Halliday & Matthiessen, 2004), which can be seen as a precursor to contemporary planning-based approaches, since sfg models linguistic constructions as the outcome of a traversal through a decision network that extends backwards to pragmatic intentions. In a similar vein, both Hovy (1991) and Moore and Paris (1993) interpreted the relations of Rhetorical Structure Theory (Mann & Thompson, 1988) as operators for text planning.\nSome recent approaches integrate much of the planning machinery into the grammar itself, viewing linguistic structures as planning operators. This requires grammar formalisms which integrate multiple levels of linguistic analysis, from pragmatics to morpho-syntax. It is common for contemporary planningbased approaches to nlg to be couched in the formalism of Lexicalised Tree\nAdjoining Grammar (ltag; Joshi & Schabes, 1997), though other formalisms, such as Combinatory Categorial Grammar (Steedman, 2000) have also been shown to be adequate to the task (see especially Nakatsu & White, 2010, for an approach to generation using Discourse Combinatory Categorial Grammar).\nIn an ltag, pieces of linguistic structure (so-called elementary trees in a lexicon) can be coupled with semantic and pragmatic information that specify (a) what semantic preconditions need to obtain in order for the item to be felicitously used; and (b) what pragmatic goals the use of that particular item will achieve (see Stone & Webber, 1998; Garoufi & Koller, 2013; Koller & Striegnitz, 2002, for planning-based work using ltag). As an example of how such a formalism could be deployed in a planning framework, let us focus on the task of referring to a target entity. Koller and Stone (2007) formulated the task in a way that obviates the need to distinguish between the content determination and realisation phases (an approach already taken by Stone & Webber, 1998). Furthermore, they do not separate sentence planning, reg and realisation, as is done in the traditional pipeline. Consider the sentence Mary likes the white rabbit. Simplifying the formalism for ease of presentation, we can represent the lexical item likes as follows (this example is based on Garoufi, 2014, albeit with some simplifications):\n(12) likes(u, x, y) action: preconditions:\n\u2022 The proposition that x likes y is part of the knowledge base (i.e. the statement is supported);\n\u2022 x is animate; \u2022 The current utterance u can be substituted into the derivation S\nunder construction;\neffects:\n\u2022 u is now part of S \u2022 New np nodes for x in agent position and y in patient position have\nbeen set up (and need to be filled).\nAs in strips, an operator consists of preconditions and effects. Note that the preconditions associated with the lexical item require support in the knowledge base (thus making reference to the input kb, which normally would not be accessible to the realiser), and include semantic information (such as that the agent needs to be animate). Having inserted likes as the sentence\u2019s main verb, we have two noun phrases which need to be filled by generating nps for the arguments x and y. Rather than deferring this task to a separate reg module, Koller and Stone build referring expressions by associating further pragmatic preconditions on the linguistic operators (elementary trees) that will be incorporated in the referential np. First, the entity must be part of the hearer\u2019s knowledge state, since an identifying description (say, to x) presupposes that\nthe hearer is familiar with it. Second, an effect of adding words to the np (such as the predicates rabbit or white) is that the phrase excludes distractors, i.e. entities of which those properties are not true. In a scenario with one human being and two rabbits, only one of which (the y in our example) is white, the derivation would proceed by first updating the np corresponding to y with rabbit, thereby excluding the human from the distractor set, but leaving the goal to distinguish y unsatisfied (since y is not the only rabbit). The addition of another predicate to the np (white) does the trick.\nA practical advantage to planning-based approaches is the availability of a significant number of off-the-shelf planners. Once the nlg task is formulated in an appropriate plan description language, such as the Planning Domain Definition Language (pddl; McDermott, 2000), it becomes possible in principle to use any planner to generate text. However, planners remain beset by problems of efficiency. In a set of experiments on nlg tasks of differing complexity, Koller and Petrick (2011) noted that planners tend to spend significant amounts of time on preprocessing, though solutions could often be found efficiently once preprocessing was complete."}, {"heading": "3.2.2 Stochastic planning under uncertainty using Reinforcement Learning", "text": "The approaches to planning we have discussed so far are largely rule-based and tend to view the relationship between a planned action and its consequences (that is, its impact on the context), as fixed (though exceptions exist, as in contingency planning, which generates multiple plans to address different possible outcomes; Steedman & Petrick, 2007).\nAs Rieser and Lemon (2009) note, this view is unrealistic. Consider a system that generates a restaurant recommendation. The consequences of its output (that is, the new state it gives rise to) are subject to noise arising from several sources of uncertainty. In part, this is due to trade-offs, for example, between needing to include the right amount of information while avoiding excessive prolixity. Another source of uncertainty is the user, whose actions may not be the ones predicted by the system. An instance of Meteer\u2019s (1991) generation gap can rear its head, for instance if a stochastic realiser renders the content of a message in an ambiguous, or excessively lengthy utterance (Rieser & Lemon, 2009), a problem that could be addressed by allowing different sub-tasks to share knowledge sources and be guided by overlapping constraints (Dethlefs & Cuaya\u0301huitl, 2015, discussed below).\nIn short, planning a good solution to reach a communicative goal could be viewed as a stochastic optimisation problem (a theme we revisit in Section 3.3.3 below). This view is shared by many recent approaches based on Reinforcement Learning (rl; Lemon, 2008; Rieser & Lemon, 2009, 2011a), especially those that tackle nlg within a dialogue context. In this framework, generation can be modelled as a Markov decision process where states are associated with possible actions and each state-action pair is associated with a probability of moving from a state at time t to a new state at t + 1 via action a. Crucially for the\nlearning algorithm, transitions are associated with a reinforcement signal, via a reward function that quantifies the optimality of the generated output. Learning usually involves simulations in which different generation strategies or \u2018policies\u2019 \u2013 essentially, plans corresponding to possible paths through the state space \u2013 come to be associated with different rewards. The rl framework has been argued to be better at handling uncertainty in dynamic environments than supervised learning or classification, since these do not enable adaptation in a changing context (Rieser & Lemon, 2009). Rieser et al. (2011) showed that this approach is effective in optimising information presentation when generating restaurant recommendations. Janarthanam and Lemon (2014) used it to optimise the choice of information to select in a referring expression, given a user\u2019s knowledge. The system learns to adapt its user model as the user acquires new knowledge in the course of a dialogue.\nAn important contribution of this work has been in exploring joint optimisation, where the policy learned satisfies multiple constraints arising from different sub-tasks of the generation process, by sharing knowledge across the sub-tasks. Lemon (2011) showed that joint optimisation can learn a policy that determines when to generate informative utterances or queries to seek more information from a user. Similarly, Cuaya\u0301huitl and Dethlefs (2011) used hierarchical rl to jointly optimise the problem of finding and describing a short route description, while adapting to a user\u2019s prior knowledge, giving rise to a strategy whereby the user is guided past landmarks that they are familiar with, while avoiding potentially confusing junctions. Also in a route-finding setting, Dethlefs and Cuaya\u0301huitl (2015) develop a hierarchical model comprising a set of learning agents whose tasks range from content selection through realisation. They show that a joint framework in which agents share knowledge, outperforms an isolated learning framework in which each task is modelled separately. For example, the joint policy learns to give high-level navigation instructions, but switches to low-level instructions if the user goes off-track. Furthermore, utterances produced by the joint policy are less verbose and lead to shorter interactions overall.\nIn summary, nlg research within the planning paradigm has highlighted the desirability of developing unified formalisms to represent constraints on the generation process at multiple levels, whether this is done using ai-based planning formalisms (Koller & Petrick, 2011), or stochastically via Reinforcement Learning. Among its contributions, the latter line of work has shed light on the value of (a) hierarchical relationships among sub-problems; and (b) joint optimisation of different sub-tasks. Indeed, this work belongs to a much broader range of research on data-driven nlg, to which we turn our attention immediately below."}, {"heading": "3.3 Data-driven approaches", "text": "Although the shift towards data-driven methods in nlg began somewhat later than in other areas of nlp, there is little doubt that this is now the dominant trend. In the remainder of this section, we start with an overview of methods\nused to acquire training data for nlg \u2013 in particular, pairings of inputs (data) and outputs (text) \u2013 before turning to an overview of techniques and frameworks. One of the themes that will emerge from this overview is that, as in the case of planning, statistical methods often take a unified or \u2018global\u2019, rather than a modularised, view of the nlg process."}, {"heading": "3.3.1 Acquiring data", "text": "As noted in Section 2, some nlg tasks support the transition to a stochastic approach fairly easily. For example, research on realisation often exploits the existence of treebanks from which input-output correspondences can be learned. Similarly, the emergence of corpora of referring expressions representing both input domains and output descriptions (e.g., Gatt et al., 2007; Viethen & Dale, 2011; Kazemzadeh et al., 2014; Gkatzia et al., 2015) has facilitated the development of probabilistic reg algorithms. Shared tasks have also contributed to the development of both data sources and methods (see Section 7). As we show in Section 4 below, recent work on image-to-text generation has also benefited from the availability of large datasets. For statistical, end-to-end generation in other domains, there is less of an embarrassment of riches. However, this situation is improving as methods to automatically align input data with output text are developed. Still, it is worth emphasising that many of these alignment approaches use data which is semi-structured, rather than the raw, numerical input (e.g. signals) used by the data-to-text systems that Reiter (2007), among others, drew attention to.\nCurrently, there are a number of data-text corpora in specific domains, notably weather forecasting (Reiter et al., 2005; Belz, 2008; Liang et al., 2009) and sports summaries (Barzilay & Lapata, 2005; Chen & Mooney, 2008). These usually consist of database records paired with free text. A promising recent trend is the introduction of statistical techniques that seek to automatically segment and align such data and text (e.g., Barzilay & Lapata, 2005; Liang et al., 2009; Konstas & Lapata, 2013). In an influential paper, Liang et al. (2009) described this framework in terms of a generative model that defines a distribution p(w\u2016s), for sequences of words w and input states s, with latent variables specifying the correspondence between w and s in terms of three main components: (i) the likelihood of database records being selected, given s; (ii) the likelihood of certain fields being chosen for some record; (iii) the likelihood that a string of a certain length is generated given the records, fields and states. The parameters of the model can be found using the Expectation Maximization (em) algorithm. An example alignment is shown in Figure 4.\nThese models perform alignment by identifying regular co-occurrences of segments of data and text. Koncel-Kedziorski and Hajishirzi (2014) go beyond this by proposing a model that exploits linguistic structure to align at varying resolutions. For example, (13) below is related to two observations in a soccer game log (an aerial pass and a miss), but can be further analysed into two subparts (indicated by indices 1 and 2 in our example), which individually map to these two sub-events.\n(13) (Chamakh rises highest)1 and (aims a header towards goal which is narrowly wide)2.\nA different approach to data acquisition is described by Mairesse and Young (2014), who use crowd-sourcing techniques to elicit realisations for semantic/pragmatic inputs describing dialogue acts in the restaurant domain (see Novikova & Rieser, 2016b, for another recent approach to crowd-sourcing in a different domain). The key to the success of this technique is the development of a semantics that is sufficiently transparent for use with non-specialists. In an earlier paper, Mairesse et al. (2010) describe a method to cut down on the amount of training data required for generation by using uncertainty sampling (Lewis & Catlett, 1994), whereby a system can be trained on a relatively small amount of input data; subsequently, the learned model is applied to new data, from which the system samples the cases of which it is least certain, forwarding these to a (possibly human) oracle for feedback, which potentially leads to a new training cycle.\nWhile many of the stochastic end-to-end systems we discuss below rely on well-defined formalisms and typically need fairly precise alignments between inputs and portions of the output, more recent deep learning models (Section 3.3.5) have been based on partially aligned data (e.g. Wen et al., 2015; Lebret et al., 2016; Mei et al., 2016)."}, {"heading": "3.3.2 NLG based on language models", "text": "Given an alignment between data and text, one way of modelling the nlg process is to remain faithful to the division between strategic and tactical choices, using the statistical alignment to inform content selection, while deploying nlp techniques to acquire rules, templates or schemas (a\u0301 laMcKeown, 1985) to drive sentence planning and realisation.\nRecall that the generative model of Liang et al. (2009) pairs data to text based on a sequential, Markov process, combining strategic choices (of db records and fields) with tactical choices (of word sequences) into a single probabilistic model. In fact, Markov-based language modelling approaches continue to feature prominently in data-driven nlg. One of the earliest examples is Oh and Rudnicky (2002) in the context of a dialogue system in the travel domain,\nwhere the input takes the form of a dialogue act (e.g. a query that the system needs to make to obtain information about the user\u2019s travel plans) with the attributes to include (e.g. the departure city). Oh and Rudnicky\u2019s approach encompasses both content planning and realisation. It relies on dialogue corpora annotated with utterance classes, that is, the type of dialogue act that each utterance is intended to fulfil. On this basis, they construct separate n-gram language models for each utterance class, as well as for word-classes that can appear in the input (for example, words corresponding to departure city). Content planning is handled by a model that predicts which attributes should be included in an utterance on the basis of recent dialogue history. Realisation is handled using a combination of templates and n-gram models. Thus, generation is conceived as a two-step (planning followed by realisation) process.\nThe reliance on standard language models has one potential drawback, in that such models are founded on a local history assumption, limiting the extent to which prior selections can influence current choices. An alternative, discriminative model (known to the nlp community at least since Ratnaparkhi, 1996) is logistic regression (Maximum Entropy). The foundations for this approach in nlg can be found in Ratnaparkhi (2000), who focussed primarily on realisation (albeit combined with elements of sentence planning). He compared two stochastic nlg systems based on a maximum entropy learning framework, to a baseline nlg system. The first of these (nlg2 in Ratnaparkhi\u2019s paper) uses a conditional language model that generates sentences in an incremental, left-to-right fashion, by predicting the best word given both the preceding history (as in standard n-gram models) and the semantic attributes that remain to be expressed. The second (nlg3) augments the model with syntactic dependency relations, performing generation by recursively predicting the left and right children of a given constituent. In an evaluation based on judgements of correctness, Ratnaparkhi found that the system augmented with dependencies was generally preferred.\nIn later work, Angeli et al. (2010) describe an approach to end-to-end nlg that maintains a separation between content selection, sentence planning and realisation, modelling each process as a sequence of decisions in a log-linear framework, where choices can be conditioned on arbitrarily long histories of previous decisions. This enables them to handle long-range dependencies, such as coherence relations, more flexibly (e.g., a model can incorporate the information that a weather report which describes wind speed should do so after mentioning wind direction; see Barzilay & Lapata, 2005, for similar insights based on global optimisation). The separation of tasks is maintained insofar as a different set of features can be used to inform decisions at each stage of the process. Sentence planning and realisation decisions are based on templates acquired from corpus texts: a template is selected based on its likelihood given the database fields selected during content selection.\nMairesse and Young (2014) describe a different approach, which also relies on alignments between database records and text, and seeks a global solution to generation, without a crisp distinction between strategic and tactical components. In this case, the basic representational framework is a tree of the sort\nshown in Figure 5. The root indicates a dialogue act type (in the example, the dialogue act seeks to inform). Leaves in the tree correspond to words or word sequences, while nonterminals are semantic stacks, that is, the pieces of input to which the words correspond. In this framework, content selection and realisation can be solved jointly by searching for the optimal stack sequence for a given dialogue act, and the optimal word sequence corresponding to that stack sequence. Mairesse and Young use a a factored language model (flm), which extends n-gram models by conditioning probabilities on different utterance contexts, rather than simply on word histories. Given an input dialogue act, generation works by applying a Viterbi search through the flm at each of the following stages: (a) mandatory semantic stacks are identified for the dialogue act; (b) these are enriched with possible non-mandatory stacks (those which are not in boldface in Figure 5), usually corresponding to function words; (c) realisations are found for the stack sequence. The approach is also extended to deal with n\u2212best realisations, as well as to handle variation, in the form of paraphrases for the same input."}, {"heading": "3.3.3 NLG as classification and optimisation", "text": "An alternative way to think about nlg decisions at different levels is in terms of classification, already encountered in the context of specific tasks, such as content determination (e.g., Duboue & McKeown, 2003) and realisation (e.g., Filippova & Strube, 2007). Since generation is ultimately about choice-making at multiple levels, one way to model the process is by using a cascade of classifiers, where the output is constructed incrementally, so that any classifier Ci uses as (part of) its input the output of a previous classifier Ci\u2212i. Within this framework, it is still possible to conceive of nlg in terms of a pipeline. As Marciniak and Strube (2005) note, an alternative way of thinking about it is\nin terms of a weighted, multi-layered lattice, where generation amounts to a best-first traversal: at any stage i, classifier Ci produces the most likely output, which leads to the next stage Ci+1 along the most probable path. This generalisation is conceptually related to the view of nlg in terms of policies in the Reinforcement Learning framework (see Section 3.2.2 above), which define a traversal through sequences of states which may be hierarchically organised (as in the work of Dethlefs & Cuaya\u0301huitl, 2015, for example).\nMarciniak and Strube (2004) start from a small corpus of manually annotated texts of route descriptions, dividing generation into a series of eight classification problems, from determining the linear precedence of discourse units, to determining the lexical form of verbs and the type of their arguments. Generation decisions are taken using the instance-based KStar algorithm, which is shown to outperform a majority baseline on all classification decisions.5\nA similar framework was recently adopted by Zarrie\u00df and Kuhn (2013), once again taking as their starting point textual data annotated with a dependency representation, as shown in (3.3.3) below, where referents are marked v and p and the implicit head of the dependency is underlined.\n(14) Junge Young Familiev:0 family auf on dem Heimwegposs:v the way home ausgeraubtag:p robbed\n\u2018A young family was robbed on their way home.\u2019\nThese authors use a sequence of classifiers to perform referring expression generation and realisation. They use a ranking model based on Support Vector Machines which, given an input dependency representation extracted from annotated text such as (3.3.3), performs two tasks in either order: (a) mapping the input to a shallow syntactic tree for linearisation; and (b) inserting referring expressions. Interestingly, Zarrie\u00df and Kuhn (2013) observe that the performance of either task is order-dependent, in that both classification tasks perform worse when they are second in the sequence. They observe a marginal improvement when the tasks are performed in parallel, but achieve the best performance in a revision-based architecture, where syntactic mapping is followed by referring expression insertion, followed by a revision of the syntax.\nClassification cascades for nlg maintain a clean separation between tasks, but research in this area has echoed earlier concerns about pipelines in general (see Section 3.1), the main problem being error propagation. Infelicitous choices will of course impact classification further downstream, a situation analogous to the problem of the generation gap. The conclusion by Zarrie\u00df and Kuhn (2013) in favour of a revision-based architecture, brings our account full circle, in that a well-known solution is shown to yield improvements in a new framework.\nOur discussion so far has repeatedly highlighted the fact that a sequential organisation of nlg tasks is susceptible to error propagation, whether this takes the form of classifier errors, or decisions in a rule-based module that have a\n5Instance-based approaches to nlg are also discussed by Varges and Mellish (2010), albeit in an overgenerate-and-rank approach where rules overgenerate candidates, which are then ranked by comparison to the instance base.\nnegative impact on downstream components. A potential solution is to view generation as an optimisation problem, where the best combination of decisions is sought in an exponentially large space of possible combinations. We have encountered the use of optimisation techniques, such as Integer Linear Programming (ilp) in the context of aggregation and content determination (Section 2.3). For example, Barzilay and Lapata (2006) group content units based on their pairwise similarity, with an optimisation step to identify a set of pairs that are maximally similar. ilp has also been exploited by Marciniak and Strube (2005), as a means to counteract the error propagation problem in their original classification-based approach (Marciniak & Strube, 2004). Conceptually, the optimisation framework is simple:\n1. Each nlg task is once again modelled as classification or label-assignment, but this time, labels are modelled as binary choices (either a label is assigned or not), associated with a cost function, defined in terms of the probability of a label in the training data;\n2. Pairs of tasks which are strongly inter-dependent (for example, syntactic choices and reg realisations, in the example from Zarrie\u00df & Kuhn, 2013) have a cost based on the joint probability of their labels;\n3. An ilp model seeks the global labelling solution that minimises the overall cost, with the added constraint that if one of a pair of correlated labels \u3008li, lj\u3009 is selected, the other must be too.\nThis optimisation solution has been shown to outperform different versions of the classification pipeline originally proposed by Marciniak and Strube (2004), much as the results of Dethlefs and Cuaya\u0301huitl (2015), discussed above, showed that reinforcement learning of a joint policy produces better dialogue interactions than learning isolated policies for separate nlg tasks. Another advantage of this framework is that for planning-based approaches, it relies on a formalism for which off-the-shelf tools are available. As with planning, however, efficiency may be a challenge, given the large space of possibilities for an optimisation problem."}, {"heading": "3.3.4 NLG as \u2018parsing\u2019", "text": "In recent years, there has been a resurgence of interest in viewing generation in terms of probabilistic context-free grammar (sc cfg) formalisms, or even as the \u2018inverse\u2019 of semantic parsing. For example, Belz (2008) formalises the nlg problem entirely in terms of cfgs: a base generator expands inputs (bits of weather data in this case) by applying cfg rules; corpus-derived probabilities are then used to control the choice of which rules to expand at each stage of the process. The base generator in this work is hand-crafted. However, it is possible to extract rules or templates from corpora, as has been done for aggregation rules (Stent & Molina, 2009; White & Howcroft, 2015, and Section 2.3), and also for more general statistical approaches to sentence planning and realisation\nin a text-to-text framework (e.g., Kondadadi et al., 2013). Similarly, approaches to nlg from structured knowledge bases, expressed in formalisms such as rdf, have described techniques to extract lexicalised grammars or templates from such inputs paired with textual descriptions (Ell & Harth, 2014; Duma & Klein, 2013; Gyawali & Gardent, 2014).\nThe work of Mooney and colleagues (Wong & Mooney, 2007; Chen & Mooney, 2008; Kim & Mooney, 2010) has compared a number of different generation strategies inspired by the wasp semantic parser (Wong & Mooney, 2007), which uses probabilistic synchronous cfg rules learned from pairs of utterances and their semantic representations using statistical machine translation techniques. Chen and Mooney (2008) use this framework for generation both by adapting wasp in a generation framework, and by further adapting it to produce a new system, wasper-gen. While wasp seeks to maximise the probability of a meaning representation (mr) given a sentence, wasper-gen does the opposite, seeking the maximally probable sentence given an input mr, as it were, learning a translation model from meaning to text. When trained on a dataset of sportscasts (the robocup dataset), wasper-gen outperforms wasp on corpusbased evaluation metrics, and is shown to achieve a level of fluency and semantic correctness which approaches that of human text, based on subjective judgements by experimental participants. Note, however, that this framework focusses mainly on tactical generation. Content determination is performed separately, using a variant of the em-algorithm to converge on a probabilistic model that predicts which events or predicates should be mentioned.\nBy contrast, the work of Konstas and Lapata (Konstas & Lapata, 2012, 2013), which also relies on cfgs, uses a unified framework throughout. The starting point is an alignment of text with database records, extending the proposal by Liang et al. (2009). The process of converting input data to output text is modelled in terms of rules which implicitly incorporate different types of decisions. For example, given a database of weather records, the rules might take the simplified form shown below,\n(15) R(windSpeed)\u2192 FS(temperature), R(rain)\n(16) FS(windSpeed,min)\u2192 FS(windSpeed,max)FS(windSpeed,max)\n(17) FS(windSpeed,min)\u2192W (windSpeed,min)\nwhere R stands for a database record, FS is a set of fields, W is a word sequence, and all rules have associated probabilities that condition the rhs on the lhs, akin to the pcfgs used in parsing. These rules specify that a description of windSpeed (15) should be followed in the text by a temperature and a rain report. According to rule (16), minimum windspeed should be followed by maximum windspeed with a certain probability, while rule (17) expands the minimum windspeed rule to a sequence of words according to a bigram language model (Konstas & Lapata, 2012). Konstas and Lapata (2012) pack the set of rules acquired from the alignment stage into a hypergraph, and treat generation as decoding to find the maximally likely word sequence.\nUnder this view, generation is akin to inverted parsing. Decoding proceeds using an adaptation of the cyk algorithm. Since the model defining the mapping from input to output does not incorporate fluency heuristics, the decoder is interleaved with two further sources of linguistic knowledge by Konstas and Lapata (2013): (a) a weighted finite-state automaton (representing an n-gram language model); and (b) a dependency model (cf. Ratnaparkhi, 2000, , also discussed above)."}, {"heading": "3.3.5 Deep learning methods", "text": "We conclude our discussion of statistical methods with an overview of applications of deep neural network (nn) architectures to generation and related tasks. The decision to dedicate a separate section is warranted by the recent, renewed interest in these models, as well as the comparatively small number of studies that have adopted this framework in nlg to date (with the exception of caption generation from images, which we review in Section 4) . However, this is undoubtedly one of the biggest growth areas in current nlg research, as in nlp more generally (see Goldberg, 2016, for an nlp-focussed overview).\nThe recent resurgence of interest in nns is in part due to advances in hardware that can support resource-intensive learning problems (Goodfellow et al., 2016). More importantly, nns are designed to learn representations at increasing levels of abstraction by exploiting backpropagation (LeCun et al., 2015; Goodfellow et al., 2016). Such representations are dense, low-dimensional, and distributed, making them especially well-suited to capturing grammatical and semantic generalisations (see Mikolov et al., 2013; Luong et al., 2013; Pennington et al., 2014, inter alia). nns have also scored notable successes in sequential modelling using feedforward networks (Bengio et al., 2003; Schwenk & Gauvain, 2005), log-bilinear models (Mnih & Hinton, 2007) and recurrent neural networks (rnns Mikolov et al., 2010), including rnns with long short-term memory units (Zaremba et al., 2015). Their main advantage over standard n\u2212gram models is that they represent sequences of varying lengths, while avoiding both data sparseness and an explosion in the number of parameters through the projection of histories into a low-dimensional space, so that similar histories have joint representations.\nLong short-term memory architectures (lstm) are a further development of rnns equipped with memory cells and multiplicative gates that control how information is retained or forgotten. This also enables them to handle long-range dependencies. Ultimately, the goal of such models is to learn a conditional probability p(Y |T ) between an output sequence Y and an input sequence T whose length may differ from that of Y (Sutskever et al., 2014; LeCun et al., 2015). Their ability to map from variable-length inputs to fixed-dimensional vector representations, conditioning the probability of the next element in an output sequence on the fixed-dimensional vector and the previously emitted tokens of the sequence, make them well-suited to tasks such as Machine Translation (mt; e.g. Kalchbrenner & Blunsom, 2013; Bahdanau et al., 2015), which can be viewed as instances of more general sequence-to-sequence (aka seq2seq)\ntasks. Sutskever et al. (2014) showed that lstm architectures can be adapted to different seq2seq problems by decoupling them into an initial lstm encoder for the input and a subsequent decoder. This has given impetus to research on multitask learning, where different tasks share parts of a network architecture and the corresponding representations (Dong et al., 2015; Luong et al., 2016). For example, Luong et al. (2016) showed that improvements can be obtained in mt with a seq2seq architecture whose encoder is co-trained on a parsing dataset; similarly, decoding improved when the decoder (for the target language English) was shared with a caption generator.\nAs a matter of fact, applications of nns in nlg hark back at least to Kukich (1987), though her work was tentative and restricted to small-scale examples. Since the early 1990s, when interest in neural approaches waned in the nlp and ai communities, cognitive science research has continued to explore their application to syntax and language production (e.g., Elman, 1990, 1993; Chang et al., 2006).\nIn the past few years, research on neural models for generation has begun to take off. A starting point can be found in the work of Sutskever et al. (2011), who showed that a character-level lstm rnn could be used to generate grammatical English sentences. Since then, a number of nlg applications have appeared. For instance, Zhang and Lapata (2014a) focus on poetry generation in Chinese using rnns, where verses are generated by predicting characters based on (a) the previous verses in the poem, represented by a convolutional sentence model (Kalchbrenner & Blunsom, 2013); and (b) the previous characters in the current verse. In dialogue, both Wen et al. (2015) and Serban et al. (2016) use rnns to predict the next utterance in a dialogue context, while (Goyal et al., 2016) show that the generation of dialogue acts improves when modelled using a character-based, rather than a word-based rnn.\nThere has also been some work applying nns to data-to-text generation (Mei et al., 2016; Lebret et al., 2016). The lstm-based architecture proposed by Mei et al. (2016) is based on the encoder-decoder framework, with a design that broadly reflects a division into content selection and realisation. The application domain is weathergov data (Angeli et al., 2010). The starting point is a bidirectional lstm rnn encoder which maps input records to a hidden state, followed by an aligner which models content selection. The aligner, inspired by the mt work of Bahdanau et al. (2015) and the attention-based image captioning work of Xu et al. (2015), determines which records to mention as a function of their prior probability and the likelihood of their alignment with words in the vocabulary; a further refinement step weights the outcomes of the alignment with the priors, making it more likely that more important records will be verbalised. Finally, a decoder rnn outputs a word-by-word sequence, at each time step computing a probability distribution over words given the previously generated context and the records. lstms enable the handling of long-range dependencies between records and descriptors, which the log-linear model of Angeli et al. (2010) factored in explicitly (see Section 3.3.2 above).\nThe work of Lebret et al. (2016), by contrast, restricts generation to the initial sentence of wikipedia biographies from the corresponding wiki fact table\nand models content selection and realisation jointly in a feedforward nn (Bengio et al., 2003), conditioning output word probabilities on both local context and global features obtained from the input table. This biases the model towards full coverage of the contents of a field. For example, a field in the table containing a person\u2019s name typically consists of more than one word and the model should concatenate the words making up the entire name. This simpler model can therefore also be characterised as incorporating an attentional mechanism."}, {"heading": "3.4 Discussion", "text": "An important theme that has emerged from recent work is the blurring of boundaries between tasks that are encapsulated in traditional architectures. This is evident in planning-based approaches, but perhaps the most radical break from this perspective arises in stochastic data-to-text systems which capitalise on alignments between input data and output text, combining content-oriented and linguistic choices within a unified framework. Among the open questions raised by research on stochastic nlg is the extent to which sub-tasks need to be jointly optimised and, if so, which knowledge sources should be shared among them.\nAn outstanding issue is the balancing act between achieving adequate textual output versus doing so efficiently and robustly. Early approaches that departed from a pipeline architecture tended to sacrifice the latter in favour of the former; this was the case in revision-based and blackboard architectures. The same is to some extent true of planning-based approaches which are rooted in paradigms with a long history in ai: As recent empirical work has shown (Koller & Petrick, 2011), these too are susceptible to considerable computational cost, though this comes with the advantage of a unified view of language generation that is also compatible with well-understood linguistic formalisms, such as ltag. Stochastic approaches present a different problem, namely, that of acquiring the right data to construct the necessary statistical models. While such data is or can be made available, for tasks such as recommendations, brief weather reports, or sports summaries, it remains to be seen whether existing techniques for data-text alignment can be scaled up to domains where large volumes of heterogeneous data (numbers, symbols etc) are the norm, and where longer texts need to be generated.\nIn any case, one important outcome of much recent data-driven research in nlg is the emphasis on unified formalisms \u2013 from cfgs to markov processes \u2013 that underlie the text generation process at every level. Another interesting development is the use of crowd-sourcing techniques to produce data that aligns non-linguistic input representations with text (Mairesse & Young, 2014; Novikova & Rieser, 2016b).\nAs deep learning approaches become more popular \u2013 and, as we shall see in the next section, they are now the dominant approach in certain tasks, such as generating image captions \u2013 the need for precise alignment could become less acute, as looser input-output couplings can constitute adequate training data (e.g. Wen et al., 2015). As these techniques become better understood, they\nare likely to feature more heavily in a broader range of nlg tasks, as well as end-to-end nlg systems. As a recent opinion piece put it (Manning, 2015), perhaps their attraction for nlp, apart from the advantages of using distributed representations, lies in that they encourage the practitioner to focus on design, that is, on how an architecture can handle the different sub-parts of a complex problem, perhaps along the lines detailed in Section 2 above. Might this entail a renewed emphasis on modular, multi-levelled approaches to nlg, with complex architectures whose components deal with different tasks? On the other hand, research on multi-task learning in the seq2seq paradigm may also open up new possibilities for learning how to solve multiple nlg sub-tasks within a single framework, as many approaches discussed in the previous sub-sections seek to do.\nIn the following sections, we turn our attention away from standard tasks and the way they are organised, focussing on three broad topics \u2013 image-totext generation, stylistic variation and computational creativity \u2013 in which nlg research has also intersected with research in other areas."}, {"heading": "4 The vision-language interface: Image caption-", "text": "ing and beyond\nOver the past few years, there has been an explosion of interest in the task of automatically generating captions for images, as part of a broader endeavour to investigate the interface between vision and language (Barnard, 2016). Image captioning is arguably a paradigm case of data-to-text generation, where the input comes in the form of an image. The task has become a research focus not only in the nlg community but also in the computer vision community, raising the possibility of more effective synergies between the two groups of researchers. Apart from its practical applications, the grounding of language in perceptual data has long been a matter of scientific interest in ai (see Winograd, 1972; Harnad, 1990; Roy & Reiter, 2005, for a variety of theoretical views on the computational challenges of the perception-language interface).\nFigure 6 shows some examples of caption generation, sampled from publications spanning approximately 6 years. Current caption generation research focusses mainly on what Hodosh et al. (2013) refer to as concrete conceptual image descriptions of elements directly depicted in a scene. As Donahue et al. (2015) put it, image captioning is a task whose input is static and non-sequential (an image, rather than, say, a video), whereas the output is sequential (a multiword text), in contrast to non-sequential outputs such as object labels (e.g. Duygulu et al., 2002; Ordonez et al., 2016, among others).\nOur discussion will be brief, since image captioning has recently been the subject of an extensive review by Bernardi et al. (2016), and has also been discussed against the background of broader issues in research on the visionlanguage interface by Barnard (2016). While the present section draws upon these sources, it is organised in a somewhat different manner, also bringing out\nthe connections with nlg more explicitly."}, {"heading": "4.1 Data", "text": "A detailed overview of datasets is provided by Bernardi et al. (2016), while Ferraro et al. (2015) offer a systematic comparison of datasets for both caption generation and visual question answering with an accompanying online resource6.\nDatasets typically consist of images paired with one or more human-authored captions (mostly in English) and vary from artificially created scenes (Zitnick et al., 2013) to real photographs. Among the latter, the most widely used are Flickr8k (Hodosh et al., 2013), Flickr30k (Young et al., 2014) and ms-coco (Lin\n6http://visionandlanguage.net\net al., 2014). Datasets such as the sbu1m Captioned Photo Dataset (Ordonez et al., 2011) include naturally-occurring captions of user-shared photographs on sites such as Flickr; hence the captions included therein are not restricted to the concrete conceptual. There are also a number of specialised, domain-specific datasets, such as the Caltech ucsd Birds datast (cub; Wah et al., 2011).\nThere have also been a number of shared tasks in this area, including the coco (\u2018Common Objects in Context\u2019) Captioning Challenge7, organised as part of the Large-Scale Scene Understanding Challenge (lsun)8 and the Multimodal Machine Translation Task (Elliott et al., 2016). We defer discussion of evaluation of image captioning systems to Section 7 of this paper, where it is discussed in the context of nlg evaluation as a whole."}, {"heading": "4.2 The core tasks", "text": "There are two logically distinguishable sub-tasks in an image captioning system, namely, image analysis and text generation. This is not to say that they need to be organised separately or sequentially. However, prior to discussing architectures as such, it is worth briefly giving an overview of the methods used to deal with these two tasks."}, {"heading": "4.2.1 Image analysis", "text": "There are three main groups of approaches to treating visual information for captioning purposes.\nDetection Some systems rely on computer vision methods for the detection and labelling of objects, attributes, \u2018stuff\u2019 (typically mapped to mass nouns, such as grass), spatial relations, and possibly also action and pose information. This is usually followed by a step mapping these outputs to linguistic structures (\u2018sentence plans\u2019 of the sort discussed in Section 2 and 3), such as trees or templates (e.g. Kulkarni et al., 2011; Yang et al., 2011; Mitchell et al., 2012; Elliott & De Vries, 2015; Yatskar et al., 2014; Kuznetsova et al., 2014). Since performance depends on the coverage and accuracy of detectors (Kuznetsova et al., 2014; Bernardi et al., 2016), some work has also explored generation from gold standard image annotations (Elliott & Keller, 2013; Wang & Gaizauskas, 2015; Muscat & Belz, 2015) or artificially created scenes in which the components are known in advance (Ortiz et al., 2015).\nHolistic scene analysis Here, a more holistic characterisation of a scene is used, relying on features that do not typically identify objects, attributes and the like. Such features include rgb histograms, scale-invariant feature transforms (sift; Lowe, 2004), or low-dimensional representations of spatial structure (as in gist; Oliva & Torralba, 2001), among others. This kind of image processing\n7http://mscoco.org/dataset/#captions-challenge2015 8http://lsun.cs.princeton.edu/2016/\nis often used by systems that frame the task in terms of retrieval, rather than caption generation proper. Such systems either use a unimodal space to compare a query image to training images before caption retrieval (e.g. Ordonez et al., 2011; Gupta et al., 2012), or exploit a multimodal space representing proximity between images and captions (e.g. Hodosh et al., 2013; Socher et al., 2014).\nDense image feature vectors Given the success of convolutional neural networks (cnn) for computer vision tasks (cf. e.g., LeCun et al., 2015), many deep learning approaches use features from a pre-trained cnn such as AlexNet (Krizhevsky et al., 2012), vgg (Simonyan & Zisserman, 2015) or Caffe (Jia et al., 2014). Most commonly, caption generators use an activation layer from the pre-trained network as their input features (e.g. Kiros et al., 2014; Karpathy et al., 2014; Karpathy & Fei-Fei, 2015; Vinyals et al., 2015; Mao et al., 2015a; Xu et al., 2015; Yagcioglu et al., 2015; Hendricks et al., 2016b)."}, {"heading": "4.2.2 Text generation or retrieval", "text": "Depending on the type of image analysis technique, captions can be generated using a variety of different methods, of which the following are well-established.\nUsing templates or trees Systems relying on detectors can map the output to linguistic structures in a sentence planning stage. For example, objects can be mapped to nouns, spatial relations to prepositions, and so on. Yao et al. (2010) use semi-supervised methods to parse images into graphs and then generate text via a simple grammar. Other approaches rely on sequence classification algorithms, such as Hidden Markov Models (Yang et al., 2011) and conditional random fields (Kulkarni et al., 2011, 2013). Kulkarni et al. (2013, see the example in Figure 6b) experiment with both templates and web-derived n\u2212gram language models, finding that the former are more fluent, but suffer from lack of variation, an issue we also addressed earlier, in connection with realisation (Section 2.6).\nIn the Midge system (Mitchell et al., 2012, see Figure 6d for an example caption), input images are represented as triples consisting of object/stuff detections, action/pose detections and spatial relations. These are subsequently mapped to \u3008noun, verb, preposition\u3009 triples and realised using a tree substitution grammar. This is further enhanced with the ability to \u2018hallucinate\u2019 likely words using a probabilistic model, that is, insert words which are not directly grounded in the detections performed on the image itself, but have a high probability of occurring, based on corpus data. In a human evaluation, Midge was shown to outperform both the system by (Kulkarni et al., 2011) and (Yang et al., 2011) on a number of criteria, including humanlikeness and correctness.\nElliott and Keller (2013) use visual dependency representations (vdr), a dependency grammar-like formalism to describe spatial relations between objects based on physical features such as proximity and relative position. Detections from an image are mapped to their corresponding vdr relations prior to generation (see also Elliott & De Vries, 2015, and the example in Figure 6c). Ortiz\net al. (2015) use ilp to identify pairs of objects in abstract scenes (Zitnick & Parikh, 2013) before mapping them to a vdr. Realisation is framed as a machine translation task over vdr-text pairs. A similar concern with identifying spatial relations is found in the work of Lin and Kong (2015), who use scene graphs as input to a grammar-based realiser. Muscat and Belz (2015) propose a naive Bayes model to predict spatial prepositions based on image features such as object proximity and overlap.\nUsing language models Using language models has the potential advantage of facilitating joint training from image-language pairs. It may also yield more expressive or creative captions if it is used to overcome the limitations of grammars or templates (as shown by the example of Midge; Mitchell et al., 2012). In some cases, n-gram models are trained on out-of-domain data, the approach taken by (Li et al., 2011, using web-scale n\u2212grams) and Fang et al. (2015, using a maximum entropy language model). Most deep learning architectures use language models in the form of vanilla rnns or long short-term memory networks (e.g. Kiros et al., 2014; Vinyals et al., 2015; Donahue et al., 2015; Karpathy & Fei-Fei, 2015; Xu et al., 2015; Hendricks et al., 2016b, 2016a; Mao et al., 2016). These architectures model caption generation as a process of predicting the next word in a sequence. Predictions are biased both by the caption history generated so far (or the start symbol for initial words) and by the image features which, as noted above, are typically features extracted from a cnn trained on the object detection task.\nCaption retrieval and recombination Rather than generate captions, some systems retrieve them based on training data. The advantage of this is that it guarantees fluency, especially if retrieval is of whole, rather than partial, captions. Hodosh et al. (2013) used a multimodal space to represent training images and captions, framing retrieval as a process of identifying the nearest caption to a query image. The idea of \u2018wholesale\u2019 caption retrieval has a number of precedents. For example Farhadi et al. (2010) use Markov random fields to parse images into \u3008object,action, scene\u3009 triples, paired with parsed captions. A caption for a query image is retrieved by comparing it to the parsed images in the training data, finding the most similar based on WordNet. Similarly, the Im2Text (Ordonez et al., 2011) system ranks candidate captions for a query image. Devlin et al. (2015b) use a k nearest neighbours approach, with caption similarity quantified using bleu (Papineni et al., 2002) and cider (Vedantam et al., 2015). A different view of retrieval is proposed by Feng and Lapata (2010), who use extractive summarisation techniques to retrieve descriptions of images and associated narrative fragments from their surrounding text in news articles.\nA potential drawback of wholesale retrieval is that captions in the training data may not be well-matched to a query image. For instance, Devlin et al. (2015b) note that the less similar a query is to training images, the more generic the caption returned by the system. A possible solution is to use partial matches,\nretrieving and recombining caption fragments. Kuznetsova et al. (2014) use detectors to match query images to training instances, retrieving captions in the form of parse tree fragments which are then recombined. Mason and Charniak (2014) use a domain-specific dataset to extract descriptions and adapt them to a query image using a joint visual and textual bag-of-words model. In the deep learning paradigm, both Socher et al. (2014) and Karpathy et al. (2014) use word embeddings derived from dependency parses, which are projected, together with cnn image features, into a multimodal space. Subsequent work by Karpathy and Fei-Fei (2015) showed that this fine-grained pairing works equally well with word sequences, eschewing the need for dependency parsing.\nRecently, Devlin et al. (2015a) compared nearest-neighbour retrieval approaches to different types of language models for caption generation, specifically, the Maximium Entropy approach of Fang et al. (2015), an lstm-based approach and rnns which are coupled with a cnn for image analysis (e.g. Vinyals et al., 2015; Donahue et al., 2015; Karpathy & Fei-Fei, 2015). A comparison of the linguistic quality of captions suggested that there was a significant tendency for all models to reproduce captions observed in the training set, repeating them for different images in the test set. This could be due to a lack of diversity in the data, which might also explain why the nearest neighbour approach compares favourably with language model-based approaches."}, {"heading": "4.3 How is language grounded in visual data?", "text": "As the foregoing discussion suggests, views on the relationship between visual and linguistic data depend on how each of the two sub-tasks is dealt with. Thus, systems which rely on detections tend to make a fairly clear-cut distinction between input processing and content selection on the one hand, and sentence planning and realisation on the other (e.g. Kulkarni et al., 2011; Mitchell et al., 2012; Elliott & Keller, 2013). The link between linguistic expressions and visual features is mediated by the outcomes of the detectors. For example, Midge (Mitchell et al., 2012) uses the object detections to determine which nouns to mention, before fleshing out the caption with attributes (mapped to adjectives) and verbs. Similarly, Elliott and Keller (2013) uses vdrs to determine spatial expressions.\nRetrieval-based systems relying on unimodal or multimodal similarity spaces represent the link between linguistic expressions and image features more indirectly. Here, similarity plays the dominant role. In a unimodal space (Ordonez et al., 2011; Gupta et al., 2012; Mason & Charniak, 2014; Kuznetsova et al., 2012, 2014), it is images which are compared, with (partial) captions retrieved based on image similarity. A number of deep learning approaches also broadly conform to this scheme. For example, both Yagcioglu et al. (2015) and (Devlin et al., 2015b) retrieve and rank captions for a query image, using a cnn for the representation of the visual space. By contrast, multimodal spaces involve a direct mapping between visual and linguistic features (e.g. Hodosh et al., 2013; Socher et al., 2014; Karpathy et al., 2014), enabling systems to map from images to \u2018similar\u2019 \u2013 that is, related or relevant \u2013 captions.\nMuch interesting work on vision-language integration is being carried out with deep learning models. Kiros et al. (2014) introduced multimodal neural language models (mrnn), experimenting with two main architectures. Their Modality-Biased Log-Bilinear Model (mlbl-b) uses an additive bias to predict the next word in a sequence based on both the linguistic context and cnn image features. The Factored 3-way Log-Bilinear Model (mlbl-f) also gates the representation matrix for a word with image features. In a related vein, Donahue et al. (2015) propose a combined cnn + lstm architecture (also used by Venugopalan et al., 2015b, 2015a, for video captioning) where the next word is predicted as a function of both previous words and image features. In one version of the architecture, they inject cnn features into the lstm at each timestep. In a second version, they use two stacked lstms, the first of which takes cnn features and produces an output which constitutes the input to the next lstm to predict the word. Finally, Mao et al. (2015a) experiment with various mrnn configurations, obtaining their best results with an architecture in which there are two word embedding layers preceding the recurrent layer, which is in turn projected into a multimodal layer where linguistic features are combined with cnn features. An example caption is shown in Figure 6e above.\nThese neural network models shed light on the consequences of combining the two modalities at different stages, reflecting the point made by Manning (2015, cf. Section 3.3.5) that this paradigm encourages a focus on architectures and design. In particular, image features can be used to bias the recurrent, language generation layer \u2013 at the start, or at each time-step of the rnn \u2013 as in the wrk of Donahue et al. (2015). Alternatively, the image features can be combined with linguistic features at a stage following the rnn, as in the work of Mao et al. (2015a)."}, {"heading": "4.4 Vision and language: Current and future directions for NLG", "text": "Image to text generation is one area of nlg where there is a clear dominance of deep learning methods. Current work focusses on a number of themes:\n1. Generalising beyond training data is still a challenge, as shown by the work of Devlin et al. (2015a). More generally, dealing with novel images remains difficult, though experiments have been performed on using outof-domain training data to expand vocabulary (Ordonez et al., 2013), learn novel concepts (Mao et al., 2015b) or transfer features from image regions containing known labels, to similar, but previously unattested ones (Hendricks et al., 2016b, from which an example caption is shown in Figure 6f). Progress in zero-shot learning, where the aim is to identify or categorise images for which little or no training data is available, is likely to contribute to the resolution of data sparseness problems (e.g. Antol et al., 2014; Elhoseiny et al., 2017).\n2. Attention is also being paid to what Barnard (2016) refers to as localisation, that is, the association of linguistic expressions with parts of images,\nand the ability to generate descriptions of specific image regions. Recent work includes that of Karpathy and Fei-Fei (2015), Johnson et al. (2016) and (Mao et al., 2016), who focus on unambiguous descriptions of specific image regions and/or objects in images (see Section 2.5 above for some related work). Attention-based models are a further development on this front. These have been exploited in various seq2seq tasks, notably for machine translation (Bahdanau et al., 2015). In the case of image captioning, the idea is to allocate variable weights to portions of captions in the training data, depending on the current context, to reflect the \u2018relevance\u2019 of a word given previous words and an image region (Xu et al., 2015).\n3. Recent work has also begun to explore generation from images that goes beyond the concrete conceptual, for instance, producing explanatory descriptions (Hendricks et al., 2016a). A further development is work on Visual Question Answering, where rather than descriptive captions, the aim is to produce responses to specific questions about images (Geman et al., 2015; Barnard, 2016; Antol et al., 2015; Malinowski et al., 2016). Recently, a new dataset was proposed providing both concrete conceptual and \u2018narrative\u2019 texts coupled with images (Huang et al., 2016), a promising new direction for this branch of nlg.\n4. There is a growing body of work that generalises the task from static inputs to sequential ones, especially videos (e.g. Kojima et al., 2002; Regneri et al., 2013; Venugopalan et al., 2015b, 2015a). Here, the challenges include handling temporal dependencies between scenes, but also dealing with redundancy."}, {"heading": "5 Variation: Generating text with style, person-", "text": "ality and affect\nBased on the preceding sections, the reader could be excused for thinking that nlg is mostly concerned with delivering factual information, whether this is in the form of a summary of weather data, or a description of an image. This bias was also flagged in the Introduction, where we gave a brief overview of some domains of application, and noted that informing was often, though not always, the goal in nlg.\nOver the past decade or so, however, there has been a growing trend in the nlg literature to also focus on aspects of textual information delivery that are arguably non-propositional, that is, features of text that are not strictly speaking grounded in the input data, but are related to the manner of delivery. In this section, we focus on these trends, starting with the broad concept of \u2018stylistic variation\u2019, before turning to generation of affective text and politeness."}, {"heading": "5.1 Generating with style: textual variation and personality", "text": "What does the term \u2018linguistic style\u2019 refer to? Most work on what we shall refer to as \u2018stylistic nlg\u2019 shies away from a rigorous definition, preferring to operationalise the notion in the terms most relevant to the problem at hand.\n\u2018Style\u2019 is usually understood to refer to features of lexis, grammar and semantics that collectively contribute to the identifiability of an instance of language use as pertaining to a specific author, or to a specific situation (thus, one distinguishes between levels of stylistic formality, or speaks of the distinctive characteristics of the style of William Faulkner). This implies that any investigation of style must concern itself, at least in part, with variation among the features that mark such authorial or situational variables. In line with this usage, this section reviews developments in nlg in which variation is the key concern, usually at the tactical, rather than the strategic, level, the idea being that a given piece of information can be imparted in linguistically distinct, ways (cf. van der Sluis & Mellish, 2010). This strategy was, for example, explicitly adopted by Power et al. (2003).\nGiven its emphasis on linguistic features, controlling style (however it is defined) is a problem of great interest for nlg since it directly addresses issues of choice, which are arguably the hallmark of any nlg system (c.f. Reiter, 2010). Early contributions in this area defined stylistic features using rules to vary generation according to pragmatic goals. For example, McDonald and Pustejovsky (1985) argued that \u2018prose style Is a consequence of what decisions are made during the transition from the conceptual representation level to the linguistic level\u2019 (p. 61), thereby placing the problem within the domain of sentence planning and realisation. This stance was also adopted by DiMarco and Hirst (1993), who focus on syntactic variation, proposing a stylistic grammar for English and French.\nMore recently, a similar perspective was adopted by Walker et al. (2002), in their description of how the spot sentence planner was adapted to learn strategies for different communicative goals, as reflected in the rhetorical and syntactic structures of the sentence plans. The planner was trained using a boosting technique to learn correlations between features of sentence plans and human ratings of the adequacy of a sample of outputs for different communicative goals.\nLike Walker et al. (2002), contemporary approaches to stylistic variation have tended to eschew rules in favour of data-driven methods to identify relevant features and dimensions of variation from corpora, in what might be thought of as an inductive view of style, where variation is characterised by the distribution of whatever linguistic features are considered relevant. An important precedent for this view is Biber\u2019s corpus-based multidimensional approach to style and register variation (Biber, 1988), roughly a contemporary of the grammar-inspired approach of DiMarco and Hirst (1993).\nBiber\u2019s model was at the heart of work by Paiva and Evans (2005), which exhibits some characteristics in common with the \u2018global\u2019 statistical approaches to nlg discussed in Section 3.3, insofar as it exploits statistics to inform decision-\nmaking at the relevant choice points, rather than to filter the outputs of an overgeneration module. Paiva and Evans (2005) used a corpus of patient information leaflets, conducting factor analysis on their linguistic features to identify two stylistic dimensions. They then allowed their system to generate a large number of texts, varying its decisions at a number of choice points (e.g. choosing a pronoun versus a full np) and maintaining a trace. Texts were then scored on the two stylistic dimensions, and a linear regression model was developed to predict the score on a dimension based on the choices made by the system. This model was used during testing to predict the best choice at each choice point, given a desired style. Style, however, is a global feature of a text, though it supervenes on local decisions. These authors solved the problem by using a best-first search algorithm to identify the series of local decisions as scored by the linear models, that was most likely to maximise the desired stylistic effect, yielding variations such as the following (examples from Paiva & Evans, 2005, p. 61):\n(18) The dose of the patient\u2019s medicine is taken twice a day. It is two grams.\n(19) The two-gram dose of the patient\u2019s medicine is taken twice a day.\n(20) The patient takes the two-gram dose of the patient\u2019s medicine twice a day.\nSome authors (e.g., Mairesse & Walker, 2011, , on which more below) have noted that certain features, once selected, may \u2018cancel\u2019 or obscure the stylistic effect of other features. This raises the question whether style can in fact be modelled as a linear, additive phenomenon, in which each feature contributes to an overall perception of style independently of others (modulo its weight in the regression equation).\nA second question is whether stylistic variation could be modelled in a more specific fashion, for example, by tailoring style to a specific author, rather than to generic dimensions related to \u2018formality\u2019, \u2018involvement\u2019 and so on. For instance a corpus-based analysis of human-written weather forecasts by Reiter et al. (2005) found that lexical choice varies in part based on the author. One line of work has investigated this using corpora of referring expressions, such as the tuna Corpus (van Deemter et al., 2012a), in which multiple referring expressions by different authors are available for a given input domain. For instance, Bohnet (2008) and Di Fabbrizio et al. (2008) explore statistical methods to learn individual preferences for particular attributes, a strategy also used by Viethen and Dale (2010). Herva\u0301s et al. (2013) use case-based reasoning to inform lexical choice when realising a set of semantic attributes for a referring expression, where the case base differentiates between authors in the corpus to take individual lexicalisation preferences into account (see also Herva\u0301s et al., 2016).\nA more ambitious view of individual variation is present in the work of Mairesse and Walker (2010, 2011), in the context of nlg for dialogue systems. Here, the aim is to vary the output of a generator so as to project different\npersonality traits. Similar to the model of Biber (1988), personality is here given a multidimensional definition, via the classic \u2018Big 5\u2019 model (e.g., John & Srivastava, 1999), where personality is a combination of five major traits (e.g. introversion/extraversion). However, while stylistic variation is usually defined as a linguistic phenomenon, the linguistic features of personality are only indirectly reflected in speaking or writing (a hypothesis underlying much work on detection of personality and other features in text, including Oberlander & Nowson, 2006; Argamon et al., 2007; Schwartz et al., 2013; Youyou et al., 2015).\nMairesse and Walker\u2019s personage system, which was developed in the restaurant domain, takes as input a pragmatic goal and, like the system of Paiva and Evans (2005), a list of real-valued style parameters, this time representing scores on the five personality traits. The system estimates generation parameters for stylistic features based on the input traits, using machine-learned models acquired from a dataset pairing sample utterances with human personality judgements. For example, an utterance reflecting high extraversion might be more verbose and involve more use of expletives (see example 21), compared to a more introverted style, which might demonstrate more uncertainty, for example through the use of stammering and hedging (example 22).\n(21) Kin Khao and Tossed are bloody outstanding. Kin Khao just has rude staff. Tossed features sort of unmannered waiters, even if the food is somewhat quite adequate.\n(22) Err... I am not really sure. Tossed offers kind of decent food. Mmhm... However, Kin Khao, which has quite ad-ad-adequate food, is a thai place. You would probably enjoy these restaurants.\nAn interesting outcome of the evaluation with human subjects reported by Mairesse and Walker (2011) is that readers vary significantly in their judgements of what personality is actually reflected by a given text. This suggests that the relationship between such psychological features and their linguistic effects is far from straightforward. The same could probably be said of stylistic more generally. Clearly, this is an area that is ripe for further research."}, {"heading": "5.2 Generating with feeling: affect and politeness", "text": "Personality is usually thought of in terms of traits, which are relatively stable across time. However, language use may vary not only across individuals, as a function of their stable characteristics, but also within individuals across time, as a function of their more transient affective states. \u2018Affective nlg\u2019 (a term due to De Rosis & Grasso, 2000) is concerned with variation that reflects emotional states which, unlike personality traits, are relatively transient. In this case, the goals can be twofold: i) to induce an emotional state in the receiver; or (ii) to reflect the emotional state of the producer.\nAs in the case of personality, the relationship between emotion and language is far from clear, as noted by Belz (2003). For one thing, it isn\u2019t clear whether\nonly surface linguistic choices need be affected. Some authors have argued that a text\u2019s affective impact impinges on content selection; this stance has been adopted, for example, in some applications in e-health where reporting of health-related issues should be sensitive to their potential emotional impact (DiMarco et al., 2007; Mahamood & Reiter, 2011).\nMost work on affective nlg has however focussed on tactical choices (e.g. Hovy, 1988; Fleischman & Hovy, 2002; Strong et al., 2007; van Deemter et al., 2008). Various linguistic features that can have emotional impact have been identified, from the increased use of redundancy to enhance understanding of emotionally laden messages (Walker, 1992; De Rosis & Grasso, 2000), to the increased use of first-person pronouns and adverbs, as well as sentence ordering to achieve emphasis or reduce adverse emotional impact (De Rosis & Grasso, 2000).\nThis research on affective nlg relies on models of emotion of various degrees of complexity and cognitive plausibility. The common trend underlying all these approaches however is that emotional states should impact lexical, syntactic and other linguistic choices. The question then is to what extent such choices are actually perceived by readers or users of a system.\nIn an empirical study, van der Sluis and Mellish (2010) reported on two experiments investigating the effect of various tactical decisions on the emotional impact of text on readers. In one experiment, texts gave a (fake) report to participants on their performance on an aptitude test, with manually induced variations, such as these:\n(23) Positive slant: On top of this you also outperformed most people in your age group with your exceptional scores for Imagination and Creativity (7.9 vs 7.2) and Logical- Mathematical Intelligence (7.1 vs. 6.5).\n(24) Neutral/factual slant: You did better than most people in your age group with your scores for Imagination and Creativity (7.9 vs 7.2) and Logical-Mathematical Intelligence (7.1 vs. 6.5).\nEvaluation of these texts showed that the extent to which affective tactical decisions influence hearer\u2019s emotional states is dependent on a host of other factors, including the degree to which the reader is directly implicated in what the text says (in the case of an aptitude test, the reader would be assumed to feel the outcomes have personal relevance). An important question raised by this study is how affect should be measured: van der Sluis and Mellish (2010) used a standardised self-rating questionnaire to estimate changes in affect before and after reading a text, but the best way to measure emotion remains an open question.\nThe emotional slant in the language used by an author or speaker may have implications for the degree to which the listener or reader may feel \u2018impinged upon\u2019. This becomes particularly relevant in interactive systems, where nlg components are generating language in the context of dialogue. Consider, for example, the difference between these requests:\n(25) Direct strategy: Chop the tomatoes!\n(26) Approval strategy: Would it be possible for you to chop the tomatoes?\n(27) Autonomy strategy: Could you possibly chop the tomatoes?\n(28) Indirect strategy: The tomatoes aren\u2019t chopped yet.\nThe four strategies exemplified above come across as having varying degrees of politeness which, according to one influential account (Brown & Levinson, 1987), depends on face. Positive face reflects the speaker\u2019s desire that some of her goals be shared with her interlocutors; negative face refers to the speaker\u2019s desire not to have her goals impinged upon by others. The connection with affect that we suggested above hinges on these distinctions: different degrees of politeness reflect different degrees of \u2018threat\u2019 to the listener; hence, generating language based on the right face strategy could be seen as a branch of affective nlg.\nIn an early, influential proposal, Walker et al. (1997) proposed an interpretation of (Brown & Levinson, 1987) in terms of the four dialogue strategies, exemplified in (25 \u2013 28) above. Subsequently, Moore et al. (2004) used this framework in the generation of tutorial feedback, where a discourse planner used a Bayesian network to inform linguistic choices compatible with the target politeness/affect value in a given context (see Johnson et al., 2004, for a related approach).\nGupta et al. (2007) also used the four dialogue strategies identified by Walker et al. (1997) in the polly system, which used strips-based planning to generate a plan distributed among two agents in a collaborative task (see also Gupta et al., 2008). An interesting finding in their evaluation is that perception of facethreat depends on the speech act; for example, requests can be more threatening. Gupta et al. (2007) also note possible cultural differences in perception of face threat (in this case, between uk and Indian participants)."}, {"heading": "5.3 Style and affect: concluding remarks", "text": "In summary, work on variation in nlg, mostly focussing on tactical decisions, or surface-level linguistic features, has sought to model differences of register or style as well as individual differences due to personality and affective state.\nThis area of nlg research is still in a rather fledgling state, with several open questions of both theoretical and computational import. Among these is the question of how best to model complex, multi-dimensional constructs such as personality or emotion; this question speaks both to the cognitive plausibility of the models informing linguistic choices, and to the practical viability of different machine learning strategies that could be leveraged for the task (for example, linear, additive models versus more \u2018global\u2019 models of personality or style). Also important here is the kind of data used to inform generation strategies: as we have seen above, a lot of affective nlg work relies on ratings by human judges. However, some recent work in affective computing has questioned the\nuse of ratings, comparing them to ranking-based and physiological methods (e.g. Martinez et al., 2014; Yannakakis & Mart\u0301\u0131nez, 2015). This and similar research is probably of high relevance to nlg researchers.\nA second important question is which linguistic choices truly convey the intended variation to the reader or listener. While current systems use a range of devices, from aggregation strategies to lexical choice, it is not clear which ones are actually perceived as having the desired effect.\nA third important research avenue, which is especially relevant to interactive systems, is adaptivity, that is, the way speakers (or systems) alter their lingiuistic choices as a result of their interlocutors\u2019 utterances (Clark, 1996; Niederhoffer & Pennebaker, 2002; Pickering & Garrod, 2004), a theme that has also begun to be explored in nlg"}, {"heading": "6 Generating creative and entertaining text", "text": "\u2018Good\u2019 writers not only present their ideas in coherent and well-structured prose. They also succeed in keeping the attention of the reader through narrative techniques, and in occasionally surprising the reader, for example, by creative language use such as small jokes or well-placed metaphors (see e.g., among many others, Flower & Hayes, 1981; Nauman et al., 2011; Veale & Li, 2015). The nlg techniques and applications that we discussed so far in this survey, arguably, do not simulate good writers in this sense, and as a result automatically generated texts can be perceived as somewhat boring and repetitive.\nThis lack of attention to creative aspects of language production within nlg is not due to a general lack of scholarly interest in these phenomena. Indeed, computational research into creativity has a long tradition, with roots that go back to the early days of ai (as Gerva\u0301s, 2013, notes, the first story generation algorithm on record, Novel Writer, was developed by Sheldon Klein in 1973). However, it is fair to say that, so far, there has been little interaction between researchers from the computational creativity and nlg communities respectively, even though both groups in our opinion could learn a lot from each other. In particular, nlg researchers stand to benefit from insights into what constitutes creative language production, as well as structural features of narrative that have the potential to improve nlg output even in data-to-text systems (see Reiter et al., 2008, for an argument to this effect in relation to a medical text generation system). At the same time, researchers in computational creativity could also benefit from the insights provided by the nlg community where the generation of fluent language is concerned since, as we shall see, a lot of the focus in this research, especially where narrative is concerned, is on the generation of plans and on content determination.\nIn what follows, we give an overview of automatic approaches to creative language production, starting from relatively simple jokes and metaphors to more advanced forms, such as narratives."}, {"heading": "6.1 Generating puns and jokes", "text": "Consider:\n(29) What\u2019s the difference between money and a bottom? One you spare and bank, the other you bare and spank.\n(30) What do you call a weird market? A bizarre bazaar.\nThese two (pretty good!) punning riddles were automatically generated by the jape system developed by Binsted and Ritchie (1994, 1997). Punning riddles form a specific joke genre and have received considerable attention in the context of computational humor, presumably because they are relatively straightforward to define, often relying on spelling or word sense ambiguities. Many good, human-produced examples have been collected in joke books and sites and may thus act as a source of inspiration.\nSimplifying somewhat, jape (Joke Analysis and Production Engine) relies on a template-based nlg system, combining fixed text (What\u2019s the difference between X and Y? or What do you call X?) with slots, which are the source of the riddle. Various standard lexical resources are used for joke production, including a British pronunciation dictionary (to find different words with a similar pronunciation, such as \u2018bizarre\u2019 and \u2018bazaar\u2019) and WordNet (Miller, 1995, to find words with a similar meaning, such as bazaar and market). jape uses various techniques to create the punning riddles, such as juxtaposition, in which related words are simply placed next to each other and treated as a normal construction, while making sure that the combination is novel (i.e., not in the jape database already). It is interesting to observe that in this way jape may automatically come up with existing jokes (a quick Google search reveals that many bizarre bazaars, as well as bazaar bizarres, exist).\nnlg evaluation is difficult, in general (as we will discuss in more detail in Section 7 below) and evaluation of humorous nlg is arguably even harder. Nevertheless, Binsted et al. (1997) showed that it can be done, in an elegant manner. They presented 120 8-11 year old children with a number of punning riddles, some automatically generated by jape and some selected from joke books. They also included a number of non-joke controls, such as:\n(31) What do you get when you cross a horse and a donkey? A mule\nFor each stimulus that they were exposed to, children were asked to indicate whether they thought it was a joke, and how funny they considered it. The results revealed that computer generated riddles were recognised as jokes, and considered funnier than non-jokes. Interestingly, the joke children rated highest was automatically generated by jape (we urge the reader to inspect the original paper), although in general, human-produced jokes were considered funnier by children than automatically generated ones.\nFollowing the seminal work of Binsted and Ritchie, various other systems have been developed which can automatically generate jokes, including for example the hahacronym system of Stock and Strapparava (2005), which produces humorous acronyms, and the system of Binsted et al. (2003), which focusses on the generation of referential jokes (\u201cIt was so cold, I saw a lawyer with his hands in his own pockets.\u201d).\nPetrovic and Matthews (2013) offer an interesting, unsupervised alternative to this earlier work, which does not require labelled examples or hard-coded rules . Like their predecessors, Petrovic and Matthews also start from a template \u2013 in their case I like my X like I like my Y, Z \u2013 where X and Y are nouns (e.g., coffee and war) and Z is an attribute (e.g., cold). Clearly, linguistic realisation is not an issue, but content selection \u2013 finding \u2018funny\u2019 triples X, Y and Z \u2013 is a challenge. Interestingly, the authors postulate a number of guiding principles for \u2018good\u2019 triples. In particular, they hypothesize that (a) the joke is funnier if the attribute Z can be used to describe both nouns X and Y ; (b) the joke is funnier if attribute Z is both common and ambiguous;and (c) the joke is funnier the more dissimilar X and Y are. These three statements can be quantified relying on standard resources such as Wordnet and the Google n-gram corpus (Brants & Franz, 2006), and using these measures their system outputs, for example:\n(32) I like my relationships like I like my source, open.\nAgain, evaluation is tricky \u2013 but interesting. The authors harvested humanwritten jokes from Twitter, conforming to the same I like my X . . . template, after which their different models are used to generate new jokes, not found anywhere on line, with the same X but different Y and Z. Human judges then blindly rated both the human and the model-generated jokes. Results showed that the jokes of the best model were rated as funny in 16% of the cases. This may not seem like much, but it should be taken into account that whether you think something is funny or not is presumably very personal; indeed only 33% of the human jokes were considered funny.\nIt is probably fair to say that computational joke generation research to date has mostly focussed on laying bare the basic structure of certain relatively simple puns and exploiting these to good effect (e.g., Ritchie, 2009). However, many other kinds of jokes exist, often requiring sophisticated, hypothetical reasoning. Presumably, many of the central problems within ai need to be solved first before generation systems will be capable of producing these kinds of advanced jokes."}, {"heading": "6.2 Generating metaphors and similes", "text": "Whether you think something is funny or not may be subjective, but in any case insights from joke generation can be useful as a stepping stone towards a better understanding of creative language use, including metaphor, simile and analogy. In all of these, a mapping is made between two conceptual domains, in such a way that terminology from the source domain is used to say something\nabout the target domain, typically in a nonliteral fashion, which can be helpful in computer-generated texts to illustrate complex information. For example, Herva\u0301s et al. (2006) study analogies in narrative contexts, such as Luke Skywalker was the King Arthur of the Jedi Knights, which immediately clarifies an important aspect of Luke Skywalker for those not in the know. In a simile, the two domains are compared (A \u2018is like\u2019 B); in a metaphor they are equated. Jokes and metaphors/similes are related: the automatically generated jokes of Petrovic and Matthews are comparable to similes, while Kiddon and Brun (2011), for example, frame the problem of identifying double entendre jokes as a type of metaphor identification. Nevertheless, one could argue that generating jokes is more complex because of the extra funniness constraint.\nLike computational humor, the automatic recognition and interpretation of metaphorical, non-literal language has received considerable attention since the early days of ai (see Shutova et al., 2012, for an overview). Martin (1990, 1994), for example, focussed on the recognition of metaphor in the context of Unix Support, as in the following examples:\n(33) How can I kill a process?\n(34) How can I enter lisp?\nThe first one, for example, makes a mapping between \u2018life\u2019 (source) and \u2018processes\u2019 (target), and is by now so common that is almost a dead metaphor, but this was not the case in the early days of Unix. Clearly, understanding of the metaphors is a prerequisite for automatically answering these questions. Early research on the computational interpretation of metaphor already recognised that metaphors rely on semantic conventions that are exploited (\u2018broken\u2019) to express new meanings. A system for metaphor understanding, as well as one for metaphor generation, therefore requires knowledge about what literal meanings are, and how these can be stretched or translated into metaphoric meanings (e.g., Wilks, 1978; Fass, 1991).\nRecent work by Veale and Hao (Veale & Hao, 2007, 2008) has shown that this kind of knowledge can be acquired from the web, and used for the generation of new metaphors and similes (comparisons). Their system, called Sardonicus, is capable of generating metaphors for user-provided targets (t), such as the following, expressing that Paris Hilton (\u2018the person, not the hotel, though the distinction is lost on Sardonicus\u2019 Veale & Hao, 2007, p.1474) is skinny:\n(35) Paris Hilton is a stick\nSardonicus searches the web for nouns (n) that are associated with skinniness, which are included in a case-base and range from pole, pencil, and stick to snake and stick insect. Inappropriate ones (like cadaver) are ruled out, based on the theory of category-inclusion of Glucksberg (2001). This list of potential similes is then used to create Google queries, inspired by the work of Hearst (1992), of the form n-like t (e.g., stick insect-like Paris Hilton, which actually occurs on the web), giving a ranking of the potential similes to be generated.\nA comparable technique is used by Veale (2013) to generate metaphors with an affective component, as in \u2018Steve Jobs was a great leader, but he could be such a tyrant\u2019. The Google n-gram corpus is used to find stereotypes suitable for simile generation (e.g., \u2018lonesome as a cowboy\u2019), a strategy reminiscent of the use of web-scale n\u2212gram data to smooth the output of image-to-text systems (see Section4). Next, an affective dimension is added, based on the assumption that properties occurring in a conjunction (\u2018as lush and green as a jungle\u2019) are more likely to have the same affect than properties that do not. Using positive (e.g., \u2018happy\u2019, \u2018wonderful\u2019) and negative (e.g., \u2018sad\u2019, \u2018evil\u2019) seeds, coordination queries (e.g., \u2018happy and X\u2019) are used to collect positive and negative labels for stereotypes, indicating, for instance, that babies are positively associated with qualities such as \u2018smiling\u2019 and \u2018cute\u2019, and negatively associated with \u2018crying\u2019 and \u2018sniveling\u2019. This enables the automatic generation of positive (\u2018cute as a baby\u2019) and negative (\u2018crying like a baby\u2019) similes. Veale (2013) even points out that by collecting, for example, a number of negative metaphors for Microsoft being a monopoly, and using these in a set of predefined tropes, it becomes possible to automatically generate a poem such as the following:"}, {"heading": "No Monopoly Is More Ruthless", "text": "Intimidate me with your imposing hegemony No crime family is more badly organized, or controls more ruthlessly Haunt me with your centralized organization Let your privileged security support me O Microsoft, you oppress me with your corrupt reign\nIn fact, automatic generation of poetry is an emerging area at the crossroads of computational creativity and natural language generation (see for example Lutz, 1959; Gerva\u0301s, 2001; Wong et al., 2008; Netzer et al., 2009; Greene et al., 2010; Colton et al., 2012; Manurung et al., 2012; Zhang & Lapata, 2014b, for variations on this theme)."}, {"heading": "6.3 Generating narratives", "text": "Computational narratology is concerned with computational models for the generation and interpretation of narrative texts (e.g., Gerva\u0301s, 2009; Mani, 2010, 2013). The starting point for many approaches to narrative generation is a view of narrative coming from classical narratology, a branch of literary studies with roots in the Formalist and Structuralist traditions (e.g., Propp, 1968; Genette, 1980; Bal, 2009). This field has been concerned with analysing both the defining characteristics of narrative, such as plot or character, and more subtle features, such as the handling of time and temporal shifts, focalisation (that is, the ability to convey to the reader that a story is being recounted from a specific point of view), and the interaction of multiple narrative threads, in the form of sub-plots, parallel narratives, etc. An important recent development is the interest, on the part of narratologists, in bringing to bear insights from Cognitive Science and ai on their literary work, making this field ripe for multi-disciplinary interaction\n(see especially Herman, 1997, 2007; Meister, 2003, for programmatic statements to this effect, as well as theoretical contributions).\nClassical narratology makes a fundamental distinction between the \u2018story world\u2019 and the text that narrates the story. In line with the formalist and structuralist roots of this tradition, the distinction is usually articulated as a dichotomy between fabula (or story) and suzjet (or discourse). There is a parallel between this distinction and that between a text plan in nlg, versus the actual text which articulates that plan. However, the crucial difference is that in producing a plan for a narrative, a story generation system typically does not use input data of the sort required by most of the nlg systems reviewed thus far, since the story is usually fictional. On the other hand, narratological tools have also been successfully applied to real-world narratives, including oral narratives of personal experience (e.g., Herman, 2001; Labov, 2010).\nThe focus of most work on narrative generation has been on the pre-linguistic stage, that is, on generating plans within a story world for fictional narratives, usually within a specific genre whose structural properties are well-understood, for example, fairy tales or Arthurian legends (see Gerva\u0301s, 2013, for a review). There are however links between the techniques used for such stories and those we have discussed above in relation to nlg (see especially Section 3.2). Prominent among these are planning and reasoning techniques to model the creative process as a problem-solving task. For example, minstrel (Turner, 1992) uses reasoning to model creativity from the author\u2019s perspective, producing narrative plans based on authorial goals, such as the goal of introducing drama into a narrative, while ensuring thematic consistency.\nMore recently, brutus (Bringsjord & Ferrucci, 1999) used a knowledge base of story schemas, from which one is selected and elaborated using planning techniques to link causes and effects (see also Young, 2008; Riedl & Young, 2010, among others, for recent examples of the use of planning techniques to model the creative process in narrative generation).\nAs Gerva\u0301s (2010) notes, the focus on planning story worlds and modelling creativity has often implied a sidelining of linguistic issues, so that rendering a story plan into text has often been viewed as a secondary consideration. For example Figure 7a shows an excerpt of a story produced by the talespin system (Meehan, 1977): here, the emphasis is on using problem-solving techniques to produce a narrative in which events follow from each other in a coherent fashion, rather than on telling it in a fluent way. An important exception to this trend is the work of Callaway and Lester (2002), who explicitly addressed the gap between computational narratology and nlg. Their system took a narrative plan as a starting point, but focussed on the process of rendering the narrative in fluent English, handling time shifts, aggregation, anaphoric nps and many other linguistic phenomena, as the excerpt in Figure 7b shows.9 In addition, there have been a number of contributions from the generation community on more specific issues related to narrative, such as how to convey the temporal\n9It is worth noting that this system has since been re-used in the context of generating interactive text for a portable museum guide by Stock et al. (2007).\nflow of narrative discourse (Oberlander & Lascarides, 1992; Dorr & Gaasterland, 1995; Elson & McKeown, 2010). This is a problem that deserves more attention in nlg, since texts with a complex narrative structure often narrate events in a different order from which they occurred. For example, events may be planned in order of importance, rather than temporally, even when they are grounded in real-world data (e.g. Portet et al., 2009). This makes the use of the right choices for tense, aspect and temporal adverbials crucial to ensure clarity for the reader. This type of complexity in narrative structure also emerges in interactive narrative fiction (for example, in games; cf., Montfort, 2007).\nBeyond the focus on specific linguistic issues, there has also been some work that leverages data-driven techniques to generate stories. For example, McIntyre and Lapata (2009) propose a story generation system whose input is a database of entities and their interactions, extracted from a corpus of stories by parsing them, retrieving grammatical dependencies, and building chains of events in which specific entities play a role. The outcome is a graph encoding a partial order of events, with edges weighted by mutual information to reflect the degree of association between nodes. Sentence planning then takes place using template-like grammar rules specifying verbs with subcategorisation information, followed by realisation using realpro (Lavoie & Rambow, 1997). One of the most interesting features of this work is the coupling of the generation model with an interest model to predict which stories would actually be rated as interesting by readers. This was achieved by training a kernel-based classifier on\nshallow lexical and syntactic features of stories, a novel take on an old problem in narratology, namely, what makes a story \u2018tellable\u2019, thereby distinguishing it from a mere report (e.g., Herman, 1997; Norrick, 2005; Bruner, 2011).\nMost story generation work is restricted to (very) short stories. It is certainly true that planning a book-length narrative along the lines sketched above is extremely challenging, but researchers have recently started exploring the possibilities, for instance in the context of NaNoGenMon (National Novel Generation Month), in which participants write a computer program capable of generating a \u2019novel\u2019. Perhaps the best known example is World Clock (Montfort, 2013) which describes 1440 (24 \u00d7 60) events taking place around the world, one randomly selected minute at a time. These are the first two:\nIt is now exactly 05:00 in Samarkand. In some ramshackle dwelling a person who is called Gang, who is on the small side, reads an entirely made-up word on a box of breakfast cereal. He turns entirely around.\nIt is now right about 18:01 in Matamoros. In some dim yet decent structure a man named Tao, who is no larger or smaller than one would expect, reads a tiny numeric code from a recipe clipping. He smiles a tiny smile.\nThe book was fully generated by 165 lines of Python code, written by the author in a few hours, and later published (together with the software) by Harvard Book Store press. There is even a Polish translation (by Piotr Marecki), created by translating the Python algorithm.\nTurning to evaluation of narrative generators, this is an area where the consensus in the field is that much further research effort is required (see Zhu, 2012, for a recent argument to this effect). To some extent, the problems faced in evaluating story generators mirror those in classical nlg. For example, evaluating content determination while factoring out the impact of sentence planning and realisation is far from trivial (see Mellish & Dale, 1998, and the discussion of evaluation in Section 7). However, in the case of fictional narrative, the problem is exacerbated by the fact that there is usually no \u2018objective\u2019 input against which to compare a story plan; indeed, the main focus of evaluation here is the success with which a system models the creative process, constructing stories that have such qualities as novelty (e.g., Pe\u0301rez et al., 2011) or believability of characters (e.g., Riedl & Young, 2005). Where the focus is on narrative language, evaluation is more clearly oriented towards linguistic issues such as coherence and fluency, as shown by the exhaustive evaluation conducted by Callaway and Lester (2002) for the storybook system.\nThe problem for those systems in which linguistic quality is secondary is that it is difficult to evaluate a story while factoring out effects which are due to the way it is recounted. Recent proposals, for example by Rowe et al. (2009), have emphasised the need to deploy multiple evaluation methods to evaluate narratives at different levels, from plot structure to cognitive-affective impact on readers. As we shall see in Section 7, the use of multiple methods is probably desirable even for classical nlg tasks."}, {"heading": "6.4 Generating creative language: Concluding remarks", "text": "In this section we have highlighted recent developments in the broad area of creative language generation, a topic which is rather understudied in nlg. Nevertheless, we would like to argue that nlg researchers can improve the quality of their output by taking insights from computational creativity on board.\nWork that exploits corpora and other lexical resources for the automatic generation of jokes, puns, metaphors and similes has revealed different ways in which words are related and can be juxtaposed to form unexpected and possibly even \u2018funny\u2019 or \u2018poetic\u2019 combinations. Given that, for example, metaphor is pervasive in everyday language (as argued, for example, by Lakoff & Johnson, 1980), not just in overtly creative uses, nlg researchers interested in enhancing the readability \u2013 and especially the variability \u2013 of the text-generating capability of their models would benefit from a closer look at work in poetry, joke and metaphor generation.\nIn a similar vein, work on narratology is rich in insights on the interaction of multiple threads in a single narrative, and how the choice of events and their ordering can give rise to interesting stories (e.g., Gerva\u0301s, 2012). These insights are valuable, for example, in the development of more elaborate text planners in domains where time and causality play a role. Similarly, narratological work on character and focalisation can also help in the development of better nlg techniques to vary output according to specific points of view, an area that we touched on in Section 5,\nWe have seen that evaluation of these systems remains something of a bottleneck. In part, this is because it is not always easy to determine the \u2018right\u2019 question to ask in an evaluation. For instance, as we saw in the case of joke and poetry generators, demonstrating genre compatibility and recognition (\u2018Is this a joke?\u2019) is arguably already an achievement, insofar as it suggests that a system is producing artefacts that conform to normative expectations. At the same time, the emphasis on creativity, especially in story generation systems, suggests that conformity to genre conventions is not the only question at stake. The problem is that evaluation is difficult to carry out without ensuring quality at all levels of the generation process, from planning to realisation. This is probably an area in which nlg has much to offer to computational creativity researchers, in the form of a set of techniques to ensure coherence and fluency."}, {"heading": "7 Evaluation", "text": "Though we have touched on the subject of evaluation at various points, it deserves a full discussion as a topic which has become a central methodological concern in nlg. A factor that contributed to this development was the establishment of a number of nlg shared tasks, launched in the wake of an nsffunded workshop held in Virginia in 2007 (Dale & White, 2007). These tasks have focussed on referring expression generation (Belz et al., 2010; Gatt & Belz, 2010); surface realisation (Belz et al., 2011); generation of instructions in virtual\nenvironments (Striegnitz et al., 2011; Janarthanam & Lemon, 2011); content determination (Bouayad-Agha et al., 2013; Banik et al., 2013); and question generation (Rus et al., 2011). Recent proposals for new challenges extend these to narrative generation (Concepcio\u0301n et al., 2016), generation from structured web data (Colin et al., 2016) and from unaligned pairs of meaning representations and text (Novikova & Rieser, 2016a). In image captioning, shared tasks have helped the development of large-scale datasets and evaluation servers such as ms-coco10 (cf. Section 4.1). In general, however, nlg evaluation is marked by a great deal of variety and it is difficult to compare systems directly. There are at least two reasons why this is the case.\nVariable input There is no single, agreed-upon input format for nlg systems (McDonald, 1993; Mellish & Dale, 1998; Evans et al., 2002). Typically, one can only compare systems against a common benchmark if the input is similar. Examples are the image-captioning systems described in Section 4, or systems submitted to one of the shared tasks mentioned above. Even in case a common \u2018standard\u2019 dataset is available for evaluation, comparison may not be straightforward due to input variation, or due to implicit biases in the input data. For example, Rajkumar and White (2014) observe that, despite many realisers being evaluated against the Penn Treebank, they make different assumptions about the input format, including how detailed the pre-syntactic input representation is, a problem also observed in the first Surface Realisation shared task (Belz et al., 2011). As Rajkumar and White (2014) note, a comparison of realisers on the basis of scores on the Penn Treebank shows that the highest-ranking is the fuf/surge realiser (which is second in terms of coverage), based on experiments by Callaway (2005). However, these experiments required painstaking effort to extract the input representations at the level of detail needed by fuf/surge; other realisers support more underspecified input. In a related vein, image captioning evaluation studies have shown that many datasets contain a higher proportion of nouns than verbs, and few abstract concepts (Ferraro et al., 2015), making systems that generate descriptions emphasising objects more likely to score better. The relevance of this observation is shown by Elliott and De Vries (2015), who note that the ranking of their image captioning system based on visual dependency grammar depends in part on the data it is evaluated on, with better performance on data containing more images depicting actions (we return to this study below).\nMultiple possible outputs Even for a single piece of input and a single system, the range of possible outputs is open-ended, a problem that arguably holds for any nlp task involving textual output, including machine translation and summarisation. Corpora often display a substantial range of variation and it is often unclear, without an independent assessment, which outputs are to be preferred (Reiter & Sripada, 2002). In the image captioning literature, authors who have framed the problem in terms of retrieval have motivated the choice in part\n10http://mscoco.org/dataset/#captions-upload\nbased on this problem, arguing that \u2018since there is no consensus on what constitutes a good image description, independently obtained human assessments of different caption generation systems should not be compared directly\u2019 (Hodosh et al., 2013, p. 580). While capturing variation may itself be a goal (e.g., Belz, 2008; Viethen & Dale, 2010; Herva\u0301s et al., 2013; Ferreira et al., 2016), as we also saw in our discussion of style in Section 5, this is not always the case. Thus, in a user-oriented evaluation, the SumTime-mousam system weather forecasts were preferred by readers over those written by forecasters because the latter\u2019s lexicalisation decisions were susceptible to apparently arbitrary variation (Reiter et al., 2005); similar outcomes were more recently reported for statistical nlg systems trained on the SumTime corpus (Belz, 2008; Angeli et al., 2010).\nRather than give an exhaustive review of nlg evaluation \u2013 hardly a realistic prospect given the diversity we have pointed out \u2013 the rest of this section will highlight some topical issues in current work. By way of an overview of these issues, consider the hypothetical scenario sketched in Figure 8, which is loosely inspired by work on various weather-reporting systems developed in the field. This nlg system is embedded in the environment of an offshore oil-rig; the relevant features of the setup (in the sense of Sparck Jones & Galliers, 1996) are the system itself and its users, here a group of engineers. While the task of the system is to generate weather reports from numerical weather prediction data, its ultimate purpose is to facilitate users\u2019 planning of drilling and maintenance operations. Figure 8 highlights some of the common questions addressed in nlg evaluation, together with a broad typology of the methods used to address them, in particular, whether they are objective \u2013 that is measurable against an external criterion, such as corpus similarity or experimentally obtained behavioural data \u2013 or subjective, requiring human judgements.\nA fundamental methodological distinction, due to Sparck Jones and Galliers (1996), is between intrinsic and extrinsic evaluation methods. In the case of nlg, an intrinsic evaluation measures the performance of a system without reference to other aspects of the setup, such as the system\u2019s effectiveness in relation to its users. In our example scenario, questions related to text quality, correctness of output and readability qualify as intrinsic, whereas the question of whether the system actually achieves its goal in supporting adequate decisionmaking on the offshore platform is extrinsic."}, {"heading": "7.1 Intrinsic methods", "text": "Intrinsic evaluation in nlg is dominated by two methodologies, one relying on human judgements (and hence subjective), the other on corpora."}, {"heading": "7.1.1 Subjective (human) judgements", "text": "Human judgements are typically elicited by exposing naive or expert subjects to system outputs and getting them to rate them on some criteria. Common criteria include:\n\u2022 Fluency or readability, that is, the linguistic quality of the text (e.g., Callaway & Lester, 2002; Mitchell et al., 2012; Stent et al., 2005; Lapata, 2006; Cahill, 2009; Espinosa et al., 2010, inter alia);\n\u2022 Accuracy, adequacy, relevance or correctness relative to the input, reflecting the system\u2019s rendition of the content (e.g. Lester & Porter, 1997; Sripada et al., 2005; Hunter et al., 2012), a criterion often used in subjective evaluations of image-captioning systems as well (e.g. Kulkarni et al., 2011; Mitchell et al., 2012; Kuznetsova et al., 2012; Elliott & Keller, 2013).\nThough they are the most common, these two sets of criteria do not exhaust the possibilities. For example, subjective ratings have also been elicited for argument effectiveness in a system designed to generate persuasive text for prospective house buyers (Carenini & Moore, 2006). In image captioning, at least one system was evaluated by asking users to judge the creativity of the generated caption, with a view to assessing the contribution of web-scale ngram language models to the captioning quality (Li et al., 2011). Below, we also discuss judgements of genre compatibility (Section 7.1.3).\nThe use of scales to elicit judgements raises a number of questions. One has to do with the nature of the scale itself. While discrete, ordinal scales are the dominant method, a continuous scale \u2013 for example, one involving a visually presented slider (Gatt & Belz, 2010; Belz & Kow, 2011) \u2013 might give subjects the possibility of giving more nuanced judgements. For example, a text generated by our hypothetical weather report system might be judged so disfluent as to\nbe given the lowest rating on an ordinal scale; if the following text is judged as being worse, a subject would have no way of indicating this. A related question is whether subjects find it easier to compare items rather than judge each one in its own right. This question has begun to be addressed in the nlp evaluation literature, usually with binary comparisons, for example between the outputs of two mt systems (see Dras, 2015, for discussion). In a recent study evaluating causal connectives produced by an nlg system, Siddharthan and Katsos (2012) used Magnitude Estimation, whereby subjects are not given a predefined scale, but are asked to choose their own and proceed to make comparisons of each item to a \u2018modulus\u2019, which serves as a comparison point throughout the experiment (see Bard et al., 1996).11 Belz and Kow (2010) compared a preference-based paradigm to a standard rating scale to evaluate systems from two different domains (weather reporting and reg), and found that the former was more sensitive to differences between systems, and less susceptible to variance between subjects.\nAn additional concern with subjective evaluations is inter-rater reliability. Multiple judgements by different evaluators may exhibit high variance, a problem that was encountered in the case of Question Generation (Rus et al., 2011). Recently, Godwin and Piwek (2016) suggested that such variance can be reduced by an iterative method whereby training of judges is followed by a period of discussion, leading to the updating of evaluation guidelines. This, however, is more costly in terms of time and resources.\nIt is probably fair to state that, these days, subjective, human evaluations are often carried out via online platforms such as Amazon Mechanical Turk12 and CrowdFlower13, though this is probably more feasible for widely-spoken languages such as English. A seldom-discussed issue with such platforms concerns their ethical implications (for example, they involve large groups of poorly paid individuals; see Fort et al., 2011) as well as the reliability of the data collected, though measures can be put in place to ensure, for instance, that contributors are fluent in the target language (see e.g., Goodman et al., 2013; Mason & Suri, 2012)."}, {"heading": "7.1.2 Objective humanlikeness measures using corpora", "text": "Intrinsic methods that rely on corpora can generally be said to be addressing the question of \u2018humanlikeness\u2019, that is, the extent to which the system\u2019s output matches human output under comparable conditions. From the developer\u2019s perspective, the selling point of such methods is their cheapness, since they are usually based on automatically computed metrics. A variety of corpusbased metrics, often used earlier in related fields such as Machine Translation\n11The modulus is an item \u2013 a text, or a sentence \u2013 which is selected in advance and which subjects are asked to rate first. All subsequent ratings or judgements are performed in comparison to this modus item. Though subjects are able to use any scale they choose, this method allows all judgements to be normalised by the judgement given for the modulus. Typically, normalised judgements are analysed on a logarithmic scale.\n12https://www.mturk.com/mturk/welcome 13https://www.crowdflower.com\nor Summarisation, have been used in nlg evaluation. Some of the main ones are summarised in Table 1, which groups them according to their principal characteristics, and for each adds a key reference.\nMeasures of n-gram overlap or string edit distance, usually originating in\nMachine Translation or Summarisation (with the exception of cider, Vedantam et al., 2015) are frequently used for evaluating surface realisation (e.g., White et al., 2007; Cahill & Josef, 2006; Espinosa et al., 2010; Belz et al., 2011) and occasionally also to evaluate short texts characteristic of data-driven systems in domains such as weather reporting (e.g. Reiter & Belz, 2009; Konstas & Lapata, 2013) and image captioning (see Bernardi et al., 2016). Edit distance metrics have been exploited for realisation (Espinosa et al., 2010), but also for reg (Gatt & Belz, 2010).\nThe focus of these metrics is on the text, rather than its fidelity to the input. In a limited number of cases, surface-oriented metrics have been used to evaluate the adequacy with which output text reflects content (Banik et al., 2013; Reiter & Belz, 2009). However, if content determination is the focus, a measure of surface overlap is at best a proxy, relying on an assumption of a straightforward correspondence between input and output. This assumption may be tenable if texts are brief and relatively predictable. In some cases, it has been possible to use metrics to measure content determination directly, based on semantically annotated corpora. For instance, reg algorithms have been evaluated in this fashion using set overlap metrics (Viethen & Dale, 2007; van Deemter et al., 2012a). Direct measurements of content overlap between generated and candidate outputs will likely increase, as automatic data-text alignment techniques make such \u2018semantically transparent\u2019 corpora more readily available for end-to-end nlg (see e.g., Chen & Mooney, 2008; Liang et al., 2009, and the discussion in Section 3.3)."}, {"heading": "7.1.3 Evaluating genre compatibility", "text": "A slightly different question that has occasionally been posed in evaluation studies asks whether the linguistic artefact produced by a system is a recognisable instance of a particular genre or style. We have seen examples of this in our discussion of creative language generation in Section 6. For example, one of the questions asked by Binsted et al. (1997) was whether the output of jape was recognisably a joke. Hardcastle and Scott (2008) describe an evaluation of a generation system for cryptic crossward clues based on a Turing test in which the objective was to determine whether the system\u2019s outputs were recognisably different from human-authored clues.\nWhile such questions clearly have an intrinsic orientation, they also have a bearing on extrinsic factors, since the ability to recognise an artefact as an instance of a genre or as exhibiting a certain style or personality is arguably one of the sources of its impact, especially in the case of creative language use.\nOf course, the intention behind variation in style, personality or affect may well be to ultimately increase effectiveness in achieving some ulterior goal. Indeed, any nlg system intended to be embedded in a specific environment will need to address stylistic and genre-based issues. For example, our hypothetical weather report generator might use a very brief, technical style given its professional pool of target users (as was the case with SumTime Reiter et al., 2005); in contrast, weather reports intended for public consumption, such as those in\nthe WeatherGov corpus, would probably be longer and less technical (Angeli et al., 2010).\nHowever, there is a difference between evaluating whether genre constraints or stylistic variation help contribute to a goal, and evaluating whether the text actually exhibits the desired variation. For example, Mairesse and Walker (2011) evaluated the personage system (see Section 5) by asking users to judge personality traits as reflected in generated dialogue fragments (rather than, say, measuring whether users were more likely to eat at a restaurant if this was recommended by a configuration of the system with a high degree of extraversion). This is similar in spirit to the question about jokehood asked by Binsted et al. (1997), in contrast to the more explicitly extrinsic evaluation of the standup joke generator by Waller et al. (2009), which asked whether the system actually helped users improve their interactions with peers."}, {"heading": "7.2 Extrinsic evaluation methods", "text": "In contrast to intrinsic methods, extrinsic evaluations measuring effectiveness in achieving a desired goal. In the example scenario of Figure 8, such an evaluation might address the impact on planning by the engineers who are the target users of the system. Clearly, \u2018effectiveness\u2019 is dependent on the application domain and purpose of a system. Examples include:\n\u2022 persuasion and behaviour change, for example, through exposure to personalised smoking cessation letters (Reiter et al., 2003);\n\u2022 purchasing decision after presentation of arguments for and against options on the housing market based on a user model (Carenini & Moore, 2006);\n\u2022 engagement with ecological issues after reading blogs about migrating birds (Siddharthan et al., 2013);\n\u2022 decision support in a medical setting following the generation of patient reports (Portet et al., 2009; Hunter et al., 2012);\n\u2022 enhancing linguistic interaction among users with complex communication needs via the generation of personal narratives (Tintarev et al., 2016);\n\u2022 enhancing learning efficacy in tutorial dialogue (Di Eugenio et al., 2005; Fossati et al., 2015; Boyer et al., 2011; Lipschultz et al., 2011; Chi et al., 2014)\nWhile questionnaire-based or self-report studies can be used to address extrinsic criteria (e.g., Hunter et al., 2012; Siddharthan et al., 2013; Carenini & Moore, 2006), in many cases evaluation relies on some objective measure of performance or achievement. This can be done with the target users in situ, enhancing the ecological validity of the study, but can also take the form of a task that models the scenarios for which the nlg system has been designed. Thus, in the give Challenge (Striegnitz et al., 2011), in which nlg systems\ngenerated instructions for a user to navigate through a virtual world, a largescale task-based evaluation was carried out by having users play the give game online, while various indices of success were logged, including the time it took a user to complete the game. reg algorithms whose goal was to generate identifying descriptions of objects in visual domains, were evaluated in part based on the time it took readers to identify a referent based on a generated description, as well as their error rate(Gatt & Belz, 2010). skillsum, a system to generate feedback reports from literacy assessments, was evaluated by measuring how user\u2019s self-assessment of their own literacy skills improved after reading generated feedback, compared to control texts (Williams & Reiter, 2008).\nA potential drawback of extrinsic studies, in addition to time and expense, is a reliance on an adequate user base (which can be difficult to obtain when users have to be sampled from a specific population, such as the engineers in our hypothetical scenario in Figure 8) and the possibility of carrying out the study in a realistic setting. Such studies also raise significant design challenges, due to the need to control for intervening and confounding variables, comparing multiple versions of a system (e.g. in an ablative design; see Section 7.3 below), or comparing a system against a gold standard or baseline. For example, Carenini and Moore (2006) note that evaluating the effectiveness of arguments presented in text needs to take into account aspects of a user\u2019s personality which may impact how receptive they are to arguments in the first place.\nAn example of the trade-off between design and control issues and ecological validity is provided by the BabyTalk family of systems. A pilot system called bt-45 (Portet et al., 2009), which generated patient summaries from 45-minute spans of historical patient data, was evaluated in a task involving nurses and doctors, whose chose from among a set of clinical actions to take based on the information given. These were then compared to \u2018ground truth\u2019 decisions by senior neonatal experts. This evaluation was carried out off-ward; hence, subjects took clinical decisions in an artificial environment without direct access to the patient. On the other hand, in the evaluation of bt-nurse, a successor to bt45 which summarised patient data collected over a twelve-hour shift (Hunter et al., 2012), the system was evaluated on-ward using live patient data, but ethical considerations precluded a task-based evaluation. For the same reasons, comparison to \u2018gold standard\u2019 human texts was also impossible. Hence, the evaluation elicited judgements, both on intrinsic criteria such as understandability and accuracy and on extrinsic criteria such as perceived clinical utility (see Siddharthan et al., 2013, for a similarly indirect extrinsic measure of impact, this time in an ecological setting)."}, {"heading": "7.3 Black box vs glass box evaluation", "text": "With the exception of evaluations of specific modules or algorithms, as in the case of reg or surface realisers, most of the evaluation studies discussed so far would be classified as \u2018black box\u2019 evaluations of \u2018end-to-end\u2019, or complete, nlg systems. In a \u2018glass box\u2019 evaluation, on the other hand, it is the contribution of individual components that is under scrutiny, ideally in a setup where versions of\na system with and without a component are evaluated in the same manner. Note that the distinction between black box and glass box evaluation is orthogonal to the question of which methods are used.\nAn excellent example of a glass-box evaluation is Callaway and Lester (2002), who used an ablative design, eliciting judgements of the quality of the output of their narrative generation system based on different configurations that omitted or included key components. In a related vein, Elliott and Keller (2013) compared image-to-text models that included fine-grained dependency representations of spatial as well as linguistic dependencies, to models with a coarsergrained image representation, finding an advantage for the former.\nHowever, exhaustive component-wise comparisons are sometimes difficult to make and may result in a combinatorial explosion of configurations, with a concomitant reduction in data points collected per configuration (assuming subjects are limited and need to be divided among different conditions) and a reduction in statistical power. Alternatives do exist in the literature. Reiter et al. (2003) elicited judgements on weather forecasts using human and machinegenerated texts, together with a \u2018hybrid\u2019 version where the content was selected by forecasters, but the language was automatically generated. This enabled a comparison of human and automatic content selection. Angeli et al. (2010) used corpus-based and subjective measures to assess linguistic quality, coupled with precision and recall-based measures to assess content determination of their statistical system against human-annotated texts. In bt-nurse (Hunter et al., 2012), nurses were prompted for free text comments (in addition to answering a questionnaire targeting extrinsic dimensions), which were then manually annotated and analysed to determine which elements of the system were potentially problematic."}, {"heading": "7.4 On the relationship between evaluation methods", "text": "To what extent are the plethora of methods surveyed \u2013 from extrinsic, taskoriented to intrinsic ones relying on automatic metrics or human judgements \u2013 actually related? It turns out that multiple evaluation methods seldom give converging verdicts on a system, or on the relative ranking of a set of systems under comparison."}, {"heading": "7.4.1 Metrics versus human judgements", "text": "Although corpus-based metrics used in mt and summarisation are typically validated by demonstrating their correlation with human ratings, meta-evaluation studies in these fields have suggested that the correspondence is somewhat weak (e.g., Dorr et al., 2004; Callison-Burch et al., 2006; Caporaso et al., 2008). Similarly, shared task evaluations on referring expression generation showed that corpus-based, judgement-based and experimental or task-based methods frequently do not correlate Gatt and Belz (2010). In their recent review Bernardi et al. (2016) note a similar issue in image captioning system evaluation. Thus, Kulkarni et al. (2013) found that their image description system did not out-\nperform two earlier methods (Farhadi et al., 2010; Yang et al., 2011) on bleu scores; however, human judgements indicated the opposite trend, with readers preferring their system (similar observations are made by Kiros et al., 2014). Hodosh et al. (2013) compared the agreement (measured by Cohen\u2019s \u03ba) between human judgements and bleu or rouge scores for retrieved captions, finding that outputs were not ranked similarly by humans and metrics, unless the retrieved captions were identical to the reference captions.\nOn occasion, the correlation between a metric and human judgements appears to differ across studies, suggesting that metric-based results are highly susceptible to variation due to generation algorithms and datasets. For instance, Konstas and Lapata (2013) (discussed in Section 3.3.4 above) find that on corpus-based metrics, the best-performing version of their model does not outperform that of Kim and Mooney (2010) on the robocup domain, or that of Angeli et al. (2010) on their weather corpus (weathergov), though it performs better than Angeli et al. (2010) on the noisier atis travel dataset. However, an evaluation of fluency and semantic correctness, based on human judgements, showed that the system outperformed, by a small margin, both Kim and Mooney (2010) and Angeli et al. (2010) on both measures in all domains with the exception of weathergov, where Angeli et al.\u2019s system did marginally better.\nIn a related vein, Elliott and De Vries (2015) compare their image captioning system, based on visual dependency relations, to the Bidirectional rnn developed by Karpathy and Fei-Fei (2015), on two different datasets. The two systems were close to each other on the vlt2k dataset, but not on Pascal1k, a result that the authors claim is due to vlt2k containing more pictures involving actions. As for the relationship between metrics and human judgements, Elliott and Keller (2013) concluded that meteor correlates better than bleu (see Elliott & Keller, 2014, for a systematic comparison of automatic metrics in this domain), a finding also confirmed in their later work (Elliott & De Vries, 2015), as well as in the ms-coco Evaluation Challenge, which found that meteor was more robust. However, work by Kuznetsova et al. (2014) showed variable results; their highest-scoring method as judged by humans, involving tree composition, was ranked higher by bleu than by meteor. In the ms-coco Evaluation Challenge, some systems outperformed a human-human upper bound when compared to reference texts using automatic metrics, but no system reached this level in an evaluation based on human judgements (see Bernardi et al., 2016, for further discussion).\nSome studies have explicitly addressed the relationship between methods as a research question in its own right. An important contribution in this direction is the study by (Reiter & Belz, 2009), which addressed the validity of corpus-based metrics in relation to human judgements, within the domain of weather forecast generation (a similar study has recently been conducted on image captioning by Elliott & Keller, 2014). In a first experiment, focussing on linguistic quality, the authors found a high correlation between expert and non-expert readers\u2019 judgements, but the correlation between human judgements and the automatic metrics varied considerably (from 0.3 to 0.87), depending on the version of the metric used and whether the reference texts were included in the comparison\nby human judges. The second experiment evaluated both linguistic quality, by asking human judges to rate clarity/readability; and content determination, by eliciting judgements of accuracy/appropriateness (by comparing texts to the raw data). The automatic metrics correlated significantly with judgements of clarity, but far less with accuracy, suggesting that they were better at predicting the linguistic quality than correctness.\nOther studies have yielded similarly inconsistent results. In a study on paraphrase generation, Stent et al. (2005) found that automatic metrics correlated highly with judgements of adequacy (roughly akin to accuracy), but not fluency. By contrast, Espinosa et al. (2010) found that automatic metrics such as nist, meteor and gtm correlate moderately well with human fluency and adequacy judgements of English surface realisation quality, while Cahill (2009) reported only a weak correlation for German surface realisation. Wubben et al. (2012), comparing text simplification strategies, found low, but significant correlations between bleu and fluency judgements, and a very low, negative correlation between bleu and adequacy. These contrasting findings suggest that the relationship between metrics may depend on purpose and genre of the text under consideration; for example, Reiter and Belz (2009) used weather reports, while Wubben et al. (2012) used Wikipedia articles.\nVarious factors can be adduced to explain the inconsistency of these metaevaluation studies:\n1. Metrics such as bleu are sensitive to the length of the texts under comparison. With shorter texts, n-gram based metrics are likely to result in lower scores.\n2. The type of overlap matters: for example, many evaluations in image captioning rely on bleu-1 (the work of Elliott & Keller, 2013, 2014, was among the first to experiment with longer n-grams), but longer n-grams are harder to match, though they capture more syntactic information and are arguably better indicators of fluency.\n3. Semantic variability is an important issue. Generated texts may be similar to reference texts, but differ on some near-synonyms, or subtle word order variations. As shown in Table 1, some metrics are designed to partially address these issues.\n4. Many intrinsic corpus-based metrics are designed to compare against multiple reference texts, but this is not always possible in nlg. For example, while image captioning datasets typically contain multiple captions per image (typically, around 5), this is not the case in other domains, like weather reporting or restaurant recommendations.\nThe upshot is that nlg evaluations increasingly rely on multiple methods, a trend that is equally visible in other areas of nlp , such as mt (Callison-Burch et al., 2007, 2008)."}, {"heading": "7.4.2 Using controlled experiments", "text": "A few studies have validated evaluation measures against experimental data. For example, Siddharthan and Katsos (2012) compared the outcomes of their magnitude estimation judgement study (see Section 7.1 above) to the results from a sentence recall task, finding that the results from the latter are largely consistent with judgements and concluding that they can substitute for taskbased evaluations to shed light on breakdowns in comprehension at sentence level. A handful of studies have also used behavioral experiments and compared \u2018online\u2019 processing measures, such as reading time of referring expressions, to corpus-based metrics (e.g. Belz et al., 2010). Correlations with automatic metrics are usually poor. A somewhat different use of reading times was made by Lapata (2006), who used them as an objective measure against which to validate Kendall\u2019s \u03c4 as a metric for assessing information ordering in text (an aspect of text stucturing). In a recent study, Zarrie\u00dfet al. (2015) compared generated texts to human-authored and \u2018filler\u2019 texts (which were manually manipulated to compromise their coherence). They found that reading-time measures were more useful to distinguish these classes of texts than offline measures based on elicited judgements of fluency and clarity."}, {"heading": "7.5 Evaluation: Concluding remarks", "text": "Against the background of this section, three main conclusions can be drawn:\n1. There is a widespread acceptance of the necessity of using multiple evaluation methods in nlg. While these are not always consistent among themselves, they are useful in shedding light on different aspects of quality, from fluency and clarity of output, to adequacy of semantic content and effectiveness in achieving communicative intentions. The choice of method has a direct impact on the way in which results can be interpreted.\n2. Meta-evaluation studies have yielded conflicting results on the relationship between human judgements, behavioural measures and automatically computed metrics. The correlation among them varies depending on task and application domain. This is a subject of ongoing research, with plenty of studies focussing on the reliabilty of metrics and their relationship to other measures, especially human judgements.\n3. A question that remains under-explored concerns the dimensions of quality that are themselves the object of inquiry. (In this connection, it is worth noting that some kindred disciplines have sought to de-emphasise their role on the grounds that they are inconsistent; see Callison-Burch et al. (2008), for example). For example, what are people judging when they judge fluency or adequacy and how consistently do they do so? It is far from obvious whether these judgements should really be expected to correlate with other measures, given that the latter are producer-oriented, focussing on output, while judgements are themselves often receiver-oriented, focussing on how the output is read or processed (for a related argument,\nsee Oberlander, 1998). Furthermore, while meta-linguistic judgements can be expected to reflect the impact of a text on its readers, there is nevertheless the possibility that behavioural, online methods designed to directly investigate aspects of processing would yield a different picture, a result that has been obtained in some psycholinguistic studies (e.g. Engelhardt et al., 2006).\nIn conclusion, our principal recommendation to nlg practitioners, where evaluation is concerned, is to err in favour of diversity, by using multiple methods, as far as possible, and reporting not only their results, but also the correlation between them. Weak correlations need not imply that the results of a particular method are invalid. Rather, they may indicate that measures focus on different aspects of a system or its output."}, {"heading": "8 Discussion and future directions", "text": "Over the past two decades, the field of nlg has advanced considerably, and many of these recent advances have not been covered in a comprehensive survey yet. This paper has sought to address this gap, with the following goals:\n1. to give an update of the core tasks and architectures in the field, with an emphasis on recent data-driven techniques;\n2. to briefly highlight recent developments in relatively new areas, incuding vision-to-text generation and the generation of stylistically varied, engaging or creative texts; and\n3. to extensively discuss the problems and prospects of evaluating nlg applications.\nThroughout this survey, various general, related themes have emerged. Probably the central theme has been the gradual shift away from traditional, rulebased approaches to statistical, data-driven ones, which, of course, has been taking place in ai in general. In nlg, this has had substantial impact on how individual tasks are approached (e.g., moving away from domain-dependent to more general, domain-independent approaches, relying on available data instead) as well as on how tasks are combined in different architectures (e.g., moving away from modular towards more integrated approaches). The trade-off between output quality of the generated text and the efficiency and robustness of an approach is becoming a central issue: data-driven approaches are arguably more efficient than rule-based approaches, but the output quality may be compromised, for reasons we have discussed. Another important theme has been the increased interplay between core nlg research and other disciplines, such as computer vision (in the case of vision-to-text) and computational creativity research (in the case of creative language use).\nAt the conclusion of this comprehensive survey of the state of the art in nlg, and given the fast pace at which developments occur both in industry and\nacademia, we feel it is useful to point to some potential future directions, as well as to raise a number of questions which recent research has brought to the fore."}, {"heading": "8.1 Why (and how) should NLG be used?", "text": "More than a decade ago, towards the beginning of their influential survey on nlg, Reiter and Dale (2000) recommended to the developer that she pose this question before embarking on the design and implementation of a system. Can nlg really help in the target domain? Does a cheaper, more standard solution exist and would it work just as well? From the perspective of an engineer or a company, these are obviously relevant questions. As recent industry-based applications of nlg show, this technology is typically valuable whenever information that needs to be presented to users is relatively voluminous, and comes in a form which is not easily consumed and does not afford a straightforward mapping to a more user-friendly modality without considerable transformation. This is arguably where nlg comes into its own, offering a battery of techniques to select, structure and present the information.\nHowever, the question whether nlg is worth using in a specific setting should also be accompanied by the question of how it should be used. Our survey has focussed on techniques for the generation of text, but text is not always presented in isolation. Other important dimensions include document structure and layout, an under-studied problem (but see Power et al., 2003). They also include the role of graphics in text, an area where there is the potential for further interaction between the nlg and visualisation communities, addressing such questions as which information should be rendered textually and which can be made more accessible in a graphical modality. These questions are of great relevance in some domains, especially those where accurate information delivery is a precursor to decision-making in fault-critical situations (for some examples, see Elting et al., 1999; Law et al., 2005)."}, {"heading": "8.2 NLG isn\u2019t about text-to-text. . . or is it?", "text": "In our introductory section, we distinguished text-to-text generation from datato-text generation; this survey has focussed primarily on the latter. The two areas have distinguishing characteristics, not least the fact that nlg inputs tend to vary widely, as do the goals of nlg systems as a function of the domain under consideration. In contrast, the input in text-to-text generation, especially Automatic Summarsation, is comparatively homogeneous, and while its goals can vary widely, the field has also been successful at defining tasks and datasets (for instance, through the duc shared tasks), which have set the standard for subsequent research.\nYet, a closer look at the two types of generation will show more scope for convergence than the above characterisation suggests. To begin with, if nlg is concerned with going from data to text, then surely textual input should be considered as one out of broad variety of forms in which input data might\nbe presented. Some recent work, such as Kondadadi et al. (2013) (discussed in Section 3.3) and McIntyre and Lapata (2009) (discussed in Section 6) has explicitly focussed on leveraging such data to generate coherent text. Other approaches to nlg, including some systems that conform to a standard, modular, data-to-text architecture (e.g., Hunter et al., 2012), have had to deal with text as one out of a variety of input types, albeit using very simple techniques. Generation from heterogeneous inputs which include text as one type of data is a promising research direction, especially in view of the large quantities of textual data available, often accompanied by numbers or images."}, {"heading": "8.3 Theories and models in search of applications?", "text": "In their overview of the status of evaluation in nlg in the late 1990s, Mellish and Dale (1998) discussed, among the possible ways of evaluating a system, its theoretical underpinnings and in particular whether the theoretical model underlying an nlg system or one of its components is adequate to the task and can generalise to new domains. Rather than evaluating an nlg system as such, this question targets the theory itself, and suggests that we view nlg as a potential testbed for such theories or models. But what are the theories that underlie nlg?\nThe prominence of theoretical models in nlg tends to depend on the task under consideration. For instance, many approaches to realisation discussed in Section 2.6 are based on a specific theory of syntactic structure; research on reg has often been based on based on insights from pragmatic theory, especially the Gricean maxims (Grice, 1975); and much research on text structuring has been inspired by Rhetorical Structure Theory (Mann & Thompson, 1988). Relatively novel takes on various sentence planning tasks \u2013 especially those concerned with style, affect and personality \u2013 tend to have a theoretical inspiration, in the form of a model of personality (John & Srivastava, 1999) or a theory of politenes (Brown & Levinson, 1987), for example.\nMore often than not, such theories are leveraged in the process of formalising a particular problem to achieve a tractable solution. Treating their implementation in an nlg system as an explicit test of the theory, as Mellish and Dale (1998) seem to suggest, happens far less often. This is perhaps a reflection of a division between \u2018engineering-oriented\u2019 and \u2018theoretically-oriented\u2019 perspectives in the field: the former perspective emphasises workable solutions, robustness and output quality; the latter emphasises theoretical soundness, cognitive plausibility and so forth. However, the theory/engineering dichotomy is arguably a false one. While the goal of nlg research is often different from, say, that of cognitive modelling (for example, few nlg systems seek to model production errors explicitly), it is also true that theory-driven implementations are themselves worthy contributions to theoretical work.\nRecently, some authors have argued that nlg practitioners should pay closer attention to theoretical and cognitive models. The reasons marshalled in favour of this argument are twofold. First, psycholinguistic results and theoretical models can actually help to improve implemented systems, as Rajkumar and\nWhite (2014) show for the case of realisation. Second, as argued for example by van Deemter et al. (2012b), theoretical models can benefit from the formal precision that is the bread-and-butter of computational linguistic research; a concrete case in point in nlp is provided by Poesio et al. (2004), whose implementation of Centering Theory (Grosz et al., 1995) shed light on a number of underspecified parameters in the original model and subsequent modifications of it. Our argument here is that nlg has provided a wealth of theoretical insights which should not be lost to the broader research community; similarly, nlg researchers would undoubtedly benefit from an awareness of recent developments in theoretical and experimental work.\n8.4 Where do we go from here?\nFinally, we conclude with some speculations on some further directions for future research for which the time seems ripe.\nWithin the field of Natural Language Processing as a whole, a remarkable recent developments is the explosion of interest in social media, including online blogs, micro-blogs such as Twitter feeds, and social platforms such as Facebook. In one respect, interest in social media could be seen as a natural extension of long-standing topics in nlp, including the desire to deal with language \u2018in the wild\u2019. However, social media data has given more impetus to the exploration of non-canonical language (e.g. Eisenstein, 2013); the impact of social and demographic factors on language use (e.g. Hovy & S\u00f8gaard, 2015; Johannsen et al., 2015); the prevalence of paralinguistic features such as affect, irony and humour (Pang & Lee, 2008; Lukin & Walker, 2013); and other variables such as personality (e.g. Oberlander & Nowson, 2006; Farnadi et al., 2013; Schwartz et al., 2013). Social media feeds are also important data streams for the identification of topical and trending events (see Atefeh & Khreich, 2015, for a recent review). There is as yet little work on generating textual or multimedia summaries of such data (but see, for example, Wang et al., 2014) or generating text in social media contexts (exceptions include Ritter et al., 2011; Cagan et al., 2014). Since much of social media text is subjective and opinionated, an increased interest in social media on the part of nlg researchers may also give new impetus to research on the impact of style, personality and affect on textual variation (discussed in Section 5), and on non-literal language (including some of the phenomena discussed in Section 6).\nA second potential growth area for nlg is situated language generation. The term situated is usually taken to refer to language use in physical or virtual environments where production choices explicitly take into account perceptual and physical properties. Research on situated language processing has advanced significantly in the past several years, with frameworks for language production and understanding in virtual contexts (e.g., Kelleher et al., 2005), as well as a number of contributions within nlg, especially for the generation of language in interactive environments (Kelleher & Kruijff, 2006; Stoia & Shockley, 2006; Garoufi & Koller, 2013; Dethlefs & Cuaya\u0301huitl, 2015). The popular give Challenge added further impetus to this research (Striegnitz et al., 2011). Clearly,\nthis work is also linked to the enterprise of grounding generated language in the perceptual world, of which the research discussed in Section 4 constitutes one of the current trends. However, there are many fields where situatedness is key, in which nlg can still make novel contributions. One of these is gaming. With the exception of a few endeavours to enhance the variety of linguistic expressions used in virtual environments (e.g., Orkin & Roy, 2007), nlg technology is relatively unrepresented in research on games, despite significant progress on dynamic content generation in game environments (e.g., Togelius et al., 2011). This may be due to the perception that linguistic interaction in games is predictable and can rely on \u2018canned\u2019 text. However, with the growing influence of gamification as a strategy for enhancing a variety of activities beyond entertainment, such as pedagogy, as well as the development of sophisticated planning techniques for varying the way in which game worlds unfold on the fly, the assumption of predictability where language use is concerned may well be up for revision.\nThird, there is a growing interest in applying nlg techniques to generation from structured knowledge bases and ontologies (e.g. Ell & Harth, 2014; Duma & Klein, 2013; Gyawali & Gardent, 2014; Mrabet et al., 2016; Sleimi & Gardent, 2016, some of which were briefly discussed in Section 3.3.4). The availability of knowledge bases such as dbpedia, or folksonomies such as Freebase, not only constitute input sources in their own right, but also open up the possibility of exploring alignments between structured inputs and text in a broader variety of domains than has hitherto been the case.\nFinally, while there has been a significant shift in the past few years towards data-driven techniques in nlg, many of these have not been tested in commercial or real-world applications, despite the growth in commercialisation of bespoke text generation services noted in the introductory section. Typically, the arguments for rule-based systems in commercial scenarios, or in cases where input is high-volume and heterogeneous, are that (1) their output is easier to control for bespoke systems; or (2) that data is in any case unavailable in a given domain, rendering the use of statistical techniques moot; or (3) data-driven systems have not been shown to be able to scale up beyond experimental scenarios (some of these arguments are made, for instance, by Harris, 2008). A respnse to the first point depends on the availability of techniques which enable the developer to \u2018look under the hood\u2019 and understand the statistical relationships learned by a model. Such techniques are, for example, being developed to investigate or visualise the representations learned by deep neural networks. The second point calls for more investment in research on data acquisition and data-text alignment. Techniques for generation which rely on less precise alignments between data and text are also a promising future direction. Finally, scalability remains an open challenge. Many of the systems we have discussed have been developed within research environments, where the aim is of course to push the frontiers of nlg and demonstrate feasibility or correctness of novel approaches. While in some cases, research on data-to-text has addressed large-scale problems \u2013 notably in some of the systems that summarise numerical data \u2013 a greater concern with scalability would also focus researchers\u2019 attention on issues such\nas the time and resources required to collect data and train a system and the efficiency of the algorithms being deployed. Clearly, developments in hardware will alleviate these problems, as has happened with some statistical methods that have recently become more feasible."}, {"heading": "9 Conclusion", "text": "Recent years have seen a marked increase in interest in automatic text generation. Companies now offer nlg technology for a range of applications in domains such as journalism, weather, and finance. The huge increase in available data and computing power, as well as rapid developments in machine-learning, have created many new possibilities and motivated nlg researchers to explore a number of new applications, related to, for instance, image-to-text generation, while applications related to social media seem to be just around the corner, as witness, for instance, the emergence of nlg-related techniques for automatic content-creation as well as nlg for twitter and chatbots (e.g., Dale, 2016). With developments occurring at a steady pace, and the technology also finding its way into industrial applications, the future of the field seems bright. In our view, research in nlg should be further strengthened by more collaboration with kindred disciplines. It is our hope that this survey will serve to highlight some of the potential avenues for such multi-disciplinary work."}, {"heading": "Acknowledgements", "text": "This work has greatly benefitted from discussions with and comments from Grzegorz Chrupala, Robert Dale, Raquel Herva\u0301s, Thiago Castro Ferreira, Ehud Reiter, Marc Tanti, Marie\u0308t Theune, Kees van Deemter, Michael White and Sander Wubben. EK received support from RAAK-PRO SIA (2014-01-51PRO) and The Netherlands Organization for Scientific Research (NWO 360-89-050), which is gratefully acknowledged."}], "references": [], "referenceMentions": [], "year": 2017, "abstractText": "This paper surveys the current state of the art in Natural Language Generation (nlg), defined as the task of generating text or speech from non-linguistic input. A survey of nlg is timely in view of the changes that the field has undergone over the past decade or so, especially in relation to new (usually data-driven) methods, as well as new applications of nlg technology. This survey therefore aims to (a) give an up-to-date synthesis of research on the core tasks in nlg and the architectures adopted in which such tasks are organised; (b) highlight a number of relatively recent research topics that have arisen partly as a result of growing synergies between nlg and other areas of artificial intelligence; (c) draw attention to the challenges in nlg evaluation, relating them to similar challenges faced in other areas of nlp, with an emphasis on different evaluation methods and the relationships between them. 1 ar X iv :1 70 3. 09 90 2v 1 [ cs .C L ] 2 9 M ar 2 01 7", "creator": "LaTeX with hyperref package"}}}