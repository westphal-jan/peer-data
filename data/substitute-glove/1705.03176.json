{"id": "1705.03176", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "9-May-2017", "title": "Solving a Path Planning Problem in a Partially Known Environment using a Swarm Algorithm", "abstract": "This paper pact same edge initiative objective out an Autonomous Ground Vehicle (AGV) navigating was, relatively known improving. Global path provided appears recording addition seven turn a spatial database of to region next longer mountains quantities selected examples such on roughly signals own soil information same was suitable complexity database. The codes is purified using an low-tech scurrying algorithm that \u201d inspired 1980s the nests building strategies with led termites. Local speed planning because performed online develop provides facts divestitures saying factor later safe navigation has the AGV from included sensors. The multimedia discussed has been approved down though going citing Player - Stage - Gazebo concept.", "histories": [["v1", "Tue, 9 May 2017 04:46:47 GMT  (4511kb)", "http://arxiv.org/abs/1705.03176v1", "IEEE International Symposium on Measurements and Control in Robotics. 2008"]], "COMMENTS": "IEEE International Symposium on Measurements and Control in Robotics. 2008", "reviews": [], "SUBJECTS": "cs.RO cs.AI", "authors": ["eshwaran vijaya kumar", "mansimar aneja", "dipti deodhare"], "accepted": false, "id": "1705.03176"}, "pdf": {"name": "1705.03176.pdf", "metadata": {"source": "CRF", "title": "Solving a Path Planning Problem in a Partially Known Environment using a Swarm Algorithm", "authors": ["Eshwaran Vijaya Kumar", "Dipti Deodhare"], "emails": ["mansimaraneja}@gmail.com,", "dipti@cair.drdo.in"], "sections": [{"heading": null, "text": "ar X\niv :1\n70 5.\n03 17\n6v 1\n[ cs\n.R O\n] 9\nM ay\n2 01\nKeywords: Swarm Intelligence, Distributed algorithms, Path Planning\nI. INTRODUCTION\nThe design of a complete planner that computes a collision free path for a non holonomic robot in any partially known environment especially outdoor terrains is constrained by a number of factors. These include the number of degrees of freedom imposed by the robot\u2019s geometry, the presence or absence of obstacles and sensor inaccuracies [1] which cause an exponential increase in computational complexity of the problem [2]. One strategy to reduce the complexity of the problem is to formulate assumptions that simplify the environment [3], [4], [5]. Another strategy is to design planners that satisfy weaker forms of completeness such as the probablistic path planner [6] and the randomized path planner [7]. An auxiliary strategy presented here is to reduce the computational processing requirments by the use of a distributed algorithm based on the principle of swarm intelligence. Swarm intelligence involves the design of algorithms based on the interactions between social insects such as termites and ants which leads to emergent intelligent behaviour [8].\nApproaches to designing planners for partially or dynamic environments differ in the way the environment is modelled. Topological maps utilize graphs where nodes represent landmark information and edges represent connections between them [9]. Planners based on topological maps include [10]. The main problem of utilizing such approaches in outdoor terrains is that of misidentification of similar landmarks. Metric maps capture geometric properties of the environment. Planners utilizing metric information include the D* algorithm [11], [12], potential field planners [13] and wave-front\nbased planners [14], [15]. For large areas, although metric maps provide finer resolutions allowing for more detailed planning to take place, processing requirements increase drastically."}, {"heading": "II. THE SWARM ALGORITHM", "text": "The generation of a desired collision free path involves two steps namely, (i) Global Path planning and (ii) Local Path planning. Here, global path planning is performed by first generating a spatial database of the region with selected features such as soil and gradient information. Gradient information is generated from Digital Elevation Models (DEM) which are digital representations of ground surface topography [16]. Elevation data having 30-90 metre resolution is freely available from the Shuttle Radar Topography Mission (SRTM) [17]. Other sources of DEMs include [18]. Figure 1 depicts the grey scale height map which is used as an input to generate the terrain. The corresponding terrain rendered in 3D is shown in Figure 2. Every pixel in a height map has a value varying from 0-255. A black spot corresponds to minimum elevation and a white spot corresponds to maximum elevation. In our simulation, this data is stored in a Postgres database table. This is mainly done to facilitate integration with soil information. To optimize space requirements, the data is sub-sampled so that every cell in the table is an average of the height map values of a group of 8 pixels. This height information is used to compute the gradient at each point/cell, in different directions and is simply the difference in the height values between two neighbouring points. The Pioneer2DX robot can travel safely on terrin bounded by a 25% limit on grade (an angle of approximately 15 deg. with the horizontal). Once the gradient information is computed, the data is mapped to a range of values ranging from 1 to 9 as shown in Table I below.\nSoil information of the region is obtained and classified into five categories that place bounds on robot manouverability. Soil information of the region is obtained from the GRASS POSTGIS database in the form of a vector map where the various soil types are classified by a parameter called cat value. This information is parsed and classified into five different categories namely, Gravel, Sand, Clay, Silt and Rock, in order of suitability for vehicle traversal. To facilitate computation these categories are assigned values 5, 4, 3, 2, 1, respectively\nto indicate the \u201cgoodness\u201d for traversability. Table II records this map formally.\nOnce the destination and start points are selected on the map, an arc joining the two is generated and a wide swathe of grid cells around the region are selected for processing. A biomimetic swarm algorithm inspired by nest building strategies in termites is used to process the data. The algorithm has already been proven successful in optimizing site selection in Geographical Information Systems (GIS) [19]. A rank map is first generated where a cell is defined to be good or bad by generating a single rank value by adding the Gradient Goodness Values and Soil Goodness Values discussed above. The expression for computing rank is given as equation 1.\nRank, R = SoilGoodnessValue + HeightGoodnessValue\n(1)\nThis is a very simple way of computing the rank. More formal and complex Multi-Criteria Decision Making (MCDM) strategies like the Analytical Hierarchical Process (AHP) can\nbe used. Once the rank has been obtained we now use a swarm algorithm inspired by the nest building behaviour of termites to perform the global path planning.\nThe algorithm is summarized as follows: A swarm of agents endowed with simplistic rules that govern their behaviour and local interaction is deployed randomly on the map to determine those cells that satisfy the constraints imposed by the vehicle for safe navigation. Each agent\u2019s interaction rules lead to two behaviours, namely, pellet dropping and nest building. In the pellet dropping stage, agents utilize permanent pheromones in the form of pellets to mark cells of a suitable rank. Once the number of pellets reaches a certain maximum limit, agents use the cell as a focal point to move to the next stage, namely nest building. In the nest building mode, agents forage in the local neighborhood of the suitable cell looking for other cells which satisfy the navigation criteria. If all the cells in the local vicinity of the cell with maximum number of pellets satisfy the navigation criteria, a nest of these cells is then created. When two nests created by different agents come in contact, they are merged together to create large contiguous areas suitable for navigation. Figure 5 illustrates the rank map, where the cells are ranked and declared as part of a nest, as indicated by the shaded patterns. The flow chart of the swarm algorithm is included in Figures 3 and 4.\nGrid maps have a major limitation in that the path produced can become suboptimal due to unnecessary increase in length. This is caused by wastage in space as cells are marked occupied by obstacles even if only a small portion of the cell is occupied by an obstacle. One possible solution is to increase the grid resolution which however leads to increase in processing requirements. Such a restriction is partially removed by generating two grid maps where each cell is four times the Robot size and the maps are separated by an offset which is equivalent to one fourth of the cell size. The resultant map consists of overlapping grid cells that are suitably ranked and nested, as can be seen in Figure 6. Both maps are continously checked during the robot\u2019s navigation."}, {"heading": "III. LOCAL PATH PLANNING", "text": "In a partially known environment, real time obstacle avoidance is performed by utilizing sensory information regarding contingencies that affect the safe navigation of the robot. A key factor in designing a obstacle avoidance algorithm is minimising the generation of non-optimal local paths. Various obstacle avoidance techniques include the edge detection [20] and certainty grid technique [21] and the Vector Field Histogram (VFH) Technique [22], [23], [24]. The VFH algorithm is one of the most efficient local path planning algorithms. It generates a two dimensional cartesian histogram grid from the robot\u2019s ranging sensors and utilizes the same to create a one dimensional polar grid around the immediate position of the robot. Contiguous sectors with a polar obstacle density below threshold are selected based on the proximity to target direction. This is then utilized by the robot to change steering towards the selected candidate direction. The processed swathe of cells around the arc generated by the swarm algorithm is then utilized to compute a suitable local path.\nThe VFH algorithm utilizes data from distance ranging sensors like laser or sonar sensors to perform obstacle avoidance. A robot moving across cross-country terrain will have to take into account vagaries of the terrain soil composition.\nTherefore, there arises a need to embed additional sensors that will sample the soil in a particular region to determine whether it is suitable for robot traversibility. The digital cone penetrometer [25], [26] has been developed primarily to enable rapid assessment of the in-situ strength of the soil. The instrument is used to manually grade the soil and categorize it based on its attributes. The data obtained is matched with the attributes of the various soil types and the region is categorized accordingly. This soil information is concurrently used along with the obstacle avoidance by the VFH algorithm to aid local path planning.\nIV. IMPLEMENTATION DETAILS AND SIMULATION\nRESULTS\nThe algorithm discussed has been implemented on the open source Player-Stage-Gazebo platform [27]. A simulated pioneer2DX robot equipped with SICK LMS 200 laser sensor is utilized to test the algorithm on a terrain generated on\nthe Gazebo 3D simulation tool. DEM data from the United States Geographic Services (USGS) was obtained for a region for which free soil information was available in the GRASS GIS project. This DEM data was converted into a height map which was used as input to Gazebo. The effectiveness of the VFH driver in short term path planning was tested out by introducing new obstacles in the form of simulated crates whose presence was not communicated to the grid data fed to the swarm algorithm. A digital cone penetrometer has been simulated as well. Updated soil composition data is fed to the Player client program which parses the soil information into one of the five different categories and suitably moves the robot into safer terrain.\nThe entire simulation was run on an Intel Core 2 Duo machine with 256 Mb video RAM and 2 GB RAM. Although the swarm algorithm is designed to run with several agents, the number of agents were limited to 10 because Gazebo\u2019s processing power requirements placed constraints on the amount of memory available for other processes to run. Sample soil data is included in Figure 7. Figure 8 has the combined rank due to soil goodness and heigh information. The set of cells with a dark outline indicate the nest. Figure 9 has the initial global path marked on it and the local variations consequent to obstacle avoidance (shown as a dotted line). Snapshots of\nthe Player video are given in Figure 10."}, {"heading": "ACKNOWLEDGMENT", "text": "The authors would like to thank Director, CAIR for sup-\nporting this work."}], "references": [{"title": "Robot Motion Planning and Control\u201d, Lecture Notes in Control and Information Sciences, 229", "author": ["J. Laumond"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1998}, {"title": "The Complexity of Robot Path Planning", "author": ["J.F. Canny"], "venue": null, "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1988}, {"title": "The complexity of the free space for a robot moving amidst fat obstacles", "author": ["F. van der Stappen", "D. Halperin", "M.H. Overmars"], "venue": "Journal of Computational Geometry: Theory and Applications,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1993}, {"title": "Motion Planning amidst Fat Obstacles", "author": ["F. van der Stappen"], "venue": "Ph.D. Thesis,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1994}, {"title": "Efficient motion planning algorithms in environments of bounded local complexity", "author": ["J.T. Schwartz", "M. Sharir"], "venue": "Report 164,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1985}, {"title": "Motion planning for car-like robots using a probabilistic learning approach", "author": ["P. Svestka", "M.H. Overmars"], "venue": "International Journal of Robotics Research,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1995}, {"title": "Latomber, \u201cRobot motion planning: A distributed representation approach", "author": ["J.C.J. Barraquand"], "venue": "International Journal of Robotics Research,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1991}, {"title": "Swarm Intelligence: From Natural to Artificial Systems", "author": ["E. Bonabeau", "M. Dorigo", "G. Theraulaz"], "venue": null, "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1999}, {"title": "Path planning and learning strategies for mobile robots in dynamic partially unknown environments", "author": ["K. Heero"], "venue": "Ph.D. Thesis,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2006}, {"title": "Planning, Execution and Learning in a Robotic Agent", "author": ["K.Z. Haigh", "M.M. Veloso"], "venue": "Proceedings of the 4th International Conference on Artificial Intelligence Planning Systems,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1998}, {"title": "Optimal and Efficient Path Planning for Partially-Known Environments", "author": ["A. Stentz"], "venue": "Proceedings of IEEE International Conference on Robotics and Automation,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1994}, {"title": "The Focussed D* Algorithm for Real-Time Replanning", "author": ["A. Stentz"], "venue": "Proceedings of the International Joint Conference on Artificial Intelligence,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1995}, {"title": "Principles of Robot Motion", "author": ["H. Choset", "K.M. Lynch", "S. Hutchinson", "G. Kantor", "W. Burgard", "L.E. Kavraki", "S. Thrun"], "venue": null, "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2005}, {"title": "Trulla : an algorithm for path planning among weighted regions by localized propagations", "author": ["Ken Hughes", "Alade Tokuta", "N Ranganathan"], "venue": "Proceedings of IEEE/RSJ International Conference on Intelligent Robots and Systems,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1992}, {"title": "The Shuttle Radar Topography Mission (SRTM)- a new class of digital elevation models acquired by spaceborne radar", "author": ["B. Rabus", "M. Eineder", "A. Roth", "R. Bamler"], "venue": "ISPRS Journal of Photogrammetry and Remote Sensing,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2003}, {"title": "An Algorithm for Site Selection in GIS based on Swarm Intelligence", "author": ["A. Sharma", "V. Vyas", "D. Deodhare"], "venue": "Proceedings of the IEEE Congress on Evolutionary Computation,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2006}, {"title": "Navigating Vehicles Through an Unstructured Environment With Sonar", "author": ["R. Kuc", "B. Barshan"], "venue": "Proceedings of the IEEE International Conference on Robotics and Automation,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 1989}, {"title": "Sensor Fusion in Certainty Grids for Mobile Robots", "author": ["H.P. Moravec"], "venue": "AI Magazine, Summer", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 1988}, {"title": "The Vector Field Histogram - Fast Obstacle Avoidance for Mobile Robots", "author": ["J. Borenstein", "Y. Koren"], "venue": "IEEE Journal of Robotics and Automation,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 1991}, {"title": "Real-time Obstacle Avoidance for Fast Mobile Robots in Cluttered Environments", "author": ["J. Borenstein", "Y. Koren"], "venue": "IEEE Transactions on Systems, Man, and Cybernetics,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 1989}, {"title": "VFH: local obstacle avoidance with lookahead verification", "author": ["I. Ulrich", "J. Borenstein"], "venue": "Proceedings of the IEEE International Conference on Robotics and Automation,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2000}, {"title": "Cone penetrometer applications: A Review\u201d, Transactions of the American Society of Agricultural Engineers, ASAE", "author": ["J.V. Perumpral"], "venue": "Beltsville, USA,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 1987}, {"title": "The Player/Stage project: Tools for Multi-robot and Distributed Sensor Systems", "author": ["B. Gerkey", "R. Vaughan", "A. Howard"], "venue": "Proceedings of the 11th International Conference on Advanced Robotics, (ICAR), pp. 317-323,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2003}], "referenceMentions": [{"referenceID": 0, "context": "These include the number of degrees of freedom imposed by the robot\u2019s geometry, the presence or absence of obstacles and sensor inaccuracies [1] which cause an exponential increase in computational complexity of the problem [2].", "startOffset": 141, "endOffset": 144}, {"referenceID": 1, "context": "These include the number of degrees of freedom imposed by the robot\u2019s geometry, the presence or absence of obstacles and sensor inaccuracies [1] which cause an exponential increase in computational complexity of the problem [2].", "startOffset": 224, "endOffset": 227}, {"referenceID": 2, "context": "One strategy to reduce the complexity of the problem is to formulate assumptions that simplify the environment [3], [4], [5].", "startOffset": 111, "endOffset": 114}, {"referenceID": 3, "context": "One strategy to reduce the complexity of the problem is to formulate assumptions that simplify the environment [3], [4], [5].", "startOffset": 116, "endOffset": 119}, {"referenceID": 4, "context": "One strategy to reduce the complexity of the problem is to formulate assumptions that simplify the environment [3], [4], [5].", "startOffset": 121, "endOffset": 124}, {"referenceID": 5, "context": "satisfy weaker forms of completeness such as the probablistic path planner [6] and the randomized path planner [7].", "startOffset": 75, "endOffset": 78}, {"referenceID": 6, "context": "satisfy weaker forms of completeness such as the probablistic path planner [6] and the randomized path planner [7].", "startOffset": 111, "endOffset": 114}, {"referenceID": 7, "context": "Swarm intelligence involves the design of algorithms based on the interactions between social insects such as termites and ants which leads to emergent intelligent behaviour [8].", "startOffset": 174, "endOffset": 177}, {"referenceID": 8, "context": "Topological maps utilize graphs where nodes represent landmark information and edges represent connections between them [9].", "startOffset": 120, "endOffset": 123}, {"referenceID": 9, "context": "Planners based on topological maps include [10].", "startOffset": 43, "endOffset": 47}, {"referenceID": 10, "context": "Planners utilizing metric information include the D* algorithm [11], [12], potential field planners [13] and wave-front based planners [14], [15].", "startOffset": 63, "endOffset": 67}, {"referenceID": 11, "context": "Planners utilizing metric information include the D* algorithm [11], [12], potential field planners [13] and wave-front based planners [14], [15].", "startOffset": 69, "endOffset": 73}, {"referenceID": 12, "context": "Planners utilizing metric information include the D* algorithm [11], [12], potential field planners [13] and wave-front based planners [14], [15].", "startOffset": 100, "endOffset": 104}, {"referenceID": 13, "context": "Planners utilizing metric information include the D* algorithm [11], [12], potential field planners [13] and wave-front based planners [14], [15].", "startOffset": 135, "endOffset": 139}, {"referenceID": 14, "context": "Elevation data having 30-90 metre resolution is freely available from the Shuttle Radar Topography Mission (SRTM) [17].", "startOffset": 114, "endOffset": 118}, {"referenceID": 15, "context": "The algorithm has already been proven successful in optimizing site selection in Geographical Information Systems (GIS) [19].", "startOffset": 120, "endOffset": 124}, {"referenceID": 16, "context": "Various obstacle avoidance techniques include the edge detection [20] and certainty grid technique [21] and the Vector Field Histogram (VFH) Technique [22], [23], [24].", "startOffset": 65, "endOffset": 69}, {"referenceID": 17, "context": "Various obstacle avoidance techniques include the edge detection [20] and certainty grid technique [21] and the Vector Field Histogram (VFH) Technique [22], [23], [24].", "startOffset": 99, "endOffset": 103}, {"referenceID": 18, "context": "Various obstacle avoidance techniques include the edge detection [20] and certainty grid technique [21] and the Vector Field Histogram (VFH) Technique [22], [23], [24].", "startOffset": 151, "endOffset": 155}, {"referenceID": 19, "context": "Various obstacle avoidance techniques include the edge detection [20] and certainty grid technique [21] and the Vector Field Histogram (VFH) Technique [22], [23], [24].", "startOffset": 157, "endOffset": 161}, {"referenceID": 20, "context": "Various obstacle avoidance techniques include the edge detection [20] and certainty grid technique [21] and the Vector Field Histogram (VFH) Technique [22], [23], [24].", "startOffset": 163, "endOffset": 167}, {"referenceID": 21, "context": "The digital cone penetrometer [25], [26] has been developed primarily to enable rapid assessment of the in-situ strength of the soil.", "startOffset": 36, "endOffset": 40}, {"referenceID": 22, "context": "The algorithm discussed has been implemented on the open source Player-Stage-Gazebo platform [27].", "startOffset": 93, "endOffset": 97}], "year": 2017, "abstractText": "This paper proposes a path planning strategy for an Autonomous Ground Vehicle (AGV) navigating in a partially known environment. Global path planning is performed by first using a spatial database of the region to be traversed containing selected attributes such as height data and soil information from a suitable spatial database. The database is processed using a biomimetic swarm algorithm that is inspired by the nest building strategies followed by termites. Local path planning is performed online utilizing information regarding contingencies that affect the safe navigation of the AGV from various sensors. The simulation discussed has been implemented on the open source Player-Stage-Gazebo platform.", "creator": "LaTeX with hyperref package"}}}