{"id": "1705.09650", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "24-May-2017", "title": "Anomaly Detection in a Digital Video Broadcasting System Using Timed Automata", "abstract": "This articles focuses same detecting anomalies same puts cameras video news (DVB) standard time providers ' realism. We we a renormalizable centrifugation knows goal_dallas potentiometer incidents inherently any of automated control following in DVB control internet require. This profile same used made a one - classes classifier. Anomalous stores first any testing sequence besides discovery when the rna is certainly accepted previously the done model.", "histories": [["v1", "Wed, 24 May 2017 09:26:49 GMT  (3058kb,D)", "http://arxiv.org/abs/1705.09650v1", "This paper has been accepted by the Thirty-Second Annual ACM/IEEE Symposium on Logic in Computer Science (LICS) Workshop on Learning and Automata (LearnAut)"]], "COMMENTS": "This paper has been accepted by the Thirty-Second Annual ACM/IEEE Symposium on Logic in Computer Science (LICS) Workshop on Learning and Automata (LearnAut)", "reviews": [], "SUBJECTS": "cs.LG cs.AI cs.FL cs.LO", "authors": ["xiaoran liu", "qin lin", "sicco verwer", "dmitri jarnikov"], "accepted": false, "id": "1705.09650"}, "pdf": {"name": "1705.09650.pdf", "metadata": {"source": "CRF", "title": "Anomaly Detection in a Digital Video Broadcasting System Using Timed Automata", "authors": ["Xiaoran Liu", "Qin Lin", "Sicco Verwer", "Dmitri Jarnikov"], "emails": ["lxran3691@gmail.com,", "q.lin@tudelft.nl,", "s.e.verwer@tudelft.nl", "djarnikov@irdeto.com"], "sections": [{"heading": null, "text": "Index Terms\u2014anomaly detection, digital video broadcasting system, real-time automaton\nI. INTRODUCTION\nNowadays proliferation of accessible data stream happens through various networks such as broadcasting, web page, mobile phone, etc. The large volume and continuously real-time updating characteristics of data streams pose challenges for studying and mining. This work focuses on profiling normal behavior from encryption control stream data generated by a digital video broadcasting (DVB) system. From a providers\u2019 perspective, such a profile provides insights about the process generating the data and it can be used for anomaly detection."}, {"heading": "A. Digital Video Broadcasting system", "text": "The DVB has been adopted in Europe as an open standard for a long time. The DVB standard defines both physical and data link layers for a variety of subsystems, e.g., satellite, cable, terrestrial television, and microwave. Furthermore, the DVB standard formulates how multiple program data are distributed and transported among protocols in format of the MPEG Transport Stream (MPEG-TS). Readers are referred to the official website of the DVB project for more detailed specifications1.\nThe objective of our research lies on a core security component of the DVB, i.e., the control access system. Figure 1 shows how the control access system works from a customer\u2019s side. The TS is received from the satellite through the tuner and arrives at the DVB descrambler. The content of the TS is scrambled with a 48-bit secret key, also known as the control word (CW). The CW is further encrypted into an entitlement control message (ECM). Meanwhile an entitlement management message (EMM) contains the authorization for decrypting the ECM. A demultiplexer extracts the ECM and\n1https://www.dvb.org/standards\nthe EMM from the TS. Valid smart cards are able to decrypt the EMM in order to access the authorization and decrypt the ECM. The decrypted ECM is used to descramble the TS into MPEG-2. The MPEG-2 contains video/audio/context, which is transported to users."}, {"heading": "B. Related Work", "text": "Anomalies are usually considered as outliers, surprises, exceptions, noises, and novelties [2]. Anomaly detection can be achieved by many pattern recognition techniques. However, in many domains, e.g., medical and financial area, frauds or anomalies detection should be understandable and interpretable. A key reason being that the learned knowledge should be validated by humans before being used. We provide a brief literature review of anomaly detection using language models since they are one of the most understandable models. Lin and et al. represent time series using the Symbolic Aggregate approXimation (SAX) [3], and then use a contextfree grammar for rules\u2019 generation [4]. Intuitively, anomalies tend to have low grammar density (novelty patterns are less compressed). Sekar and et al. learn program behaviors from system call sequences using a finite-state automaton for intrusion detection [5]. Timo and et al. propose a tailored behavior model (a probabilistic deterministic timed-transition automaton) to identify anomalies [6]. They first augment the learned automaton with timing information, after which traces ar X iv :1\n70 5.\n09 65\n0v 1\n[ cs\n.L G\n] 2\n4 M\nay 2\n01 7\nof ATM observations are traversed by the model. Aggregated transition probabilities are then compared with a predetermined threshold for detecting anomalies.\nIn this paper, we study event sequences from a DVB system. These sequences contain the encryption information needed for viewing the stream content. We model these sequences using PDRTAs (Probabilistic Deterministic Real Timed Automata), which we learn unsupervised from a set of input sequences using the RTI+ algorithm (Real-Time Identification from Positive Data) [7]. first, we compute the time difference between two consecutive and distinct events to obtain timed strings. We then segment the time strings into frames. The sequences are fed into the RTI+ algorithm to learn a timed automaton. In the testing phrase, an anomaly of a sequence is identified if the sequence is not accepted by the learned model. This paper makes the following contributions: \u2022 To the best of our knowledge, this paper is the first one\nusing a timed automaton to detect anomalies in the DVB system. Two types of anomalies, i.e., data lost and timing error, are identified with low false positive rate. \u2022 The model provides highly interpretable insights for understanding the underlying process generating the data. Experts from the DVB area can easily monitor and validate the system under operation using such a model.\nThis paper is organized as follows. Section II introduces the data preprocessing. Section III discusses the learning algorithm and the experimental results. We make concluding remarks in Section IV."}, {"heading": "II. DATA DESCRIPTION", "text": "An encryption scheme sequence (ESS) is abstracted from the monitoring records of the MPEG-TS. It is essentially a discrete event sequence of ECM streaming in the control access system.\nThe alphabet of the ESS is {A,B, 0, 1}. The symbols A and B abstractly stand for two ECMs containing an even and an odd key, respectively. The symbols 0 and 1 are even and odd encryption modes. According to expert knowledge, some known rules are the following:\n1) An ESS starts from As, followed by 1s, Bs, then ends with 0s. A complete encryption scheme consists of two aforementioned sequences. 2) The number of symbols are not fixed in an ESS. However, the amount of As is always equal to that of Bs. So are the paired events of 1s and 0s.\nWe can use a simple regular expression to generate the aforementioned rules: (A{m}1{n}B{m}0{n}){2}, where m and n are the legitimate numbers for an ECM pair (A/B) and an encryption mode pair (1/0). Basically there are two kinds of anomalies in practice of the DVB. The first one is data lost and the other one is timing error, e.g., too large or too small time delay."}, {"heading": "III. METHODS AND RESULTS", "text": "In this section, we will deploy a language model, i.e., a timed automaton for anomaly detection. Timed automata\nexplicitly model the underlying varying-duration behavior of ESS streaming."}, {"heading": "A. RTI+", "text": "Time constrains are implicit in conventional discrete event systems, e.g., n-grams or hidden Markov models. However, time information is often important for modeling the behavior of such systems. An algorithm for efficient learning of timed automata algorithm named RTI+ (Real-Time Identification from Positive Data) was proposed by [7]. Discrete events are represented by timed strings (a1, t1)(a2, t2) \u00b7 \u00b7 \u00b7 (an, tn), where ai is a discrete event occurring with ti time delay since the i\u22121th event. A PDRTA (probabilistic deterministic real timed automaton) model defines a probability distribution over such timed strings, having a Markov property in the distribution over events, and a semi-Markov property in the time guards.\nDefinition 1: A probabilistic DRTA (PDRTA) A is a quadruple \u3008A\u2032, H, S, T \u3009, where A\u2032 = \u3008Q,\u03a3,\u2206, q0\u3009 is a DRTA without final states, H is a finite set of bins (time intervals) [v, v\u2032], v, v\u2032 \u2208 N, known as the histogram, S is a finite set of symbol probability distributions Sq = Pr(S = a | q) | a \u2208 \u03a3, q \u2208 Q, and T is a finite set of time-bin probability distributions Tq = Pr(T \u2208 h | q) | h \u2208 H, q \u2208 Q. In a PDRTA, the state transition is triggered when both the event and the time guard are satisfied.\nTable I is an example of how to obtain a timed string. Raw data is formatted in tuples of a symbol and a timestamp. In timed strings, time delay between events represents event transition intervals. Note that since only integer format time is readable for RTI+, the original float time with precision microseconds need to be rounded. An interesting problem what precision (different level of magnification) is \u201coptimal\u201d when learning the time guards. A large magnification intuitively makes time guards more sensitive. We will conduct several comparative trials to find a good precision in the experimental part.\nAlgorithm 1 Data identification with RTI+: Input: A (multi-)set of timed strings S+ Output: A small PDRTA A for S+ Construct a timed prefix A tree from S+, let Q\u2032 = \u2205;\nfor all transitions \u03b4 = \u3008q, q\u2032, a, [m,m\u2032]\u3009 from A, do Evaluate all possible merges of q\u2032 with states from Q\u2032; Evaluate all possible splits of \u03b4; if the lowest split p-value< 0.05 then\nperform this split; end else if the highest merge p-value> 0.05 then\nperform this merge; end else\nadd q to Q\u2032; end\nend"}, {"heading": "B. model interpretation", "text": "We print out the automaton learned using RTI+ from the DVB data in Figure 2. All the states are depicted using circles. The arcs represent transitions between the states. A transition is triggered when both an event and its timing are valid (inside a time guard). The event and the timing, along with their probability and occurrence, are printed next to the arc. The sink state named S is generated due to some strings with very low occurrence (less then 5). Some interesting knowledge is discovered in such a insightful and structural model.\n1) Loops indicate the cycling behavior of sending ESSs. For example the path S0-S1-S2-S3-S4-S5-...S4-S5 can be expressed as: (A{3}1{2}B{3}0{2})+. 2) Without considering the time information, the legitimate rule can be drawn as (A{3-6}1{2}B{3-6}0{2})+. 3) RTI+ splits at some states, e.g., S0 for distinct time guards: [0, 20], [21, 23], and [24, 25]. RTI+ splits the time in a transition to pull apart distinguished tails. Take the two sequences sharing same symbolic rules (A{5}1{2}B{5}0{2})+: S0-S26-S27-S44S45-S46-...S41-S26 and S0-S42-S43-S51-...S59-S60 for instance, they are distinguished as low and high delay behaviors (loops) of sending the first ECM key: A. This type of information indicates the possible varyingduration properties of the system, which deserves a further verification by the DVB experts."}, {"heading": "C. result", "text": "The training set contains 280 sequences in total. In the testing phrase, we collect two data sets having a data lost and a timing error, respectively. The number of sequence in each of them is 29. Anomalous items in a sequence will be reported if such a sequence is not accepted by this model. The Table II and III show the results of data lost and time delay testing data set. True positive (TP), false negative (FN), false positive (FP), and true negative (TN) are listed in the tables. Their corresponding rates i.e., TPR, FNR, FPR, TNR, and accuracy (ACC) are computed as well.\nWe compare three levels of magnification 10, 103, and 106 for determining good time precision. The results show that the precision with 106 times scaling performs best. We suggest to well address this problem by comparative trials in practice. The false positive is caused by the sink state in our model, i.e., because RTI+ does not handle transitions that occur very infrequently. The sequences firing these transitions provide too little information for RTI+ to obtain reliable statistical tests for computing merge and split scores. To avoid this problem, we suggest to check strings in the training data as well as the model. If it does exist in the training data, even though it\ntraverses to a sink state, we can label it as normal behavior to reduce the false positives.\nTwo anomalous sequences from the DVB system are listed as follows.\n\u2022 Data lost:(1, 300), (1, 0), (B, 22), (B, 0), (B, 2), (B, 0), (0, 276), (0, 0), (A, 22), (A, 0), (A, 2), (A, 0), (1, 276), (1, 0), (B, 22), (B, 0), (B, 2), (B, 0), (0, 276), (0, 0) \u2022 Time delay: (A, 22), (A, 0), (A, 2), (A, 275), (1, 0), (1, 0), (B, 22), (B, 0), (B, 2), (B, 0), (0, 275), (0, 0), (A, 22), (A, 0), (A, 2), (A, 0), (1, 275), (1, 0), (B, 22), (B, 0), (B, 3), (B, 0), (0, 275), (0, 0)\nThe first sequence misses As in the beginning, which leads to a failure triggering the following transitions at the start state. TIn the second sequence, the 4th A is outside the valid time guard [0, 0]."}, {"heading": "IV. CONCLUSION", "text": "We learn a benign behavioral profile using RTI+. Such a generative model provides insights for the ESSs screaming process. The knowledge we discover is consistent with that of the experts from the DVB system area. In addition, our model provides the valid timing in each transition for behavior duration verification. The experiments demonstrate that our model has high accuracy in anomaly detection. Another advantage of our model is that it is efficient for real-time application because the verification is just firing transitions in our model, which is polynomial in time."}, {"heading": "ACKNOWLEDGMENT", "text": "This work is partially supported by Technologiestichting STW VENI project 13136 (MANTA) and NWO project 62001628 (LEMMA)."}], "references": [{"title": "On the detection of card-sharing traffic through wavelet analysis and support vector machines", "author": ["F. Palmieri", "U. Fiore", "A. Castiglione", "A. De Santis"], "venue": "Applied Soft Computing, vol. 13, no. 1, pp. 615\u2013627, 2013.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2013}, {"title": "Anomaly detection: A survey", "author": ["V. Chandola", "A. Banerjee", "V. Kumar"], "venue": "ACM computing surveys (CSUR), vol. 41, no. 3, p. 15, 2009.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2009}, {"title": "Experiencing sax: a novel symbolic representation of time series", "author": ["J. Lin", "E. Keogh", "L. Wei", "S. Lonardi"], "venue": "Data Mining and Knowledge Discovery, vol. 15, no. 2, pp. 107\u2013144, 2007.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2007}, {"title": "A fast automatonbased method for detecting anomalous program behaviors", "author": ["R. Sekar", "M. Bendre", "D. Dhurjati", "P. Bollineni"], "venue": "Security and Privacy, 2001. S&P 2001. Proceedings. 2001 IEEE Symposium on. IEEE, 2001, pp. 144\u2013155.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2001}, {"title": "Modelbased anomaly detection for discrete event systems", "author": ["T. Klerx", "M. Anderka", "H.K. B\u00fcning", "S. Priesterjahn"], "venue": "Tools with Artificial Intelligence (ICTAI), 2014 IEEE 26th International Conference on. IEEE, 2014, pp. 665\u2013672.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2014}, {"title": "A likelihood-ratio test for identifying probabilistic deterministic real-time automata from positive data", "author": ["S. Verwer", "M. de Weerdt", "C. Witteveen"], "venue": "International Colloquium on Grammatical Inference. Springer, 2010, pp. 203\u2013216.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2010}], "referenceMentions": [{"referenceID": 0, "context": "Example of the control access system from the consumer\u2019s side [1].", "startOffset": 62, "endOffset": 65}, {"referenceID": 1, "context": "Related Work Anomalies are usually considered as outliers, surprises, exceptions, noises, and novelties [2].", "startOffset": 104, "endOffset": 107}, {"referenceID": 2, "context": "represent time series using the Symbolic Aggregate approXimation (SAX) [3], and then use a contextfree grammar for rules\u2019 generation [4].", "startOffset": 71, "endOffset": 74}, {"referenceID": 3, "context": "learn program behaviors from system call sequences using a finite-state automaton for intrusion detection [5].", "startOffset": 106, "endOffset": 109}, {"referenceID": 4, "context": "propose a tailored behavior model (a probabilistic deterministic timed-transition automaton) to identify anomalies [6].", "startOffset": 115, "endOffset": 118}, {"referenceID": 5, "context": "We model these sequences using PDRTAs (Probabilistic Deterministic Real Timed Automata), which we learn unsupervised from a set of input sequences using the RTI+ algorithm (Real-Time Identification from Positive Data) [7].", "startOffset": 218, "endOffset": 221}, {"referenceID": 5, "context": "An algorithm for efficient learning of timed automata algorithm named RTI+ (Real-Time Identification from Positive Data) was proposed by [7].", "startOffset": 137, "endOffset": 140}], "year": 2017, "abstractText": "This paper focuses on detecting anomalies in a digital video broadcasting (DVB) system from providers\u2019 perspective. We learn a probabilistic deterministic real timed automaton profiling benign behavior of encryption control in the DVB control access system. This profile is used as a one-class classifier. Anomalous items in a testing sequence are detected when the sequence is not accepted by the learned model.", "creator": "LaTeX with hyperref package"}}}