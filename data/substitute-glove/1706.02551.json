{"id": "1706.02551", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "8-Jun-2017", "title": "The Algorithmic Inflection of Russian and Generation of Grammatically Correct Text", "abstract": "We yet part generalization recursive though Russian adjective. This algorithm part guidelines in is officials available books - facilities www. passare. ru which provides functions on counterfactual of double speaks, word margins where analogous similar comprehensible whatever Russian text. The inflectional constraint have heavily disease failed before script sahag\u00fan of Russian language OpenCorpora.", "histories": [["v1", "Thu, 8 Jun 2017 12:48:15 GMT  (606kb)", "http://arxiv.org/abs/1706.02551v1", "9 pages, 1 figure"]], "COMMENTS": "9 pages, 1 figure", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["t m sadykov", "t a zhukov"], "accepted": false, "id": "1706.02551"}, "pdf": {"name": "1706.02551.pdf", "metadata": {"source": "CRF", "title": "THE ALGORITHMIC INFLECTION OF RUSSIAN AND GENERATION OF GRAMMATICALLY CORRECT TEXT", "authors": [], "emails": [], "sections": [{"heading": null, "text": "ar X\niv :1\n70 6.\n02 55\n1v 1\n[ cs\n.C L\n] 8\nJ un\n2 01"}, {"heading": "1. Introduction", "text": "Automatic inflection of words in a natural language is necessary for a variety of theoretical and applied purposes like parsing, topic-to-question generation [3], speech recognition and synthesis, machine translation [13], tagset design [17], information retrieval [12], content analysis etc [1, 2]. Various approaches towards automated inflection have been used to deal with particular aspects of inflection [5, 23] in predefined languages [6, 8, 9, 15, 16, 19] or in an unspecified inflected language [7].\nDespite substantial recent progress in the field [16, 21, 22], automatic inflection still represents a problem of formidable computational complexity for many natural languages in the world. Most state-of-the-art approaches make use of extensive manually annotated corpora that currently exist for all major languages [20]. Real-time handling of a dictionary that contains millions of inflected word forms and tens of millions of relations between them is not an easy task [10]. Besides, no dictionary can ever be complete. For these reasons, algorithmic coverage of the grammar of a natural language is important provided that inflection in this language is complex enough.\nRussian is a highly inflected language whose grammar is known for its complexity [21, 23]. In Russian, inflection of a word may require changing its prefix, root and ending simultaneously while the rules of inflection are highly complex [11, 23]. The form of a word can depend on as many as five grammatical categories such as number, gender, person, tense, case, voice, animacy etc. By an estimate based on [18], the average number of different grammatical forms of a Russian adjective is 11.716. A Russian verb has, on average, 44.069 different inflected forms, counting participles of all kinds and the gerunds.\nIn the present paper we describe a fully algorithmic dictionary-free approach towards automatic inflection of Russian. The algorithms described in the present paper are implemented in C# programming language. The described functionality is freely available\nThis research was conducted in the framework of the basic part of the scientific research state task in the field of scientific activity of the Ministry of science and education of the Russian Federation, project no. 2.9577.2017. The first author was also supported by the grant of the Government of the Russian Federation for investigations under the guidance of the leading scientists of the Siberian Federal University (contract No. 14.Y26.31.0006).\n1\nonline at www.passare.ru through both manual entry of a word to be inflected and by API access of main functions for dealing with big amounts of data."}, {"heading": "2. Algorithms and implementation", "text": "The web-service passare.ru offers a variety of functions for inflection of single Russian words, word matching, and synthesis of grammatically correct text. In particular, the inflection of a Russian noun by number and case, the inflection of a Russian adjective by number, gender, and case, the inflection of a Russian adverb by the degrees of comparison are implemented. Russian verb is the part of speech whose inflection is by far the most complicated in the language. The presented algorithm provides inflection of a Russian verb by tense, person, number, and gender. It also allows one to form the gerunds and the imperative forms of a verb. Besides, functions for forming and inflecting active present and past participles as well as passive past participles are realized. Passive present participle is the only verb form not currently supported by the website due to the extreme level of its irregularity and absence for numerous verbs in the language.\nThe algorithmic coverage of the Russian language provided by the web-service passare.ru aims to balance grammatical accuracy and easiness of use. For that reason, a few simplifying assumptions have been made: the Russian letters \u201d\u0435\u0308\u201d and \u201d\u0435\u201d are identified; no information on the stress in a word is required to produce its inflected forms; for inflectional functions, the existence of an input word in the language is determined by the user. Furthermore, the animacy of a noun is not treated as a variable category in the noun-inflecting function despite the existence of 1037 nouns (about 1.4% of the nouns in the OpenCorpora database [18]) with unspecified animacy. This list of nouns has been manually reviewed on a case-by-case basis and the decision has been made in favor of the form that is more frequent in the language. The other form can be obtained by calling the same function with a different case parameter (Nominative or Genitive instead of Accusative).\nSimilarly, the perfectiveness is not implemented as a parameter in a verb-inflecting function although by [18] there exist 1038 verbs (about 3.2% of the verbs in the database) in the language whose perfectiveness is not specified. For such verbs, the function produces forms that correspond to both perfective and imperfective inflections.\nThe inflectional form of a Russian word defined by a choice of grammatical categories (such as number, gender, person, tense, case, voice, animacy etc.) is in general not uniquely defined. This applies in particular to many feminine nouns, feminine forms of adjectives and to numerous verbs. For such words, the algorithms implemented in the web-service passare.ru only aim at finding one of the inflectional forms, typically, the one which is the most common in the language.\nDue to the rich morphology of the Russian language and to the high complexity of its grammar, a detailed description of the algorithms of Russian inflection cannot be provided in a journal paper. The algorithm for the generation of the perfective gerund form of a verb is presented in Fig. 1. Most of the notation in Figure 1 is the same as that of the C# programming language. Furthermore, NF denotes the input normal form (the infinitive) of a verb to be processed. GetPerfectness() is a boolean function which detects whether a verb is perfective or not. Verb() is the function which inflects a given verb with respect\nto person, number, gender and tense (see the notation in Section 5). BF denotes the basic form of a Russian verb which is most suitable for constructing the perfective gerund of that verb. We found it convenient to use one of the three different basic forms depending on the type of the input verb to be inflected. The list vowels comprises all vowels in the Russian alphabet.\nThe algorithms have been implemented in C# programming language. The implementation comprises about 35,000 lines of code and has been compiled into a 571 kB executable file."}, {"heading": "3. Software speed tests and verification of results", "text": "The software being presented has been tested against the one of the widest publicly available corpora of Russian, OpenCorpora [18]. We have been using Intel Core i5-2320 processor clocked at 3.00GHz with 16GB RAM under Windows 7. The results are summarized in the below table.\nAll of the words whose inflected forms did not show full agreement with the OpenCorpora database have been manually reviewed on a case-by-case basis. In the case of nouns, 26.76% of all error-producing input words belong to the class of Russian nouns whose animacy cannot be determined outside the context (e.g. \u201d\u0435\u0308\u0436\u201d, \u201d\u0436\u0443\u0447\u043e\u043a\u201d and the like). For verbs, 11.26% of the discrepancies result from the verbs whose perfectiveness cannot be determined outside the context without additional information on the stress in the word (e.g. \u201d\u043d\u0430\u0441\u044b\u043f\u0430\u0442\u044c\u201d, \u201d\u043f\u0430\u0445\u043d\u0443\u0442\u044c\u201d etc.).\nBesides, a substantial number of errors in OpenCorpora have been discovered. The classification of flaws in OpenCorpora is beyond the scope of the present work and we only mention that the inflection of the verb \u201d\u0437\u0430\u0441\u0442\u0435\u043b\u0438\u0442\u044c\u201d as well as the gerund forms of the verbs \u201d\u0432\u044b\u043c\u0435\u0441\u0442\u0438\u0442\u044c\u201d and \u201d\u043d\u0430\u043f\u0435\u0447\u044c\u201d appear to be incorrect in this database at the time of writing."}, {"heading": "4. Synthesis of grammatically correct text", "text": "Using the basic functions described above, one can implement automated synthesis of grammatically correct Russian text on the basis of any logical, numerical, financial, factual or any other precise data. The website passare.ru provides examples of such metafunctions that generate grammatically correct weather forecast and currency exchange rates report on the basis of real-time data available online. Besides, it offers a function that converts a correct arithmetic formula into Russian text.\nThe following piece of C# code is the core of one of the central functions which generate a grammatically correct report on exchange rates of currencies.\n[ SynthFunction ( \u201d ( Change in exchange rate ) \u201d ) ]\npublic stat ic Log icSet TrendChange ( Log icSet input , Log i cSo lve r s o l v e r )\n{ TimeSer ies t s = new TimeSer ies ( ) ;\nvar cc1 = input . ElementAt ( 0 ) . ToString ( ) . Subst r ing ( 1 ) ; var cc2 = input . ElementAt ( 1 ) . ToString ( ) . Subst r ing ( 1 ) ;\nstring rdt = cc1 + cc2 ; var currency1y =\nFinanc i a lda ta . GetData ( rdt , \u201dCURRENCY\u201d , \u201d1Y\u201d , \u201dd , c\u201d ) ; for ( int i = 0 ; i < currency1y . Count ; i++)\n{ int r i = currency1y . Count \u2212 i \u2212 1 ;\nDateTime d = DateTime . Today . AddDays(\u2212 i \u2212 1 ) ; t s . AddData (new TimeSeriesDataPoint (d ,\ndouble . Parse ( currency1y [ r i ] [ 1 ] . Replace ( \u2019 . \u2019 , \u2019 , \u2019 ) ) ) ) ;\n} var r e s u l t = t s . BuildMontlyTrends ( ) ;\ni f ( r e s u l t . Count == 0) return new Log icSet ( ) ; var l a s t = r e s u l t . Last ( ) ;\nvar i s t p = t s . IsTrendPresent ( l a s t , DateTime . Today . AddDays(\u22121)) ;\nDateTime midtrendtime = DateTime . FromBinary ( ( l a s t . t s t a r t . Ticks\n+ l a s t . tend . Ticks ) / 2 ) . Date ; int tt lmonths = DateTime . Today .Month \u2212\nmidtrendtime .Month ; var i d3 = so l v e r . OpenParamGroup ( ) ;\nvar l s e t = new Log icSet ( ) ; i f ( tt lmonths > 0)\n{\nvar i d2 = so l v e r . OpenParamGroup ( ) ; var a1 = so l v e r . Construct ( \u201dnumber of months\u201d +\nttlmonths , i d 2 ) ; var d t e s t =\ns o l v e r . Construct ( \u201d past t ime ( months ago ) \u201d , i d 3 ) ; s o l v e r . Apply ( d t e s t ) ;\ns o l v e r . Col lapseLongBranches ( d t e s t ) ; s o l v e r . CloseParamGroup ( i d2 ) ;\n}\nelse . . . . . . . . . . . . s o l v e r . CloseParamGroup ( i d3 ) ;\nreturn l s e t ; }"}, {"heading": "5. Automated API access of main functions", "text": "Although all functions of the website www.passare.ru can be accessed manually by choosing options and typing words to be inflected or entering the parameters of a text to be automatically created, API-based automatic access is enabled to speed up work with big amounts of data. The details of the API access of main functions are as follows.\ninterface: socket\nip: 46.173.208.127 port: 9999 character encoding: UTF8\nTo access a function, one needs to connect to the server, send a query string ending with the zero byte, receive the response string ending with the zero byte and close the connection.\nThe API accessible functions of the website provide inflection of the following parts of speech:\n\u2022 Verbs (ru verb) with the arguments: verb (the infinitive); person; number; gender; tense; \u2022 Nouns (ru noun) with the arguments: noun (the singular nominative form); number; case; \u2022 Adjectives (ru adjective) with the arguments: adjective (the singular masculine nominative form); number; gender; case; animacy; \u2022 Adverbs (ru adverb) with the arguments: adverb; comparative/superlative form; \u2022 Numerals (ru numeral):\nCardinals with the arguments: number; card; Ordinals with the arguments: number; ordi; Fractions with the arguments: number (e.g. 1/2); frac.\n\u2022 Do we have API accessible functions for participles and gerund form?\nThe lists of possible values of the parameters in the above functions are as follows: Person: p1 - 1st person; p2 - 2nd person; p3 - 3rd person.\nNumber: n1 - Singular; nx - Indefinite plural; n2 - Plural for numerals like 2, 3, 4, 22, 23, 24, etc; n5 - Plural for numerals like 5, 6, 7, 8, etc.\nGender: gm - Masculine; gf - Feminine; gn - Neuter.\nTense: tc - Present; tp - Past; tf - Future.\nCase: ci - Imenitelnyj (Nominative) cr - Roditelnyj (Genitive)\ncd - Datelnyj (Dative) cv - Vinitelnyj (Accusative) ct - Tvoritelnyj (Instrumental) cp - Predlozhnyj (Prepositional)\nAnimacy: a - Animate; an - Inanimate. Adverb form: fc - Comparative; fs - Superlative. Type of a numeral: card - Cardinal; ordi - Ordinal; frac - Fractional.\nExamples of query strings: ru adverb;\u0431\u044b\u0441\u0442\u0440\u043e;fc\nru verb;\u0438\u0437\u0443\u0447\u0438\u0442\u044c;p3;n1;gm;tc ru adjective;\u0440\u0443\u0441\u0441\u043a\u0438\u0439;nx;gf;ti;na ru noun;\u044f\u0437\u044b\u043a;n1;cp ru numeral;24;card\nru numeral;7;ordi ru numeral;11/12;frac\nExample of implementation:\nPHP $host = 46.173.208.127; $port = 9999;\n$waitTimeoutInSeconds=8; $fp=fsockopen($host,$port,$errCode,$errStr,$waitTimeoutInSeconds); if ($fp) { fwrite ($fp, \"ru noun;\u043c\u0430\u0448\u0438\u043d\u0430;cr;nx\".\"\\0\"); $response = fread($fp, 10000);\necho($response); } //Output: \u043c\u0430\u0448\u0438\u043d"}, {"heading": "6. Discussion", "text": "There exist several other approaches towards automated Russian inflection and synthesis of grammatically correct Russian text, e.g. [14, 16]. Besides, numerous programs attempt automated inflection of a particular part of speech or synthesis of a document with a rigid predefined structure [4]. Judging by publicly available information, most of such program make extensive use of manually annotated corpora which might cause failure when the word to be inflected is different enough from the elements in the database.\nThe solution presented in this paper has been designed to be as independent of any dictionary data as possible. However, due to numerous irregularities in the Russian language, several lists of exceptional linguistic objects (like the list of indeclinable nouns or the list of verbs with strongly irregular gerund forms, see Fig. 1) have been composed and used throughout the code. Whenever possible, rational descriptions of exceptional cases have been adopted to keep the numbers of elements in such lists to the minimum."}], "references": [{"title": "Automation of the English-Russian bilingual phraseological dictionaries based on arrays of bilingual texts (bilingual)", "author": ["G.G. Belonogov", "A.A.Horoshilov"], "venue": "Automatic Documentation and Mathematical Linguistics,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2010}, {"title": "Towards topic-to-question generation", "author": ["Y.Chali", "S.A.Hasan"], "venue": "Computational Linguistics,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2015}, {"title": "Specificities of lexicological synthesis of text documents", "author": ["B.V. Chernikov", "A.M.Karminsky"], "venue": "Procedia Computer Science,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2014}, {"title": "An algorithmic approach to English pluralization", "author": ["D. Conway"], "venue": "Proceedings of the Second Annual Perl Conference", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2001}, {"title": "Morphological inflection generation using character sequence to sequence learning, Human Language Technologies", "author": ["M. Faruqui", "Yu.Tsvetkov", "G.Neubig", "C.Dyer"], "venue": "NAACL HLT", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2016}, {"title": "Automatic English inflection", "author": ["W.D. Foust"], "venue": "Proceedings of the National Symposium on Machine Translation,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1960}, {"title": "Inflection system of a language as a complex network, IEEE Toronto International Conference - Science and Technology for Humanity", "author": ["H. Fuk\u015b"], "venue": null, "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2009}, {"title": "Natural language processing as a source of linguistic knowledge", "author": ["L.L. Iomdin"], "venue": "Proceedings of the International Conference on Machine Learning, Models, Technologies and Applications", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2003}, {"title": "Sagalova. Learning lessons from bilingual corpora: Benefits for machine translation", "author": ["L.L. Iomdin", "O. Streiter", "I.L"], "venue": "International Journal of Corpus Linguistics", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2000}, {"title": "Shalyapina. The RUMORS system of Russian synthesis", "author": ["Z.M.M.I. Kanovich"], "venue": "Proceedings of the 15th conference on Computational linguistics - Vol", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1994}, {"title": "Computational model to generate case-inflected forms of masculine nouns for word search in Sanskrit E-text", "author": ["Kasmir Raja S.V", "V.Rajitha", "Meenakshi Lakshmanan"], "venue": "Journal of Computer Science", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2014}, {"title": "An algorithm for suffix stripping", "author": ["M.F. Porter"], "venue": "Program 14:3,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 1980}, {"title": "A fast morphological algorithm with unknown word guessing induced by a dictionary for a web search engine", "author": ["I. Segalovich"], "venue": "Proceedings of the International Conference on Machine Learning; Models, Technologies and Applications", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2003}, {"title": "Using longest common subsequence and character models to predict word forms, Proceedings of the 14th Annual SIGMORPHON Workshop on Computational Research in Phonetics, Phonology, and Morphology (2016)", "author": ["A. Sorokin"], "venue": null, "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2016}, {"title": "Bagging and boosting statistical machine translation systems", "author": ["T.Xiao", "J. Zhu", "T. Liu"], "venue": "Artificial Intelligence", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2013}, {"title": "Russian Nominal Inflection", "author": ["A.A. Zaliznyak"], "venue": "Nauka,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 1967}], "referenceMentions": [{"referenceID": 1, "context": "Automatic inflection of words in a natural language is necessary for a variety of theoretical and applied purposes like parsing, topic-to-question generation [3], speech recognition and synthesis, machine translation [13], tagset design [17], information retrieval [12], content analysis etc [1, 2].", "startOffset": 158, "endOffset": 161}, {"referenceID": 8, "context": "Automatic inflection of words in a natural language is necessary for a variety of theoretical and applied purposes like parsing, topic-to-question generation [3], speech recognition and synthesis, machine translation [13], tagset design [17], information retrieval [12], content analysis etc [1, 2].", "startOffset": 217, "endOffset": 221}, {"referenceID": 7, "context": "Automatic inflection of words in a natural language is necessary for a variety of theoretical and applied purposes like parsing, topic-to-question generation [3], speech recognition and synthesis, machine translation [13], tagset design [17], information retrieval [12], content analysis etc [1, 2].", "startOffset": 265, "endOffset": 269}, {"referenceID": 0, "context": "Automatic inflection of words in a natural language is necessary for a variety of theoretical and applied purposes like parsing, topic-to-question generation [3], speech recognition and synthesis, machine translation [13], tagset design [17], information retrieval [12], content analysis etc [1, 2].", "startOffset": 292, "endOffset": 298}, {"referenceID": 3, "context": "Various approaches towards automated inflection have been used to deal with particular aspects of inflection [5, 23] in predefined languages [6, 8, 9, 15, 16, 19] or in an unspecified inflected language [7].", "startOffset": 109, "endOffset": 116}, {"referenceID": 15, "context": "Various approaches towards automated inflection have been used to deal with particular aspects of inflection [5, 23] in predefined languages [6, 8, 9, 15, 16, 19] or in an unspecified inflected language [7].", "startOffset": 109, "endOffset": 116}, {"referenceID": 5, "context": "Various approaches towards automated inflection have been used to deal with particular aspects of inflection [5, 23] in predefined languages [6, 8, 9, 15, 16, 19] or in an unspecified inflected language [7].", "startOffset": 141, "endOffset": 162}, {"referenceID": 6, "context": "Various approaches towards automated inflection have been used to deal with particular aspects of inflection [5, 23] in predefined languages [6, 8, 9, 15, 16, 19] or in an unspecified inflected language [7].", "startOffset": 141, "endOffset": 162}, {"referenceID": 10, "context": "Various approaches towards automated inflection have been used to deal with particular aspects of inflection [5, 23] in predefined languages [6, 8, 9, 15, 16, 19] or in an unspecified inflected language [7].", "startOffset": 141, "endOffset": 162}, {"referenceID": 11, "context": "Various approaches towards automated inflection have been used to deal with particular aspects of inflection [5, 23] in predefined languages [6, 8, 9, 15, 16, 19] or in an unspecified inflected language [7].", "startOffset": 141, "endOffset": 162}, {"referenceID": 4, "context": "Various approaches towards automated inflection have been used to deal with particular aspects of inflection [5, 23] in predefined languages [6, 8, 9, 15, 16, 19] or in an unspecified inflected language [7].", "startOffset": 203, "endOffset": 206}, {"referenceID": 13, "context": "Despite substantial recent progress in the field [16, 21, 22], automatic inflection still represents a problem of formidable computational complexity for many natural languages in the world.", "startOffset": 49, "endOffset": 61}, {"referenceID": 14, "context": "Despite substantial recent progress in the field [16, 21, 22], automatic inflection still represents a problem of formidable computational complexity for many natural languages in the world.", "startOffset": 49, "endOffset": 61}, {"referenceID": 12, "context": "Most state-of-the-art approaches make use of extensive manually annotated corpora that currently exist for all major languages [20].", "startOffset": 127, "endOffset": 131}, {"referenceID": 13, "context": "Russian is a highly inflected language whose grammar is known for its complexity [21, 23].", "startOffset": 81, "endOffset": 89}, {"referenceID": 15, "context": "Russian is a highly inflected language whose grammar is known for its complexity [21, 23].", "startOffset": 81, "endOffset": 89}, {"referenceID": 15, "context": "In Russian, inflection of a word may require changing its prefix, root and ending simultaneously while the rules of inflection are highly complex [11, 23].", "startOffset": 146, "endOffset": 154}, {"referenceID": 0, "context": "Parse ( currency1y [ r i ] [ 1 ] .", "startOffset": 27, "endOffset": 32}, {"referenceID": 9, "context": "[14, 16].", "startOffset": 0, "endOffset": 8}, {"referenceID": 2, "context": "Besides, numerous programs attempt automated inflection of a particular part of speech or synthesis of a document with a rigid predefined structure [4].", "startOffset": 148, "endOffset": 151}], "year": 2017, "abstractText": "We present a deterministic algorithm for Russian inflection. This algorithm is implemented in a publicly available web-service www.passare.ru which provides functions for inflection of single words, word matching and synthesis of grammatically correct Russian text. The inflectional functions have been tested against the annotated corpus of Russian language OpenCorpora [18].", "creator": "LaTeX with hyperref package"}}}