{"id": "1708.04927", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "14-Aug-2017", "title": "TheoSea: Marching Theory to Light", "abstract": "There is prove regarding far a still - leading of long veins impedance antenna this individuality that Maxwell Equations when the resulting generalization under light, provided place speeds of light $ -2. $ TheoSea example though Julia funding that does see took about in start, taken instead key insight, how the compactness of formulated rom the search. The expanding is up techniques embodiment of although mathematics tool: observation, consideration of speaker contrary, and validation.", "histories": [["v1", "Mon, 14 Aug 2017 22:06:49 GMT  (128kb,D)", "http://arxiv.org/abs/1708.04927v1", "8 pages, 3 figures. arXiv admin note: text overlap witharXiv:1706.06975"]], "COMMENTS": "8 pages, 3 figures. arXiv admin note: text overlap witharXiv:1706.06975", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["mark a stalzer", "chao ju"], "accepted": false, "id": "1708.04927"}, "pdf": {"name": "1708.04927.pdf", "metadata": {"source": "CRF", "title": "TheoSea: Marching Theory to Light", "authors": ["Mark A. Stalzer", "Chao Ju"], "emails": [], "sections": [{"heading": "1 Motivation and Background", "text": "This work flowed from a comment in the concluding remarks of a recent review (2016) of work in data-driven scientific discovery[1]. Specifically,\n. . . it may be within current computing and algorithmic technology to infer the Maxwell Equations directly from data given knowledge of vector calculus.\nThis paper reports on recent progress towards this objective. The overarching goal is to develop methods that can infer compact theories from data. Most data intensive analysis techniques are based on machine learning or statistics. These are quite useful, but do not lead to deep understanding or insight. The scientific method and creative scientists have been very good at observations (experiments) and building human understandable models (theory). In this program, we turn both of these ideas on their heads: can a computer given an appropriate virtual experiment (VE) figure out mathematically compact theories? The initial applications are in electrodynamics (the Maxwell Equations)[2], and there are many other examples such as thermodynamics. Eventually, it is hoped the methods developed will be applicable to data sets from real measurements in a wide variety of fields in physics, engineering, and economics.\nThe Maxwell Equations. The Maxwell Equations in free space with the transformation B\u2032 = cB are:\n\u2207 \u00b7E = 0 (1) \u2207 \u00b7B\u2032 = 0 (2)\n\u2207\u00d7E + 1 c\n\u2202B\u2032\n\u2202t = 0 (3)\nc\u2207\u00d7B\u2032 \u2212 \u2202E \u2202t = 0 (4)\n\u2217Center for Data-Driven Discovery, California Institute of Technology, stalzer at caltech.edu \u2020Minerva Schools at KGI, jj at minerva.kgi.edu\nar X\niv :1\n70 8.\n04 92\n7v 1\n[ cs\n.A I]\n1 4\nA ug\n2 01\nwhere c = 2.99792458\u00d7108m/s (MKS units). The spatial-temporal coupling of E and B is how we get electromagnetic waves. The utitility of the B transformation for numerical stability is discussed in Sec. 4 and that is why the Equations look in a slightly strange form in terms of constants.\nProblem, basic approach, and plan. The problem is to computationally rediscover the Maxwell Equations from data. The data consists of a set of virtual experiments as described in Sec. 2. The experiments are simulated far-field measurements from a dipole antenna. In principle, real data could be used but it is easier to do this purely computationally. This is discussed more in the concluding remarks in Sec. 6.\nThe second step is the generation of candidate theories in Sec. 3, and the third is validation in Sec. 4. Validation is what connects observations to candidate theories and this is the essence of fact based scientific discovery. Here it is done with linear algebra. The final results are in Sec. 5, particularly Fig. 3.\nBut before going into the details, a few comments about past work and Julia.\nPast work. Attempts to use computers to rediscover physical laws goes back to at least 1979 with BACON.3[4]. The program successfully found the ideal gas law, PV = nRT, from small data tables.1 One of us (Stalzer) and William Xu of Caltech have also rediscovered the ideal gas law with Van der Waals forces using the approach of this paper[5]. In 2009, researchers rediscovered the kinematic equation for the double pendulum essentially using optimization methods to fit constants to candidate equations[6].\nWhat differentiates this work is twofold: the concept of search driven by compactness and completeness, and targeting electrodynamics which is mathematically a much more difficult theory. Indeed, electrodynamics was the first unification (the electric and magnetic fields), and Einstein\u2019s special relativity is baked right into the equations once the brilliant observation is made that c is the same in all inertial reference frames. TheoSea also finds the wave equation of light as a consequence of the rediscovered free space Maxwell Equations.\nJulia. TheoSea is written in Julia[7], a relatively recent language (roughly 2012) that is both easy to use and has high performance. Julia can be programmed at a high expressive level, and yet given enough type information it automatically generates efficient machine code. TheoSea is a Julia meta-program that writes candidate theories in terms of Julia sets that are then validated against data. The set elements are compiled Julia expressions corresponding to terms in the candidate theories."}, {"heading": "2 Observations and the Virtual Experiment", "text": "The data is from the far-field of a radiating antenna for E,B as shown in the geometry Fig. 1 and data Tab. 1.\nThe fields at a far point P are[8]:\nE = \u2212\u00b50p0\u03c9 2 4\u03c0 ( sin \u03b8 r ) cos [\u03c9(t\u2212 r/c)]\u03b8\u0302 (5) B = \u2212\u00b50p0\u03c9 2\n4\u03c0c ( sin \u03b8 r ) cos [\u03c9(t\u2212 r/c)]\u03c6\u0302 (6)\n1Perhaps the NFL should have consulted BACON.\nwhere \u00b50 = 4\u03c0 \u00d7 10\u22127 is the permeability of free space, p0 is the strength of the dipole, and \u03c9 is the frequency of the dipole oscillation.\nFive virtual experiments were done with various parameters r, \u03c6, \u03b8 with a fixed \u03c9. The observables are E(x, t) and B(x, t), where x is in the region of the point P. The nice thing about this VE is that various space-time derivatives can be computed analytically. These experiments are show in Tab. 1, with the fields given at a steady state t = 0.\nRediscovering the Equations from this data is the topic of the two next sections."}, {"heading": "3 Rapid Enumeration of Candidate Theories", "text": "Given an alphabet A of symbols, such as operators and fields, a language L is recursively enumerable if there exists a Turing machine that will enumerate all valid strings in the language[9].\nBy the infinite monkey theorem[10] the solution can be found \u2014 if the constants are limited to rationals \u2014 just by enumeration and validation. The goal of this section is to show a way of doing this enumeration in a tractable way that also finds the most compact theory."}, {"heading": "3.1 Abstract Enumeration", "text": "Abstractly, think of an alphabet A = [A,B,C, . . .] where any letter can appear once in a sentence and the length of the alphabet is n. This is a simple combinatorial enumeration problem and the solution to the number of sets of size m (later m will be relabeled q) taken from A is C(n,m). However, what if the symbols \u2014 letters \u2014 in the alphabet have different weights? What if the alphabet is more like A = [A = 1, B = 1, C = 4, D = 4, E = 4, F = 4, G = 7, H = 7, I = 7, J = 7,K = 4, L = 7]. This can dramatically decrease the enumeration size as shown in the next section, and the underlying motivation is shown in Sec. 3.2.\nThe algorithm enumerates sets of increasing complexity q, where q is the sum of the alphabet letter weights in a given candiate theory. It can be thought of as a form Depth-First Iterative Deepening (DFID)[3] first formalized by R. E. Korf in 1985. Optimality flows from a theorem by Korf:\nTheorem 1 (Korf 4.2) Depth-first iterative-deepening is asymptotically optimal among bruteforce tree searches in terms of time, space, and length of solution.\nBy length of solution, Korf means the depth of the search where a solution is found. For TheoSea compactness is the sum of the symbol weights along a potential solution branch in the search; as will be shown in Sec. 3.2.\nIt is perhaps easiest to think of the algorithm inductively. There is a data structure theos that holds all theorems (sets) of length q and it is built up from q = 1. The base cases are the singleton theories of a given complexity, so for the alphabet A we have theos[1] = [A, B] and theos[4] = [D, ...] and so on. So the base cases, such as q = 1 are all set; and then for q > 1 we use a q : l,m \u201cSqueeze\u201d. At step q consider all theories that can possibly be of length q, marching l upward from 1 and m downward from q \u2212 1 in a kind of double iteration. The correctness is immediate by Korf 4.2 and the fact that q = l+m, too short theories are discarded (< q), and set elements are unique. The Julia code is in the Appendix.\nPerformance. The total times are Fast = 0.006s for the weighted A above, and Slow = 20.1s where the symbol weights are unity2. A graph is in Fig. 2: compactness matters."}, {"heading": "3.2 Relation to the Equations", "text": "The underlying motivation was described above and here is the decoder ring; think of A = E, B = B, . . .\n2The machine was a MacBook Pro (Retina, 13-inch, Late 2013) running a 2.8 GHz Intel Core i7 single-threaded\nusing Julia 0.5.\nThe Maxwell Equations, up to constants, are [C], [D], the E,B divergence equations, both of complexity 4; and the field coupling equations of [G,F ] and [H,E], of complexity 11. Also, the wave equations of light are [I,K] and [J, L], each of complexity 14[12]. The complexity metric is just 1+ the number of space-time derivatives taken. For the Maxwell Equations, the total discovery time with about 1.1s as is reported in Sec. 5."}, {"heading": "4 Theory Validation: Fitting Constants", "text": "The glue that connects the enumeration (Sec. 3) to the virtual experiments (Sec. 2) is finding constants in the candidate theories that fit the data: if the do not exist, which is almost always the case, the theory is invalid. However, if they do exist then the theory is valid with high probability. This is a linear algebra problem as described below.\nFinding the constants is equivalent to finding the null space of a linear system (the data matrix extracted from Tab. 1). If the dimension of the null space is 0, then the theory is not valid because the only solution is a trivial zero vector. If the dimension of the null space is nonzero, it can only be 1, which corresponds to a unique solution. The reason is that in our enumerative method, we remove all valid sub-theories from the candidate theory before determining its constants. Had the dimension of the null space of the resulting system be larger than 1, it would have implied that some sub-theory is not removed, contradicting the hypothesis. Next, to find the rank of the null space and the null space itself, we cannot simply use Julia\u2019s built-in rank() or nullspace() functions because the dynamic ranges are large (> 1030).3\nThe solution is to use singular value decomposition, in which the number of zero singular values (SVs) is equivalent to the dimension of the null space. The insight is that if we scale B by a factor of c, it will be on the same scale as E, and after normalizing each column of the matrix so that each is on the same scale with another, the resulting singular values (if nonzero) should also be on\n3This is one of those cases when symbolics and numerics do not play well together.\nthe same scale. After scaling and normalizing, we use Julia\u2019s built-in svdvals() function to obtain a list of SVs ranked from the largest to the smallest.\nAs discussed previously, the dimension of the null space can either be 1 or 0, and we only need to compare the smallest SV with the largest one to see whether the former is orders of magnitude smaller than the latter. If so, we can regard that as a zero, and proceed to retrieve the null space vector from the last column of V T (as in A = U\u03a3V T ) by calling Julia\u2019s svd() function. The elements of the null space vector are the constants we look for. If not, it implies that the dimension of the null space is zero, and we conclude that the theory is invalid."}, {"heading": "5 Results", "text": "TheoSea has rediscovered the Maxwell Equations as shown in the screenshot Fig. 3, with timings. In addition, it redisovered\n1 c2 \u22022 \u2202t2 E\u2212\u22072E = 0 (7) 1\nc2 \u22022 \u2202t2 B\u2212\u22072B = 0 (8)\nthat is a plane electromagnetic wave traveling in free space: Light.45"}, {"heading": "6 Concluding Remarks and Future Work", "text": "There are many avenues for future development as briefly listed below.\n\u2022 Generalize the language. Expand the enumeration language to allow more expressive theories. Right now TheoSea is limited to theories of the form c1A1 + c2A2 + . . . where the As are operators over fields like E,B. The Xu ideal gas law code works with scalar fields and exponents. Somehow these should be merged.\n4The derivation of these wave equations from the Maxwell Equations takes humans some non-trivial vector calculus, and yet the machine did it by \u201cenlightened\u201d search.\n5This machine was a MacBook Pro (Retina, 15-inch) running a 2.5 Ghz Intel Core i7 single-threaded.\n\u2022 Bigger data and parallelism. The data set used was very small but semantically very rich. Other data sets, such as for macro economics, will be far larger. Here Julia\u2019s on-the-fly compilation (of candidate theories) and support for parallel processing with be very helpful, and this is one of the reasons the language was chosen6.\n\u2022 The fully general equations can be re-discovered just by adding a current J and source region \u03c1. The changes to the virtual experiment and language L are straightforward.\n\u2022 Field discovery. The fields E,B are treated as observables. It would be nice if TheoSea could discover the fields from the forces, e.g. F = qE. One step is to use a relativistic moving charge q with velocity u, where the magnetic field can be written in terms of the electric field[12]: B = (1/c2)u\u00d7E. Then the field discovery problem reduces to finding the electric field and then the magnetic field will fall out from the search.\nBut, perhaps the most exciting extension is to apply TheoSea to other domains such as thermodynamics, and it is beginning to look like it should work for the Schro\u0308dinger Equation and quantum mechanics[13]. Work is progressing in these areas, and focusing on the applicable representation language and executable semantics are the keys for new domains.\nMaterials\nThe Julia code is available with this pre-print on arXiv. The code is distributed under a Creative Commons Attribution 4.0 International Public License. If you use TheoSea please attribute to M.A. Stalzer and C. Ju, TheoSea: Marching Theory to Light, arXiv, August 2017."}, {"heading": "Acknowledgements", "text": "This research is funded by the Gordon and Betty Moore Foundation through Grant GBMF4915 to the Caltech Center for Data-Driven Discovery. Discussions with Mr. William Xu of Caltech Math/Computer Science were very helpful. The authors are grateful to Prof. S.G. Djorgovski of Caltech Astronomy and Prof. V. Chandler of KGI Natural Sciences for their support."}], "references": [{"title": "A preliminary review of influential works in data-driven discovery", "author": ["M. Stalzer", "C. Mentzel"], "venue": "SpringerPlus, (5)1266, doi:10.1186/s40064-016-2888-8", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2016}, {"title": "Depth-First Iterative-Deepening: An optimal admissible tree search", "author": ["R.E. Korf"], "venue": "Artificial Intelligence, 27, 97\u2013109", "citeRegEx": "3", "shortCiteRegEx": null, "year": 1985}, {"title": "Rediscovering physics with BACON.3", "author": ["P. Langley"], "venue": "Proc. Intl. Joint Conf. on Artificial Intelligence,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1979}, {"title": "Deriving compact laws based on algebraic formulation of data set", "author": ["W. Xu", "M. Stalzer"], "venue": "arXiv:1706.05123 [cs.LG]", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2017}, {"title": "Distilling free-form natural laws from experimental data", "author": ["M. Schmidt", "H. Lipson"], "venue": "Science 324(5923), 81\u201385", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2009}, {"title": "Julia: A fresh approach to numerical computing", "author": ["J. Bezanson et. al"], "venue": "SIAM Review,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2017}, {"title": "Introduction to Electrodynamics", "author": ["D.J. Griffiths"], "venue": "4th Ed. Pearson Education", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2015}, {"title": "Machines", "author": ["P.J. Denning", "J.B. Dennis", "J.E. Qualitz"], "venue": "Languages, and Computation. Prentice- Hall, Sec. 13.8", "citeRegEx": "9", "shortCiteRegEx": null, "year": 1978}, {"title": "M\u00e9canique statistique et irr\u00e9versibiliit\u00e9", "author": ["E. Borel"], "venue": "J. Phys., 53 s\u00e9rie, 3, 189\u2013196", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1913}, {"title": "On the enumeration of sentences by compactness", "author": ["M. Stalzer"], "venue": "arXiv:1706.06975 [cs:AI]", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2017}, {"title": "Maxwell\u2019s Equations and the Principles of Electromagnetism", "author": ["R. Fitzpatrick"], "venue": "Firewall Media, Sec. 10.18", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2008}, {"title": "The Principles of Quantum Mechanics", "author": ["P.A.M. Dirac"], "venue": "Oxford", "citeRegEx": "13", "shortCiteRegEx": null, "year": 1967}], "referenceMentions": [{"referenceID": 0, "context": "This work flowed from a comment in the concluding remarks of a recent review (2016) of work in data-driven scientific discovery[1].", "startOffset": 127, "endOffset": 130}, {"referenceID": 2, "context": "3[4].", "startOffset": 1, "endOffset": 4}, {"referenceID": 3, "context": "1 One of us (Stalzer) and William Xu of Caltech have also rediscovered the ideal gas law with Van der Waals forces using the approach of this paper[5].", "startOffset": 147, "endOffset": 150}, {"referenceID": 4, "context": "In 2009, researchers rediscovered the kinematic equation for the double pendulum essentially using optimization methods to fit constants to candidate equations[6].", "startOffset": 159, "endOffset": 162}, {"referenceID": 5, "context": "TheoSea is written in Julia[7], a relatively recent language (roughly 2012) that is both easy to use and has high performance.", "startOffset": 27, "endOffset": 30}, {"referenceID": 6, "context": "The fields at a far point P are[8]: E = \u221200 2 4\u03c0 ( sin \u03b8 r ) cos [\u03c9(t\u2212 r/c)]\u03b8\u0302 (5) B = \u221200 2 4\u03c0c ( sin \u03b8 r ) cos [\u03c9(t\u2212 r/c)]\u03c6\u0302 (6)", "startOffset": 31, "endOffset": 34}, {"referenceID": 7, "context": "3 Rapid Enumeration of Candidate Theories Given an alphabet A of symbols, such as operators and fields, a language L is recursively enumerable if there exists a Turing machine that will enumerate all valid strings in the language[9].", "startOffset": 229, "endOffset": 232}, {"referenceID": 8, "context": "By the infinite monkey theorem[10] the solution can be found \u2014 if the constants are limited to rationals \u2014 just by enumeration and validation.", "startOffset": 30, "endOffset": 34}, {"referenceID": 1, "context": "It can be thought of as a form Depth-First Iterative Deepening (DFID)[3] first formalized by R.", "startOffset": 69, "endOffset": 72}, {"referenceID": 0, "context": "The base cases are the singleton theories of a given complexity, so for the alphabet A we have theos[1] = [A, B] and theos[4] = [D, .", "startOffset": 100, "endOffset": 103}, {"referenceID": 2, "context": "The base cases are the singleton theories of a given complexity, so for the alphabet A we have theos[1] = [A, B] and theos[4] = [D, .", "startOffset": 122, "endOffset": 125}, {"referenceID": 10, "context": "Also, the wave equations of light are [I,K] and [J, L], each of complexity 14[12].", "startOffset": 77, "endOffset": 81}, {"referenceID": 10, "context": "One step is to use a relativistic moving charge q with velocity u, where the magnetic field can be written in terms of the electric field[12]: B = (1/c2)u\u00d7E.", "startOffset": 137, "endOffset": 141}, {"referenceID": 11, "context": "But, perhaps the most exciting extension is to apply TheoSea to other domains such as thermodynamics, and it is beginning to look like it should work for the Schr\u00f6dinger Equation and quantum mechanics[13].", "startOffset": 200, "endOffset": 204}], "year": 2017, "abstractText": "There is sufficient information in the far-field of a radiating dipole antenna to rediscover the Maxwell Equations and the wave equations of light, including the speed of light c. TheoSea is a Julia program that does this in about a second, and the key insight is that the compactness of theories drives the search. The program is a computational embodiment of the scientific method: observation, consideration of candidate theories, and validation. 1 Motivation and Background This work flowed from a comment in the concluding remarks of a recent review (2016) of work in data-driven scientific discovery[1]. Specifically, . . . it may be within current computing and algorithmic technology to infer the Maxwell Equations directly from data given knowledge of vector calculus. This paper reports on recent progress towards this objective. The overarching goal is to develop methods that can infer compact theories from data. Most data intensive analysis techniques are based on machine learning or statistics. These are quite useful, but do not lead to deep understanding or insight. The scientific method and creative scientists have been very good at observations (experiments) and building human understandable models (theory). In this program, we turn both of these ideas on their heads: can a computer given an appropriate virtual experiment (VE) figure out mathematically compact theories? The initial applications are in electrodynamics (the Maxwell Equations)[2], and there are many other examples such as thermodynamics. Eventually, it is hoped the methods developed will be applicable to data sets from real measurements in a wide variety of fields in physics, engineering, and economics. The Maxwell Equations. The Maxwell Equations in free space with the transformation B\u2032 = cB are: \u2207 \u00b7E = 0 (1) \u2207 \u00b7B\u2032 = 0 (2) \u2207\u00d7E + 1 c \u2202B\u2032 \u2202t = 0 (3) c\u2207\u00d7B\u2032 \u2212 \u2202E \u2202t = 0 (4) \u2217Center for Data-Driven Discovery, California Institute of Technology, stalzer at caltech.edu \u2020Minerva Schools at KGI, jj at minerva.kgi.edu 1 ar X iv :1 70 8. 04 92 7v 1 [ cs .A I] 1 4 A ug 2 01 7 where c = 2.99792458\u00d7108m/s (MKS units). The spatial-temporal coupling of E and B is how we get electromagnetic waves. The utitility of the B transformation for numerical stability is discussed in Sec. 4 and that is why the Equations look in a slightly strange form in terms of constants. Problem, basic approach, and plan. The problem is to computationally rediscover the Maxwell Equations from data. The data consists of a set of virtual experiments as described in Sec. 2. The experiments are simulated far-field measurements from a dipole antenna. In principle, real data could be used but it is easier to do this purely computationally. This is discussed more in the concluding remarks in Sec. 6. The second step is the generation of candidate theories in Sec. 3, and the third is validation in Sec. 4. Validation is what connects observations to candidate theories and this is the essence of fact based scientific discovery. Here it is done with linear algebra. The final results are in Sec. 5, particularly Fig. 3. But before going into the details, a few comments about past work and Julia. Past work. Attempts to use computers to rediscover physical laws goes back to at least 1979 with BACON.3[4]. The program successfully found the ideal gas law, PV = nRT, from small data tables.1 One of us (Stalzer) and William Xu of Caltech have also rediscovered the ideal gas law with Van der Waals forces using the approach of this paper[5]. In 2009, researchers rediscovered the kinematic equation for the double pendulum essentially using optimization methods to fit constants to candidate equations[6]. What differentiates this work is twofold: the concept of search driven by compactness and completeness, and targeting electrodynamics which is mathematically a much more difficult theory. Indeed, electrodynamics was the first unification (the electric and magnetic fields), and Einstein\u2019s special relativity is baked right into the equations once the brilliant observation is made that c is the same in all inertial reference frames. TheoSea also finds the wave equation of light as a consequence of the rediscovered free space Maxwell Equations. Julia. TheoSea is written in Julia[7], a relatively recent language (roughly 2012) that is both easy to use and has high performance. Julia can be programmed at a high expressive level, and yet given enough type information it automatically generates efficient machine code. TheoSea is a Julia meta-program that writes candidate theories in terms of Julia sets that are then validated against data. The set elements are compiled Julia expressions corresponding to terms in the candidate theories. 2 Observations and the Virtual Experiment The data is from the far-field of a radiating antenna for E,B as shown in the geometry Fig. 1 and data Tab. 1. The fields at a far point P are[8]: E = \u221200 2 4\u03c0 ( sin \u03b8 r ) cos [\u03c9(t\u2212 r/c)]\u03b8\u0302 (5) B = \u221200 2 4\u03c0c ( sin \u03b8 r ) cos [\u03c9(t\u2212 r/c)]\u03c6\u0302 (6) Perhaps the NFL should have consulted BACON.", "creator": "LaTeX with hyperref package"}}}